


矩陣 - 維基百科，自由的百科全書































 








矩陣

維基百科，自由的百科全書


					前往：					導覽，					搜尋









線性代數








A

=


[



1


2




3


4



]




{\displaystyle \mathbf {A} ={\begin{bmatrix}1&2\\3&4\end{bmatrix}}}





向量 · 向量空間  · 行列式  · 矩陣


向量


純量 · 向量 · 向量空間 · 向量投影 · 外積 · 內積 · 內積 · 叉積




矩陣與行列式


矩陣 · 行列式 · 線性方程組 · 秩 · 核 · 跡 · 單位矩陣 · 初等矩陣 · 方塊矩陣 · 分塊矩陣 · 三角矩陣 · 非奇異方陣 · 轉置矩陣 · 逆矩陣 · 對角矩陣 · 可對角化矩陣 · 對稱矩陣 · 反對稱矩陣 · 正交矩陣 · 麽正矩陣 · 埃爾米特矩陣 · 反埃爾米特矩陣 · 正規矩陣 · 伴隨矩陣 · 餘因子矩陣 · 共軛轉置 · 正定矩陣 · 冪零矩陣 · 矩陣分解 （LU分解 · 奇異值分解 · QR分解 · 極分解 · 特徵分解） · 子式和餘子式 · 拉普拉斯展開 ·




線性空間與線性變換


線性空間 · 線性變換 · 線性子空間 · 線性生成空間 · 基 · 線性映射 · 線性投影 · 線性無關 · 線性組合 · 線性泛函 · 行空間與列空間 · 對偶空間 · 正交 · 特徵向量 · 最小二乘法 · 格拉姆-施密特正交化 ·








閱
論
編









矩陣


數學上，一個m×n的矩陣是一個由m列n行元素排列成的矩形陣列。矩陣裏的元素可以是數字、符號或數學式。以下是一個由6個數字元素構成的2列3行的矩陣：









[



1


9


−
13




20


5


−
6



]




{\displaystyle {\begin{bmatrix}1&9&-13\\20&5&-6\end{bmatrix}}}

。



大小相同（行數列數都相同）的矩陣之間可以相互加減，具體是對每個位置上的元素做加減法。矩陣的乘法則較為複雜。兩個矩陣可以相乘，若且唯若第一個矩陣的行數等於第二個矩陣的列數。矩陣的乘法滿足結合律和分配律，但不滿足交換律。
矩陣的一個重要用途是解線性方程組。線性方程組中未知量的係數可以排成一個矩陣，加上常數項，則稱為增廣矩陣。另一個重要用途是表示線性變換，即是諸如f(x) 



=


{\displaystyle =}

 4x之類的線性函數的推廣。設定基底後，某個向量v可以表示為m×1的矩陣，而線性變換f可以表示為行數為m的矩陣A，使得經過變換後得到的向量f(v)可以表示成Av的形式。矩陣的特徵值和特徵向量可以揭示線性變換的深層特性。
矩陣是高等代數學中的常見工具，也常見於統計分析等應用數學學科中。在物理學中，矩陣於力學、電路學、光學和量子物理中都有應用；計算機科學中，三維動畫製作也需要用到矩陣。矩陣的運算是數值分析領域的重要問題。將矩陣分解為簡單矩陣的組合可以在理論和實際應用上簡化矩陣的運算。對一些應用廣泛而形式特殊的矩陣，例如稀疏矩陣和準對角矩陣，有特定的快速運算算法。關於矩陣相關理論的發展和應用，請參考矩陣理論。在天體物理、量子力學等領域，也會出現無窮維的矩陣，是矩陣的一種推廣。



目錄


1 詞源
2 發展
3 定義

3.1 標記


4 矩陣的基本運算
5 矩陣乘法

5.1 線性方程組
5.2 線性變換


6 方塊矩陣

6.1 行列式
6.2 特徵值與特徵向量
6.3 對稱
6.4 正定性


7 矩陣的計算

7.1 矩陣分解


8 矩陣的推廣

8.1 一般域和環上的矩陣
8.2 矩陣與線性變換
8.3 矩陣群
8.4 無限維矩陣
8.5 空矩陣
8.6 分塊矩陣


9 應用

9.1 圖論
9.2 數學分析
9.3 機率論與統計
9.4 物理學上的對稱性及線性變換
9.5 量子態的線性組合
9.6 簡正模式
9.7 幾何光學
9.8 電子學


10 參見
11 註釋與參考

11.1 腳註
11.2 參考文獻


12 外部連結



詞源[編輯]
中文中矩陣的概念最早見於1922年。1922年，北京師範大學附屬中學數學老師程廷熙在一篇介紹文章中將矩陣譯為「縱橫陣」。1925年，科學名詞審查會算學名詞審查組在《科學》第十卷第四期刊登的審定名詞表中，矩陣被翻譯為「矩陣式」，方塊矩陣翻譯為「方陣式」，而各類矩陣如「正交矩陣」、「伴隨矩陣」中的「矩陣」則被翻譯為「方陣」。1935年，中國數學會審查後，中華民國教育部審定的《數學名詞》（並「通令全國各院校一律遵用，以昭劃一」）中，「矩陣」作為譯名首次出現。1938年，曹惠群在接受科學名詞審查會委託就數學名詞加以校訂的《算學名詞彙編》中，認為應當的譯名是「長方陣」。中華人民共和國成立後編訂的《數學名詞》中，則將譯名定為「（矩）陣」。1993年，中國自然科學名詞審定委員會公佈的《數學名詞》中，「矩陣」被定為正式譯名，並沿用至今[1]。
發展[編輯]
作為解決線性方程的工具，矩陣也有不短的歷史。成書最遲在東漢前期的《九章算術》中，已經出現過以矩陣形式表示線性方程組係數以解方程的圖例，可算作是矩陣的雛形[2]。矩陣正式作為數學中的研究對象出現，則是在行列式的研究發展起來後。邏輯上，矩陣的概念先於行列式，但在實際的歷史上則恰好相反。日本數學家關孝和（1683年）與微積分的發現者之一戈特弗里德·威廉·萊布尼茨（1693年）近乎同時地獨立建立了行列式論。其後行列式作為解線性方程組的工具逐步發展。1750年，加布里爾·克拉默發現了克萊姆法則[3]。




阿瑟·凱萊被認為是矩陣論的奠基人


進入十九世紀後，行列式的研究進一步發展，矩陣的概念也應運而生。奧古斯丁·路易·柯西是最早將行列式排成方陣並將其元素用雙重下標表示的數學家。他還在1829年就在行列式的框架中證明瞭實對稱矩陣特徵根為實數的結論[4]。其後，詹姆斯·約瑟夫·西爾維斯特註意到，在作為行列式的計算形式以外，將數以行和列的形式作出的矩形排列本身也是值得研究的。在他希望引用數的矩形陣列而又不能用行列式來形容的時候，就用「matrix」一詞來形容[5]。而在此之前，數學家已經開始將增廣矩陣作為獨立的對象引用了。西爾維斯特使用「matrix」一詞是因為他希望討論行列式的子式，即將矩陣的某幾行和某幾列的共同元素取出來排成的矩陣的行列式，所以實際上「matrix」被他看做是生成各種子式的「母體」：

我在先前的文章中將矩形排布的序列稱為「Matrix」，蓋因從中可以產生出各種不同的行列式，就如由同一個母體的子宮中孕育出來一樣。[6]

阿瑟·凱萊被公認為矩陣論的奠基人[7]。他開始將矩陣作為獨立的數學對象研究時，許多與矩陣有關的性質已經在行列式的研究中被發現了，這也使得凱萊認為矩陣的引進是十分自然的。他說：「我決然不是通過四元數而獲得矩陣概念的；它或是直接從行列式的概念而來，或是作為一個表達線性方程組的方便方法而來的。[8]」他從1858年開始，發表了《矩陣論的研究報告》等一系列關於矩陣的專門論文[9][10]，研究了矩陣的運算律、矩陣的逆以及轉置和特徵多項式方程。凱萊還提出了凱萊-哈密爾頓定理，並驗證了3×3矩陣的情況，又說進一步的證明是不必要的。哈密爾頓證明瞭4×4矩陣的情況，而一般情況下的證明是弗羅貝尼烏斯於1898年給出的[11]。
此後更多的數學家開始對矩陣進行研究。埃爾米特證明瞭如果矩陣等於其複共軛轉置，則特徵根為實數。這種矩陣後來被稱為埃爾米特矩陣[12]。弗羅貝尼烏斯對矩陣的特徵方程、特徵根、矩陣的秩、正交矩陣、矩陣方程等方面做了大量工作。1878年，在引進了不變因子、初等因子等概念的同時，弗羅貝尼烏斯給出了正交矩陣、相似矩陣和合同矩陣的概念。同年，他探討了矩陣的最小多項式（最小方程）問題。1894年的論文中，他討論了矩陣理論和四元數理論的關係。1896年，他給出了凱萊-哈密爾頓定理的完整證明[1]。矩陣理論在19世紀沿著兩個方向發展，分別是作為抽象代數結構和作為代數工具描述幾何空間的線性變換。矩陣理論為群論和不變量理論的發展。
無限維矩陣的研究始於1884年。龐加萊在兩篇不嚴謹地使用了無限維矩陣和行列式理論的文章後開始了對這一方面的專門研究[1]。1906年，希爾伯特引入無限二次型（相當於無限維矩陣）對積分方程進行研究，極大地促進了無限維矩陣的研究。在此基礎上，施密茨、赫林格和特普利茨發展出算子理論，而無限維矩陣成為了研究函數空間算子的有力工具[1]。
定義[編輯]
將一些元素排列成若干行，每行放上相同數量的元素，就是一個矩陣。這裏說的元素可以是數字，例如以下的矩陣：








A

=


[



9


13


5




1


11


7




3


9


2




6


0


7



]




{\displaystyle \mathbf {A} ={\begin{bmatrix}9&13&5\\1&11&7\\3&9&2\\6&0&7\end{bmatrix}}}





排列成的形狀是矩形，所以稱為矩陣。在中國大陸，橫向的元素組稱為「行」，縱向稱為「列」，而在台灣則相反，橫向稱為「列」，縱向稱為「行」[13]。矩陣一般用大寫拉丁字母表示，需要具體寫出其中元素時，一般用方括號或圓括號括起。以上的矩陣A是一個4列3行的矩陣。
行數是1或列數是1的矩陣又可分別稱為行向量和列向量。這是因為一個向量可以表示成行數或列數是1的矩陣形式。矩陣的任一行（列）都是一個行（列）向量，例如矩陣A的第一列 





[



9


13


5



]




{\displaystyle {\begin{bmatrix}9&13&5\end{bmatrix}}}

就是一個列向量。行（列）向量可以看成一個向量，因此可以稱矩陣的兩行（列）相等，或者某一行等於某一列，表示其對應的向量相等。
標記[編輯]
一個矩陣A從左上角數起的第i列第j行上的元素稱為第i,j項，通常記為Ai,j、Aij、ai,j或A[i,j]。在上述例子中A[4,3] 



=


{\displaystyle =}

 7。如果不知道矩陣A的具體元素，通常也會將它記成





A

=


[


a


i
j


]


m
×
n





{\displaystyle \scriptstyle \mathbf {A} =\left[\mathbf {a} _{ij}\right]_{m\times n}}

或





A

=


[


a


i
,
j


]


m
×
n





{\displaystyle \scriptstyle \mathbf {A} =\left[\mathbf {a} _{i,j}\right]_{m\times n}}

。反之，如果A的元素可以寫成只與其行數i和列數j有關的統一函數f，那麼也可以用





A

=


[
f
(
i
,
j
)
]


m
×
n





{\displaystyle \scriptstyle \mathbf {A} =\left[f(i,j)\right]_{m\times n}}

作為A的簡寫。例如





B

=


[
i
+
2
j
]


2
×
3





{\displaystyle \scriptstyle \mathbf {B} =\left[i+2j\right]_{2\times 3}}

是矩陣








B

=


[



3


5


7




4


6


8



]




{\displaystyle \mathbf {B} ={\begin{bmatrix}3&5&7\\4&6&8\end{bmatrix}}}





的簡寫。要註意的是，一些計算機程式語言中，會將第1行（列）稱為第0行（列），從而對矩陣的寫法產生影響，比如矩陣B就要改寫成





B

=


[
i
+
2
j
+
3
]


2
×
3





{\displaystyle \scriptstyle \mathbf {B} =\left[i+2j+3\right]_{2\times 3}}

。
矩陣的元素可以是數字、符號或數學表達式。一般為了支持矩陣的運算，矩陣的元素之間應當能做加減法和乘法，所以是某個環裏的元素。最常見的是元素屬於實數域或複數域的矩陣，簡稱為實矩陣和複矩陣。更一般的情況下，矩陣的元素可以是由一個環中的元素排成。給定一個環R，所有由R中元素排成的m×n矩陣的集合寫作





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbf {R} )}

或






M



m
×
n


(

R

)


{\displaystyle {\mathcal {M}}_{m\times n}(\mathbf {R} )}

。若m 



=


{\displaystyle =}

 n，則通常記以





M


(
m
,

R

)


{\displaystyle {\mathcal {M}}(m,\mathbf {R} )}

或






M



m


(

R

)


{\displaystyle {\mathcal {M}}_{m}(\mathbf {R} )}

，稱其為n維矩陣或方陣。
矩陣的基本運算[編輯]
主條目：矩陣加法，轉置矩陣和初等矩陣
矩陣的最基本運算包括矩陣加（減）法，純量乘法和轉置運算。被稱為「矩陣加法」、「純量乘法」和「轉置」的運算不止一種[14]，其中最基本最常用的定義如下：


運算
定義
例子


加（減）法
m×n矩陣A和B的和（差）：A±B為一個m×n矩陣，其中每個元素是A和B相應元素的和（差），

(A ± B)i,j 



=


{\displaystyle =}

 Ai,j ± Bi,j，
其中1 ≤ i ≤ m , 1 ≤ j ≤ n.









[



1


3


1




1


0


0



]


+


[



0


0


5




7


5


0



]


=


[



1
+
0


3
+
0


1
+
5




1
+
7


0
+
5


0
+
0



]


=


[



1


3


6




8


5


0



]




{\displaystyle {\begin{bmatrix}1&3&1\\1&0&0\end{bmatrix}}+{\begin{bmatrix}0&0&5\\7&5&0\end{bmatrix}}={\begin{bmatrix}1+0&3+0&1+5\\1+7&0+5&0+0\end{bmatrix}}={\begin{bmatrix}1&3&6\\8&5&0\end{bmatrix}}}





純量乘法
純量c與矩陣A的純量乘法：cA的每個元素是A的相應元素與c的乘積，

(cA)i,j = c · Ai,j.






2
⋅


[



1


8


−
3




4


−
2


5



]


=


[



2
⋅
1


2
⋅
8


2
⋅
(
−
3
)




2
⋅
4


2
⋅
(
−
2
)


2
⋅
5



]


=


[



2


16


−
6




8


−
4


10



]




{\displaystyle 2\cdot {\begin{bmatrix}1&8&-3\\4&-2&5\end{bmatrix}}={\begin{bmatrix}2\cdot 1&2\cdot 8&2\cdot (-3)\\2\cdot 4&2\cdot (-2)&2\cdot 5\end{bmatrix}}={\begin{bmatrix}2&16&-6\\8&-4&10\end{bmatrix}}}




轉置
m×n矩陣A的轉置是一個n×m的矩陣，記為AT（有些書中也記為Atr或tA、A'），其中的第i個列向量是原矩陣A的第i個行向量；或者說，轉置矩陣AT第i行第j列的元素是原矩陣A第j行第i列的元素，

(AT)i,j = Aj,i.









[



1


2


3




0


−
6


7



]



T


=


[



1


0




2


−
6




3


7



]




{\displaystyle {\begin{bmatrix}1&2&3\\0&-6&7\end{bmatrix}}^{T}={\begin{bmatrix}1&0\\2&-6\\3&7\end{bmatrix}}}




矩陣的加法運算滿足交換律：A + B = B + A[15]。矩陣的轉置和純量乘法運算對加法滿足分配律：

(A + B)T 



=


{\displaystyle =}

 AT + BT
c(A + B) 



=


{\displaystyle =}

 cA + cB

矩陣加法和純量乘法兩種運算使得





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbb {R} )}

成為一個mn維的實數線性空間。而轉置和純量乘法運算滿足類似於結合律的規律：

c(AT) 



=


{\displaystyle =}

 (cA)T.

矩陣也有類似行列式的初等變換，即對矩陣的某些行和某些列進行三類操作：交換兩行（列），將一行（列）的每個元素都乘以一個固定的量，以及將一行（列）的每個元素乘以一個固定的量之後加到另一行（列）的相應元素上。這些操作在求其逆矩陣時有用。
矩陣乘法[編輯]
主條目：矩陣乘法




矩陣A和B相乘得到AB的示意圖


兩個矩陣的乘法僅當第一個矩陣A的行數和另一個矩陣B的列數相等時才能定義。如A是m×n矩陣和B是n×p矩陣，它們的乘積AB是一個m×p矩陣，它的一個元素





[

A
B


]

i
,
j


=

A

i
,
1



B

1
,
j


+

A

i
,
2



B

2
,
j


+
⋯
+

A

i
,
n



B

n
,
j


=

∑

r
=
1


n



A

i
,
r



B

r
,
j




{\displaystyle [\mathbf {AB} ]_{i,j}=A_{i,1}B_{1,j}+A_{i,2}B_{2,j}+\cdots +A_{i,n}B_{n,j}=\sum _{r=1}^{n}A_{i,r}B_{r,j}}



其中1 ≤ i ≤ m, 1 ≤ j ≤ p''[16]。
例如







[



1


0


2




−
1


3


1



]


×


[



3


1




2


1




1


0



]


=


[



(
1
×
3
+
0
×
2
+
2
×
1
)


(
1
×
1
+
0
×
1
+
2
×
0
)




(
−
1
×
3
+
3
×
2
+
1
×
1
)


(
−
1
×
1
+
3
×
1
+
1
×
0
)



]


=


[



5


1




4


2



]




{\displaystyle {\begin{bmatrix}1&0&2\\-1&3&1\\\end{bmatrix}}\times {\begin{bmatrix}3&1\\2&1\\1&0\end{bmatrix}}={\begin{bmatrix}(1\times 3+0\times 2+2\times 1)&(1\times 1+0\times 1+2\times 0)\\(-1\times 3+3\times 2+1\times 1)&(-1\times 1+3\times 1+1\times 0)\\\end{bmatrix}}={\begin{bmatrix}5&1\\4&2\\\end{bmatrix}}}



矩陣的乘法滿足結合律和對矩陣加法的分配律（左分配律和右分配律）：

結合律：(AB)C 



=


{\displaystyle =}

 A(BC),
左分配律：(A + B)C 



=


{\displaystyle =}

 AC + BC,
右分配律：C(A + B) 



=


{\displaystyle =}

 CA + CB.

矩陣的乘法與純量乘法運算之間也滿足類似結合律的規律；與轉置之間則滿足倒置的分配律。

c(AB) 



=


{\displaystyle =}

 (cA)B 



=


{\displaystyle =}

 A(cB)
(AB)T 



=


{\displaystyle =}

 BTAT

矩陣乘法不滿足交換律。一般來說，矩陣A及B的乘積AB存在，但BA不一定存在，即使存在，大多數時候AB ≠ BA。比如下麵的例子：






[



1


2




3


4



]




[



0


1




0


0



]


=


[



0


1




0


3



]


,




[



0


1




0


0



]




[



1


2




3


4



]


=


[



3


4




0


0



]




{\displaystyle {\begin{bmatrix}1&2\\3&4\\\end{bmatrix}}{\begin{bmatrix}0&1\\0&0\\\end{bmatrix}}={\begin{bmatrix}0&1\\0&3\\\end{bmatrix}},\qquad \quad {\begin{bmatrix}0&1\\0&0\\\end{bmatrix}}{\begin{bmatrix}1&2\\3&4\\\end{bmatrix}}={\begin{bmatrix}3&4\\0&0\\\end{bmatrix}}}

。
這一特性使得矩陣代數與常見的一些數域（有理數、實數、複數）以及環（多項式環、整數環）都不同。給定一個n維的方塊矩陣A，與A交換的所有方塊矩陣構成一個環，稱為A的交換子環。這些矩陣也構成





M


(
n
,

R

)


{\displaystyle {\mathcal {M}}(n,\mathbb {R} )}

的一個子空間，稱為A的可交換空間[17]。與





M


(
n
,

R

)


{\displaystyle {\mathcal {M}}(n,\mathbb {R} )}

中所有矩陣交換的矩陣只有形如



λ



I



n


,

λ
∈

R



{\displaystyle \lambda {\mathsf {I}}_{n},\,\lambda \in \mathbb {R} }

的矩陣（稱為數乘矩陣）。其中的






I



n




{\displaystyle {\mathsf {I}}_{n}}

是單位矩陣，也就是主對角線上的元素為1，其它元素為0的矩陣。任意矩陣M乘以單位矩陣都得到自身：




M




I



n


=

M

=



I



n



M



{\displaystyle \mathbf {M} {\mathsf {I}}_{n}=\mathbf {M} ={\mathsf {I}}_{n}\mathbf {M} }

。
除了最常見的矩陣乘法定義以外，也有一些較不常見的矩陣乘法，比如阿達馬乘積和克羅內克乘積[18]。
線性方程組[編輯]
主條目：線性方程組
矩陣乘法的一個基本應用是在線性方程組上。線性方程組是方程組的一種，它符合以下的形式：







{




a

1
,
1



x

1


+

a

1
,
2



x

2


+
⋯
+

a

1
,
n



x

n


=

b

1







a

2
,
1



x

1


+

a

2
,
2



x

2


+
⋯
+

a

2
,
n



x

n


=

b

2






⋮



⋮





a

m
,
1



x

1


+

a

m
,
2



x

2


+
⋯
+

a

m
,
n



x

n


=

b

m










{\displaystyle {\begin{cases}a_{1,1}x_{1}+a_{1,2}x_{2}+\cdots +a_{1,n}x_{n}=b_{1}\\a_{2,1}x_{1}+a_{2,2}x_{2}+\cdots +a_{2,n}x_{n}=b_{2}\\\vdots \quad \quad \quad \vdots \\a_{m,1}x_{1}+a_{m,2}x_{2}+\cdots +a_{m,n}x_{n}=b_{m}\end{cases}}}



其中的




a

1
,
1


,


a

1
,
2




{\displaystyle a_{1,1},\,a_{1,2}}

以及




b

1


,


b

2




{\displaystyle b_{1},\,b_{2}}

等等是已知的常數，而




x

1


,


x

2




{\displaystyle x_{1},\,x_{2}}

等等則是要求的未知數。運用矩陣的方式，可以將線性方程組寫成一個向量方程：






A


x

=

b



{\displaystyle \mathbf {A} \mathbf {x} =\mathbf {b} }



其中，A是由方程組裏未知量的係數排成的m×n 矩陣，x是含有n 個元素的列向量，b 是含有m 個元素的列向量[19]。






A

=


[




a

1
,
1





a

1
,
2




⋯



a

1
,
n







a

2
,
1





a

2
,
2




⋯



a

2
,
n






⋮


⋮


⋱


⋮





a

m
,
1





a

m
,
2




⋯



a

m
,
n





]


,


x

=


[




x

1







x

2






⋮





x

n





]


,


b

=


[




b

1







b

2






⋮





b

m





]




{\displaystyle \mathbf {A} ={\begin{bmatrix}a_{1,1}&a_{1,2}&\cdots &a_{1,n}\\a_{2,1}&a_{2,2}&\cdots &a_{2,n}\\\vdots &\vdots &\ddots &\vdots \\a_{m,1}&a_{m,2}&\cdots &a_{m,n}\end{bmatrix}},\quad \mathbf {x} ={\begin{bmatrix}x_{1}\\x_{2}\\\vdots \\x_{n}\end{bmatrix}},\quad \mathbf {b} ={\begin{bmatrix}b_{1}\\b_{2}\\\vdots \\b_{m}\end{bmatrix}}}



這個寫法下，將原來的多個方程轉化成一個向量方程，在已知矩陣A和向量b的情況下，求未知向量x。
線性變換[編輯]
主條目：線性變換
矩陣是線性變換的便利表達法。矩陣乘法的本質在聯繫到線性變換的時候最能體現，因為矩陣乘法和線性變換的合成有以下的聯繫： 以





R


n




{\displaystyle \mathbb {R} ^{n}}

表示所有長度為n的列向量的集合。每個m×n的矩陣A都代表了一個從





R


n




{\displaystyle \mathbb {R} ^{n}}

射到





R


m




{\displaystyle \mathbb {R} ^{m}}

的線性變換。反過來，對每個線性變換



f
:


R


n


→


R


m




{\displaystyle f:\mathbb {R} ^{n}\rightarrow \mathbb {R} ^{m}}

，都存在唯一m×n矩陣Af使得對所有





R


n




{\displaystyle \mathbb {R} ^{n}}

中的元素x，



f
(
x
)
=

A

f


x


{\displaystyle f(x)=A_{f}x}

。這個矩陣Af第i 列第j 行上的元素是正則基向量





e


j


=
(
0
,
⋯
,
0
,
1
,
0
,
⋯
0

)

T




{\displaystyle \mathbf {e} _{j}=(0,\cdots ,0,1,0,\cdots 0)^{T}}

（第j個元素是1，其餘元素是0的向量）在f映射後的向量



f
(


e


j


)


{\displaystyle f(\mathbf {e} _{j})}

的第i個元素。
也就是說，從





R


n




{\displaystyle \mathbb {R} ^{n}}

射到





R


m




{\displaystyle \mathbb {R} ^{m}}

的線性變換構成的向量空間





L



(


R


n


,


R


m


)



{\displaystyle {\mathcal {L}}\left(\mathbb {R} ^{n},\mathbb {R} ^{m}\right)}

上存在一個到





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbb {R} )}

的一一映射：



f
↦

A

f




{\displaystyle f\mapsto A_{f}}


以下是一些典型的2維實平面上的線性變換對平面向量（圖形）造成的效果，以及它們對應的2維矩陣。其中每個線性變換將藍色圖形映射成綠色圖形；平面的原點(0, 0)用黑點表示。


推移，
幅度m=1.25.
水平鏡射變換
「擠壓」變換，
壓縮程度r=3/2
伸縮，3/2倍
旋轉，左轉30°








[



1


1.25




0


1



]




{\displaystyle {\begin{bmatrix}1&1.25\\0&1\end{bmatrix}}}








[



−
1


0




0


1



]




{\displaystyle {\begin{bmatrix}-1&0\\0&1\end{bmatrix}}}








[





3
2




0




0




2
3





]




{\displaystyle {\begin{bmatrix}{\frac {3}{2}}&0\\0&{\frac {2}{3}}\end{bmatrix}}}








[





3
2




0




0




3
2





]




{\displaystyle {\begin{bmatrix}{\frac {3}{2}}&0\\0&{\frac {3}{2}}\end{bmatrix}}}








[



cos
⁡
(


π
6


)


−
sin
⁡
(


π
6


)




sin
⁡
(


π
6


)


cos
⁡
(


π
6


)



]




{\displaystyle {\begin{bmatrix}\cos({\frac {\pi }{6}})&-\sin({\frac {\pi }{6}})\\\sin({\frac {\pi }{6}})&\cos({\frac {\pi }{6}})\end{bmatrix}}}











設有k×m的矩陣B代表線性變換g : Rm -> Rk，則矩陣積BA代表了線性變換的複合g o f[20]，因為

(g ∘ f)(x) = g(f(x)) = g(Ax) = B(Ax) = (BA)x

矩陣的秩是指矩陣中線性無關的行（列）向量的最大個數[21]，同時也是矩陣對應的線性變換的像空間的維度[22]。秩－零化度定理說明矩陣的列數量等於矩陣的秩與零空間維度之和[23]。
方塊矩陣[編輯]
主條目：方塊矩陣
行數與列數相同的矩陣稱為方塊矩陣，簡稱方陣。所有n維的方塊矩陣構成一個線性空間，這個空間對矩陣乘法也是封閉的，因此也是一個代數。方陣A稱為可逆或非奇異的，如果存在另一個方陣B，使得

AB 



=


{\displaystyle =}

 In

成立。這時候可以證明也有BA 



=


{\displaystyle =}

 In成立[24]，可將矩陣B稱為A的逆矩陣[25]。一個矩陣A的逆矩陣如果存在的話，就是唯一的，通常記作A−1。
矩陣A的元素Ai,i稱為其主對角線上的元素。方塊矩陣A的所有主對角線元素之和稱為它的跡，寫作tr(A)。儘管矩陣的乘法不滿足交換律，方陣相乘時交換順序會導致乘積變化，但它們的跡不會變，即tr(AB) 



=


{\displaystyle =}

 tr(BA)[26]。除此以外，矩陣轉置的跡等於其自身的跡，tr(A) 



=


{\displaystyle =}

 tr(AT)。
如果一個方陣只有主對角線上的元素不是0，其它都是0，那麼稱其為對角矩陣。如果主對角線上方的元素都是0，那麼稱為下三角矩陣；反之如果主對角線下方的元素都是0，那麼稱為上三角矩陣。例如n 



=


{\displaystyle =}

 3的時候，這些矩陣分別寫作：









[




d

11




0


0




0



d

22




0




0


0



d

33





]




{\displaystyle {\begin{bmatrix}d_{11}&0&0\\0&d_{22}&0\\0&0&d_{33}\\\end{bmatrix}}}

（對角矩陣），





[




l

11




0


0





l

21





l

22




0





l

31





l

32





l

33





]




{\displaystyle {\begin{bmatrix}l_{11}&0&0\\l_{21}&l_{22}&0\\l_{31}&l_{32}&l_{33}\\\end{bmatrix}}}

（下三角矩陣）和





[




u

11





u

12





u

13






0



u

22





u

23






0


0



u

33





]




{\displaystyle {\begin{bmatrix}u_{11}&u_{12}&u_{13}\\0&u_{22}&u_{23}\\0&0&u_{33}\\\end{bmatrix}}}

（上三角矩陣）。



行列式[編輯]
主條目：行列式




R2裏的一個線性變換f將藍色圖形變成綠色圖形，面積不變，而順時針排布的向量x1和x2的變成了逆時針排布。對應的矩陣行列式是-1.


方塊矩陣A的行列式是一個將其映射到純量的函數，記作det(A)或，反映了矩陣自身的一定特性。一個方陣的行列式等於0若且唯若該方陣不可逆。係數是實數的時候，二維（三維）方陣A的行列式的絕對值表示單位面積（體積）的圖形經過A對應的線性變換後得到的圖形的面積（體積），而它的正負則代表了對應的線性變換是否改變空間的定向：行列式為正說明它保持空間定向，行列式為負則說明它逆轉空間定向。
2×2矩陣的行列式是





det


(



a


b




c


d



)


=
a
d
−
b
c


{\displaystyle \det {\begin{pmatrix}a&b\\c&d\end{pmatrix}}=ad-bc}

。

3×3矩陣的行列式由6項組成。更高維矩陣的行列式則可以使用萊布尼茲公式寫出[27]，或使用拉普拉斯展開由低一維的矩陣行列式遞推得出[28]。
兩個矩陣相乘，乘積的行列式等於它們的行列式的乘積：det(AB) 



=


{\displaystyle =}

 det(A)·det(B)[29]。將矩陣的一行（列）乘以某個係數加到另一行（列）上不改變矩陣的行列式，將矩陣的兩行（列）互換則使得其行列式變號[30]。用這兩種操作可以將矩陣變成一個上三角矩陣或下三角矩陣，而後兩種矩陣的行列式就是主對角線上元素的乘積，因此能方便地計算。運用行列式可以計算線性方程組的解（見克萊姆法則）[31]。
特徵值與特徵向量[編輯]
主條目：特徵向量
n×n的方塊矩陣A的一個特徵值和對應特徵向量是滿足






A
v

=
λ

v



{\displaystyle \mathbf {Av} =\lambda \mathbf {v} }

[32]的純量



λ


{\displaystyle \lambda }

以及非零向量




v



{\displaystyle \mathbf {v} }

。特徵值和特徵向量的概念對研究線性變換很有幫助。一個線性變換可以通過它對應的矩陣在向量上的作用來可視化。一般來說，一個向量在經過映射之後可以變為任何可能的向量，而特徵向量具有更好的性質[33]。假設在給定的基底下，一個線性變換對應著某個矩陣A，如果一個向量x可以寫成矩陣的幾個特徵向量的線性組合：





x

=

c

1




x



λ

1




+

c

2




x



λ

2




+
⋯
+

c

k




x



λ

k






{\displaystyle \mathbf {x} =c_{1}\mathbf {x} _{\lambda _{1}}+c_{2}\mathbf {x} _{\lambda _{2}}+\cdots +c_{k}\mathbf {x} _{\lambda _{k}}}



其中的





x



λ

i






{\displaystyle \mathbf {x} _{\lambda _{i}}}

表示此向量對應的特徵值是




λ

i




{\displaystyle \lambda _{i}}

，那麼向量x經過線性變換後會變成：






A
x

=

c

1



λ

1




x



λ

1




+

c

2



λ

2




x



λ

2




+
⋯
+

c

k



λ

k




x



λ

k






{\displaystyle \mathbf {Ax} =c_{1}\lambda _{1}\mathbf {x} _{\lambda _{1}}+c_{2}\lambda _{2}\mathbf {x} _{\lambda _{2}}+\cdots +c_{k}\lambda _{k}\mathbf {x} _{\lambda _{k}}}



可以清楚地知道變換後向量的結構。
另一個等價的特徵值定義是：純量



λ


{\displaystyle \lambda }

為特徵值，如果矩陣




A

−
λ



I



n




{\displaystyle \mathbf {A} -\lambda {\mathsf {I}}_{n}}

是不可逆矩陣。根據不可逆矩陣的性質，這個定義也可以用行列式方程描述：



λ


{\displaystyle \lambda }

為特徵值，如果





det
(
λ



I



n


−

A

)
=
0.
 


{\displaystyle \det(\lambda {\mathsf {I}}_{n}-\mathbf {A} )=0.\ }

[34]這個定義中的行列式可以展開成一個關於



λ


{\displaystyle \lambda }

的n階多項式，叫做矩陣A的特徵多項式，記為




p


A





{\displaystyle p_{\mathbf {A} }}

。特徵多項式是一個首一多項式（最高次項係數是1的多項式）。它的根就是矩陣A特徵值[35]。哈密爾頓－凱萊定理說明，如果用矩陣A本身代替多項式中的不定元



λ


{\displaystyle \lambda }

，那麼多項式的值是零矩陣[36]：






p


A



(

A

)
=
0


{\displaystyle p_{\mathbf {A} }(\mathbf {A} )=0}

。
對稱[編輯]
主條目：對稱矩陣
轉置等於自己的矩陣，即滿足A 



=


{\displaystyle =}

 AT的方塊矩陣A叫做對稱矩陣。滿足A 



=


{\displaystyle =}

 - AT的矩陣稱為反對稱矩陣。在複係數矩陣中，則有埃爾米特矩陣的概念：滿足A 



=


{\displaystyle =}

 A*的方塊矩陣稱為埃爾米特矩陣，其中的A*表示A的共軛轉置矩陣。
根據譜定理，實對稱矩陣和複埃爾米特矩陣擁有特徵基，即由矩陣的特徵向量組成的基底。因此任何向量都能表示成矩陣特徵向量的線性組合。此外，這兩類矩陣的特徵值都是實數[37]。
正定性[編輯]


矩陣表達式






[





1
4




0




0


−


1
4





]




{\displaystyle {\begin{bmatrix}{\frac {1}{4}}&0\\0&-{\frac {1}{4}}\end{bmatrix}}}








[





1
4




0




0




1
4





]




{\displaystyle {\begin{bmatrix}{\frac {1}{4}}&0\\0&{\frac {1}{4}}\end{bmatrix}}}




正定性
不定矩陣
正定矩陣


對應二次型




Q
(
x
,
y
)
=


1
4


(

x

2


−

y

2


)


{\displaystyle Q(x,y)={\frac {1}{4}}(x^{2}-y^{2})}






Q
(
x
,
y
)
=


1
4


(

x

2


+

y

2


)


{\displaystyle Q(x,y)={\frac {1}{4}}(x^{2}+y^{2})}




取值圖像



說明
正定矩陣對應的二次型的取值範圍永遠是正的，
不定矩陣對應的二次型取值則可正可負


主條目：正定矩陣
n×n的實對稱矩陣A如果滿足對所有非零向量x ∈ Rn，對應的二次型

Q(x) 



=


{\displaystyle =}

 xTAx

函數值都是正數，就稱A為正定矩陣。類似地還有半正定矩陣、負定矩陣、不定矩陣等概念[38]。對稱矩陣的正定性與其特徵值密切相關。矩陣是正定的若且唯若其特徵值都是正數[39]。
矩陣的計算[編輯]
矩陣在許多學科領域中都有應用，在很多時候，除了需要知道矩陣的理論性質以外，還需要計算矩陣的數值。為了矩陣的計算能夠足夠精確與快捷，數值線性代數中專門有研究矩陣的數值計算方法[40]。與其它的數值計算一樣，矩陣的數值計算註重的主要也是算法的複雜度和數值穩定性。矩陣的數值計算可以使用直接計算，也可以用疊代算法，例如在計算方塊矩陣的特徵值時，可以從一個非零向量x0開始，通過特定疊代方法得到一個逼近某個特徵向量的向量序列[41]。
測量一個算法的複雜度是指估計此算法需要的基本運算如數字的加法和乘法的次數，或者找出它的一個上界。例如按照定義計算的話，兩個n階方陣的乘法需要n3次數字乘法計算，因為其乘積是一個n階方陣，有n2個元素，計算每個元素需要n次數字乘法。如果使用施特拉森算法的話，可以將數字乘法的次數減低到大約n2.8次[42]。此外，程式語言或環境本身對算法的複雜度也會有影響。
某些特殊類型的矩陣攜帶的數據量比一般矩陣要少，同時帶來的信息量比一般矩陣多。一個重要的例子是稀疏矩陣，這類矩陣中絕大部分的元素是零。有關稀疏矩陣的計算，如計算稀疏矩陣A的線性方程組Ax 



=


{\displaystyle =}

 b時，可以使用一些專用於稀疏矩陣的特殊算法（比如共軛梯度法[43]），減低計算複雜度。
算法的數值穩定性是指輸入值的小變化不會讓計算結果產生很大偏差。例如計算矩陣的逆時，可以用以下的算法（其中adj(A)表示A的伴隨矩陣）

A−1 



=


{\displaystyle =}

 Adj(A) / det(A)

這個算法在A的行列式接近0的時候會引起很大的捨入誤差[44]。而如果使用全選主元的高斯消去法求逆，則在複雜度降低的同時能夠避免捨入誤差，保證數值穩定性。
矩陣分解[編輯]
主條目：矩陣分解，對角化，高斯消去法和巴萊斯算法
矩陣研究的一大方向是將一般的矩陣用一些比較「簡單」的矩陣來表示。這種表示方式稱為矩陣的變換與分解。矩陣變換與分解的方法有很多，它們的目的都是希望化簡後的矩陣保持原矩陣的某些性質，比如行列式、秩或逆矩陣，而形式相對簡單，因而能用容易地進行討論和計算，或者能使得某些算法更易執行。
LU分解將矩陣分解為一個下三角矩陣L和一個上三角矩陣U的乘積[45]。分解後的矩陣可以方便某些問題的解決。例如解線性方程組時，如果將係數矩陣A分解成A 



=


{\displaystyle =}

 LU的形式，那麼方程的求解可以分解為求解Ly 



=


{\displaystyle =}

 b和Ux 



=


{\displaystyle =}

 y兩步，而後兩個方程可以十分簡潔地求解（詳見三角矩陣中「向前與向後替換」一節）。又例如在求矩陣的行列式時，如果直接計算一個矩陣A的行列式，需要計算大約(n + 1)!次加法和乘法；而如果先對矩陣做LU分解，再求行列式，就只需要大約n3次加法和乘法，大大降低了計算次數。這是因為做LU分解的複雜度大約是n3次，而後註意到L和U是三角矩陣，所以求它們的行列式只需要將主對角線上元素相乘即可。




若爾當矩陣，其中灰色框內的是若爾當塊


高斯消去法也是一種矩陣分解方法。通過初等變換操作，可以將任何矩陣變為階梯形矩陣，而每個操作可以看做是將矩陣乘上一個特定的初等矩陣[46]。奇異值分解則是另一種分解方法，將一個矩陣表示成3個矩陣的乘積：A 



=


{\displaystyle =}

 UDV。其中U和V是酉矩陣，D是對角矩陣。
特徵分解是將一個矩陣A寫成PDP−1的形式，其中P是一個可逆矩陣，D是對角矩陣[47]。如果A的特徵分解存在，就稱它是可對角化的矩陣。不能對角化的矩陣，也有類似的分解方式。任意的矩陣A都可以寫成PJP−1的形式，其中的矩陣J是若爾當標準型。若爾當標準型是矩陣的一種，它與對角矩陣類似，只不過主對角線上的元素不是數值，而是若爾當塊：主對角線上為同一元素




λ

i




{\displaystyle \lambda _{i}}

，主對角線右上一行的次對角線上都是1，其它元素都是0的矩陣（見右圖）[48]。特徵分解可以方便計算矩陣的冪次和多項式，如要計算An：

An 



=


{\displaystyle =}

 (PDP−1)n 



=


{\displaystyle =}

 PDP−1PDP−1...PDP−1 



=


{\displaystyle =}

 PDn P−1

而其中對角矩陣的冪次Dn要比An容易計算得多。同理還可計算矩陣指數：eA（在線性微分方程中有應用）、矩陣對數和矩陣的平方根[49]。為了提高算法的數值穩定性，還有舒爾分解等矩陣分解方法[50]。
矩陣的推廣[編輯]
矩陣的元素除了可以是實數和複數以外，也可以任意環或域中元素。在線性代數中，矩陣的性質可以經由有限維的線性空間中的線性變換定義。更廣泛的，無限維空間中的線性算子，則可以定義更廣泛的無窮維矩陣。矩陣的另一種推廣是張量。純量可以看成零維方式排列的數據（只有一個「點」），向量可以看成是一維方式排列的數據（若干個「點」排成的「線段」），矩陣可以看成是二維方式排列的數據（若干個「線段」排成的「矩形」），而張量的概念則包括了這幾種排列方式。在張量的概念中，純量是零維張量，向量是一維張量，矩陣是二維張量，而更高維方式排列的數據方式就是高維張量[51]。
一般域和環上的矩陣[編輯]
矩陣的元素除了可以是實數和複數以外，還可以是任何能夠使得矩陣的運算律成立的元素。首先，矩陣的元素可以是任意一個域（即能夠進行「加減乘除」運算的集合）中元素。例如編碼理論中會出現係數為有限域中元素的矩陣，以及有理數係數的矩陣。如果矩陣的係數所在域K不是代數閉域，那麼在求矩陣的特徵值時，由於特徵值是相應的特徵多項式的根，可能不在係數域K中，而是在係數域的某個擴域L中。反過來，如果考慮擴域L/K，以及L中的一個元素



α


{\displaystyle \alpha }

，以及L中線性變換




m

α


:

x
↦
α
x


{\displaystyle m_{\alpha }:\,x\mapsto \alpha x}

，那麼由於




m

α




{\displaystyle m_{\alpha }}

也是一個K-線性變換，它可以表示成一個n×n的K係數矩陣




X

α




{\displaystyle X_{\alpha }}

，其中的n是擴域L/K的階數。



α


{\displaystyle \alpha }

是這個矩陣的特徵值，這個矩陣的特徵多項式




p


X

α






{\displaystyle p_{X_{\alpha }}}

是



α


{\displaystyle \alpha }

在K中的最小多項式




min


K



⁡
(
α
)


{\displaystyle \operatorname {min} _{\mathbf {K} }(\alpha )}

的冪次：






p


X

α




=


(

min


K



⁡
(
α
)
)


r





{\displaystyle p_{X_{\alpha }}=\left(\operatorname {min} _{\mathbf {K} }(\alpha )\right)^{r}\,}

。其中的



r


{\displaystyle r}

是擴域L/K 



(
α
)


{\displaystyle (\alpha )}

的階數[52]。

更一般的情況是矩陣的元素屬於某個環R[53]。環是比域更廣泛的概念，只要求其中元素能夠進行加減法和乘法運算（不一定能定義除法）。給定一個環R，





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbf {R} )}

中的矩陣之間可以相互加減以及相乘，所以





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbf {R} )}

關於矩陣的加法和乘法也構成一個環，稱為矩陣環。n維方陣的環





M


(
n
,

R

)


{\displaystyle {\mathcal {M}}(n,\mathbf {R} )}

與左R-模Rn的自同態環同構[54]。
若R是交換環，則





M


(
m
,

R

)


{\displaystyle {\mathcal {M}}(m,\mathbf {R} )}

是一個帶單位元的R-代數，滿足結合律，但不滿足交換律。其中的矩陣仍然可以用萊布尼茲公式定義行列式。一個矩陣可逆若且唯若其行列式為環R中的可逆元（域上的矩陣可逆只需行列式不等於0）[55]。
矩陣與線性變換[編輯]
前面已經提到，所有Rn → Rm的線性變換都對應著一個





M


(
m
,
n
,

R

)


{\displaystyle {\mathcal {M}}(m,n,\mathbf {R} )}

中的矩陣。更一般地，給定了基底後，任意兩個有限維線性空間之間的線性映射f: V → W也對應著一個矩陣Af= (aij)。設空間V和W的基底分別是v1, ..., vn和w1, ..., wm，那麼

對任意 



j
=
1
,
…
,
n


{\displaystyle j=1,\ldots ,n}

，



f
(


v


j


)
=

∑

i
=
1


m



a

i
,
j




w


i




{\displaystyle f(\mathbf {v} _{j})=\sum _{i=1}^{m}a_{i,j}\mathbf {w} _{i}}



矩陣Af實際上「記錄」了V中每個基底向量經過變換後得到的W中的像在基底(w1, ..., wm)下的形式。要註意矩陣的內容取決於基底的選擇。可以說，矩陣是線性變換f在特定「角度」（基底）下的「素描」。不同的「角度」下，描述f的矩陣是不同的，但這些矩陣都是相似矩陣[56]。與矩陣有關的基本概念都可以用線性變換的層面來解釋，比如一個矩陣的轉置可以用f的對偶變換f* : W* → V*來表示[57]。
當矩陣的元素是帶單位元的環R中的元素時，m×n的R-矩陣對應的則是R-自由模Rm和Rn之間的R-線性變換。n = m的時候，這些R-線性變換可以相互複合，因此n維的R-矩陣環能夠與R-自同態環Rn同構。
矩陣群[編輯]
主條目：矩陣群
群是比環更寬泛的代數結構，只需要集合配備一個滿足結合律的二元運算，即將兩個群內元素映射到群內一元素的運算。矩陣群是指矩陣關於矩陣乘法組成的群[58]。顯然，只有方塊矩陣才能構成乘法群。所有n維的可逆方陣構成一個群，稱為n階一般線性群。由於群內每個元素都必須是可逆的，任意的矩陣群都必然是一般線性群的子群。
能夠在矩陣乘法和求逆矩陣運算下保持的性質都可以用來刻畫一定的矩陣群。例如所有行列式為1的矩陣可以構成一個群，稱為n階特殊線性群[59]。所有n維的正交矩陣，即滿足：

MTM = I

的矩陣M也構成一個群，稱為n階正交群[60]。正交矩陣得名於它在Rn中對應的線性變換具有保角性，也就是說對基本的點積，滿足

(Mv) · (Mw) = v · w.[61]

每個有限群都同構於一個矩陣群。實際上，每個有限群都同構於某個置換群的子群，而每個置換群都同構於一個矩陣群（見置換群的正則群表示[62]）鑑於矩陣群的性質可以通過與矩陣相關的更多手段更好地理解，常常通過研究矩陣群來研究一個有限群。相關的理論稱為群表示論。
無限維矩陣[編輯]
主條目：無限維矩陣
無窮維矩陣可以指行數或列數無窮大，或兩者都是無窮大的矩陣[63]。儘管這樣的矩陣無法完整寫出，但只要知道每行每列的元素的值，仍然可以對它進行矩陣操作和運算。這裏矩陣的行數和列數甚至不一定需要是可數集。需要註意的是，無窮維矩陣的乘法涉及到無窮級數求和，因此只有在相關的無窮級數收斂的時候，才能定義矩陣的乘積[64]。無限維矩陣也可以是方塊矩陣，定義為行標記集合與列標記集合相同的矩陣（如




N

×

N



{\displaystyle \mathbb {N} \times \mathbb {N} }

）[65]。
無限矩陣無法定義通常意義上的行列式，因此可逆矩陣不一定是方塊矩陣，同理，酉矩陣也不一定要是方塊矩陣[66]。
空矩陣[編輯]
主條目：空矩陣
空矩陣是指行數或列數為零的矩陣。空矩陣的定義可以完善一些關於零維空間的約定。包括約定一個矩陣與空矩陣相乘得到的也是空矩陣，兩個n×0和0×p的空矩陣相乘是一個n×p的零矩陣（所有元素都是零的矩陣）。0×0的空矩陣的行列式約定為1，所以它也可以有逆矩陣，約定為它自己[67]。
分塊矩陣[編輯]
分塊矩陣是指一個大矩陣分割成「矩陣的矩陣」。舉例，以下的矩陣





P
=


[



1


2


3


2




1


2


7


5




4


9


2


6




6


1


5


8



]




{\displaystyle P={\begin{bmatrix}1&2&3&2\\1&2&7&5\\4&9&2&6\\6&1&5&8\end{bmatrix}}}



可分割成4個2×2的矩陣






P

11


=


[



1


2




1


2



]


,

P

12


=


[



3


2




7


5



]


,

P

21


=


[



4


9




6


1



]


,

P

22


=


[



2


6




5


8



]




{\displaystyle P_{11}={\begin{bmatrix}1&2\\1&2\end{bmatrix}},P_{12}={\begin{bmatrix}3&2\\7&5\end{bmatrix}},P_{21}={\begin{bmatrix}4&9\\6&1\end{bmatrix}},P_{22}={\begin{bmatrix}2&6\\5&8\end{bmatrix}}}








P
=


[




P

11





P

12







P

21





P

22





]




{\displaystyle P={\begin{bmatrix}P_{11}&P_{12}\\P_{21}&P_{22}\end{bmatrix}}}

。將矩陣分塊可以使得矩陣結構清晰，在某些時候可以方便運算、證明。兩個大小相同、分塊方式也相同的矩陣可以相加。行和列的塊數符合矩陣乘法要求時，分塊矩陣也可以相乘。將矩陣分塊相乘的結果與直接相乘是一樣的。用分塊矩陣求逆，可以將高階矩陣的求逆轉化為多次低階矩陣的求逆[68]。

應用[編輯]
矩陣在許多領域都應用廣泛。有些時候用到矩陣是因為其表達方式緊湊，例如在博弈論和經濟學中，會用收益矩陣來表示兩個博弈對象在各種決策方式下的收益[69]。文本挖掘和索引典彙編的時候，比如在TF-IDF方法中，也會用到文件項矩陣來追蹤特定詞彙在多個文件中的出現頻率[70]。
複數可以用實係數的2×2矩陣表示：





a
+
i
b
↔


[



a


−
b




b


a



]


,


{\displaystyle a+ib\leftrightarrow {\begin{bmatrix}a&-b\\b&a\end{bmatrix}},}



這種表示法與複數的加減法、乘法都相兼容。比如，2×2的旋轉矩陣可以用來表示模長為1的複數，一個向量乘以此旋轉矩陣可以視作一個複數乘以該模長為1的複數。對四元數也有類似的矩陣表達[71]。
早期的密碼技術如希爾密碼也用到矩陣。然而，矩陣的線性性質使這類密碼相對容易破解[72]。計算機圖像處理也會用到矩陣來表示處理對象，並且用放射旋轉矩陣來計算對象的變換，實現三維對象在特定二維螢幕上的投影[73]。多項式環上的矩陣在控制論中有重要作用。
化學中也有矩陣的應用，特別在使用量子理論討論分子鍵和光譜的時候。具體例子有解羅特漢方程時用重疊矩陣和福柯矩陣來得到哈特裡－福克方法中的分子軌道。
圖論[編輯]




一個無向圖的鄰接矩陣





[



1


1


0




1


0


1




0


1


0



]




{\displaystyle {\begin{bmatrix}1&1&0\\1&0&1\\0&1&0\end{bmatrix}}}

。


圖論中可以用矩陣描述一個有限圖[74]。這個矩陣叫做相關矩陣的鄰接矩陣，記錄了圖的每兩個頂點之間是否有邊連接。對簡單圖來說，鄰接矩陣的元素只取兩個值：0和1,第i 列第j 行上取值為0，表示沒有從第i個頂點連到第j個頂點的邊，取值為1則說明有。如果是一般情況的話，第i 列第j 行上的取值是從第i個頂點連到第j個頂點的邊的數目。距離矩陣則是表示圖中各頂點之間距離的矩陣[75]。在研究網際網路等複雜網絡的時候，鄰接矩陣常常會是稀疏矩陣。因此網絡理論中有專門研究稀疏矩陣的方面。
數學分析[編輯]
在多元函數微積分學中，對二階偏導數存在的函數f: Rn → R，可以定義其海森矩陣[76]：





H
(
f
)
(
x
)
=

[




∂

2


f


∂

x

i



∂

x

j





(
x
)
]



{\displaystyle H(f)(x)=\left[{\frac {\partial ^{2}f}{\partial x_{i}\,\partial x_{j}}}(x)\right]}

。





n=2時，海森矩陣





[



2


0




0


−
2



]




{\displaystyle {\begin{bmatrix}2&0\\0&-2\end{bmatrix}}}

的特徵值一正一負，說明函數f(x,y) = x2 − y2在 (x = 0, y = 0)處有一個鞍點（紅色點）


嚴格來說，僅當函數在某一點上的二階偏導數存在，才能定義這一點上的海森矩陣。海森矩陣給出了函數在這一點的變化率方面的信息。當給定的點x = (x1, ..., xn)是函數平穩點（即函數f在這一點上的一階偏導數







∂
f


∂

x

i








{\displaystyle \scriptstyle {\frac {\partial f}{\partial x_{i}}}}

都是0）時，就需要利用海森矩陣來查看函數在這一點周圍的增長特性。多元函數在點x的泰勒展開是：





f
(
x
+
h
)
=
f
(
x
)
+
∇
f
(
x
)
⋅
h
+


1
2



h

T


H
(
f
)
(
x
)
h
+
∘

(
∥
x

∥

3


)



{\displaystyle f(x+h)=f(x)+\nabla f(x)\cdot h+{\frac {1}{2}}h^{T}H(f)(x)h+\circ \left(\|x\|^{3}\right)}



如果函數在點x的一階偏導數都是0，那麼



∇
f
=
0


{\displaystyle \nabla f=0}

，所以函數在x附近的變化率取決於海森矩陣



H
(
f
)
(
x
)


{\displaystyle H(f)(x)}

的性質。如果



H
(
f
)
(
x
)


{\displaystyle H(f)(x)}

是正定矩陣，那麼函數在點x取得局部最小值，如果是負定矩陣，則函數在x取得局部最大值。在這類情況下，關於函數f的條件最優化問題可以轉變為關於海森矩陣的二次規劃問題[77]。
矩陣在多元函數微積分中的另一個應用是雅可比矩陣。函數f: Rn → Rm在某一點x上的一階偏導數存在時，可以定義它在這點上的雅可比矩陣[78]：






J

f


(
x
)
=


[



∂

f

i




∂

x

j





(
x
)
]


1
≤
i
≤
m
,
1
≤
j
≤
n




{\displaystyle J_{f}(x)=\left[{\frac {\partial f_{i}}{\partial x_{j}}}(x)\right]_{1\leq i\leq m,1\leq j\leq n}}

。如果n>m，而




J

f


(
x
)


{\displaystyle J_{f}(x)}

又是滿秩矩陣（秩等於m）的話，根據反函數定理，可以找到函數f在x附近的一個局部的反函數[79]。

偏微分方程理論中，二階擬線性偏微分方程可以根據最高次偏導項係數構成的矩陣的正定性分類。假設有一個二階擬線性偏微分方程：





(

E

)



∑

1
⩽
i
,
j
⩽
n



a

i
j






∂

2


f


∂

x

i



∂

x

j





+

∑

i
=
1


n



b

i





∂
f


∂

x

i





+
c
f
=
g
.



{\displaystyle (\mathbf {E} )\qquad \qquad \sum _{1\leqslant i,j\leqslant n}a_{ij}{\frac {\partial ^{2}f}{\partial x_{i}\,\partial x_{j}}}+\sum _{i=1}^{n}b_{i}{\frac {\partial f}{\partial x_{i}}}+cf=g.\qquad }

 並假設




a

i
j


=

a

j
i


,


{\displaystyle a_{ij}=a_{ji},}



記矩陣




A

=


[

a

i
j


]


1
⩽
i
,
j
⩽
n




{\displaystyle \mathbf {A} =\left[a_{ij}\right]_{1\leqslant i,j\leqslant n}}

。如果矩陣A是正定或負定矩陣，那麼就稱方程(E)為橢圓形偏微分方程；如果A不可逆，就稱(E)為拋物形偏微分方程，如果A可逆而且恰有n - 1個特徵值同號，就稱(E)為雙曲型偏微分方程。其它情況下也稱(E)為超雙曲形偏微分方程。不同類型的方程解的形式也不一樣[80]。
用數值方法解偏微分方程時更需要用到矩陣。一個重要的方法是有限元方法，在求解各種物理中遇到的偏微分方程時廣泛使用。有限元方法的基本思想是用一系列「簡單」函數的線性組合來「逼近」偏微分方程的精確解。這些「簡單」函數通常是指將求解區域分割成一定數量的「小塊」後，僅在某一「小塊」上非零的分段線性函數。選定了網格和「簡單」函數後，可以求解關於剛度矩陣的方程得到近似解。有限元理論中證明瞭在滿足一定的條件下，近似解將隨著網格趨於精細而弱收斂到精確解[81][82]。
機率論與統計[編輯]
機率論中常用到隨機矩陣，即列向量是機率向量（即所有的元素都在0和1之間，並且加起來等於1的向量）的矩陣。隨機矩陣可用來定義有限機率空間中的馬爾可夫鏈。設隨機變量




X

n




{\displaystyle X_{n}}

是某個馬爾可夫鏈在



t
=
n


{\displaystyle t=n}

時刻的狀態，所有可能的狀態



S
=

{

s

1


,

s

2


,
⋯
,

s

m


}



{\displaystyle S=\left\{s_{1},s_{2},\cdots ,s_{m}\right\}}

稱為狀態空間，那麼隨機矩陣




M

n


n
+
1




{\displaystyle M_{n}^{n+1}}

則記錄了假設已知




X

n




{\displaystyle X_{n}}

的可能情況下




X

n
+
1




{\displaystyle X_{n+1}}

做各種取值的可能性[83]。




M

n


n
+
1




{\displaystyle M_{n}^{n+1}}

的第i 列第j 行上的元素表示當




X

n


=

s

j




{\displaystyle X_{n}=s_{j}}

的時候，




X

n
+
1


=

s

i




{\displaystyle X_{n+1}=s_{i}}

的可能性。




M

n


n
+
1




{\displaystyle M_{n}^{n+1}}

的第j 列記錄了從




X

n


=

s

j




{\displaystyle X_{n}=s_{j}}

轉移到




X

n
+
1




{\displaystyle X_{n+1}}

各種狀態的可能性。所以




M

n


n
+
1




{\displaystyle M_{n}^{n+1}}

叫做



t
=
n


{\displaystyle t=n}

時刻的轉移矩陣。如果馬爾可夫鏈的轉移矩陣不隨時刻變化，則稱為齊次馬爾可夫鏈。這時馬爾可夫鏈的吸引態可以通過計算轉移矩陣的特徵向量得到[84]。
統計學中也會用到各種不同的矩陣。描述統計學中常常需要用矩陣的形式來描述數據樣本，顯得更為緊湊。幾個隨機變量的協方差矩陣表示它們之間的協方差關係，在某種程度上表示了它們相互間的關聯程度（但不絕對）[85]。
統計學中用到矩陣的另一個地方是線性回歸中的最小二乘法分析。當觀測到隨機樣本



(

Y

i


,

X

i
1


,
…
,

X

i
p


)
,

i
=
1
,
…
,
n


{\displaystyle (Y_{i},X_{i1},\ldots ,X_{ip}),\,i=1,\ldots ,n}

時，線性回歸法的目標是希望找到以下的線性關係：






Y

i


=

β

0


+

β

1



X

i
1


+

β

2



X

i
2


+
…
+

β

p



X

i
p


+

ε

i


,

i
=
1
,
…
,
n


{\displaystyle Y_{i}=\beta _{0}+\beta _{1}X_{i1}+\beta _{2}X_{i2}+\ldots +\beta _{p}X_{ip}+\varepsilon _{i},\qquad i=1,\ldots ,n}



即將變量Y表示成X的分量的線性組合與一個已知的隨機誤差的和。這個表示可以寫成矩陣的形式，並利用矩陣的奇異值分解來分析[86]。
另一種隨機矩陣（random matrix）是指每個元素都是隨機變量的矩陣，這些隨機變量可以都遵循同一個分佈，或各自遵循不同的分佈。一個常見的例子是全部元素都是相互獨立的標準常態分佈隨機變量的隨機矩陣。這種隨機矩陣在數論和物理中也有應用[87][88]。
物理學上的對稱性及線性變換[編輯]
更多資訊：對稱性 (物理學)
線性變換及其所對應的對稱，在現代物理學中有著重要的角色。例如，在量子場論中，基本粒子是由狹義相對論的洛倫茲群所表示，具體來說，即它們在旋量群下的表現。內含泡利矩陣及更通用的狄拉克矩陣的具體表示，在費米子的物理描述中，是一項不可或缺的構成部分，而費米子的表現可以用旋量來表述[89]。描述最輕的三種誇克時，需要用到一種內含特殊酉群SU(3)的群論表示；物理學家在計算時會用一種更簡便的矩陣表示，叫蓋爾曼矩陣，這種矩陣也被用作SU(3)規範群，而強核力的現代描述──量子色動力學的基礎正是SU(3)。還有卡比博-小林-益川矩陣（CKM矩陣）：在弱相互作用中重要的基本誇克態，與指定粒子間不同質量的誇克態不一樣，但兩者卻是成線性關係，而CKM矩陣所表達的就是這一點[90]。
量子態的線性組合[編輯]
1925年海森堡提出第一個量子力學模型時，使用了無限維矩陣來表示理論中作用在量子態上的算子[91]。這種做法在矩陣力學中也能見到。例如密度矩陣就是用來刻畫量子系統中「純」量子態的線性組合表示的「混合」量子態[92]。
另一種矩陣是用來描述構成實驗粒子物理基石的散射實驗的重要工具。當粒子在加速器中發生碰撞，原本沒有相互作用的粒子在高速運動中進入其它粒子的作用區，動量改變，形成一系列新的粒子。這種碰撞可以解釋為結果粒子狀態和入射粒子狀態線性組合的純量積。其中的線性組合可以表達為一個矩陣，稱為S矩陣，其中記錄了所有可能的粒子間相互作用[93]。
簡正模式[編輯]
矩陣在物理學中的另一類泛應用是描述線性耦合調和系統。這類系統的運動方程可以用矩陣的形式來表示，即用一個質量矩陣乘以一個廣義速度來給出運動項，用力矩陣乘以位移向量來刻畫相互作用。求系統的解的最優方法是將矩陣的特徵向量求出（通過對角化等方式），稱為系統的簡正模式。這種求解方式在研究分子內部動力學模式時十分重要：系統內部由化學鍵結合的原子的振動可以表示成簡正振動模式的疊加[94]。描述力學振動或電路振盪時，也需要使用簡正模式求解[95]。
幾何光學[編輯]
在幾何光學裏，可以找到很多需要用到矩陣的地方。幾何光學是一種忽略了光波波動性的近似理論，這理論的模型將光線視為幾何射線。採用近軸近似，假若光線與光軸之間的夾角很小，則透鏡或反射元件對於光線的作用，可以表達為2×2矩陣與向量的乘積。這向量的兩個分量是光線的幾何性質（光線的斜率、光線跟光軸之間在主平面（英語：principal plane）的垂直距離）。這矩陣稱為光線傳輸矩陣，內中元素編碼了光學元件的性質。對於折射，這矩陣又細分為兩種：「折射矩陣」與「平移矩陣」。折射矩陣描述光線遇到透鏡的折射行為。平移矩陣描述光線從一個主平面傳播到另一個主平面的平移行為。
由一系列透鏡或反射元件組成的光學系統，可以很簡單地以對應的矩陣組合來描述其光線傳播路徑。[96]
電子學[編輯]
在電子學裏，傳統的網目分析（英語：mesh analysis）或節點分析會獲得一個線性方程組，這可以以矩陣來表示與計算。
很多種電子元件的電路行為可以用矩陣來描述。設定



A


{\displaystyle A}

為輸入向量，其兩個分量為輸入電壓




v

1




{\displaystyle v_{1}}

與輸入電流




i

1




{\displaystyle i_{1}}

。設定



B


{\displaystyle B}

為輸出向量，其兩個分量為輸出電壓




v

2




{\displaystyle v_{2}}

與輸出電流




i

2




{\displaystyle i_{2}}

。這電子元件的電路行為可以描述為



B
=
H
⋅
A


{\displaystyle B=H\cdot A}

；其中，



H


{\displaystyle H}

是2×2矩陣，內有一個阻抗元素




h

12




{\displaystyle h_{12}}

、一個導納元素




h

21




{\displaystyle h_{21}}

、兩個無量綱元素




h

11




{\displaystyle h_{11}}

與




h

22




{\displaystyle h_{22}}

。這樣，電路的計算可以約化為矩陣計算。

參見[編輯]

矩陣論專有名詞表：有關矩陣論所用到的名詞的定義
方塊矩陣
矩陣範數
雅可比矩陣

註釋與參考[編輯]
腳註[編輯]



^ 1.0 1.1 1.2 1.3 董可榮 2007, 第3節
^ Shen, Crossley & Lun 1999
^ 克萊因 2002, 第33章第4節
^ Hawkins 1975
^ 克萊因 2002, 第33章第4節
^ The Collected Mathematical Papers of James Joseph Sylvester: 1837–1853, Paper 37, p. 247
^ 克萊因 2002, 第33章第4節
^ 克萊因 2002, 第33章第4節
^ Cayley 1889, vol. II, p. 475–496
^ Dieudonné, ed. 1978, Vol. 1, Ch. III, p. 96
^ 克萊因 2002, 第33章第4節
^ 克萊因 2002, 第33章第4節
^ 周建華. 《矩陣》. 台灣: 中央圖書出版社. 2002. ISBN 9789576374913 （中文）. 
^ Brown 1991, Definition I.2.1 (addition), Definition I.2.4 (scalar multiplication), and Definition I.2.33 (transpose)
^ Brown 1991, Theorem I.2.6
^ Brown 1991, Definition I.2.20
^ 林志興 & 楊忠鵬 2010
^ Horn & Johnson 1985, Ch. 4 and 5
^ Brown 1991, I.2.21 and 22
^ Greub 1975, Section III.2
^ Brown 1991, Definition II.3.3
^ Greub 1975, Section III.1
^ Brown 1991, Theorem II.3.22
^ Brown 1991, Definition I.5.13
^ Brown 1991, Definition I.2.28
^ 這個結論容易從矩陣乘法的定義獲得：






tr
⁡
(


A
B


)
=

∑

i
=
1


m



∑

j
=
1


n



A

i
j



B

j
i


=
tr
⁡
(


B
A


)



{\displaystyle \scriptstyle \operatorname {tr} ({\mathsf {AB}})=\sum _{i=1}^{m}\sum _{j=1}^{n}A_{ij}B_{ji}=\operatorname {tr} ({\mathsf {BA}})}

。


^ Brown 1991, Definition III.2.1
^ Mirsky 1990, Theorem 1.4.1
^ Brown 1991, Theorem III.2.12
^ Brown 1991, Corollary III.2.16
^ Brown 1991, Theorem III.3.18
^ Brown 1991, Definition III.4.1
^ Steven A. Leduc [[#CITEREFSteven A. Leduc|]], 第293頁
^ Brown 1991, Definition III.4.9
^ Brown 1991, Corollary III.4.10
^ 王萼芳 1997, 4.2，定理3，第247頁
^ Horn & Johnson 1985, Theorem 2.5.6
^ Horn & Johnson 1985, Chapter 7
^ Horn & Johnson 1985, Theorem 7.2.1
^ Bau III & Trefethen 1997
^ Householder 1975, Ch. 7
^ Golub & Van Loan 1996, Algorithm 1.3.1
^ Golub & Van Loan 1996, Chapters 9 and 10, esp. section 10.2
^ Golub & Van Loan 1996, Chapter 2.3
^ Press, Flannery & Teukolsky 1992
^ Stoer & Bulirsch 2002, Section 4.1
^ Horn & Johnson 1985, Theorem 2.5.4
^ Horn & Johnson 1985, Ch. 3.1, 3.2
^ Arnold & Cooke 1992, Sections 14.5, 7, 8
^ Bronson 1989, Ch. 15
^ Coburn 1955, Ch. V
^ Ash 2012, Chapter II
^ Lang 2002, Chapter XIII
^ Lang 2002, XVII.1, p. 643
^ Lang 2002, Proposition XIII.4.16
^ Greub 1975, Section III.3
^ Greub 1975, Section III.3.13
^ Baker 2003, Def. 1.30
^ Baker 2003, Theorem 1.2
^ Artin 1991, Chapter 4.5
^ Artin 1991, Theorem 4.5.13
^ Rowen 2008, Example 19.2, p. 198
^ Itõ, ed. 1987
^ Thankappan 1993
^ Thankappan 1993
^ Thankappan 1993
^ Faliva & Zoia 2008
^ 居餘馬 2002, 2.6
^ Fudenberg & Tirole 1983, Section 1.1.1
^ Manning 1999, Section 15.3.4
^ Ward 1997, Ch. 2.8
^ Stinson 2005, Ch. 1.1.5 and 1.2.4
^ Association for Computing Machinery 1979, Ch. 7
^ Godsil & Royle 2004, Ch. 8.1
^ Punnen 2002
^ Lang 1987a, Ch. XVI.6
^ Nocedal 2006, Ch. 16
^ Lang 1987a, Ch. XVI.1
^ Lang 1987a, Ch. XVI.5
^ Gilbarg & Trudinger 2001
^ Šolin 2005, Ch. 2.5
^ 伊澤爾萊斯 2005, Ch. 8
^ Latouche & Ramaswami 1999
^ Mehata & Srinivasan 1978, Ch. 2.8
^ Krzanowski 1988, Ch. 2.2., p. 60
^ Krzanowski 1988, Ch. 4.1
^ Conrey 2007
^ Zabrodin, Brezin & Kazakov et al. 2006
^ Itzykson & Zuber 1980, Ch. 2
^ 見Burgess & Moore 2007, section 1.6.3. (SU(3)), section 2.4.3.2. (Kobayashi－Maskawa matrix)
^ Schiff 1968, Ch. 6
^ Bohm 2001, sections II.4 and II.8
^ Weinberg 1995, Ch. 3
^ Wherrett 1987, part II
^ Riley, Hobson & Bence 1997, 7.17
^ Guenther 1990, Ch. 5



參考文獻[編輯]


Arnold, Vladimir I.; Cooke, Roger, Ordinary differential equations, Berlin, DE; New York, NY: Springer-Verlag, 1992, ISBN 978-3-540-54813-3 
Artin, Michael, Algebra, Prentice Hall, 1991, ISBN 978-0-89871-510-1 
Association for Computing Machinery, Computer Graphics, Tata McGraw–Hill, 1979, ISBN 978-0-07-059376-3 
Baker, Andrew J., Matrix Groups: An Introduction to Lie Group Theory, Berlin, DE; New York, NY: Springer-Verlag, 2003, ISBN 978-1-85233-470-3 
Bau III, David; Trefethen, Lloyd N., Numerical linear algebra, Philadelphia, PA: Society for Industrial and Applied Mathematics, 1997, ISBN 978-0-89871-361-9 
Bretscher, Otto, Linear Algebra with Applications 3rd, Prentice Hall, 2005 
王萼芳, 高等代數教程 第1版, 清華大學出版社, 1997, ISBN 9787302024521 
Bronson, Richard, Schaum's outline of theory and problems of matrix operations, New York: McGraw–Hill, 1989, ISBN 978-0-07-007978-6 
Brown, William A., Matrices and vector spaces, New York, NY: M. Dekker, 1991, ISBN 978-0-8247-8419-5 
Coburn, Nathaniel, Vector and tensor analysis, New York, NY: Macmillan, 1955, OCLC 1029828 
Conrey, J. Brian, Ranks of elliptic curves and random matrix theory, Cambridge University Press, 2007, ISBN 978-0-521-69964-8 
Fudenberg, Drew; Tirole, Jean, Game Theory, MIT Press, 1983 
Gilbarg, David; Trudinger, Neil S., Elliptic partial differential equations of second order 2nd, Berlin, DE; New York, NY: Springer-Verlag, 2001, ISBN 978-3-540-41160-4 
Godsil, Chris; Royle, Gordon, Algebraic Graph Theory, Graduate Texts in Mathematics 207, Berlin, DE; New York, NY: Springer-Verlag, 2004, ISBN 978-0-387-95220-8 
Golub, Gene H.; Van Loan, Charles F., Matrix Computations 3rd, Johns Hopkins, 1996, ISBN 978-0-8018-5414-9 
Greub, Werner Hildbert, Linear algebra, Graduate Texts in Mathematics, Berlin, DE; New York, NY: Springer-Verlag, 1975, ISBN 978-0-387-90110-7 
Guenther, Robert D., Modern Optics, John Wiley, 1990, ISBN 0-471-60538-7 
Halmos, Paul Richard, A Hilbert space problem book, Graduate Texts in Mathematics 19 2nd, Berlin, DE; New York, NY: Springer-Verlag, 1982, ISBN 978-0-387-90685-0, MR 675952 
Horn, Roger A.; Johnson, Charles R., Matrix Analysis, Cambridge University Press, 1985, ISBN 978-0-521-38632-6 
Householder, Alston S., The theory of matrices in numerical analysis, New York, NY: Dover Publications, 1975, MR 0378371 
Krzanowski, Wojtek J., Principles of multivariate analysis, Oxford Statistical Science Series 3, The Clarendon Press Oxford University Press, 1988, ISBN 978-0-19-852211-9, MR 969370 
Itõ, Kiyosi (編), Encyclopedic dictionary of mathematics. Vol. I-IV 2nd, MIT Press, 1987, ISBN 978-0-262-09026-1, MR 901762 
Ash, Robert B., A Course In Algebraic Number Theory (PDF), Dept. of Mathematics, University of Illinois 
Lang, Serge, Analysis II, Addison-Wesley, 1969 
Lang, Serge, Calculus of several variables 3rd, Berlin, DE; New York, NY: Springer-Verlag, 1987a, ISBN 978-0-387-96405-8 
Lang, Serge, Linear algebra, Berlin, DE; New York, NY: Springer-Verlag, 1987b, ISBN 978-0-387-96412-6 
Latouche, Guy; Ramaswami, Vaidyanathan, Introduction to matrix analytic methods in stochastic modeling 1st, Philadelphia, PA: Society for Industrial and Applied Mathematics, 1999, ISBN 978-0-89871-425-8 
Manning, Christopher D.; Schütze, Hinrich, Foundations of statistical natural language processing, MIT Press, 1999, ISBN 978-0-262-13360-9 
Mehata, K. M.; Srinivasan, S. K., Stochastic processes, New York, NY: McGraw–Hill, 1978, ISBN 978-0-07-096612-3 
Mirsky, Leonid, An Introduction to Linear Algebra, Courier Dover Publications, 1990, ISBN 978-0-486-66434-7 
Nocedal, Jorge; Wright, Stephen J., Numerical Optimization 2nd, Berlin, DE; New York, NY: Springer-Verlag: 449, 2006, ISBN 978-0-387-30303-1 
Bohm, Arno, Quantum Mechanics: Foundations and Applications, Springer, 2001, ISBN 0-387-95330-2 
Burgess, Cliff; Moore, Guy, The Standard Model. A Primer, Cambridge University Press, 2007, ISBN 0-521-86036-9 
Guenther, Robert D., Modern Optics, John Wiley, 1990, ISBN 0-471-60538-7 
Itzykson, Claude; Zuber, Jean-Bernard, Quantum Field Theory, McGraw–Hill, 1980, ISBN 0-07-032071-3 
Riley, Kenneth F.; Hobson, Michael P.; Bence, Stephen J., Mathematical methods for physics and engineering, Cambridge University Press, 1997, ISBN 0-521-55506-X 
Schiff, Leonard I., Quantum Mechanics 3rd, McGraw–Hill, 1968 
Weinberg, Steven, The Quantum Theory of Fields. Volume I: Foundations, Cambridge University Press, 1995, ISBN 0-521-55001-7 
Wherrett, Brian S., Group Theory for Atoms, Molecules and Solids, Prentice–Hall International, 1987, ISBN 0-13-365461-3 
Zabrodin, Anton; Brezin, Édouard; Kazakov, Vladimir; Serban, Didina; Wiegmann, Paul, Applications of Random Matrices in Physics (NATO Science Series II: Mathematics, Physics and Chemistry), Berlin, DE; New York, NY: Springer-Verlag, 2006, ISBN 978-1-4020-4530-1 
林志興; 楊忠鵬, 與給定矩陣A的可交換子環C(A)的一些探討, 莆田學院學報，2010年, 17(2), 2010 
Oualline, Steve, Practical C++ programming, O'Reilly, 2003, ISBN 978-0-596-00419-4 
Press, William H.; Flannery, Brian P.; Teukolsky, Saul A.; Vetterling, William T., LU Decomposition and Its Applications, Numerical Recipes in FORTRAN: The Art of Scientific Computing (PDF) 2nd, Cambridge University Press: 34–42, 1992 
Punnen, Abraham P.; Gutin, Gregory, The traveling salesman problem and its variations, Boston, MA: Kluwer Academic Publishers, 2002, ISBN 978-1-4020-0664-7 
Reichl, Linda E., The transition to chaos: conservative classical systems and quantum manifestations, Berlin, DE; New York, NY: Springer-Verlag, 2004, ISBN 978-0-387-98788-0 
Rowen, Louis Halle, Graduate Algebra: noncommutative view, Providence, RI: American Mathematical Society, 2008, ISBN 978-0-8218-4153-2 
Šolin, Pavel, Partial Differential Equations and the Finite Element Method, Wiley-Interscience, 2005, ISBN 978-0-471-76409-0 
Stinson, Douglas R., Cryptography, Discrete Mathematics and its Applications, Chapman & Hall/CRC, 2005, ISBN 978-1-58488-508-5 
Stoer, Josef; Bulirsch, Roland, Introduction to Numerical Analysis 3rd, Berlin, DE; New York, NY: Springer-Verlag, 2002, ISBN 978-0-387-95452-3 
Ward, J. P., Quaternions and Cayley numbers, Mathematics and its Applications 403, Dordrecht, NL: Kluwer Academic Publishers Group, 1997, ISBN 978-0-7923-4513-8, MR 1458894 
（中文）居餘馬; 林翠琴, 線性代數, 清華大學出版社, 2002, ISBN 978-7-302-06507-4 
（中文）克萊因, 莫裡斯; 著，張理京、張錦炎、江澤涵譯, 《古今數學思想》第三捲, 上海科學技術出版社, 2002, ISBN 7-5323-6172-1 
Wolfram, Stephen, The Mathematica Book 5th, Champaign, IL: Wolfram Media, 2003, ISBN 978-1-57955-022-6 
Thankappan, V. K., Quantum Mechanics 2nd, New Age International, 1993, ISBN 9788122405262 
Faliva, Mario; Zoia, Maria Grazia, Dynamic Model Analysis: Advanced Matrix Methods and Unit-Root Econometrics Representation Theorems 2nd, Berlin, DE; New York, NY: Springer-Verlag: 218, 2008, ISBN 9783540859956 
伊澤爾萊斯, 劉曉艷，劉學深譯, 微分方程數值分析基礎教程, 清華大學出版社, 2005, ISBN 9787302106524 
董可榮, 矩陣理論的歷史研究, 《山東大學》, 2007 
Bôcher, Maxime, Introduction to higher algebra, New York, NY: Dover Publications, 2004, ISBN 978-0-486-49570-5 
Cayley, Arthur, The collected mathematical papers of Arthur Cayley, I (1841–1853), Cambridge University Press: 123–126, 1889 
Dieudonné, Jean (編), Abrégé d'histoire des mathématiques 1700-1900, Paris, FR: Hermann, 1978 
Hawkins, Thomas, Cauchy and the spectral theory of matrices, Historia Mathematica, 1975, 2: 1–29, ISSN 0315-0860, MR 0469635, doi:10.1016/0315-0860(75)90032-4 
Knobloch, Eberhard, From Gauss to Weierstrass: determinant theory and its historical evaluations, The intersection of history and mathematics, Science Networks Historical Studies 15, Basel, Boston, Berlin: Birkhäuser: 51–66, 1994, MR 1308079 
Kronecker, Leopold, Hensel, Kurt, 編, Leopold Kronecker's Werke, Teubner, 1897 
Mehra, Jagdish; Rechenberg, Helmut, The Historical Development of Quantum Theory 1st, Berlin, DE; New York, NY: Springer-Verlag, 1987, ISBN 978-0-387-96284-9 
Shen, Kangshen; Crossley, John N.; Lun, Anthony Wah-Cheung, Nine Chapters of the Mathematical Art, Companion and Commentary 2nd, Oxford University Press, 1999, ISBN 978-0-19-853936-0 
Weierstrass, Karl, Collected works 3, 1915 


外部連結[編輯]


您可以在維基教科書中查找此百科條目的相關電子教程：
矩陣



百科全書


Hazewinkel, Michiel (編), Matrix, 數學百科全書, Springer, 2001, ISBN 978-1-55608-010-4 


歷史


MacTutor: Matrices and determinants
Matrices and Linear Algebra on the Earliest Uses Pages
Earliest Uses of Symbols for Matrices and Vectors


在線書籍


Kaw, Autar K., Introduction to Matrix Algebra, ISBN 978-0-615-25126-4 
The Matrix Cookbook (PDF), [2014-93-24]  請檢查|access-date=中的日期值 (幫助)
Brookes, Mike, The Matrix Reference Manual, London: Imperial College, 2005 [2008-12-10] 


線上矩陣計算器


SimplyMath (Matrix Calculator) 
Matrix Calculator (DotNumerics) 
Xiao, Gang, Matrix calculator, [2008-12-10] 
Online matrix calculator, [2008-12-10] 
Online matrix calculator (ZK framework), [2009-11-26] 
Oehlert, Gary W.; Bingham, Christopher, MacAnova, University of Minnesota, School of Statistics, [2008-12-10] , a freeware package for matrix algebra and statistics
Online matrix calculator, [2009-12-14] 
Operation with matrices in R (determinant, track, inverse, adjoint, transpose)









閱
論
編


線性代數的相關概念






重要概念



純量
向量
向量空間


線性生成空間
線性映射
投影
線性無關
線性組合


基
列空間
行空間
零空間
對偶空間
正交
特徵值
特徵向量


數量積
內積空間
點乘
轉置
格拉姆－施密特正交化
線性方程組








矩陣



矩陣
矩陣乘法
矩陣分解
子式和餘子式
矩陣的秩
克萊姆法則
逆矩陣
高斯消元法
線性變換
分塊矩陣








數值線性代數



浮點數
數值穩定性
基礎線性代數程序集
稀疏矩陣
Comparison of linear algebra libraries
Comparison of numerical analysis software













權威控制



GND: 4037968-1












 
						取自 "https://zh.wikipedia.org/w/index.php?title=矩陣&oldid=44558269"					
2 個分類：線性代數矩陣論隱藏分類：優良條目含有英語的條目引文格式1錯誤：日期包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源維基教科書 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansአማርኛالعربيةAzərbaycancaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBosanskiCatalàکوردیČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiEuskaraفارسیSuomiFrançaisGaeilge贛語Galegoעבריתहिन्दीHrvatskiMagyarՀայերենBahasa IndonesiaÍslenskaItaliano日本語ქართულიҚазақша한국어LatinaລາວLietuviųLatviešuОлык марийМакедонскиമലയാളംBahasa Melayuမြန်မာဘာသာनेपालीNederlandsNorsk nynorskNorsk bokmålਪੰਜਾਬੀPolskiPiemontèisپنجابیPortuguêsRomânăРусскийSicilianuSrpskohrvatski / српскохрватскиසිංහලSimple EnglishSlovenčinaSlovenščinaSoomaaligaShqipСрпски / srpskiSvenskaதமிழ்ไทยTürkçeУкраїнськаاردوTiếng Việt粵語 
編輯連結 





 本頁面最後修訂於2017年5月30日 (週二) 05:27。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 










線性代數的第一堂課──矩陣乘法的定義 | 線代啟示錄

































































線代啟示錄








Skip to content

主頁閱讀導引

線性代數的核心問題
線性代數的核心課綱
強打推薦文章
線性代數教學光碟延伸閱讀
矩陣理論學習導引


學習資源

試題
作業
每週問題集
研究所入學考題與解答
數據充分性問題


專題探究

矩陣的特徵值與特徵向量
矩陣分解
特殊矩陣
Hermitian/實對稱矩陣專題
奇異值分解專題
Jordan 典型形式專題
傅立葉分析專題
圖論專題
馬可夫鏈專題
機器學習/機率統計專題
線性規劃專題
微分方程/差分方程專題
組合數學專題


急救查詢

線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵值與特徵向量
二次型與典型形式


常見問題
周老師時間
教學光碟
留言板
關於








← 基底與維數常見問答集
討論區如何張貼數學式(圖解版) →


線性代數的第一堂課──矩陣乘法的定義

Posted on 06/18/2010 by ccjou  

本文的閱讀等級：初級
美國數學教授克萊恩 (Morris Kline) 說[1]：「矩陣理論在被創造前就已發展完善。」這句話讓人一頭霧水，要釐清話中的涵意必須從矩陣的發展歷史說起。十七至十九世紀中葉，數學活動在歐洲以飛快的速度朝著各個領域發展，此時關於「陣列」(array) 運算的研究全部集中於行列式理論，矩陣理論並未隨著行列式同步發展。事實上，矩陣理論足足落後行列式兩百年之久。1850年，英國數學家西爾維斯特 (James Joseph Sylvester) 將矩形陣列命名為矩陣 (matrix)，但他並未定義矩陣乘法。1857年，英國數學家凱萊 (Arthur Cayley) 發表一篇被後世公認為近代矩陣理論和線性代數基石的論文〈矩陣理論備忘錄〉(A Memoir on the Theory of Matrices)，他將矩陣從行列式抽離出來，視之為另一個數學物件，並且定義完備的矩陣代數運算。這段歷史顯示矩陣乘法──矩陣理論中最重要的一個代數運算──絕對不是如數學課本所述那般理所當然，矩陣乘法定義隱含深層的意義，否則為何眾多優秀的數學家竟然看不出矩陣理當如此相乘。今天我們事後諸葛，已然明瞭矩陣代數之所以遲至十九世紀中葉才誕生的最主要原因在於人們一直無法確定矩陣的本質與功用究竟為何。

Arthur Cayley (1821-1895) From http://www-history.mcs.st-and.ac.uk/BigPictures/Cayley_5.jpeg
 
據我所知，不少高中學生曾經發明各式各樣的創意矩陣乘法，例如，有人以下列方式計算兩個同階方陣的乘積：
。
無疑地，這個矩陣乘法被視為數學上的無知，認真負責的老師立刻將它更正為
。
上面這個被老師糾正的創意發明稱為 Hadamard 乘積。對於相同尺寸的矩陣 (同為  階矩陣)  和 ，Hadamard 乘積定義為 ，因此也稱作「分元」(entrywise) 乘積。老師和課本指定的矩陣乘法稱為一般矩陣乘積，也就是目前線性代數採用的「正確」運算方式。請讀者仔細想想：除非你預先設定矩陣乘積的意義及其用途，否則何從判斷這兩種乘法的對錯？多數學生想不出更好的辯駁理由，最後只能默默地接受這個看似無釐頭的定義，並且相信老師的善意忠告：「大學線性代數會給大家一個清楚的交代。」
 
大學線性代數果真就說清楚講明白了嗎？恐怕未必。與其照本宣科重述一次高中數學課本給出的矩陣乘積定義，我們不妨尋思凱萊是根據什麼理念設計出矩陣乘法規則。1894年，凱萊對蘇格蘭數學物理學家泰特 (Peter Tait) 道出引領他至矩陣記號的動機並非四元數 (quaternion，見“四元數”)，而是源於行列式或為了方便表達線性方程[2]：
我並不是從四元數得到矩陣的概念，它直接源自於行列式，或為了方便表示方程組


 
1855年，凱萊正著手線性複合 (composition) 映射的研究。線性映射 (linear mapping) 涵蓋許多數學主題，這需要作一番說明。設定義域 (domain)  與值域 (range)  為具有加法和純量乘法的集合，我們稱  為線性映射，如果任意  滿足這兩個條件：

其中  為純量。舉一些常見的例子，譬如， 的圖形表現為平面上一條穿越原點的直線，它符合線性映射的要求。但  () 不是線性映射，它是線性映射再加上平移量 ，圖形表現為一條未穿越原點的直線。又如  代表三維空間中穿越原點的一個平面，很容易驗證  滿足上述線性映射定義。微分與積分運算都是線性映射，因為下列微分與積分法則成立：

而且

矩陣的轉置 (transpose) 運算也是線性映射 (見“轉置與共軛轉置”)。考慮 ， 滿足

 
凱萊與泰特的談話提供了重建矩陣乘法發明過程的一些線索。1855年的某一天，凱萊望著案前的筆記沉思良久，筆記本上寫著[3]：


凱萊從小就著迷於解決複雜的數學難題，眼前這兩個線性映射困擾他很長的一段時間。經過幾番考慮之後，他動筆計算  與  的複合，整理得到一個新的線性映射：

凱萊默想著這個方程式，或許是從行列式得來的靈感，他突然想到為何不用陣列來表示線性映射的係數呢？於是他將線性映射 ， 和  分別表示為
。
像多數的數學家一樣，凱萊深信數學的基本形式總是存在的，觀察這三個線性映射的陣列表達讓他更加堅定信念。才氣洋溢的凱萊大膽構思  即為  和  的複合 (或乘積)，他要做的是「乘開」矩陣  和 ，然後令矩陣乘積  等於 ，於是他興奮地寫下
。
頓時矩陣乘法的運算規則誕生了。也許凱萊特別幸運，也或許是他的數學直覺格外敏銳，但不論如何，他給出了一個自然而且有用的矩陣乘法定義 (矩陣乘法的規則與限制見[4])。
 
凱萊的基本思想是用矩陣乘積來表示線性複合映射，但他並不是第一個考慮線性複合映射問題的數學家。早在1801年，高斯 (Carl Friedrich Gauss) 就已經使用這種複合計算，但高斯並沒有以陣列形式記錄係數。對許多數學家來說，矩陣乘法談不上精巧的發明，凱萊將線性複合映射與矩陣乘積聯繫在一起的作為顯得無足輕重，因為他既未解出困難的問題，也沒有證明偉大的定理。然而，矩陣以及乘法運算的發明顯示良好設計符號的重要性，同時也點出部分數學家不願意承認的一個事實：外表看似平凡無奇的表述符號可能是具有廣泛應用的重要理論的萌芽條件之一。最後歷史證明凱萊異於常人的洞察力為矩陣理論與線性代數的發展開啟了一扇大門。
 
註解
[1] Morris Kline, Mathematical Thought from Ancient to Modern Times, 1972. 原文：“One could say that the subject of matrices was well developed before it was created.”
[2] Eric T. Bell, The Development of Mathematics, 1945. 原文：“I certainly did not get the notation of a matrix in any way through quaternions; it was either directly from that of a determinant; or as a convenient way of expression of the equations

[3] Carl D. Meyer, Matrix Analysis and Applied Linear Algebra, 2000, pp 93.
[4] 設想凱萊考慮這兩個線性變換


線性變換  與  的複合如下：

對應線性變換 ， 與  的矩陣表達分別為
。
矩陣乘法給出 ，即
。
這個例子說明兩件事：(1) 惟當  的行數等於  的列數時 (此例為 )， 與  方可相乘；(2) 即便  可乘， 與  的涵義並不相同，因此矩陣乘法不滿足交換律。
相關閱讀：

基本矩陣運算的定義
矩陣乘法的現代觀點
答季同學──關於矩陣乘法的運算方式

 

廣告




 


分享此文：電子郵件列印FacebookTwitterGoogle請按讚：喜歡 載入中... 

												本篇發表於 線性方程, 線性代數專欄 並標籤為 矩陣乘法。將永久鏈結加入書籤。											


← 基底與維數常見問答集
討論區如何張貼數學式(圖解版) →


15 Responses to 線性代數的第一堂課──矩陣乘法的定義




 Watt Lin 說道： 

				06/18/2010 at 8:20 下午 
這篇文章，我覺得很重要，幫助學生知其然也知其所以然。
假如當年唸高中的時候，能夠看到這篇文章，頭腦會很清晰，甚至可以說全身舒暢。
我這樣講，並不誇張，學生們的學習，有時像一隻牛，被繩子牽著走，老師指導怎麼計算，就依樣畫葫蘆地計算，考試便可拿到分數。
如果想要瞭解定義的來源，有可能會「浪費」時間去讀「不重要」的文章，然後考試成績不理想。
我認為，把來龍去脈弄清楚，是很重要的，要知道自己在計算什麼，而不只是為了考試拿高分。
希望大俠繼續寫這類文章，謝謝！


回應 





 ccjou 說道： 

				06/19/2010 at 2:31 下午 
知識一旦變成考試問題就會走樣，在東方社會尤其如此。
亞裡斯多德堅持只有當我們明瞭事物的原因才能算是獲得此事物的知識。根據他的四因說，矩陣可以這麼解釋：
質料因 what is it made of? 矩陣是數字陣列造出來的。
形式因 what is it? 矩陣既是向量空間物件也是線性變換表示。
有效因 by waht is it made? 這包含矩陣理論和線性代數。
最終因 for what end is it made? Cayley 提出矩陣乘法只是為了方便表示線性複合函數，他的矩陣理論完全是純數學，不以應用為目的。1925年，矩陣理論首次應用於量子力學，真正廣泛應用要等到1950年之後。


回應 





 suehang 說道： 

				06/16/2015 at 10:19 下午 
愚以為Cayley的提法是最符合學生思維認知習慣的提法.


回應 







 lisp21 說道： 

				08/03/2010 at 3:33 下午 
我覺得矩陣加法亦有說明之必要，矩陣加法的定義也並不是顯然的。
矩陣本身就是映射的representation.Cayley這個定義太妙了。
數學上的大的發現和思想並不一定有多困難，比方Descrate的解析幾何，其思想何其簡單，但其後續則如大江大河，洶涌澎湃。


回應 





 suehang 說道： 

				06/16/2015 at 10:23 下午 
我也是這樣認為的,尤其是這樣看能夠解釋矩陣乘法,它無外乎就是複合線性變換,也就能夠解釋矩陣乘法沒有交換律的原因了(複合函數內外層是不可交換的),,同時,我也不能忘記第一次突兀地接觸矩陣乘法規則這個怪物時的巨大噁心感!


回應 







 ccjou 說道： 

				08/03/2010 at 8:21 下午 
矩陣加法的定義也並不是顯然的？
如果上課時有學生如此提問，那麼全班同學一定轉過身盯著他(她)瞧？心想：這傢夥是不是來搗亂的？
矩陣加法的定義可能還是得從“矩陣代表何物”解釋。


回應 





 ariestiger 說道： 

				08/07/2013 at 11:13 下午 
有一點小錯，線性函數的微分也是線性函數時， 式子中最後應該是d g/ dx
即：d(f + g)/dx = d f/dx + d g/dx
這個能輸入數學公式嗎？看樣子不能啊，你能看懂就好。


回應 





 ccjou 說道： 

				08/08/2013 at 9:33 上午 
謝謝指正，已修訂。廻響可輸入LaTeX公式，方法是在LaTeX指令前加入$latex，空格，之後再鍵入$。


回應 





 suehang 說道： 

				06/16/2015 at 10:26 下午 
您沒有輸入錯呀!


回應 





 ccjou 說道： 

				06/16/2015 at 10:35 下午 
本來的確是我打錯公式了，你現在看到的是改正後的版本。


回應 











 joge 說道： 

				04/23/2014 at 8:47 下午 
Cayley關於線性函數的表示已經隱含了矩陣和向量乘法的定義


回應 





 嗚呼呼 說道： 

				06/20/2014 at 1:05 下午 
謝謝你的這篇文章：）


回應 





 Yu-Min Lai 說道： 

				04/27/2015 at 6:10 下午 
漂亮的文章，讓我愛不釋手。


回應 





 suehang 說道： 

				06/16/2015 at 10:18 下午 
要讓學生停止"發明"各種矩陣乘法,愚以為惟一的方法只能是從根源上革新線性代數的教法,先用具體例子講清楚線性空間,進而講清楚線性變換,再結合複合映射的概念,和線性變換的矩陣表示來說清矩陣乘法,您的觀點我無比贊同,說實話,我是受大陸線性代數教法受害極深的人,我是到了研究生階段才知道線代的巨大價值和威力,您的文章能這樣講矩陣乘法,是你學生的幸運呀!


回應 





 ccjou 說道： 

				06/16/2015 at 10:41 下午 
引述：您的文章能這樣講矩陣乘法,是你學生的幸運呀!
慚愧，其實我上課也不提這段歷史。礙於時間有限，通常我講完高斯消元法後，便偷偷引進矩陣乘法運算使與基本列運算(初等行變換)有一致性。至今尚沒有學生舉牌抗議。


回應 






發表迴響 取消回覆 



在此輸入你的回應…




在下方填入你的資料或按右方圖示以社群網站登入：





























 
 


電子郵件 (必) （電子郵件地址不會被公開）



名稱 (必)



個人網站














 您的留言將使用 WordPress.com 帳號。 ( 登出 / 變更 )












 您的留言將使用 Twitter 帳號。 ( 登出 / 變更 )












 您的留言將使用 Facebook 帳號。 ( 登出 / 變更 )












 您的留言將使用 Google+ 帳號。 ( 登出 / 變更 )




取消
連結到 %s




 透過電子郵件通知我後續回應。 有新文章時用Email通知我
 



 







搜尋(繁體中文或英文)

搜尋：



訊息看板行與列──中國大陸讀者必看
迴響區張貼 LaTeX 數學式的懶人輸入法
高中生請由此進
舊版討論區文章
舊網站連結編號與文章標題之對應關係
  近期文章 

每週問題 June 26, 2017


每週問題 June 19, 2017


每週問題 June 12, 2017


每週問題 June 5, 2017


每週問題 May 29, 2017


 線性代數專欄線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵分析
二次型
典型形式
特殊矩陣
仿射幾何
數值線性代數
應用之道
證明細解
其他主題專欄機率統計
希爾伯特空間
機器學習
圖論
特別主題
每週問題線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵分析
二次型
典型形式
數據充分性問題向量空間
特徵分析
其他分類答讀者問
網友分享
隨筆雜談
無關線代
試閱
佈告欄
問題回報
近期迴響 
「Joan」對「條件機率與貝氏定理」留言「ccjou」對「線性映射與座標變換」留言「許文信」對「線性映射與座標變換」留言「ccjou」對「費雪的判別分析與線性判別分析」留言「ccjou」對「極小範數解」留言「ccjou」對「答Avis──關於行秩等於列秩的幾何背景」留言 
近期最多人點閱 

						三階逆矩陣公式					



						奇異值分解 (SVD)					



						行列式的運算公式與性質					



						特殊矩陣 (2)：正規矩陣					



						Gram-Schmidt 正交化與 QR 分解					



						線性代數基本定理 (一)					



						線性代數的核心問題					



						教學光碟					



						三維空間的旋轉矩陣					



						Jacobian 矩陣與行列式					

月曆
六月 2010


日
一
二
三
四
五
六




« 五月
 
七月 »




 12345


6789101112


13141516171819


20212223242526


27282930
 


分類分類
選擇分類
無關線代  (23)
特別主題  (20)
答讀者問  (49)
網友分享  (2)
線性代數專欄  (426)
   特徵分析  (76)
   特殊矩陣  (23)
   線性變換  (33)
   線性方程  (30)
   行列式  (32)
   證明細解  (4)
   內積空間  (28)
   典型形式  (27)
   向量空間  (47)
   應用之道  (42)
   數值線性代數  (29)
   二次型  (42)
   仿射幾何  (11)
隨筆雜談  (18)
試閱  (2)
周老師時間  (16)
問題回報  (24)
圖論  (12)
佈告欄  (22)
希爾伯特空間  (4)
數據充分性問題  (3)
   DSQ 特徵分析  (1)
   DSQ 向量空間  (2)
機率統計  (21)
機器學習  (8)
每週問題  (435)
   pow 特徵分析  (87)
   pow 線性變換  (23)
   pow 線性方程與矩陣代數  (56)
   pow 行列式  (55)
   pow 內積空間  (57)
   pow 典型形式  (9)
   pow 向量空間  (75)
   pow 二次型  (73)


文章存檔 文章存檔

選擇月份
 2017 年 六月  (4)
 2017 年 五月  (5)
 2017 年 四月  (4)
 2017 年 三月  (4)
 2017 年 二月  (6)
 2017 年 一月  (11)
 2016 年 十二月  (5)
 2016 年 十一月  (5)
 2016 年 十月  (5)
 2016 年 九月  (4)
 2016 年 八月  (5)
 2016 年 七月  (4)
 2016 年 六月  (4)
 2016 年 五月  (10)
 2016 年 四月  (6)
 2016 年 三月  (10)
 2016 年 二月  (11)
 2016 年 一月  (7)
 2015 年 十二月  (11)
 2015 年 十一月  (9)
 2015 年 十月  (8)
 2015 年 九月  (11)
 2015 年 八月  (14)
 2015 年 七月  (8)
 2015 年 六月  (11)
 2015 年 五月  (5)
 2015 年 四月  (5)
 2015 年 三月  (6)
 2015 年 二月  (4)
 2015 年 一月  (7)
 2014 年 十二月  (9)
 2014 年 十一月  (5)
 2014 年 十月  (4)
 2014 年 九月  (5)
 2014 年 八月  (5)
 2014 年 七月  (5)
 2014 年 六月  (11)
 2014 年 五月  (10)
 2014 年 四月  (12)
 2014 年 三月  (14)
 2014 年 二月  (15)
 2014 年 一月  (10)
 2013 年 十二月  (16)
 2013 年 十一月  (14)
 2013 年 十月  (19)
 2013 年 九月  (15)
 2013 年 八月  (13)
 2013 年 七月  (13)
 2013 年 六月  (18)
 2013 年 五月  (16)
 2013 年 四月  (14)
 2013 年 三月  (6)
 2013 年 二月  (8)
 2013 年 一月  (13)
 2012 年 十二月  (16)
 2012 年 十一月  (18)
 2012 年 十月  (17)
 2012 年 九月  (10)
 2012 年 八月  (8)
 2012 年 七月  (10)
 2012 年 六月  (15)
 2012 年 五月  (12)
 2012 年 四月  (12)
 2012 年 三月  (11)
 2012 年 二月  (10)
 2012 年 一月  (7)
 2011 年 十二月  (5)
 2011 年 十一月  (4)
 2011 年 十月  (6)
 2011 年 九月  (5)
 2011 年 八月  (5)
 2011 年 七月  (8)
 2011 年 六月  (13)
 2011 年 五月  (14)
 2011 年 四月  (11)
 2011 年 三月  (11)
 2011 年 二月  (10)
 2011 年 一月  (12)
 2010 年 十二月  (12)
 2010 年 十一月  (13)
 2010 年 十月  (8)
 2010 年 九月  (11)
 2010 年 八月  (15)
 2010 年 七月  (7)
 2010 年 六月  (13)
 2010 年 五月  (12)
 2010 年 四月  (12)
 2010 年 三月  (14)
 2010 年 二月  (14)
 2010 年 一月  (12)
 2009 年 十二月  (12)
 2009 年 十一月  (14)
 2009 年 十月  (10)
 2009 年 九月  (13)
 2009 年 八月  (14)
 2009 年 七月  (12)
 2009 年 六月  (12)
 2009 年 五月  (12)
 2009 年 四月  (15)
 2009 年 三月  (39)

標籤雲Cayley-Hamilton 定理
Frobenius 範數
Gram-Schmidt 正交化
Gramian 矩陣
Hermitian 矩陣
Householder 矩陣
Jordan 典型形式
LU 分解
QR 分解
Schur 定理
SVD
Vandermonde 矩陣
三角不等式
不變子空間
麽正矩陣
二次型
代數重數
伴隨矩陣
內積
冪矩陣
冪等矩陣
冪零矩陣
分塊矩陣
列空間
半正定矩陣
反對稱矩陣
可交換矩陣
可逆矩陣
向量空間
圖論
基底
基本列運算
奇異值
奇異值分解
實對稱矩陣
對角化
座標變換
微分方程
投影矩陣
排列矩陣
旋轉矩陣
最小多項式
最小平方法
正交性
正交投影
正交矩陣
正交補餘
正定矩陣
正規矩陣
特徵值
特徵向量
特徵多項式
特殊矩陣
相伴矩陣
相似
矩陣乘法
矩陣多項式
矩陣指數
矩陣範數
矩陣譜
秩
秩─零度定理
簡約列梯形式
組合數學
線性獨立
線性變換
線性變換表示矩陣
行列式
行空間
譜分解
跡數
逆矩陣
通解
零空間
高斯消去法線代線上影音課程

Essence of linear algebra (3Blue1Brown)
Khan Academy (Salman Khan)
MIT OCW (Gilbert Strang)
國立台灣大學OCW (蘇柏青)
國立清華大學OCW (趙啟超)
國立交通大學OCW (莊重)
國立交通大學OCW (巫木誠)


線代學習網站

用maxima學數值分析─特徵值和特徵向量
Free Online Books
Math Insight
MIT OCW
Wikibooks: Linear Algebra
Wolfram Demonstration Project


線代電子書

A First Course in Linear Algebra (Robert A. Beezer)
Fundamentals of Linear Algebra (James B. Carrell)
Linear Algebra (Jim Hefferon)
Linear Algebra Done Wrong (Sergei Treil)
Linear Algebra Problems (Jerry L. Kazdan)
Linear Algebra via Exterior Products (Sergei Winitzki)
Linear Algebra, Theory and Applications (Kenneth Kuttler)
Matrix Analysis and Applied Linear Algebra (Carl D. Meyer)
Notes on Linear Algebra (Peter J. Cameron)


矩陣計算器

Jordan Form Calculator
Matrix Calculator
Online Matrix Calculator


LaTeX

Online LaTeX Equation Editor
Wikibooks: LaTeX


Blogroll

陰暗的小角落
Mark Chang's Blog
尼斯的靈魂
微積分福音


訂閱

請輸入您的email，當有新文章發表時，您將會收到通知。訂閱之後您隨時可以取消訂閱。
加入其他 324 位關註者







 


 







閱讀導引線性代數的核心問題
線性代數的核心課綱
強打推薦文章
線性代數教學光碟延伸閱讀
矩陣理論學習導引
學習資源 試題
作業
每週問題集
研究所入學考題與解答
數據充分性問題
 



專題探究矩陣的特徵值與特徵向量
矩陣分解
特殊矩陣
Hermitian/實對稱矩陣專題
奇異值分解專題
Jordan 典型形式專題
傅立葉分析專題
圖論專題
馬可夫鏈專題
機器學習/機率統計專題
線性規劃專題
微分方程/差分方程專題
組合數學專題
 



急救查詢線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵值與特徵向量
二次型與典型形式
其他分頁常見問題
周老師時間
教學光碟
留言板
關於
 



Meta 
註冊 登入
文章 RSS 訂閱
迴響 RSS 訂閱
WordPress.com 
網路狀態

Automattic Status
WordPress Forums


Blog Stats 
2,859,246 hits

 Copyright © 2009-2017 ccjou
All rights reserved
歡迎轉載，但須列明來源。

 




					線代啟示錄				


在WordPress.com寫網誌.






































張貼到



取消







 





傳送到電子郵件地址

你的姓名

你的Email






取消

				文章沒有送出-請確認你的Email位置			

				Email確認失敗,請稍後再試.			

				抱歉，你的網誌無法透過電子郵件分享			











 
 
%d 位部落客按了讚：












































































































































課程大綱










矩陣理論與計算MATRIX THEORY AND COMPUTATION






開課系所 Department/Institute:  電通所          Computer and Communication Engineering
開課教師 Instructor:   陳進興 Chen, Chin-Hsing              
開課學年 Academic Year:   0102
開課學期 Semester:    2
開課序號 Serial Number:   043

課程屬性碼 Attribute Code:   CCE 7415 
課程碼 Course Number:   Q350900 
分班碼 Class Code: 
學分數 No. of Credits:           3
課程語言 Medium of Instruction:   中文


課程網址 Course Website: 

先修課程或先備能力 Prerequisite Course(s):   ~      

教師聯絡資訊 Contact with Teacher
  	    ~陳進興教授      

助教資訊 Contact with Tutor
       ~      

學習規範 Course Policy


評量方式 Grading


方法百分比%

期中考 Midterm Exam
50期末考 Term exam
50




教學方法 Teaching Strategies
      ~    

		※請遵守智慧財產權觀念  不得不法影印
		 Please follow the Intellectual Property instruction and No illegal copy
	

課程教材 Course Material
	    ~    

參考書目 References


備註 Remarks





基本素養 Basic Literacy
        無    

核心能力 Competence
■ 具電腦與通信工程相關領域之專業知識。
 To possess professional knowledge in the field of computer and communication engineering.
□ 策劃及執行專題研究之能力。
 The ability to plan and carry out a research project.
■ 撰寫專業論文之能力。
 To write a professional-quality dissertation.
□ 創新思考及獨立解決問題之能力。
 Innovative thinking and the ability to solve problems independently.
□ 跨領域人員協調整合之能力。
 Multidisciplinary coordination and integration capabilities.
□ 良好的國際觀以及實踐專業倫理與理解社會責任之能力。
 A solid international outlook and the ability to understand professional ethics and social responsibility.
□ 領導、管理及規劃之能力。
 Leadership, management and planning abilities.
□ 終身自我學習成長之能力。
 The ability to learn and develop throughout life.
 

課程概述 Course Description
       1 

課程學習目標 Course Objectives    
	    ~    

課程進度 Course Outline


週次 Week進度說明 Progress Description
11. 有限維向量空間22. 線性轉換與矩陣32. 線性轉換與矩陣43. 內積空間54. 希伯特(Hilbert)空間65. Self-Adjoint矩陣、半正定矩陣、正定矩陣與等距矩陣75. Self-Adjoint矩陣、半正定矩陣、正定矩陣與等距矩陣86. 對角矩陣、三角矩陣與Jordan Canonical Form96. 對角矩陣、三角矩陣與Jordan Canonical Form107. Schur分解與計算118. LDU分解與計算129. Cholesky分解與計算139. Cholesky分解與計算1410. QR分解與計算1510. QR分解與計算1611. 極值分解與計算1711. 極值分解與計算18 12. 應用
 

　以上每週進度教師可依上課情況做適度調整。The schedule may be subject to change.


課程學習融入下列議題或具有下列內涵的程度 Immersing the Following Issues or Contents
議題或內容 Issues or Contents關聯性 Correlation觀光旅遊產業 Tourism
無相關 No correlation綠色能源產業 Green Energy Industry
無相關 No correlation文創產業 Cultural and creative Industry
無相關 No correlation環境保護 Environmental Protection
無相關 No correlation人權教育 Human Rights Education
無相關 No correlation服務學習 Service Learning
無相關 No correlation性別平等 Gender Equity
無相關 No correlation法治教育 Law-Related Education
無相關 No correlation工作實務取向 Pragmatic Orientation
無相關 No correlation生命教育 Life Education
無相關 No correlation智慧財產權 Intellectual Property
無相關 No correlation環境安全 Environmental Safety
無相關 No correlation健康醫療照護產業 Health,Medical Treatment, Nursing Industry
無相關 No correlation精緻農業產業 Advanced Agriculture
無相關 No correlation生物科技產業 Biotechnology Industry
無相關 No correlation學術研究取向 Academic Orientation
無相關 No correlation 

有關課程其他調查 Other Surveys of Courses
                   1.本課程是否規劃業界教師參與教學或演講?   否            
Is there any industry specialist invited in this course? How many times? No
			
           2.本課程是否規劃內含校外實習 (並非參訪)?   否		   
Is there any in (out of) school practicum involved in this course? How many hours?  No








基本矩陣運算的定義 | 線代啟示錄
































































線代啟示錄








Skip to content

主頁閱讀導引

線性代數的核心問題
線性代數的核心課綱
強打推薦文章
線性代數教學光碟延伸閱讀
矩陣理論學習導引


學習資源

試題
作業
每週問題集
研究所入學考題與解答
數據充分性問題


專題探究

矩陣的特徵值與特徵向量
矩陣分解
特殊矩陣
Hermitian/實對稱矩陣專題
奇異值分解專題
Jordan 典型形式專題
傅立葉分析專題
圖論專題
馬可夫鏈專題
機器學習/機率統計專題
線性規劃專題
微分方程/差分方程專題
組合數學專題


急救查詢

線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵值與特徵向量
二次型與典型形式


常見問題
周老師時間
教學光碟
留言板
關於








← 每週問題 July 27, 2015
每週問題 August 3, 2015 →


基本矩陣運算的定義

Posted on 07/28/2015 by ccjou  

本文的閱讀等級：初級
德國數學家希爾伯特 (David Hilbert) 說[1]：「一個數學理論不被認為是完整的，直到你可以說得很清楚──你能解釋給第一個在街上相遇的人聽。」長久以來，這個問題一直困擾著許多線性代數初學者：基本矩陣運算，包括矩陣加法、純量乘法以及矩陣乘法，是如何被定義出來的？基本矩陣運算的數學原因既不是商業機密亦非神祕主義，矩陣與其基本運算源自於線性代數的核心運轉機制──線性變換 (linear transformation) 或稱線性映射 (linear mapping)。定義於有限維向量空間 (vector space)，譬如，實座標向量空間 ，複座標向量空間 ，的線性變換可以用矩陣表示；矩陣加法、純量乘法與矩陣乘法分別對應線性變換的加法、純量乘法以及複合 (composition)。換句話說，線性變換涉及的所有計算工作都可以透過矩陣運算實現。有別於一般基礎線性代數教科書直接給出計算公式，本文從線性變換觀點定義基本矩陣運算，並利用此定義證明相關的運算法則。

 
我們用  (稱為體或域，field) 代表實數系  或複數系  (見“線性代數裡的代數結構”)。假設  為一個從座標向量空間  映至  的函數。在線性代數，我們習慣稱函數  為一個變換或映射，它是一個數學機器，圖示如下：

其中  是輸入向量，對應的輸出向量  稱為  經變換  得到的像 (image)。對於  與純量 ，若  滿足

則稱  是線性變換。第一式稱為可加性，第二式稱為均勻性，這兩個條件式可以合併成
，
其中 。直白地說，向量加法與純量乘法可在線性變換的輸入端執行 (等號左邊)，也可在輸出端執行 (等號右邊)，兩者有相同的結果。例如， 與  是線性變換，但  與  不是線性變換。
 
矩陣向量乘法
線性變換  究竟是如何運作的？回答這個問題須引進一些新概念。平面上的一個點  可用座標表示，，或寫成行 (column) 向量形式：
，
上面定義了  和 ，合稱為  的標準基底 (basis，或稱基)。同樣地，向量空間  的標準基底為 ，其中單位向量  的第  元是 ，其餘元是 。任一向量  可表示成  的線性組合
。
將上式代入 ，使用線性變換的兩個性質，可得

如果我們知道 ，便可按係數  合成 ，這是線性變換的一個重要特性。根據這個思想，令標準基底向量  的像為
。
給定輸入向量 ， 的線性組合表達式如下：
。
線性變換  的作為完全由  決定，於是我們有了這個想法：將行向量  合併成  階矩陣
，
稱為線性變換  的標準矩陣，我們以  表示  的  元。上面的論述並未定義「矩陣」，我們定義的是「線性變換參考標準基底的表示矩陣」。在許多理論與應用場合，矩陣自有其存在的原因，譬如，一張圖片包含的像素或一頁試算表儲存的資料皆構成矩陣。在線性代數中，矩陣一般用來表示線性變換 (參考某個基底)。
 
對於 ，我們定義矩陣  與向量  之積  為  的行向量  的線性組合，並以  的元  當作組合係數：
。
我們如此定義矩陣向量乘法的用意是為了讓算式  成立。請註意， 的行向量數必須與  的維數 (即 ) 相等方可定義 。如果  使得每一  都有 ，則  的標準矩陣為零矩陣 。明顯地，，零矩陣與任何向量相乘得到零向量。給定線性變換  與 ，若每一  使得 ，則  與  有相同的標準矩陣，也就是說 。換個講法，對於每一 ，如果  階矩陣  與  滿足 ，則 。稍後我們將利用這個性質證明一些矩陣運算法則。若  且純量 ，請你自行驗證矩陣向量乘法滿足線性變換的可加性與均勻性：

 
繼續討論前，先看一個例子。考慮線性變換 ，如下：
。
算出 ，，故  的標準矩陣為
。
另外，你也可以直接將  改寫成線性組合從而得到矩陣向量乘法表達式，
。
給定 ，以矩陣向量乘法計算 ，可得
。
 
矩陣加法
矩陣加法僅定義於相同大小的矩陣。考慮  階矩陣  和 ，分別代表從  映射至  的線性變換  與 。我們定義  與  之和，，若每一  皆使 ，即 。欲求出 ，將 ，，代入 ，可得
。
比較等號兩邊， 的元為
。
 
考慮矩陣  與  的和，顯然 ，而且  是唯一一個滿足  的  矩陣。對於任一矩陣 ，令矩陣  使得 ，則有 ，且  是唯一一個滿足  的  矩陣。假設  為相同大小矩陣，向量加法滿足交換律與結合律， 且 。因此，矩陣加法也滿足交換律與結合律：


 
純量乘法
對於線性變換  的  階標準矩陣  與純量 ，我們定義  與  之積，，若每一  皆使 ，即 。欲求出 ，將 ，，代入 ，可得
，
故  的元為
。
 
對於任一矩陣 ，。對於 ，純量乘法滿足結合律 。設  為相同大小矩陣，向量加法與純量乘法滿足分配律， 且 。因此，矩陣的分配律也成立：


 
矩陣乘法
考慮兩個線性變換  和 ，將它們串接在一起，圖示如下：

其中 ，，。我們以  代表  和  的複合線性變換，即 ，圖示為

令  階矩陣  為線性變換  的標準矩陣且  階矩陣  為線性變換  的標準矩陣。複合線性變換  可用矩陣向量乘法運算實現，。明顯地，複合線性變換  的標準矩陣由  和  決定。我們定義  與  之積，，若每一  皆使 ，即 。因此，複合線性變換  的標準矩陣即為 。矩陣乘法的定義表明左右順序的重要性，我們先算出  的像 ，接著求得  通過  的像 。因為這個緣故，即便當 ， 不總是等於 ，即矩陣乘法不具有交換律。
 
下麵推導  的計算公式。令  的行向量為 。根據矩陣向量乘法定義，
。
使用可加性與均勻性，

令上式等於 ，因為  是任一向量，故得
，
此即以「行」為運算單元的矩陣乘法 (見“矩陣乘法的現代觀點”)。註意， 的第  行，，是  的行向量  的線性組合，係數為  的元 。因此，矩陣乘法  僅定義於  的行向量數等於  的列向量數 (即  的維數 )。使用上面  的計算公式可推得以「元」為運算單元的矩陣乘法公式：

其中  表示向量  的第  元。
 
矩陣乘法具備結合律與加法分配律：


，。



利用矩陣加法與乘法定義很容易證明這些等式。下麵展示等式1與3的證明[2]：


因為  是任一向量，即證明所求。
 
最後討論矩陣乘法的一個簡單應用：在二維平面上，求出順時針旋轉 ，再放大X座標  倍的幾何變換矩陣。第一個方法寫出線性變換的標準矩陣： 是旋轉矩陣， 是放大矩陣 (見“幾何變換矩陣的設計”)。自然地，我們會以「元」為運算單元的矩陣乘法公式  計算複合變換矩陣
。
第二個方法採用本文所述的矩陣乘法定義：對於任一 ，。求出標準基底向量  和  的像，合併即得所求的變換矩陣： 旋轉  的像是 ，放大X座標  倍，可得 ； 旋轉  的像是 ，放大X座標  倍，可得 。因此，變換矩陣為 。第一個方法是靜態的，兩個幾何變換矩陣擺在那裡靜止不動，算出它們的積便得到複合變換矩陣；第二個方法是動態的，雖然我們沒有明示的變換矩陣，但幾乎可以「看見」兩個標準基底向量的幾何變換過程，它們的像組成了複合變換矩陣。究竟那一個方法比較適合解釋給第一個在街上相遇的人聽？這是一個值得考慮的問題。
 
註解
[1] 英譯文是 “A mathematical theory is not to be considered complete until you have made it so clear that you can explain it to the first man whom you meet on the street.”
[2] 如果採用以「元」為運算單元的矩陣乘法公式，



相關閱讀：


線性代數的第一堂課──矩陣乘法的定義


 

廣告




 


分享此文：電子郵件列印FacebookTwitterGoogle請按讚：喜歡 載入中... 

												本篇發表於 線性變換, 線性代數專欄 並標籤為 矩陣乘法, 矩陣代數, 線性變換。將永久鏈結加入書籤。											


← 每週問題 July 27, 2015
每週問題 August 3, 2015 →



發表迴響 取消回覆 



在此輸入你的回應…




在下方填入你的資料或按右方圖示以社群網站登入：





























 
 


電子郵件 (必) （電子郵件地址不會被公開）



名稱 (必)



個人網站














 您的留言將使用 WordPress.com 帳號。 ( 登出 / 變更 )












 您的留言將使用 Twitter 帳號。 ( 登出 / 變更 )












 您的留言將使用 Facebook 帳號。 ( 登出 / 變更 )












 您的留言將使用 Google+ 帳號。 ( 登出 / 變更 )




取消
連結到 %s




 透過電子郵件通知我後續回應。 有新文章時用Email通知我
 



 







搜尋(繁體中文或英文)

搜尋：



訊息看板行與列──中國大陸讀者必看
迴響區張貼 LaTeX 數學式的懶人輸入法
高中生請由此進
舊版討論區文章
舊網站連結編號與文章標題之對應關係
  近期文章 

每週問題 June 26, 2017


每週問題 June 19, 2017


每週問題 June 12, 2017


每週問題 June 5, 2017


每週問題 May 29, 2017


 線性代數專欄線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵分析
二次型
典型形式
特殊矩陣
仿射幾何
數值線性代數
應用之道
證明細解
其他主題專欄機率統計
希爾伯特空間
機器學習
圖論
特別主題
每週問題線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵分析
二次型
典型形式
數據充分性問題向量空間
特徵分析
其他分類答讀者問
網友分享
隨筆雜談
無關線代
試閱
佈告欄
問題回報
近期迴響 
「Joan」對「條件機率與貝氏定理」留言「ccjou」對「線性映射與座標變換」留言「許文信」對「線性映射與座標變換」留言「ccjou」對「費雪的判別分析與線性判別分析」留言「ccjou」對「極小範數解」留言「ccjou」對「答Avis──關於行秩等於列秩的幾何背景」留言 
近期最多人點閱 

						三階逆矩陣公式					



						奇異值分解 (SVD)					



						行列式的運算公式與性質					



						特殊矩陣 (2)：正規矩陣					



						Gram-Schmidt 正交化與 QR 分解					



						線性代數基本定理 (一)					



						線性代數的核心問題					



						教學光碟					



						三維空間的旋轉矩陣					



						Jacobian 矩陣與行列式					

月曆
七月 2015


日
一
二
三
四
五
六




« 六月
 
八月 »




 1234


567891011


12131415161718


19202122232425


262728293031
 


分類分類
選擇分類
無關線代  (23)
特別主題  (20)
答讀者問  (49)
網友分享  (2)
線性代數專欄  (426)
   特徵分析  (76)
   特殊矩陣  (23)
   線性變換  (33)
   線性方程  (30)
   行列式  (32)
   證明細解  (4)
   內積空間  (28)
   典型形式  (27)
   向量空間  (47)
   應用之道  (42)
   數值線性代數  (29)
   二次型  (42)
   仿射幾何  (11)
隨筆雜談  (18)
試閱  (2)
周老師時間  (16)
問題回報  (24)
圖論  (12)
佈告欄  (22)
希爾伯特空間  (4)
數據充分性問題  (3)
   DSQ 特徵分析  (1)
   DSQ 向量空間  (2)
機率統計  (21)
機器學習  (8)
每週問題  (435)
   pow 特徵分析  (87)
   pow 線性變換  (23)
   pow 線性方程與矩陣代數  (56)
   pow 行列式  (55)
   pow 內積空間  (57)
   pow 典型形式  (9)
   pow 向量空間  (75)
   pow 二次型  (73)


文章存檔 文章存檔

選擇月份
 2017 年 六月  (4)
 2017 年 五月  (5)
 2017 年 四月  (4)
 2017 年 三月  (4)
 2017 年 二月  (6)
 2017 年 一月  (11)
 2016 年 十二月  (5)
 2016 年 十一月  (5)
 2016 年 十月  (5)
 2016 年 九月  (4)
 2016 年 八月  (5)
 2016 年 七月  (4)
 2016 年 六月  (4)
 2016 年 五月  (10)
 2016 年 四月  (6)
 2016 年 三月  (10)
 2016 年 二月  (11)
 2016 年 一月  (7)
 2015 年 十二月  (11)
 2015 年 十一月  (9)
 2015 年 十月  (8)
 2015 年 九月  (11)
 2015 年 八月  (14)
 2015 年 七月  (8)
 2015 年 六月  (11)
 2015 年 五月  (5)
 2015 年 四月  (5)
 2015 年 三月  (6)
 2015 年 二月  (4)
 2015 年 一月  (7)
 2014 年 十二月  (9)
 2014 年 十一月  (5)
 2014 年 十月  (4)
 2014 年 九月  (5)
 2014 年 八月  (5)
 2014 年 七月  (5)
 2014 年 六月  (11)
 2014 年 五月  (10)
 2014 年 四月  (12)
 2014 年 三月  (14)
 2014 年 二月  (15)
 2014 年 一月  (10)
 2013 年 十二月  (16)
 2013 年 十一月  (14)
 2013 年 十月  (19)
 2013 年 九月  (15)
 2013 年 八月  (13)
 2013 年 七月  (13)
 2013 年 六月  (18)
 2013 年 五月  (16)
 2013 年 四月  (14)
 2013 年 三月  (6)
 2013 年 二月  (8)
 2013 年 一月  (13)
 2012 年 十二月  (16)
 2012 年 十一月  (18)
 2012 年 十月  (17)
 2012 年 九月  (10)
 2012 年 八月  (8)
 2012 年 七月  (10)
 2012 年 六月  (15)
 2012 年 五月  (12)
 2012 年 四月  (12)
 2012 年 三月  (11)
 2012 年 二月  (10)
 2012 年 一月  (7)
 2011 年 十二月  (5)
 2011 年 十一月  (4)
 2011 年 十月  (6)
 2011 年 九月  (5)
 2011 年 八月  (5)
 2011 年 七月  (8)
 2011 年 六月  (13)
 2011 年 五月  (14)
 2011 年 四月  (11)
 2011 年 三月  (11)
 2011 年 二月  (10)
 2011 年 一月  (12)
 2010 年 十二月  (12)
 2010 年 十一月  (13)
 2010 年 十月  (8)
 2010 年 九月  (11)
 2010 年 八月  (15)
 2010 年 七月  (7)
 2010 年 六月  (13)
 2010 年 五月  (12)
 2010 年 四月  (12)
 2010 年 三月  (14)
 2010 年 二月  (14)
 2010 年 一月  (12)
 2009 年 十二月  (12)
 2009 年 十一月  (14)
 2009 年 十月  (10)
 2009 年 九月  (13)
 2009 年 八月  (14)
 2009 年 七月  (12)
 2009 年 六月  (12)
 2009 年 五月  (12)
 2009 年 四月  (15)
 2009 年 三月  (39)

標籤雲Cayley-Hamilton 定理
Frobenius 範數
Gram-Schmidt 正交化
Gramian 矩陣
Hermitian 矩陣
Householder 矩陣
Jordan 典型形式
LU 分解
QR 分解
Schur 定理
SVD
Vandermonde 矩陣
三角不等式
不變子空間
麽正矩陣
二次型
代數重數
伴隨矩陣
內積
冪矩陣
冪等矩陣
冪零矩陣
分塊矩陣
列空間
半正定矩陣
反對稱矩陣
可交換矩陣
可逆矩陣
向量空間
圖論
基底
基本列運算
奇異值
奇異值分解
實對稱矩陣
對角化
座標變換
微分方程
投影矩陣
排列矩陣
旋轉矩陣
最小多項式
最小平方法
正交性
正交投影
正交矩陣
正交補餘
正定矩陣
正規矩陣
特徵值
特徵向量
特徵多項式
特殊矩陣
相伴矩陣
相似
矩陣乘法
矩陣多項式
矩陣指數
矩陣範數
矩陣譜
秩
秩─零度定理
簡約列梯形式
組合數學
線性獨立
線性變換
線性變換表示矩陣
行列式
行空間
譜分解
跡數
逆矩陣
通解
零空間
高斯消去法線代線上影音課程

Essence of linear algebra (3Blue1Brown)
Khan Academy (Salman Khan)
MIT OCW (Gilbert Strang)
國立台灣大學OCW (蘇柏青)
國立清華大學OCW (趙啟超)
國立交通大學OCW (莊重)
國立交通大學OCW (巫木誠)


線代學習網站

用maxima學數值分析─特徵值和特徵向量
Free Online Books
Math Insight
MIT OCW
Wikibooks: Linear Algebra
Wolfram Demonstration Project


線代電子書

A First Course in Linear Algebra (Robert A. Beezer)
Fundamentals of Linear Algebra (James B. Carrell)
Linear Algebra (Jim Hefferon)
Linear Algebra Done Wrong (Sergei Treil)
Linear Algebra Problems (Jerry L. Kazdan)
Linear Algebra via Exterior Products (Sergei Winitzki)
Linear Algebra, Theory and Applications (Kenneth Kuttler)
Matrix Analysis and Applied Linear Algebra (Carl D. Meyer)
Notes on Linear Algebra (Peter J. Cameron)


矩陣計算器

Jordan Form Calculator
Matrix Calculator
Online Matrix Calculator


LaTeX

Online LaTeX Equation Editor
Wikibooks: LaTeX


Blogroll

陰暗的小角落
Mark Chang's Blog
尼斯的靈魂
微積分福音


訂閱

請輸入您的email，當有新文章發表時，您將會收到通知。訂閱之後您隨時可以取消訂閱。
加入其他 324 位關註者







 


 







閱讀導引線性代數的核心問題
線性代數的核心課綱
強打推薦文章
線性代數教學光碟延伸閱讀
矩陣理論學習導引
學習資源 試題
作業
每週問題集
研究所入學考題與解答
數據充分性問題
 



專題探究矩陣的特徵值與特徵向量
矩陣分解
特殊矩陣
Hermitian/實對稱矩陣專題
奇異值分解專題
Jordan 典型形式專題
傅立葉分析專題
圖論專題
馬可夫鏈專題
機器學習/機率統計專題
線性規劃專題
微分方程/差分方程專題
組合數學專題
 



急救查詢線性方程與矩陣代數
向量空間
線性變換
內積空間
行列式
特徵值與特徵向量
二次型與典型形式
其他分頁常見問題
周老師時間
教學光碟
留言板
關於
 



Meta 
註冊 登入
文章 RSS 訂閱
迴響 RSS 訂閱
WordPress.com 
網路狀態

Automattic Status
WordPress Forums


Blog Stats 
2,859,246 hits

 Copyright © 2009-2017 ccjou
All rights reserved
歡迎轉載，但須列明來源。

 




					線代啟示錄				


在WordPress.com寫網誌.






















張貼到



取消







 





傳送到電子郵件地址

你的姓名

你的Email






取消

				文章沒有送出-請確認你的Email位置			

				Email確認失敗,請稍後再試.			

				抱歉，你的網誌無法透過電子郵件分享			











 
 
%d 位部落客按了讚：










































































































































2014矩陣分析與應用研討會




2014矩陣分析與應用研討會

2014 Workshop on 
Matrix Analysis and Applications

研討會日期  2014年11月22日(星期六)

研討會地點  東吳大學 理學院會議室(第一教研大樓5樓)



http://www.math.scu.edu.tw/teacher/Chien/WMAA.htm


Workshop poster
Workshop Photos

photo1   photo2   
photo3   photo4  
photo5   photo6  
photo7   photo8  
photo9   photo10  
photo11

目的


矩陣理論是數學的一個研究領域，也是作為數學和應用數學的基本工具。矩陣理論日益廣泛的應用在科學計算、統計資料分析、圖論、結構工程等等。在國際上，極具影響力的矩陣相關研討會，一直活躍的舉行，顯示矩陣理論在當前數學研究的重要性。


國內致力於矩陣分析與應用的學者漸多，亦有很好的研究表現，而且最近許多博士論文有以矩陣為研究的題材。為提供國內矩陣相關學者報告進行中的研究議題，擬邀請國內學者10名發表有關矩陣分析及其應用的最新研究結果，提供與會人員彼此交換討論的機會，
同時促進年輕學子對於這個研究領域的興趣。


議程  You 
can find the abstracts here.      
 



Time

Speaker

 Title



9:00-10:00

Registration,  Opening(9:50)



Section 1

Section Chair: 
吳培元



10:00-10:30

蔡文端

How I could think of tensor products of matrices



10:30-11:00

李秋坤

Zero product preserving bilinear forms on matrix 
        algebras



11:00-11:30

王國仲

Numerical radii for tensor 
		products of matrices



11:30-12:00

黃毅青



		Random Toeplitz Operators and eigenvalue distribution 
  



12:00-13:30

Lunch



Section 2

Section Chair: 
黃毅青



13:30-14:00

高華隆

 Structures and Numerical 
		Ranges of Power Partial Isometries



14:00-14:30

蔡明誠

 Preserving 
		problems of geodesic-affine maps and related topics on positive definite 
		matrices



14:30-15:00

翁志文

Laplacian Spread and Strongly 
		Regular Graph



15:00-15:30

Coffee break



Section 3

Section Chair: 
翁志文



15:30-16:00

郭岳承


		Doubling algorithm for large-scale nonlinear matrix equations X + ATX-1A 
		= Q




16:00-16:30

譚必信



		A characterization of graphs G with nullity |V
		
(G|
		
-
		
		2m(G) 
		+ 2c(G) 



16:30-17:00

吳培元

Numerical ranges of matrices: 
		open problems



　

報名


自即日起至2014年11月15日止。

請填報名錶，email至 
mtchien@scu.edu.tw   email標題顯示: 
registration

報名錶

　




姓名
　



職稱
　



服務單位
　



email
　




交通


捷運士林站

校園地圖

公車: 捷運士林站1號出口，在中正路轉搭 
公車255、304、620、小18、小19至東吳大學站下車 (約15分鐘)，沿溪到校門後，依校園地圖綠色步行方向至第一教學研究大樓5樓。

計程車: 捷運士林站1號出口搭計程車，進校門後，沿校園地圖粗紅線，
上坡行駛至第一教學研究大樓門口。

開車: 
進校門後，依校園地圖車輛方向紅色箭號停放第二教學研究大樓地下室，在停車入口處按取停車銅板，報到時領臨停證明單。車輛離場時，不要自行繳費，將臨停證明單
與銅板交給管理員即可。

　

主辦人

東吳大學數學系教授  簡茂丁

Email:  mtchien@scu.edu.tw

連絡電話 (02) 2881-9471 轉 6708

贊助單位
科技部數學研究推動中心
東吳大學數學系



請問線性代數跟矩陣有關系嗎？ | Yahoo奇摩知識+




















 









   ⌂首頁信箱新聞股市名人娛樂氣象運動App下載購物中心商城拍賣更多⋁知識+汽車機車電影字典遊戲旅遊理財房地產時尚美妝折扣城   Yahoo 奇摩知識+                        👤 登入    ✉ 信箱     ⚙ 服務說明    帳號資料 服務說明 意見回報        
















Yahoo奇摩知識+ 首頁











所有分類
 
健康
 
商業與財經
 
娛樂與音樂
 
家居與園藝
 
家庭與人際關係
 
寵物
 
懷孕與育兒
 
政治與政府
 
教育與參考
 
新聞與活動
 
旅遊
 
汽車與交通
 
消費電子產品
 
環境
 
社會科學
 
社會與文化
 
科學
 
美容與造型
 
藝術與人文
 
遊戲與休閒活動
 
運動
 
電腦與網際網路
 
食品與飲料
 
餐廳與小吃
 





世界Yahoo 








阿根廷





澳洲





巴西





加拿大





法國





德國





印度





印尼





義大利





馬來西亞





墨西哥







紐西蘭





菲律賓





魁北克





新加坡





香港





西班牙





泰國





英國與愛爾蘭





美國





越南





西班牙文







關於





關於 Yahoo奇摩知識+
社群指南
排行榜
點數與等級
部落格
如何安全地使用 Yahoo奇摩

 








 教育與參考

 考試


 看另一則問題 










            請問線性代數跟矩陣有關系嗎？
        


請問線性代數跟矩陣有關系嗎？ 
在準備研究所考試 
它如果寫工程數學(含線代和機率) 
那它是指只考線代和機率還是工數全部再加那兩科呀？ 
那微分方程又是包含哪些部分呢？ 
希望有經驗的大大可以幫我一下 
謝謝





 
1 個人正在追蹤 


 
 3 個解答 
3


檢舉不當使用









您確定要刪除此解答嗎？
是
否












 









抱歉，似乎發生一些問題。



Trending Now





 

解答


評分


最新
最舊














最佳解答: 
             　　版主您好，讓我一一回答您的問題。*1. 請問線性代數跟矩陣有關系嗎？　　當然有關係囉！我們都會把聯立方程式寫成矩陣，當您寫成矩陣的時候，就要遵循矩陣的計算規則，您會發現矩陣的加、減、乘、除是要恪遵一定原則計算，剛開始學的時候會本很不習慣，不過學久了會發現，矩陣是個向量( Vector )，不同方向的元素( 量 )不能相加、減。　　而線性代數這門數學到近代蓬勃發展，與其說蓬勃發展不如說各校學系( 無論工、商學系 )都重視教授這門課，那是因為線性代數對計算機理論與空間中訊號處理的使用都極為廣泛，當然在化工、管理、機械等領域也有應用。　　線性代數最早是為了描述空間中有關幾何、元素集合等問題，是以矩陣方式來表示，所以在上「線性代數」這門課時，第一章應該都是先講「矩陣」這個單元，讓學生熟悉矩陣計算規則，再進入討論空間向量的線性代數。*2. 如果寫「工程數學( 含線代和機率 )」那它是指只考線代和機率還是工數全部再加那兩科呀？　　這個問題問的很好，有些學校就是指考這兩科，有些學校就是這兩科再加上工數全部範圍，這需要看各校研究所考古題才能知道他們定的範圍在哪裡。*3. 微分方程又是包含哪些部分呢？　　這個問題也實在問的很好！因為大多數台灣的學生一直以為微分方程就是常微分方程，可能您又會覺得奇怪，微分方程跟常微分方程不事都一樣嗎？我先把微分方程式的範圍寫出來您就瞭解了。　　微分方程式( Differential Equation )包括：(a) 常微分方程( Ordinary Differential Equation，ODE )(b) 拉普拉斯轉換( Laplace Transform )(c) 傅立業分析( Fourier Analysis )(d) 矩陣與線性代數( Matrix and Linear Algebra )(e) 偏微分方程( Partial Differential Equation，PDE )　　版主，可能您會想「不對啊！傅立業、拉普拉斯、矩陣、線代關微分方程什麼事？不事都不一樣的東西嗎？」　　但其實，以上這些數學雖看似不相關，卻都都可以拿來解 ODE、PDE 的數學技巧，ODE、PDE 在教課時就會交我們怎麼算，本身就有一套計算方法，但還可以利用傅立業、拉普拉斯、矩陣、線代學到的數學方法來計算。　　早期有些學校還把複數分析( Complex Analysis )也納入微分方程的範圍，因為學到的複數積分可以拿來算 PDE 所遇到的積分，不過現在已經沒納入了，如果還納入的話，一個微分方程就真的是工數的全部( 只差向量分析 )了！　　對了，我把常微分方程( Ordinary Differential Equation，ODE )範圍列出來，您就知道東西有多少了。　　常微分方程( Ordinary Differential Equation，ODE )包括：(a) 一階常微分方程( First Order ODE )(b) 二階與高階常微分方程( First Order and High Order ODE )(c) 聯立常微分方程( System of ODE )(d) 級數解( Series solution )　　以上四個東西還有細分，一階 ODE 至少有 5 種解法、二階與高階 ODE 齊次解與通解的計算、聯立 ODE 可拿來判別系統穩定性、級數解至少有四種方法要學......　　ODE 就要教這麼多，一個學期約 48 小時左右的課，絕對教不完，所以現在才有一大批學生拼命往補習班上課，因為真的只有補習班 90 ～ 120 小時的課程才能教完整的工程數學內容。　　當然，一個 ODE 就已經如此多，一個學期教不完，也讓我們學生誤以為 ODE 就是微分方程的全部，去考試就只準備 ODE，等到考卷下來才發現怎麼連 Fourier 級數、Fourier 轉換都考，還說要用 Fourier 級數求解 ODE，到時候發覺就為時已晚了( 這是我同學的切身之痛 )。　　*　　希望以上回答能幫助您。 




 參考資料： 
 自己 


龍昊
 · 11 年前 





0
真讚



0
真遜





檢舉不當使用


意見





 




新增意見











送出












 · 剛才不久






















 非數學系應該都是從矩陣開始...但是數學系可能會從向量空間 線性轉換完才引入矩陣





沒
 · 11 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久























 請問線性代數跟矩陣有關系嗎？ 
怎麼會說這種問題...去看看書吧...矩陣是種線性代中的一種符號.... 
工程數數是是一門綜合不同數學課的學科..(微積分 統計機率 線代 等..)解決工程問題可能用到的數學方法...主要是以微積分為背景.... 
你自己去圖書館借一本工程數學來看就知道啦... 
有微積分的基礎..你很容易看懂的...





no name
 · 11 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久













 

檢舉不當使用

 我認為此問題違反社群指南 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此問題違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此解答違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此解答違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此意見違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此意見違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消



 

你可能對以下搜尋感興趣：


沖繩租車自駕遊

海外留學開啟全球新視野

為自己拓展視野豐富人生經驗

迎戰大學指考!












發問問題
通常可在幾分鐘內獲得解答！







展開»






詳細資料



詳細資料






現有問題




更多





請多詳述您的問題
上傳處理中




上傳失敗。 請上傳大於 100x100 像素的檔案
目前發生問題，請再試一次。
您只能上傳 PNG、JPG 或 JPEG 等類型的檔案。
您只能上傳 3GP、3GPP、MP4、MOV、AVI、MPG、MPEG 或 RM 等類型的檔案。
您只能上傳不超過 5 MB 的相片。
您只能上傳不超過 600 MB 的影片。
您只能上傳相片 (png, jpg, jpeg) 或影片 (3gp, 3gpp, mp4, mov, avi, mpg, mpeg, rm)。
您只能上傳相片或影片。
影片不應超過 <b>600mb/5 分鐘</b>
相片不應超過 <b>5mb</b>
影片不應超過 <b>600mb/5 分鐘</b>相片不應超過 <b>5mb</b>
  







解答問題


翰林版 英文第二冊7到9課的單字?



 

我之前去了韓國,跟大家一樣也是很喜歡哪?想學學看,有推薦的補習班嗎?



 

翰林版 英文第二冊7到9課的單字?



 

目前是上班族 剛好6月到韓國員工旅遊 真的是太喜歡拉~~~~~~
目前有自學了發音 但感覺不是非常標準 所以想充實自己 有推薦的補習班嗎? 我在彰化 想找臺中車站附近的 謝謝?



 


發燒問題




有哪些科學治療性功能障礙的方法?

                  4 個解答
              

 

請問maca瑪卡能快速治療性功能障礙嗎?

                  4 個解答
              

 

大大們，能幫我解決一個問題嗎　　我高中職填志願填錯了　　把慈惠醫專填在前面
如果我種了慈惠醫專的話　　那　７／１３報到當天有辦法坐校車嘛！？慈惠在屏東　我人在高雄　但我害怕沒有校車做到屏東　　想問問看當天有沒有校車　如果沒校車怎麼辦?

                  4 個解答
              

 
更多問題





想要出國打工度假,但英文很爛,聽說英文不錯出國打工的工作可以賺比較多的錢,如果明年底去,有推薦補習班可以幫忙惡補嗎?再麻煩大家提供一下意見,謝謝?

             9 個解答
         

 

我小孩現在國中畢業,現在要升高中,之前都在佳音補習,有沒有推薦的英文補習班,不要文理補習班那種,我的小孩很討厭要一直考試的補習班...?

             9 個解答
         

 

我想學韓文,一直想學韓文,有買發音的書自學過 但看得霧沙沙 ,所以想問問有推薦的補習班學韓語嗎? 我住臺中 想找方便搭車 費用又不會太高的補習班 請推薦了 謝謝?

             4 個解答
         

 

  








服務條款


隱私權


RSS

































幾個可以處理矩陣的計算機: octave/rlab/R






light
dark


 我的部落格:
人權


玩具



快速跳到:


	社群活動
本層目錄
上層目錄
此頁@朝陽
此頁@資管
English























幾個可以處理矩陣的計算機: octave/rlab/R

簡介
要用自由軟體處理矩陣運算, 有好幾個選擇。
Octave [1] 可能是首選,
    因為它的語法幾乎與 matlab 相容, 函式庫豐富, 使用社群活絡。 Octave
    的文件以 gnu info 格式寫成, 建議一併安裝 pinfo 套件, 方便下 pinfo
    octave 命令來看手冊。 Windows 用戶請註意: 根據 這頁的說明
    您可選擇 (a) 獨立安裝 
    這個版本 或 (b) 安裝 { cygwin 或
    XLiveCD } 及 這個版本;
    但這兩個選項彼此衝突。
RLaB [2] 語法比 matlab 漂亮,
    是筆者的最愛; 可惜軟體已不再更新。 (也有好處: 不需要追新)
    又, 有人延續 R, 發展 
    rlabplus
R [3] 主要用於統計運算;
    矩陣運算只是其中一小部分的功能。 搜尋此套件時, 用
    R-base 當關鍵字。
Giac/Xcas [4] 主要用於符號運算 (symbolic
    computation); 矩陣運算只是其中一小部分的功能。 它的語法比較不同,
    另文 介紹。
這幾套軟體由於程式原始碼公開, 都有 *BSD 版, Linux 版, Windows
    版...等等,
    使用者可以確保學習投資及辛苦設計的程式不會隨著流行潮的改變而付諸流水。
    這些軟體都有現成編譯好的執行檔, 可以上 rpmfind 找到。
    四者都提供命令列介面, 可使用方向鍵及 「GNU readline
    使用者界面」 所定義的一些快速鍵, 其實比圖形介面方便。 R 與
    Giac/Xcas 則還另外提供圖形介面。
純量運算
這些軟體的語法雖然有些不同, 但處理矩陣的觀念是一致的,
    所以一併介紹。 以下用不同的顏色表示不同軟體的語法;
    沒有特別說明的範例就是四者都適用。
    現在不妨就請馬上打開一個終端機視窗, 邊看本文邊照打。
每次執行 rlab 時, 它都會去家目錄下找一個文字檔
    .rlab 來執行, 如果沒有這個檔案, 它會抱怨找不到 init script。
    所以第一次進入 rlab 之前, 請先建立 .rlab 裡面可以是空的;
    或者簡單放一句:

        pi = atan(1)*4;


在 shell 下以 octave 或 rlab2 或 R 或 cas 命令進入後,
      你就可以開始把它當一部計算機來用: 試著打 3 * (7 -
      2), 然後按 Enter, 它就顯示運算結果。 空格多寡無所謂;
      但最好把完整的運算式打在同一列上 (octave 與 R 比較不挑剔,
      會給你換列繼續打完的機會)。
運算結果可以存在變數裡 (大小寫有別), 例如 x = 3 * (7 -
      2) 等一下再拿出來用: 1/x
可以把好幾句話放在同一列, 用分號分開就行:
x = 3*(7-2); y = 6.2e-3; z = 4.3/8; [octave: 分號有個副作用:
      那一句話的運算結果不會顯示出來。]
除了四則運算以外, 常見的數學函數也都可以用, 例如 sin(pi/3) 與
      sqrt(3)/2 都會印出 0.866 。 [rlab: pi
      不是內建常數, 要自己算, 例如下 pi=atan2(1,1)*4]
      三角函數都是以徑度量為單位。 又如 log(9) 會印出 2.1972, 而 exp(2)
      則是 7.3891 因為指數對數都是以 2.71828 為底。
也可以處理複數, 例如 sqrt(3+4i) 其中 i 就是 sqrt(-1)
      複數的單位。 但要註意: 虛部係數不可省略 (也就是說單獨一個 i
      還是應寫成 1i) 且係數與 i 之間不可有空格。
數學運算當中偶爾會出現 1/0 或 0/0 等等狀況,
      像這些處理大量數字的程式, 不適合讓這種狀況打斷程式邏輯。
      因此它們提供兩個特殊的值: inf 或 infinity 表示無窮大; nan 或
      undef 表示 "not-a-number", 確保運算無論如何都有結果。
help 命令可以查手冊, 例如 help cross 在 rlab
      中會顯示 cross 函數的原始碼; 在 octave
      當中則會顯示短短的使用說明。 如果要看比較完整的手冊, 建議在 shell
      底下, 下 pinfo octave 或下 rpm -qil rlab | less 並找到
      rlab-ref.html
用 help 命令看手冊時, 你面對的是 less 的操作界面,
      搜尋字串時甚至可以使用比較複雜的 regular expression [5]。 在 octave (及某些版本的 rlab 中),
      如果運算結果太冗長, 一個螢幕放不下 (例如下麵提到的矩陣運算),
      也是用 less 來讓你分頁瀏覽。
要離開這些數學工具, 回到 shell 底下, 可以按 ^d 鍵 或下 quit
      命令。

使用向量與矩陣
建立矩陣的語法: 方括弧內用分號分隔各列; 用逗號分隔一列內各元素,
    例如 A = [1,3,-13,4; 5,-6,0,1; -1,-7,5,2]
    所代表的就是下麵這個矩陣:

                1          3        -13          4  
                5         -6          0          1  
               -1         -7          5          2  

為方便下麵舉例, 我們也建一個列向量 b = [-3,5,-19,7]
    一個行向量 c = b' 並且呼叫亂數函數 rand 產生一個大矩陣
    (裡面的值呈均勻分佈, uniform distribution) x =
    rand(8,6) 這裡我們看到單引號代表轉置 (transpose)。


取出
[octave 語法]
[rlab 語法]


A3,2
A(3,2)
A[3;2]


b3
b(3)
b[3]


c4
c(4)
c[4]


x 的第 5 列
x(5,:)
x[5;]


x 的第 2 行
x(:,2)
x[;2]


x 的左下角 1/4 小塊
x(5:8,1:3)
x[5:8;1:3]


[rlab: 對矩陣也可以使用「一個註標」的語法,
    不過取到的是以 column-major 方式來數的元素, 例如這裡若下 A[7]
    會取到 -13。] 這個表示法不僅可以當做 r-value, 也可以當做
    l-value。 也就是說,
    你不僅可以從矩陣當中的指定位置讀值出來,
    還可以把值填入矩陣的指定位置。
其實冒號本身就可以用來製造列向量, 例如 5:8 效果相當於 [5,6,7,8]
    甚且可以指定間隔, 例如要製造出 [50,55,60,65,70,75,80] 可以這麼寫:
    [octave: 50:5:80]
[rlab: 50:80:5]

以下正在修改當中...


整個矩陣裡面的每個元素都乘以十, 然後無條件捨去, 變成 0 到 9
      之間的亂數: x = floor(x*10)
Q: 請解釋下句的意義。
        
        [octave 語法]           [rlab 語法]
        x([12,1:4],[6,5])       x[12,1:4; 6,5]


Q: 如何取得 x 的所有偶數列, 偶數行元素?
你還可以用小矩陣堆成大矩陣 (當然行數或列數要一致), 例如 y =
      [x;x] 產生一個 16x6 的矩陣; 而 y = [x,x] 則產生一個 8x12
      的矩陣。
程式中如何得知一個矩陣 x 的大小? 可用 size(x)
      一次取得列數與行數 (傳回值是一個 1x2 的矩陣)。 如果是 rlab,
      還可用 x.nr 與 x.nc 分別直接取得 x 的列數與行數
要把整個矩陣 (例如上面的 a) 的所有 行
      按順序直著串起來, 變成一個很高的行向量, 在 octave 中用 a(:) 而在
      rlab 中用 a[:] 得到的就是 [1;5;-1;...4;1;2] 這個行向量。
那如果想把所有 列
      按順序橫著串起來成為一個很寬的列向量呢? 你可以先轉置,
      再把所有行串起來, 最後轉置回來, 像這樣: 在 octave 中用 t=a';
      t=t(:)' 在 rlab 中用 t=a'[:]'
      事實上這個方法可以應用在很多場合,
      因為有很多運算只對行做, 或只對列做。
Q: sum(x) 會對 x 的每一行分別加總, 產生一個列向量。
      請問如何對 x 的每一列分別加總, 產生一個行向量?
Q: 請查手冊, 用 max, min 兩函數, 分別求出 x 的奇數列,
      各列最大值/各列最小值。

程式實例: Gauss-Jordan 消去法求 reduced row-echelon form
接下來我們用一個完整的範例程式來介紹 octave 與 rlab 的語法。
    我們舉的例子是 Gauss-Jordan
    Elimination。 如果將它拿來用在線性聯立方程組的 係數-常數項
    augmented matrix 上, 所得到的就是方程組的解;
    而如果用在一個普通的矩陣上, 所得到的新矩陣就叫做原矩陣的
    reduced row-echelon form。 以下說明假設讀者已熟知
    Gauss-Jordan Elimination 的步驟; 請讀者視需要複習線性代數課本。
    (其實只要你會用 「加減消去法」 解線性聯立方程組也就夠了,
    我們這裡的目的是用實際的程式範例教你 octave 與 rlab 的語法;
    線性代數的理論細節並不那麼重要.) 閱讀本節時, 請務必對照程式碼。
如何載入/執行 octave 版的 lademo.m?
    Octave 並不搜尋目前目錄下的 .m 檔。 你可以在進入 octave 之後,
    寫出完整的路徑用 source 載入 lademo.m, 像這樣:

        source("/home/ckhung/public_html/b/ma/lademo.m");

或是 (一樣是進入 octave 之後) 先設定搜尋目錄, 再打檔名
    (那就不要路徑不要加附檔名了), 像這樣:

        LOADPATH="/home/ckhung/public_html/b/ma:";
        lademo

或者更簡單地寫 LOADPATH=".:" 把目前目錄加入搜尋路徑。
    註意後面的冒號不可以省略, 否則它會找不到內建函數如 rand 與 sort
    等等。
如何載入/執行 rlab 版的 lademo.r?
    你同樣可以用指定搜尋路徑的方式來令 rlab 載入你的程式 (下 rlab2
    命令之前, 在 shell 下設定環境變數 RLAB2_PATH); 不過因為 rlab
    會在目前目錄下搜尋, 所比較簡單的方法是: 在下 rlab2
    之前切換到程式檔的目錄, 或是下 rlab2 後用
    cd("/home/ckhung/public_html/b/ma/") 切換目錄; 進入
    rlab2 之後則可下 rfile lademo 命令 (不要附檔名) 或呼叫
    load("lademo.r") 函數來載入。
不論是 octave 或 rlab, 載入我們自己寫的程式之後,
    就可以把裡面定義的函數拿來用了:

    A = [1,3,-5,2,94; 4,-3,1,5,58; 6,-2,2,4,72; 0,2,3,-7,-69]
    T = pivot(A,3,2)

octave 版的 lademo.m 與 rlab 版的 lademo.r 程式架構相同,
    以下我們只解釋這個共同的架構; 語法請自行參考程式及手冊,
    相信這樣會比列舉 if, for, ... 的文法規則更能搔到癢處。
    比較特殊的語法, 下兩節再詳述。
Gauss-Jordan Elimination 的基本動作是 pivoting --
    選取一個元素作為 pivot element, 將整列除以它
    (所以它就變成了 1), 然後將這一列 (稱為 pivot row)
    乘以適當的常數加到上下各列去, 目的在把與 pivot element
    同行的所有元素 (合稱為 pivot column) 都清成 0。 程式中的 pivot
    函數接受四個參數: 要對那個矩陣做 pivot, pivot 元素在第幾列, pivot
    元素在第幾行, 及希望清除那幾列上的對應元素
    (因為有時候我們只希望清除 pivot column 上的部分元素,
    而不是要對每一列都做這個動作)。 例如 T = rand(5,6)
    用亂數產生 T 之後, 可以下 pivot(T,3,4,[2,5])
    以第三列第四行為 pivot 將第二列及第五列的對應元素清除。
程式中的主要函數為 r_r_echelon, 主要有兩個迴圈。
    第一步由左而右逐次尋找新的 pivot element 並呼叫 pivot
    以清除矩陣的左下角 (見第一個迴圈內變數 c 的變化範圍)。 當然 pivot
    不得為 0, 所以必須在第 c 行內上下搜尋以非 0 數字帶頭的列
    (迴圈中的變數 p), 並把找到的列整列調上來。 第二步由下而上尋找 pivot
    element 以清除矩陣的右上角 (見第二個迴圈內變數 r 的變化範圍)。
    同樣地, 此時必須在第 r 列內由左而右找到帶頭 (第一個非 0) 的那一行
    (迴圈中的變數 p) 才能作為 pivot element。
    這裡的動作看起來有點不對稱, 主要是為了能夠處理任意 rank 的矩陣。
    另外, 如果還希望顧及 numerical stability, 程式其實很容易可改成
    "選取絕對值最大元素作為 pivot"。
我們可以用亂數來產生測試用的矩陣; 但是除非是遇到鬼,
    或是中了樂透頭獎 (意思是一樣的 -- 機率近乎 0), 產生的矩陣幾乎必定是
    full rank, 它的 reduced row echelon form
    幾乎必定呈「左上方塊單位矩陣」的形式, 也因而很難測試出 r_r_echelon
    當中比較複雜的邏輯。 為此我們寫了一個函數 rand_mat, 用來產生大小 m
    乘 n, 並且 rank 可由使用者指定的亂數矩陣。 這個函數的邏輯稍複雜,
    我們略過。 它會用到 rand_permute 產生 1 到 n 的整數的亂數排列。 Q:
    請看註解, 學會用 "一句話" (octave 需要兩句話) 呼叫 rand_permute
    來幫你做電腦選號。 不過相信數學的人不玩樂透;
    而相信自己運氣的人一年不玩超過三次的樂透,
    所以請不要問我這個程式準不準 -- 當然是五百廿四萬分之一嘍 :-)
另外還有一個 simplex 函數用來解線性規劃的問題; 以及 lademo.m
    當中的 mini 與 lademo.r 當中的 smooth 等輔助函數我們就略過不談了,
    請有興趣的讀者自行研究。
    我們直接跳到最下麵看一小段註解起來的測試程式。
    測試時請自己把井號拿掉。 為了方便除錯,
    第一句話以一個固定的值當做亂數的 "種子",
    這樣每次產生的亂數序列才會相同; 至於 "種子" 的值是多少並不重要。
    除錯完畢之後, 產生種子的這句話其實可以刪掉。 然後用亂數產生一個 5x6
    的矩陣 (它的秩只有 4), 試一下以第三列第四行為 pivot,
    消去第二列及第五列的對應元素, 最後將原矩陣化為 reduced row echelon
    form。
當然如果不是為了學 octave/rlab 或是學線性代數, 只是想要求方陣 A
    的反矩陣, 或是要解聯立方程組 A * x = b 當中的未知行向量 x,
    其實只要下 A\b 就可以了, 根本不必如此大費周章 --
    要站在巨人的肩膀上, 不要重新發明輪子, 不是嗎?
    上面這個矩陣除法的語法看起來有點奇怪; 不過想想也有道理,
    因為矩陣乘法不可交換, 所以除法有分左除右除。 如果 A * x = b, 那麼 x
    不就應該是:

                b
              -----
              A

如果你還是不習慣, 在 rlab 當中還可以這樣下: solve(A,b)
Octave 的怪癖與特異功能

你自建的函式庫通常是以「一檔案一函數」的方式來儲存,
      且檔名要與函數名稱相同。 我偏好將很多相關函數放入同一個檔案內,
      這時候檔內第一句話就不可以 function 開頭, 例如 lademo.m 內以一句
      (沒什麼意義的) 1; 開頭
Octave 提供很多全域變數讓你更改內定的行為,
      例如發生錯誤時要不要「嗶」一聲? 可以設定 beep_on_error
      的值來決定。 詳見手冊的 "Variables" 章的 "Summary of Built-in
      Variables" 篇。
Octave 盡力做到與知名的 matlab 相容。 如果你想要從 matlab
      跳脫出來, 進入自由軟體的世界, 但是又不希望把過去的 matlab
      程式丟掉, 可以參考 FAQ 裡面的 "Porting programs from MATLAB to
      Octave" [6]。
除了內建函數及隨著 octave 一起安裝的許多工具箱 (見 rpm -qil
      octave | grep '\.m$' 或手冊) 之外, 還可以在 matlinks [7] 上找到許多移植自 matlab 的數學工具箱。
可以將矩陣存在一個純文字檔裡面 (例如叫做 abc.txt) 內容像這樣:
        
         2  1  5 -3
        -1  0  4  7
         3 -5  0 -2
然後在 octave 內下 load "abc.txt" 就會將資料讀入 abc
這個矩陣。 附檔名叫什麼其實都無所謂。 這個功能最適合與 awk 或
        perl 等文字處理工具配合使用 -- 例如想用
        octave 分析其他軟體產生的資料, 可以先用 awk 或 perl
        處理成如上格式。
      

RLaB 的怪癖與特異功能

建議生手從 help INTRO 開始看起。 另外, 下 rpm -ql rlab
      | grep html 找出手冊來研究, 還可以學到很多進階功能
      (例如透過 pipe 與其他程式溝通)
rlab 的函數可以接受不定個數的參數, 像是範例中的 pivot
      函數的最後一個參數就是。 呼叫者 (caller)
      究竟有無提供這些可省略的參數, 在被呼叫者 (callee) 當中, 可以用
      exist 函數來檢查。 Octave 雖然也可以傳遞不定個數的參數,
      但使用起來麻煩多了。
上述 octave 從純文字檔讀矩陣的功能, rlab 也有。
      資料檔的格式一模一樣; 下的則是 x = readm("abc.txt")
      命令, 變數的名稱不必與檔案名稱相同。 如果要再讀一次, 必須先用
      close 關閉檔案, 否則會讀到空矩陣。
rlab 內部計算具有相當高的精準度; 但是印出來的只有 3
      位有效數字。 欲將列印時的精準度增加至 7 位, 可下
      format(7) 命令。
在 rlab 裡面, 函數的參數不僅可以是數字/字串的矩陣,
      還可以是另外一個函數! 例如下麵 integrate 函數以 Simpson's method
      求積分:
        
        # 如果看不懂, 可以把每列後面的分號拿掉, 計算過程就會印出來。
        integrate = function(f, low, high, n) {
            if (! exist(n)) { n = 7; }
            h = (high - low) / (2 * n);
            x = (0 : 2*n) * h + low;
            k = (mod( (0 : 2*n), 2*ones(1,2*n+1) ) + 1) * 2;
            k[1,2*n+1] = [1,1];
            return sum(k .* f(x)) * h / 3;
        }
可以這麼用: integrate(exp, 1, 3)
      

繪圖
Octave 與 rlab 都可以透過 gnuplot [8]
    來將向量或矩陣裡面的資料畫出來。 例如要畫 y 相對於 x 的變化趨勢,
    可以呼叫 plot 函數:

        [octave 語法]           [rlab 語法]
        x = -pi*5:0.3:pi*5;     x = -pi*5:pi*5:0.3;
        y = sin(x)./x;          y = sin(x)./x;
        plot(x, y)              plot(x, y)

當然 x 與 y 可以不必是解析函數, 也可以是資料。
    例如若有一個資料檔 t.txt 內容如下:

   -2.00000   10.93063
   -1.00000    6.12849
    0.00000    0.98502
    1.00000   -0.36626
    2.00000    1.49372
    3.00000    2.55317
    4.00000   11.51355
    5.00000   18.20215
    6.00000   28.11316

我們先讀入原始資料, 並畫出來:

        [octave 語法]                   [rlab 語法]
        load "t.txt"                    t = readm("t.txt")
        x = t(:,1); y = t(:,2);         x = t[;1]; y = t[;2];
        plot(x,y)                       plot(x,y)

接著我們分別試著找一條直線 y = p1 + p2 x
    及一條二次曲線 y = q1 + q2 x + q2
    x3 來近似原始資料。 你可以看出用 octave 與 rlab
    處理矩陣相關問題有多麼方便: 三言兩語就解決了兩題 normal equations
    AT * (A p - y) = 0 與 AT * (A q - y) = 0
    :

        [octave 語法]                   [rlab 語法]
        A = [ones(9,1), x]              A = [ones(9,1), x]
        p = (A'*A) \ A'*y               p = (A'*A) \ A'*y
        A = [ones(9,1), x, x.*x]        A = [ones(9,1), x, x.*x]
        q = (A'*A) \ A'*y               q = (A'*A) \ A'*y

如果你忘記最小方差問題 (least squares) 的解法也沒有關係,
    這個例子的重點是如何在一張圖裡面同時呈現三個函數:

        # octave 接受兩個參數, 第一個是三函數的共同 x 座標
        plot(x, [y, p(1)+p(2)*x, q(1)+q(2)*x+q(3)*x.*x])
        # rlab 則接受一個大矩陣作為參數, 第一行是三函數的共同 x 座標
        plot([x, y, p[1]+p[2]*x, q[1]+q[2]*x+q[3]*x.*x])

順便一提, 這些資料是在 octave 裡面用常態分佈亂數產生的:

        x = -2:6
        y = 1.2 * x .* x - x * 2.5 + 0.7
        t = [x; y+normal_rnd(0,0.7,1,9)]'
        save -ascii "data.txt" t

繪圖的功能不限於平面圖形。 3-d 網格, 不論是函數或資料點,
    也都可以畫。 例如想畫一個馬鞍曲面 z = x*x - y*y
    可以先這樣建一個數值矩陣:

        x = -5:5
        t = (x.*x)' * ones(1,11)

然後這樣畫出來:

        [octave 語法]                   [rlab 語法]
        gsplot(t-t')                    splot(t-t')

這裡順便大力推薦 gnuplot, 實在超級好用, 理工科系的同學早學早賺,
    不學會遺憾! 它本身的功能就只是畫圖而已, 既不能處理矩陣,
    也不能做統計運算; 但這正是許多自由軟體共同的特點:
    每套軟體只把自己的事情做好, 並提供與其他軟體良好的溝通管道
    (例如其他軟體只要可以將數值整齊地印出來, gnuplot 就可以畫出來),
    這樣學習者才能以簡馭繁, 發揮組合的力量。 [9]
我該學那一套?
筆者個人偏好 rlab, 因為它語言設計的「正交性」 (orthongonality)
    比較好, 例如想取得矩陣 A 的行數, 在 rlab 裡面可以用 size(A)[2]
    (其實用 A.nc 更簡單) 但在 octave 裡面卻無法寫 size(A)(2)
    (不知道為什麼, 在命令列下可以; 但程式裡面就不行, 如果你幫我的
    lademo.m 改成功了, 請告訴我)。 又如函式庫與個別函數是獨立的觀念,
    不必有一對一的對應關係, 名稱也不必相同, 使用起來比較方便。 對於想寫
    「作用於函數的 operators」 的 power user 來講,
    函數可以當做參數來傳遞, 更是不可或缺的功能。
    網站/手冊上開宗明義就說道 rlab 無意成為 matlab 的翻版,
    而是要以更好的語法設計來取代它, 我相信 rlab 作者 Ian Searle
    做到了。
另一方面, 用 octave 的人似乎比較多, 再加上 redhat 收錄的是
    octave 而不是 rlab, 所以 octave 的聲勢似乎比較大。 由於與 matlab
    相容, 因此既有的 matlab 工具箱也自然變成了 octave
    使用者的資源。
不過自由軟體的世界與版權私有軟體不同,
    我們認為多一些選擇總是好事, 就像 linux 有那麼多不同的版本,
    更還有許多諸如 *BSD, Hurd 等等不同於 linux 的自由作業系統一樣。
    畢竟這是一個尊重多元的時代, 不需要任何事情都定於一尊, 不是嗎?
參考網址

 http://www.octave.org/
 http://rlab.sourceforge.net/
      及 http://rlabplus.sourceforge.net/
 http://www.r-project.org/
 http://www-fourier.ujf-grenoble.fr/~parisse/giac.html
 http://www.cyut.edu.tw/~ckhung/b/re/
 http://www.octave.org/FAQ.html#SEC24
 http://matlinks.sourceforge.net/
 http://www.cyut.edu.tw/~ckhung/b/ma/gnuplot.php
 http://www.cyut.edu.tw/~ckhung/b/018learn.php#combination
http://libai.math.ncu.edu.tw/bcc16/B/matlab/index.php
      單維彰教授寫的 matlab 講義, 應該有一大半適用於 octave。

附錄: 正文當中的範例, 用 R 來打
R 的主要功能其實是統計運算. 如果你想從那個角度入門, 請參考
    英文文件。 
    
     這裡我們只介紹它的向量與矩陣功能:

        # [快速導遊]
        3 * (7 - 2)
        x <- 3 * (7 - 2)     # 一旦指定入變數, 就不再顯示在螢幕上
        1/x
        x <- 3*(7-2); y <- 6.2e-3; z <- 4.3/8;
        sin(pi/3)
        sqrt(3)/2
        log(9)
        sqrt(3+4i)
        1/0
        0/0
        ? sqrt                  # 求助
        q()                     # 離開. 用 Ctrl-D 也可以.
        
        # [使用向量與矩陣]
        # 在 R 裡面, 向量是矩陣的基礎: 要建立矩陣之前, 必須先建立向量.
        r1 <- c(1,3,-13,4)   # 先建立三個列向量
        r2 <- c(5,-6,0,1)
        r3 <- c(-1,-7,5,2)
        a  <- rbind(r1,r2,r3) # 再將它們組成一個陣列
        # 或是建立一個很長的向量, 然後用 matrix 函數將它轉換成一個 3x4 的矩陣
        # 註意: column major 的順序!
        a  <- matrix(c(1,5,-1,3,-6,-7,-13,0,5,4,1,2), 3, 4)
        b  <- c(-3,5,-19,7)
        c  <- t(b)           # 轉置矩陣
        b; c                    # 註意: R 的向量, 內定視為行向量
        t(a)                    # 看看 「轉置」 作用在矩陣上的效果, 比較清楚.
        a[3,2]
        b[3]
        c[4]
        a[7]
        x  <- matrix(runif(48,0,1), 8, 6)
        x  <- floor(x*10)
        x[5,]
        x[,2]
        x[5:8,1:3]
        5:8
        seq(50,80,by=5)
        x[c(12,1:4),c(6,5)]
        matrix(c(x,x), 8, 12)
        t(matrix(c(t(x),t(x)), 6, 16))
        size(x)
        size(x)[1]
        size(x)[2]
        as.vector(a)
        t(as.vector(t(a)))
        sum(a)                  # R 的 sum 作用於整個陣列
        apply(a,2,sum)          # 若要分別對各行作用, 必須呼叫 apply
        apply(a,1,sum)          # 或想分別對各列作用也是.
        
        # [程式實例: Gauss-Jordan 消去法求 reduced row-echelon form]
        ...
 

本頁最新版網址: 
       http://www.cyut.edu.tw/~ckhung/b/ma/linalg.php;
      您所看到的版本: February 14 2012 10:32:25. 
作者: 朝陽科技大學 資訊管理系 洪朝貴
寶貝你我的地球, 請 
      減少列印, 多用背面, 丟棄時做垃圾分類。
本文件以 
      Creative Commons Attribution-ShareAlike License
      或以 
      Free Document License 方式公開授權大眾自由複製/修改/散佈。

 





▽撻����呾▼_芢沎_こ齪_�r跡- 杬��鋒





























垀衄妀こ��醴















垀衄煦��



鋒桴華�D



撻����呾






僕 830
璃撻����呾眈燊妀こ





















遨磁


誏講



陓蚚



�r跡









硉腕惁



咺咺婓��





毞��





殏諶




























¥41.60



 撻����呾鞠琌/政測���W價渙 




妶膘���D�����I虛

啐�r


















¥70.00



 腕薯褪�W滲�翕樊�蚚��呾ん �W汜嗣髡夔峚搪煦撻��恚�絲蔔枅�呾�C 




綠謎hl22

啐�r


















¥55.00



 CANON槽夔F-789SGA褪�W滲�萍�呾ん湮�W汜蕉��賤源最恚�翔崹�詢笢 




控儔�鷽睊じ摯l桯衄癹鼠侗

啐�r


















¥3.00



 湮����腔撻����呾價渙 湮����撻����呾馱撿 撻��撮胍 赻�荌l�� 




蠍蠍�}12345654715825

啐�r


















¥39.50



 婦赩 苤最唗�r測:苤最唗睿鼠����撻��誑��鋒���I硌鰍 峚陓苤最唗嶱追諒最�虃� 痄�軓_追�虃� 峚陓苤最唗綅�I奪燴 ��呾�C諒第 淏唳 




�s傔籵絻�D�����I虛

啐�r


















¥58.00



 CANON/槽夔F-789SGA�W汜蕉��褪�W滲�萍�呾ん賤源最恚�翔崹� 




st9068

啐�r


















¥1.00



 ��螿匼第�絕a撻��媼筳秶�菁硒�徨湮����窪諦陓洘趙詢褪撮����呾 




掛掛荌砉

啐�r


















¥45.90



 諷秶��笢腔撻����呾 剢�銩� 詢脹諒郤堤唳扦 政測���W價渙 諷秶��萎倰撻����呾��觳�萋善漞� 撻��煦昴價渙 諷秶炵緙衙�� 撻��硌�� 




祩絻�D�����I虛

啐�r


















¥38.90



 撻����呾鞠琌 剢�銩�/嫶蔬 詢脹諒郤堤唳扦 政測���W價渙 撻����呾6琌 �匋廣chur煦賤 �V膽schur 煦賤睿笚ぶschur煦賤腔��呾 




祩絻�D�����I虛

啐�r


















¥99.00

¥ 138.00


 腕薯�W汜褪�W滲�萍�呾ん 嗣髡夔蕉��蚚峚搪煦撻��恚�絲蔔枅�呾�C 




�卅巍k鼠���I虛

啐�r


















¥39.80

¥ 49.80


 婦赩 MATLAB最唗偞��價渙鷂�肩� matlab��最諒最�虃� matlab撻���萋菌\呾��萎 matlab��最�饑錁T善儕籵 ��呾�C諒第 淏唳 




淏埸�D�����I虛

啐�r


















¥5.00



 湮����腔撻����呾價渙 ��螿諒最 




苳奻遽

啐�r


















¥66.70

¥ 89.00


 MATLAB�肩繫鯫� MATLAB價渙眭舑 �善M睿撻��煦昴 MATLAB����煦昴��賤 ���癐ATLAB��呾�C陓����燴 �D砉��燴馱撿�肩��� 蜇嫖屜 




蘋醪�D�����I虛

啐�r


















¥66.70

¥ 89.00


 MATLAB�肩繫鯫� MATLAB價渙眭舑 �善M睿撻��煦昴 MATLAB����煦昴��賤 ���癐ATLAB��呾�C陓����燴 �D砉��燴馱撿�肩��� 蜇嫖屜 




蘋滬�D�����I虛

啐�r


















¥67.80



 撻����呾 荎恅唳.菴侐唳4唳 (藝)資崇票 (藝)��醫塋 �D馞埻唳���W 緙���W炵蹈 �佸黟]��堤唳扦 9787115346100 撻�� ��呾源楊 荎恅 




帗笣�W埭�D�����I虛

啐�r


















¥66.33



 夥源淏唳 �D馞埻唳���W緙���W炵蹈ㄩ撻����呾(荎恅唳菴4唳) Gene H.Golub, Charles F.Van,Loan 9787115346100 




眅���羉��D�����I

啐�r


















¥30.80

¥ 40.60


 ���W眳藝(菴2唳)�у�翍 醪��褪痲��撻����呾癓玾滲�菠��穚暫蝝剆Hз 赻�閣Z晟睿陓洘��燴稛�N衄�� 




妶膘���D�����I虛

啐�r


















¥30.80



 MATLAB摯Mathematica��璃�肩� ��呾�C綅呾��璃諒最�虃� MATLAB撻���萋菌\呾 Mathematica睫��綅呾價渙�錁T諒最 ��呾�C諒第�� 




陔�髕��D�����I虛

啐�r


















¥148.00



 縐昹�WㄗCASIOㄘ FX-991CN X撻��砃講笢恅滲�翕��W��呾ん 窪啞伎 




�A��煇鼠���I虛

啐�r


















¥124.00



 縐昹�WFX-991CN X詢笢湮�W汜褪�W滲�萍�呾ん 恚�翔崹�991es笢恅唳 




控儔�鷽睊じ摯l桯衄癹鼠侗

啐�r


















¥66.33

¥ 99.00


 �萋絲蔆見撤ATLAB唳ㄗ埻�礸�3唳ㄘ��呾�C褪�W���� matlab撻��鷂撻��綅呾諒最�虃� matla�萋絲笥� ���W滲�善乖� ��呾�C諒第�� 




阹���D�����I虛

啐�r


















¥59.00



 詢蕉緉伎褪�W滲�萍�呾ん賤源最恚�翔崹�湮�W詢笢�W汜蕉��羥蚚 




�P疵薯���絕a���I虛

啐�r


















¥121.00



 縐昹�WFX-991CN X詢笢湮�W汜褪�W滲�萍�呾ん 恚�翔崹�991es汔��唳 




��赽啅萎婓��

啐�r


















¥55.00



 CANON/槽夔F-789SGA �W汜蕉�� 褪�W滲�萍�呾ん賤源最恚�翔崹� 




褪陓��赽���I虛

啐�r


















¥55.00



 CANON/槽夔F-789SGA�W汜蕉��褪�W滲�萍�呾ん賤源最恚�翔崹� 




�P疵薯��

啐�r


















¥11.00



 4*4撻��潬屜ㄛ�妒�蕾奻嶺��郯ㄛ冞Verilog���茛政PGA ��呾ん測徨 




zgmxs88

啐�r


















¥65.00



 Canon/槽夔 F-789SGA �W汜詢蕉褪�W滲�萍�呾ん 賤源最恚�翔崹� 




嘉陳煇鼠蚚こ���I虛

啐�r


















¥55.00

¥ 93.00


 TRULY陓瞳sc-991es plus賤源最��呾ん恚�翔崹�峚搪煦緙��蚚��呾�C 




陓癒追煇鼠���I虛

啐�r


















¥22.70



 撻��煦昴鷂��呾 紾啋�� 陔�A�礸縕�唳�喃N�D�虃� 




陔�A婓���D�����I虛

啐�r


















¥66.00



 撻����呾 菴3唳笢恅唳 資崇票翍 �佸黟]��堤唳扦 �D馞���W緙���W Matrix Computations/Gene H.Golub �萋萍�呾薆郖靡翍 




祩絻�D�����I虛

啐�r


















¥22.70



 撻��煦昴鷂��呾 紾啋�� 陔�A�礸縕�唳�喃N�D�虃� 豜�D�D�� 




豜�D�D�����I虛

啐�r


















¥68.53



 撻����呾(菴3唳)/�D馞���W緙���W���� (藝)資崇票//��醫塋|莩氪:圇��盻 淏唳�虃� 赻�遛��W 




�襓��D�����I虛

啐�r















奻珨��
1
2
3
4
5
...
狟珨��
僕 21��
善菴

��
復隅







眈燊こ齪芢沎





撻��煦昴


撻��燴��


唅滖撻��


��螿撻��


撻��翋�C


撻��嶱燊


�菁祩崹�


秞螿撻��


撻��潬屜


秞��螿撻��


鋒篌撻��


髦磁撻��


褪�W��呾


撻��煦昴 horn


情臚撻��潬屜


詢ь��螿撻��


vga��螿撻��


��螿撻��翋�C


屠諷撻��翋�C


��螿撻��潬屜


��螿з�Q撻��


hdmi撻��4筳4堤


vga撻��4筳4堤


4x4撻��潬屜


撻����烔


撻��з�Qん


hdmi撻��8筳8堤


撻��潬屜耀�K


綅膏�W 嫶��舜


casio fx991es



載嗣










杬���搫u腔撻����呾芢沎















¥55.00



 CANON/槽夔F-789SGA�W汜蕉��褪�W滲�萍�呾ん賤源最恚�翔崹� 
















¥76.23



 撻����呾(荎恅唳菴4唳)/�D馞埻唳���W緙���W炵蹈 淏唳�虃� 躂嗯�D�� 
















¥260.00



 肅笣�xん�D倛��呾んTI Nspire CAS��最峚搪煦撻��AP SAT蕉�� 
















¥55.00



 淏こ槽夔F-789SGA�W汜褪�W滲�萍�呾ん詢蕉賤源最恚�翔崹�F789SGA 
















¥57.00



 CANON槽夔 F-789SGA賤源最恚�翔崹��W汜滲�翕��W��呾ん 詢笢湮�W 
















¥57.00



 Canon/槽夔F-789SGA�W汜詢蕉褪�W滲�萍�呾ん賤源最恚�翔崹� 
















¥50.10



 諷秶��笢腔撻����呾 
















¥350.00



 肅笣�xん�D倛��呾んTI 84ㄛ峚搪煦 撻����呾ん AP SAT蕉��褫蚚 







 













gsearch010178017179.n.et2



燊黺杬��
磁釬漞圈
�I誏笢陑
��炵諦督
嶱溫す怢
惝涽荎符
��炵扂��
鋒桴華�D
楊薺��隴
@2013   TaoBao 唳�鉖齾�





