


生物資訊學 - 維基百科，自由的百科全書































 







生物資訊學

維基百科，自由的百科全書


					前往：					導覽，					搜尋










人類X染色體圖譜




生物化學的一部分


生物化學





關鍵部分




生物分子
代謝







目錄（英語：Index of biochemistry articles）
概述（英語：Outline of biochemistry）





歷史和主題




歷史






生物化學
細胞生物學
生物資訊學
酶學
遺傳學
免疫學
分子生物學
植物生物化學
結構生物學






生物化學概述（英語：Outline of biochemistry）






生物化學家列表（英語：List of biochemists）




主題: 生物學, 分子與細胞生物學





閱
論
編





生物資訊學（英語：bioinformatics）利用應用數學、資訊學、統計學和計算機科學的方法研究生物學的問題。生物資訊學的研究材料和結果就是各種各樣的生物學資料，其研究工具是計算機，研究方法包括對生物學資料的搜尋（收集和篩選）、處理（編輯、整理、管理和顯示）及利用（計算、模擬）。目前主要的研究方向有：序列比對、序列組裝、基因識別、基因重組、蛋白質結構預測、基因表現、蛋白質反應的預測，以及建立進化模型。
生物學技術往往生成大量的嘈雜資料。與資料挖掘類似，生物資訊學利用數學工具從大量資料中提取有用的生物學資訊。生物資訊學所要處理的典型問題包括：重新組裝在霰彈槍定序法測序過程中被打散的DNA序列，從蛋白質的胺基酸序列預測蛋白質結構，利用mRNA微陣列或質譜儀的資料檢驗基因調控的假說。
某些人將計算生物學作為生物資訊學的同義詞處理；但是另外一些人認為計算生物學和生物資訊學應當被當作不同的條目處理，因為生物資訊學更側重於生物學領域中計算方法的使用和發展，而計算生物學強調應用資訊學技術對生物學領域中的假說進行檢驗，並嘗試發展新的理論。
生物資訊學可以定義為對分子生物學中兩類資訊流的研究[1]：

第一類資訊流源於分子生物學的中心法則：DNA序列被轉錄為mRNA序列，後者被轉譯為蛋白質序列。蛋白質序列繼而摺疊為具功能的三維結構。按照達爾文演化理論，這些功能被生物體的環境所選擇，從而驅動群體中DNA序列的進化。因此，第一類的生物資訊學應用關註於中心法則中任一階段的資訊傳遞，包括DNA序列中基因的組織與控制、確定DNA中的轉錄單位、從序列預測蛋白質結構以及分子功能分析。
第二類資訊流是基於科學方法：提出關於生物學活動的假設，設計實驗以驗證這些假設，評估結果與假設的相容性，然後根據實驗資料對原假設作擴展或修正。第二類的生物資訊學應用關註於這一流程中的資訊傳遞，包括產生假設、設計實驗、通過資料庫將實驗結果組織起來、檢驗資料與模型的相容性以及修正假設的各個系統。　

麥可·沃特曼（又譯：麥克·沃特曼）（Michael Waterman）教授率先將數學和計算方法引入生物學研究，在生物資訊領域有許多開創性的貢獻，被譽為「生物資訊學之父」。他致力於將數學、統計、計算機科學應用於各種分子生物學問題中，開闢了多個重要研究方向。他與Temple Smith發展的Smith-Waterman算法奠定了生物資訊學算法的基礎，他與Eric Lander發展的生物序列映射數學模型成為人類基因組計劃的重要理論基石，同時，他的工作在數學界和計算機領域也有著廣泛和深遠的影響。2008年起，沃特曼教授受聘為北京清華大學講席教授，領導由多位海外傑出科學家組成的北京清華大學生物資訊學與系統生物學講席教授組，為中國清華大學乃至中國的生物資訊學學科發展作出了突出貢獻。2013年獲得中華人民共和國友誼獎。



目錄


1 主要研究方向

1.1 序列分析

1.1.1 基因組註釋


1.2 計算進化生物學
1.3 生物多樣性的度量
1.4 蛋白質結構預測
1.5 蛋白質表現分析
1.6 網絡和系統生物學
1.7 比較基因組學
1.8 基因表現分析
1.9 調控分析
1.10 導致癌症的突變分析
1.11 生物系統模擬
1.12 在藥物研發方面的應用


2 軟體工具
3 參考文獻

3.1 引用
3.2 來源


4 外部連結
5 參見



主要研究方向[編輯]
序列分析[編輯]
主條目：序列比對




不同基因或蛋白質的序列可以並排排列，以測量它們的相似性。 該比對比較含有WPP結構域（英語：WPP domain）的蛋白質序列。


1977年，噬菌體Φ-X174成為第一個被完整測定基因組序列的生物體。自此以後，越來越多生物體的DNA序列被人類測定。通過對這些序列的分析，人們希望獲知其中對應蛋白質編碼的基因和基因調控序列。不同物種間的基因比對既能夠解釋和預測他們蛋白質的功能的相似性，又能夠揭示不同物種間的聯繫。由於資料量巨大，依靠人工分析DNA序列早已變得不切實際，這使得人們不得不採用計算機分析數千種生物體的數十億個核苷酸組成的DNA序列。由於DNA序列中普遍存在變異現象，這些電腦程式需要識別大量相關但是不完全相同的序列。即便是在DNA測序的過程中，也存在著不確定的因素。在DNA測序的霰彈槍定序法（The Institute for Genomic Research依此技術測定了第一個細菌的基因組）中，完整的DNA鏈被打散為成千上萬條長約600到800個核苷酸的DNA片段。這些DNA片段的兩端相互重疊，只有依照正確的順序組合，才能還原為完整的DNA序列。對於較大的基因組，霰彈槍定序法能夠迅速的測定DNA片段的序列，但將它們組裝起來的工作則相當複雜。在人類基因組計劃中，該基因重組過程花費了幾個月的CPU時間（on a circa-2000 vintage DEC Alpha computer）。由於現今幾乎所有基因序列均由霰彈法測定，基因重組算法是資訊生物學研究的重點課題。
基因組中並不是所有的核苷酸都構成基因，所以序列分析的另一個研究課題是對基因組中的基因和基因調控序列進行自動識別。在較高等的生物體中，DNA序列的大部分並沒有明顯的作用。但是，這些所謂的「垃圾DNA」卻可能具有未被識別的功能。
基因組註釋[編輯]
在基因組學中，對基因和其他生物特徵的標註稱為基因組註釋。1995年，Owen White（在1995年完成的人類首次為獨立的生物體——流感嗜血桿菌——測序的工作中，他是組員之一）設計出了第一套基因組註釋軟體系統。該系統能夠自動識別基因、轉錄基因和其他生物學特徵，並能夠初步的分析它們的功能。大多數現今的註釋系統的與之類似，但用以分析DNA序列的軟體在不斷進化之中。
在尋找基因和致力於發現新蛋白的努力中，人們習慣於把新的序列同已知功能的蛋白序列作比對。由於這些比對通常都希望能夠推測新蛋白的功能，不管它們是雙重比對還是多序列比對，都可以回答大量的其它的生物學問題。舉例來說，面對一堆搜集的比對序列，人們會研究隱含於蛋白之中的系統發生的關係，以便於更好地理解蛋白的進化。人們並不只是著眼於某一個蛋白，而是研究一個家族中的相關蛋白，看看進化壓力和生物秩序如何結合起來創造出新的具有雖然不同但是功能相關的蛋白。研究完多序列比對中的高度保守區域，我們可以對蛋白質的整個結構進行預測，並且猜測這些保守區域對於維持三維結構的重要性。
顯然，分析一群相關蛋白質時，很有必要瞭解比對的正確構成。發展用於多序列比對的程式是一個很有活力的研究領域，絕大多數方法都是基於漸進比對（progressive alignment）的概念。漸進比對的思想依賴於使用者用作比對的蛋白質序列之間確實存在的生物學上的或者更準確地說是種系發生學上的相互關聯。不同算法從不同方面解決這一問題，但是當比對的序列大大地超過兩個時（雙重比對），對於計算的挑戰就會很令人生畏。在實際操作中，算法會在計算速度和獲得最佳比對之間尋求平衡，常常會接受足夠相近的比對。不管最終使用的是什麼方法，使用者都必須審視結果的比對，因為在此基礎上作一些手工修改是十分必要的，尤其是對保守的區域。
計算進化生物學[編輯]


演化與演化論




現代生物分類群體從它們的
共同祖先遺傳分化的圖示。



關鍵議題



進化論介紹（英語：Introduction to evolution）
共同起源
共同起源的證據



機制與過程



群體遺傳學 · 遺傳多樣性
突變 · 自然選擇 · 適應
遺傳漂變 · 基因流
物種形成 · 輻射適應
共同演化 · 趨異演化 · 趨同演化
平行演化 · 絕滅



研究與歷史



證據
歷史
現代綜合理論
社會影響



演化生物學領域與應用



社會生物學
演化人類學
生態遺傳學
演化發育生物學
演化語言學
演化心理學
人類演化
分子演化
種係發生學
種系發生學
人工選擇
群體遺傳學
系統分類學



生物學主題





閱
論
編





進化生物學研究物種的起源和演化。引入資訊學到進化生物學中，使得研究者能夠：

通過度量DNA序列的改變研究眾多生物體間的進化關係（超越了以前基於身體和生理特徵觀察的研究方法）
通過整個基因組的比對，研究更為複雜的進化論課題，如基因複製，基因橫向遷移等
為種群進化建立複雜的計算模型，以預測種群隨時間的演化
保存大量物種的遺傳資訊

未來的研究工作包括重建業已相當複雜的進化樹。
計算進化生物學常常與採用遺傳算法的計算機科學相混淆。後者受到生物進化原理的啟發，發展出一套軟體用於改進配方、算法、集成電路設計等等。
生物多樣性的度量[編輯]
對一個特定的生態系統，小到一層生物膜、一滴海水、一鏟泥土，大到整個地球，其中全體物種的基因組成分可被定義為這個生態系統的生物多樣性。搜集各物種的名稱、描述、分佈、遺傳資訊、地位、種群大小、棲息地，和各生物體間的相互作用等資訊，可以建立一個資料庫。有專門的軟體用於搜尋、分析和可視化這些資訊，更重要的是，它們還能夠幫助人們相互交流這些資訊。計算機能夠模擬相應的模型，以計算種群動態演變，遺傳健康狀態等等。
該領域的一個重要前景是為瀕危物種建立基因銀行，即將各物種的基因組資訊保存下來。這樣即便在將來這些物種滅絕了，人類也可能利用它們的基因組資訊重新創造出它們。
蛋白質結構預測[編輯]
蛋白質結構預測是生物資訊學的重要應用。蛋白質的胺基酸序列（也稱為一級結構）可以容易的由它的基因編碼序列獲得。在絕大多數情況下，在蛋白質的原生環境中，其結構由它的胺基酸序列唯一的決定。蛋白質的結構對於理解蛋白質的功能十分重要。這些結構資訊通常被稱為二級、三級、四級結構。目前尚沒有普遍可行方案實現這些結構的準確預測；大多數方案為啟發式的。
同源性是生物資訊學中的一個重要概念。在基因組的研究中，同源性被用以分析基因的功能：若兩基因同源，則它們的功能可能相近；在蛋白質結構的研究中，同源性被用於尋找在形成蛋白質結構和蛋白質反應中起關鍵作用的蛋白質片斷。在一種被稱為同源建模的技術中，這些資訊可與已知結構的蛋白質相比較，從而預測未知結構的蛋白質。目前為止，這是唯一可靠的預測蛋白質結構的方法。
人類血色素和豆類血色素間的相似性是以上方法的一個實例。兩種血色素有相同的功能，均能夠在各自的生物體內運輸氧氣。儘管它們的胺基酸序列大不相同，它們的蛋白質結構幾乎一樣。
蛋白質表現分析[編輯]
通過蛋白質微陣列技術或高通量質譜分析對生物標本進行測量所獲得的資料中，包含有大量生物標本內蛋白質的資訊。生物資訊學被廣泛的應用於這些資料的分析。對於前者，生物資訊學所面臨的問題與RNA微陣列資料分析中遇到的問題相似；對於後者，生物資訊學將所獲得的大量質譜資料與通過已知蛋白質資料庫預測的資料進行比較，並使用複雜的統計學方法進一步分析。
網絡和系統生物學[編輯]
網絡分析試圖瞭解生物網絡中的關係，如代謝或蛋白質 - 蛋白質相互作用網絡。儘管生物網絡可以由單一類型的分子或實體（例如基因）構建，但是網絡生物學通常嘗試整合許多不同的資料類型，例如蛋白質，小分子，基因表現資料等。另一個流行的遺傳網絡分析資料源是文獻資料。相關工具包括Pathway Studio和IPA。
系統生物學涉及使用細胞子系統（例如代謝物和包括代謝，訊息傳遞途徑和基因調節網絡的酶的網絡）的計算機模擬來分析和可視化這些細胞過程的複雜連接。例如，人工生命或虛擬進化試圖通過簡單（人工）生命形式的計算機模擬來理解進化過程。
比較基因組學[編輯]
比較基因組學的核心課題是識別和建立不同生物體的基因或其他基因組特徵的聯繫。這些跨基因組的聯繫使得我們能夠跟蹤基因組的進化過程。基因組進化由多個不同層次的事件完成。在最低的層次，單個核苷酸上發生了點變異。在較高的層次，大的染色體片段經歷了複製、橫向遷移、逆轉、調換、刪除和插入等過程。在最高的層次上，整個基因組會經歷雜交、倍交、內共生等變異，並迅速產生新的物種。
基因表現分析[編輯]
多種生物學技術可以用於測量基因的表現，如DNA微陣列，表現序列標籤（expressed sequence tag），基因表現連續分析（serial analysis of gene expression），大規模平行信號測序（massively parallel signature sequencing），多元原位雜交法（multiplexed in-situ hybridization）等。上列所有方法均嚴重依賴於環境並會產生大量高雜訊的資料。自從高通量測序技術實現商品化應用以來，轉錄組測序（RNA-Seq）日益成為研究基因表現資訊的主要技術手段。相比傳統方法，轉錄組測序技術具有諸多優勢，例如更高的靈敏度，更準確的表現水平測定，更易於發現先前未註釋的基因或轉錄本等。在這些技術的應用過程中，生物資訊學致力於發展一套統計學工具以相應的大規模資料中提取有用的生物學資訊。
調控分析[編輯]
調控是指當細胞受到外信號刺激之後其內發生的一系列反應過程的總和。生物資訊學技術被用於分析調控的各個步驟。例如，基因表現的資料可用於分析基因調控。對於一個單細胞生物體，我們可以用生物晶片技術觀察受到不同外界刺激、處於細胞周期不同狀態的細胞，並將採集到的資料利用聚類算法分析，以尋找表現相似的基因或樣本。該結果可用於多種深入的分析。
導致癌症的突變分析[編輯]
主條目：腫瘤基因組學
二代測序在生物資訊學上的突破使得腫瘤基因組學的範疇得到很大的擴展，新方法與軟體的出現也讓生物資訊學家更快、更便宜地對癌症基因組進行測序。二代測序使得分類基因組裡導致癌症的突變的流程變得更靈活，也使得透過為不同時間的樣本測序，追蹤癌症病人的病況演進的檢測手段在未來成為可能[2]。
生物系統模擬[編輯]
系統生物學通過對細胞子系統的計算機模擬，分析這些細胞過程間的複雜聯繫，並將分析結果可視化。例如，人工生命就通過計算機模擬簡單的生物形式，以幫助人類瞭解進化過程。
在藥物研發方面的應用[編輯]
生物資訊學可用於藥物靶標基因的發現和驗證。有許多資料庫可用來獲得在不同組織在正常／疾病狀態下基因表現的差異，通過搜尋這些資料庫，可以得到候選基因作為藥物靶標，特異性地針對某一種疾病。另外，還可根據蛋白質功能區和三維結構的預測來對藥物靶標進行鑑定，以便早期瞭解所研究蛋白的屬性，預測它是否適用於藥物作用。
軟體工具[編輯]
BLAST（基本局部比對搜尋工具）和FASTA是目前使用得最為頻繁的兩套資料庫搜尋程式。它們的功能相近，都是把用戶提交的一個核酸序列或蛋白質序列拿去與指定的資料庫中的全部序列作比較。一般認為，BLAST運行速度快，對蛋白質序列的搜尋更為有效。FASTA運行較慢，對核酸序列更為敏感。也有基於網頁交互的軟體如STING，用於結構生物資訊學的分析。
參考文獻[編輯]
引用[編輯]


^ Altman, 1998
^ Hye-Jung, E.C.; Jaswinder, K.; Martin, K.; Samuel, A.A; Marco, A.M. 「Second-Generation Sequencing for Cancer Genome Analysis」. (編) Dellaire, Graham; Berman, Jason N.; Arceci, Robert J. Cancer Genomics. Boston (US): Academic Press. 2014: 13–30. ISBN 9780123969675. doi:10.1016/B978-0-12-396967-5.00002-5. 


來源[編輯]

書籍


《新藥藥物靶標開發技術》2006年版，高等教育出版社，ISBN 978-7-04-018953-7

外部連結[編輯]



於維基詞典中查詢bioinformatics。



（英文）生物資訊學機構
EMBnet
Open Bioinformatics Foundation
Bioinformatics Resource Portal (SIB)

參見[編輯]


生物學主題
分子與細胞生物學主題
計算機科學主題




計算機科學
計算生物學
資訊可視化
應用數學
生物數學
生物化學
化學資訊學
分子生物學
生物統計學
系統生物學
種系發生學
醫學資訊學
衛生資訊技術
生物醫學工程
蛋白質組學











閱
論
編


生物資訊學






資料庫



測序資料庫：GenBank、European Nucleotide Archive（英語：European Nucleotide Archive）、日本DNA資料庫
輔助資料庫：UniProt, database of protein sequences grouping together Swiss-Prot, TrEMBL 和 蛋白質資訊資源（英語：Protein Information Resource）
其它資料庫：蛋白質資料庫, Ensembl, 和InterPro（英語：InterPro）
專項基因組資料庫：酵母基因組資料庫（英語：Saccharomyces Genome Database）、FlyBase（英語：FlyBase）, VectorBase（英語：VectorBase）, WormBase（英語：WormBase）, PHI-base（英語：PHI-base）, The Arabidopsis Information Resource與斑馬魚資訊網（英語：Zebrafish Information Network）








軟體



BLAST
Bowtie
Clustal（英語：Clustal）
HMMER（英語：HMMER）
MUSCLE
SAMtools（英語：SAMtools）
TopHat（英語：TopHat (bioinformatics)）








其它



伺服器：ExPASy（英語：ExPASy）
本體論：基因本體








機構



歐洲生物資訊研究所
美國國家生物技術資訊中心（NCBI）
瑞士生物資訊研究所（英語：Swiss Institute of Bioinformatics）
日本國立遺傳學研究所
博德研究所（英語：Broad Institute）
維康基金桑格研究院（英語：Wellcome Trust Sanger Institute）











計算生物學
生物資料庫列表（英語：List of biological databases）
測序
序列比對
分子種系發生學
















閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






算法和資料結構

算法分析 · 算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 解釋器 · 編程範型（過程化編程 · 物件導向程式編程 · 函數式編程 · 邏輯編程等）






並發、並行和分佈式系統

多處理器 · 網格計算 · 並發控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網絡

路由 · 網絡拓撲 · 密碼學






資料庫

資料庫管理系統 · 關係資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料挖掘






人工智慧

自動推理 · 計算語言學 · 計算機視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






計算機圖形學

可視化 · 計算機動畫 · 圖像處理






人機互動

計算機輔助功能 · 用戶界面 · 可穿戴計算機 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值算法 · 符號計算







註：計算機科學領域也可根據ACM-2012分類系統進行分類。














閱
論
編


生物學






生物學分支



解剖學
天體生物學
生物化學
生物地理學
生物力學
生物物理學
生物資訊學
生物統計學
植物學
細胞生物學
細胞微生物學（英語：Cellular microbiology）
化學生物學
時間生物學
保育生物學
發育生物學
生態學
流行病學
表觀遺傳學
演化生物學
遺傳學
基因組學
組織學
人體生物學（英語：Human biology）
免疫學
海洋生物學
生物數學
微生物學
分子生物學
真菌學
神經科學
營養學
生命起源
古生物學
寄生蟲學
病理學
藥理學
生理學
量子生物學
社會生物學
合成生物學
系統生物學
生物分類學
病毒學
毒理學
動物學











生命的層次結構



生物圈
生態系統
群落
種群
生命體
生物系統
器官
組織
細胞
胞器
生物分子複合體（英語：Biomolecular complex）
分子（高分子, 生物分子）
原子








基礎



細胞學說
生態
能量
演化
遺傳學
體內平衡
合成生物學
生物分類學








原理





演化




適應
遺傳漂變
基因流動
巨演化
微演化
突變
自然選擇
物種形成









生態學




生物多樣性
種間關係
生態系統
動物棲地
生態位
種群生態學
資源 (生物)（英語：Resource (biology)）









分子生物學




細胞信號傳送
發育生物學
表觀遺傳學
基因調控（英語：Regulation of gene expression）
減數分裂
有絲分裂
轉錄後修飾









生物化學




碳水化合物
脂類
代謝
核酸
光合作用
蛋白質











詞彙表



植物詞彙（英語：Glossary of botanical terms）
生態詞彙（英語：Glossary of ecology）
植物形態詞彙（英語：Glossary of plant morphology）
生物分類法









分類 · 主題 ·  共享資源 · 專題














閱
論
編


組學主題






基因組學



認知基因組學（英語：Cognitive genomics）
計算基因組學（英語：Computational genomics）
基因組計劃

人類基因組計劃


古多倍性（英語：Paleopolyploidy）
元基因組學
功能基因組學（英語：Functional genomics）
個人基因組學（英語：Personal genomics）
社會基因組學（英語：Social genomics）
結構基因組學








生物資訊學



生物晶片
化學資訊學
化學基因組學（英語：Chemogenomics）
免疫組學
連接組學
糖組學
脂類組學（英語：Lipidomics）
代謝物組學
多肽組學（英語：Peptidomics）
藥物遺傳學（英語：Pharmacogenetics）
藥物基因組學
系統生物學
毒理基因組學（英語：Toxicogenomics）
轉錄物組學








結構生物學



蛋白質組學

人類蛋白質組計劃


結構藥物設計








研究工具和技術



雙向電泳
質譜法
電噴霧離子法（英語：Electrospray ionization）（ESI）
基質輔助雷射解吸/電離（MALDI）
微流控
同位素標記（英語：Isotopic labeling）








機構



國立衛生研究院 (美國)
日本DNA資料庫（日本）
歐洲分子生物學實驗室（歐盟）
惠康基金會桑格研究院（英語：Wellcome Trust Sanger Institute）（英國）
















閱
論
編


醫療資訊學






衛生資訊管理



電子健康檔案
個人健康檔案
門診管理系統
醫院資訊系統
DICOM
衛生資訊技術
區域健康資訊組織
計算機化醫囑錄入








學科分支



生物資訊學
轉化醫學
計算生物學
公共衛生資訊學








醫學分類系統



ICD
SNOMED CT
LOINC
HRHIS
CCR
ISO 27799








專業組織機構



國際醫學資訊學協會
澳大利亞健康資訊學會
巴西健康資訊學會
印度醫學資訊學會
美國醫學資訊學協會
歐盟醫學資訊學聯盟








其他概念



Health Level 7
醫學資訊學及健康資訊學相關期刊雜誌
















閱
論
編


技術






領域




農業



農業工程
水產養殖
水產學
食品化學
食品工程
營養學
食品技術
食品微生物學（英語：Food microbiology）
遺傳利用限制技術（英語：Genetic use restriction technology）








生物醫學（英語：Biomedical technology）



生物資訊學
生物醫學工程
生物工程學
生物技術
健康科學
生化檢驗
藥理學
神經科學
組織工程學
基因工程
奈米醫學
化學資訊學








水利/土木建築



水利工程
土木工程
建築工程
建築設備
消防工程
安全工程
結構工程








教育技術



在線學習
教育技術學
教育軟體（英語：Educational software）
虛擬校園（英語：Virtual campus）








能源



核工程
核技術
儲能技術
石油工程（英語：Petroleum engineering）








軍事



彈藥
炸彈
軍事技術
電子作戰
低可偵測性技術
工兵
軍事通信（英語：Military communications）








資訊



人工智慧
計算機工程
計算機科學
音樂工藝
通信工程
通信
圖形
資訊技術
軟體工程
音樂
語音識別
可視化技術
系統分類學
本體工程
資訊學








工業（英語：Industrial technology）



奈米科技
音頻工程
生物工程
生化工程
陶瓷工程
化學工程
控制工程
低溫學
電氣工程
電子工程
工程技術
工程學
工業工程學
企業工程
水力學
機械工程
機械電子學
冶金工程
海洋工程
光學工程
系統工程
運輸工程
電機工程學
金融工程學
製造
機械
採礦業
自動化技術
冶金學








交通



航空航天
航空航天工程
空間技術
機動車
車輛工程
交通工程
流量工程








環境科技



綠色建築
可再生能源
永續設計
環境工程
生態工程
潔淨科技（英語：Clean technology）
生態技術（英語：Ecotechnology）
環境工程科學（英語：Environmental engineering science）








應用科學



考古
電子學
光學
半導體物理學
環境科學
材料科學
微系統
微技術
奈米技術








其他領域



機器人學
機械電子學
蛋白質工程
系統工程
聚合物工程（英語：Polymer engineering）











組件



基礎設施
發明
發明年表
知識
機器
技能
工藝
工具








技術史



新石器革命
工業革命
第二次工業革命
數字化革命
第三次工業革命
資訊時代
史前技術（英語：Outline of prehistoric technology）
古代技術（英語：Ancient technology）
中世紀技術（英語：Medieval technology）
文藝復興技術（英語：Renaissance technology）
噴氣時代（英語：Jet Age）








理論（英語：Theories of technology）
和概念



適用技術
破壞性創新
高科技
技術成熟度曲線
專家統治
技術決定論
技術官僚
技術奇異點
技術接受模型
超人類主義
軍民兩用技術（英語：Dual-use technology）
技術倫理（英語：Ethics of technology）








其他



新興技術列表
卡爾達肖夫指數
Category:各國科技
Category:科技公司
Category:技術大學和學院
技術傳播者
技術新聞學











Category:技術
commons:Category:技術
Portal:技術













權威控制



GND: 4611085-9
NDL: 00870420












 
						取自 "https://zh.wikipedia.org/w/index.php?title=生物信息學&oldid=45257123"					
6 個分類：生物信息學生物工程生物統計學生物數學計算生物學形式科學隱藏分類：包含規範控制信息的維基百科條目使用ISBN魔術連結的頁面 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


العربيةБеларускаяБългарскиবাংলাBosanskiCatalàکوردیČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiفارسیSuomiFrançaisGalegoעבריתहिन्दीHrvatskiMagyarBahasa IndonesiaIdoÍslenskaItaliano日本語Basa JawaGĩkũyũҚазақшаಕನ್ನಡ한국어LatinaLëtzebuergeschLimburgsLietuviųLatviešuമലയാളംМонголBahasa MelayuNederlandsNorsk nynorskNorsk bokmålNovialOccitanPolskiPortuguêsRomânăРусскийScotsSrpskohrvatski / српскохрватскиSimple EnglishSlovenčinaShqipСрпски / srpskiSvenskaதமிழ்తెలుగుไทยTagalogTürkçeУкраїнськаاردوTiếng ViệtWinarayייִדישBân-lâm-gú 
編輯連結 





 本頁面最後修訂於2017年7月18日 (週二) 14:43。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 









BLAST (生物資訊學) - 維基百科，自由的百科全書






























 







BLAST (生物資訊學)

維基百科，自由的百科全書


					前往：					導覽，					搜尋






生物資訊學中，BLAST（英語：Basic Local Alignment Search Tool）它是一個用來比對生物序列的一級結構（如不同蛋白質的胺基酸序列或不同基因的DNA序列）的算法。 已知一個包含若干序列的資料庫，BLAST可以讓研究者在其中尋找與其感興趣的序列相同或類似的序列。 例如如果某種非人動物的一個以前未知的基因被發現，研究者一般會在人類基因組中做一個BLAST搜尋來確認人類是否包含類似的基因（通過序列的相似性）。BLAST演算法以及實現它的程式由美國國家生物技術資訊中心（NCBI）的Eugene Myers、Stephen Altschul、Warren Gish、David J. Lipman及Webb Miller博士開發[1]的。
研究者利用BLAST來解決的其他問題有：

哪個細菌物種包含與胺基酸序列已知的某蛋白質有親緣關係的蛋白質？
被測序的一段DNA來自哪裡？
何種基因編碼的蛋白質表現出剛剛被確定的某種結構或結構模體？

……等等。



目錄


1 背景
2 算法
3 相關的各種程式

3.1 蛋白-蛋白BLAST（blastp）
3.2 已轉錄序列-蛋白BLAST（blastx）
3.3 蛋白-已轉錄序列BLAST（tblastn）
3.4 已轉錄序列-已轉錄序列BLAST（tblastx）
3.5 位置相關的疊代BLAST（PSI-BLAST）
3.6 PHI-BLAST
3.7 megaBLAST
3.8 RPS-BLAST
3.9 IgBLAST
3.10 GEO BLAST


4 參考文獻
5 外部連結
6 參見



背景[編輯]
BLAST是一個被廣泛使用於分析生物資訊的程式，因為它可以兼顧我們在做搜尋時的速度以及搜尋結果的精確度。因為當我們所要搜尋的目標資料庫非常龐大的時候，速度就變成一項很需要考量的因素。在像BLAST和FASTA這些快速算法被開發之前，我們是使用動態規劃算法來作資料庫的序列搜尋，這真的非常的耗時。BLAST使用啟發式搜尋來找出相關的序列，在速度上比完全只使用動態規劃大約快上50倍左右，不過它不像動態規劃能夠保證搜尋到的序列（Database sequence）和所要找的序列（Query sequence）之間的相關性，BLAST的工作就是盡可能找出資料庫中和所要查詢的序列相關的資訊而已，精確度稍微低一點。此外，BLAST比FASTA更快速，因為BLAST只對比較少出現或是較重要的一些關鍵字作更進一步的分析，而FASTA是考慮所有共同出現在所要搜尋的序列和目標序列的字。從下麵介紹的演算法可以更進一步的瞭解。
算法[編輯]
這邊我們以蛋白質對蛋白質序列搜尋所用的程式BLASTP之實做的步驟，來瞭解BLAST這程式的主要思想。[1]

移除Query序列中之低複雜度以及有串接重複現象的區域
低複雜度是指由很少種類的元素（如胺基酸）所組成的一個區域；而串接重複現象是指在一個Query序列中，有兩段串連的區域它們組成的方式一模一樣。這兩種在序列中的區域可能會讓BLAST找出一些雖然分數夠高，但是其實和Query序列並不相關之序列，所以在我們執行搜尋之前，要先把Query序列中的這兩種區域濾掉。BLAST的實際作法是，它會把這些區域用符號代替，並且在搜尋的時候忽略這些符號。蛋白質序列中，就用X符號標示；而DNA序列中，則用N符號標示。低複雜度區域的部份，BLAST是用一個叫做SEG的程式來處理蛋白質序列，而用叫做DUST的程式來處理DNA序列。另一方面，，蛋白質序列中之串接重複現象的區域則是使用XNU來處理。
將Query序列中每k個字的組合做成一個表
以k=3為例（DNA序列中，我們則常以k=11為例），我們"依序"將Query序列中每3個字的組合視為一個字組，並將這些字組列在一張字組表上，直到Query序列中最後一個字也被收入進表上為止。由圖一可以更清楚的瞭解整個作法。


圖1.製作字組表的概念。



列出我們所關心的所有可能之字組
這個步驟就是BLAST和FASTA之間很重要的一點不同處。FASTA關心所有在第二步中所找出的字組表上的每一個字組，它會去搜尋資料庫中的序列，看看這些序列是否含有這些字組；然而，BLAST只對高分的一些字組有興趣，而字組的分數是由依序比較字組間的每個字，再配合得分矩陣（substitution matrix或scoring matrix）所產生的。因此，對於每一個字組而言，可能有20^3個BLAST可能關心的字組，當然這些字組經過一個門檻分數的篩選後，只有少數的字組會留下，而這些就是BLAST真正所關心的字組。舉例來說，若以BLOSUM62為得分矩陣，則PQG分別和PEG以及PQA比較所得的分數是15以及12分，若門檻值是13，則PEG會留下來並被用於之後的步驟，而PQA則不被考慮。（在DNA序列的搜尋中，我們對於匹配的字是加5分，不匹配的則是扣4分。）
將這些經篩選後剩下的高分字組組織成快速搜尋樹的結構
這是為了要讓程式能快速的比對這些高分字組和資料庫中的序列是否有完全匹配（exact match）的情形。
對每個Query序列中的字組重複步驟1到4，並得到所有相應的高分字組
掃瞄資料庫中的序列，看看是否有跟剩下的高分字組完全匹配的情形
BLAST會搜尋資料庫序列中是否有高分字組出現，像是在第三步找出來的PEG。若掃瞄到有完全匹配的情形發生，那這個完全匹配的位置就會是我們之後要對Query序列和資料庫序列做無間隙的區域排比（ungapped local alignment）的起點。
將這些完全匹配的地方擴展為高分序對（high-scoring segment pair, HSP）

舊版的BLAST會從這個匹配的位置，分別向左右去擴展，直到比對出來的分數開始變小為止。圖2闡述了這個概念。


圖2.擴展匹配字組的程式



為了更有效率，新版的BLAST被開發出來，叫做BLAST2或是Gapped BLAST。為了要維持搜尋的靈敏度，BLAST2使用比較低的門檻值以留下較多的高分字組，因此第3步的高分字組表會變的比較長。接著，如果在圖3中以X代表的匹配字組是在同一個從左下往右上的對角線上，而且它們的距離是小於一個門檻值A，則這兩個匹配的位置會被結合成一個更長的區域。最後，這個新的區域會用舊版BLAST向左右擴展的方式來延伸成HSP，而這個HSP的分數一樣也是用得分矩陣來評分每一個比對的情形，並將這些分數加總起來，就跟之前找高分字組的方法一樣。


圖3.匹配字組在以Query序列和資料庫序列所構成的平面上的位置





將所有分數夠高的HSP列出來
所有分數高於某個由經驗法則推測出來的門檻值S之HSP都將被列出。這個門檻值S是由檢視兩個不相關的序列去作大量無間隙的區域排比得來的分數之分佈，進而推測出S該怎麼制定以保證被留下來的HSP都具有一定程度的意義。
評估這些留下來的HSP它們的分數是否具有意義
BLAST會利用Gumbel extreme value distribution (EVD)這個極值的分佈，來評估每個HSP分數的統計意義（已經有人證明兩個不相關的序列去作區域排比時，不考慮gap的使用，做出來的分數都會呈現Gumbel EVD的情況；考慮gap的使用時，該結論尚未被證明）。根據Gumbel EVD所推測出來的理論，一個分數S大於或等於Gumbel EVD裡面某個值x的機率是




p

(
S
≥
x
)

=
1
−
exp
⁡

(
−

e

−
λ

(
x
−
μ
)



)



{\displaystyle p\left(S\geq x\right)=1-\exp \left(-e^{-\lambda \left(x-\mu \right)}\right)}


，其中




μ
=





[
log
⁡

(
K

m
′


n
′

)

]





╱






λ





{\displaystyle \mu ={}^{\left[\log \left(Km'n'\right)\right]}\!\!\diagup \!\!{}_{\lambda }\;}


統計變數



λ


{\displaystyle \lambda }

和




K



{\displaystyle \mathrm {K} }

是由Query序列去和大量被混亂排列（Globeal or local shuffling）的一個資料庫序列作無間隙區域排比所形成的Gumbel EVD，再由這個來評估出這些統計變數。統計變數



λ


{\displaystyle \lambda }

和




K



{\displaystyle \mathrm {K} }

取決於所使用的得分矩陣以及間隙懲罰值（Gap penalties），還有序列的元素組成成份。至於m』和n』則分別是Query序列和資料庫序列的有效長度（Effective length）。有效長度的由來是因為在兩序列的排比中，如果排比的起點靠近其中一個序列的結尾處時，則這個排比很難有機會形成一個好的排比，這稱為邊際效應（[Edge effect http://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html#head7]）。因此，要利用將原始序列的長度經過一些修剪來彌補邊際效應，以達到比較好的統計估測（註意，當序列的長度都大於200時，邊際效應通常可被忽略）。被修正過得長度是





m
′

≈
m
−



(
ln
⁡


K

m
n

)


H





{\displaystyle m'\approx m-{\frac {\left(\ln {\mathrm {K} mn}\right)}{\mathrm {H} }}}







n
′

≈
n
−



(
ln
⁡


K

m
n

)


H





{\displaystyle n'\approx n-{\frac {\left(\ln {\mathrm {K} mn}\right)}{\mathrm {H} }}}

（註意n是所有資料庫中序列長度的總和）,
其中




H



{\displaystyle \mathrm {H} }

是指兩個不相關的序列去作無間隙區域排比後，每一個排比對平均所得的分數，這和我們所使用的得分矩陣密切相關。Altschul和Gish先生提供了我們這些統計變數的參考值，如



λ
=
0.318


{\displaystyle \lambda =0.318}

、




K

=
0.13


{\displaystyle \mathrm {K} =0.13}

、及




H

=
0.40


{\displaystyle \mathrm {H} =0.40}

，這邊使用的得分矩陣是BLOSUM62。使用這些參考值去作統計意義的估測其實不是非常準確。經由以上分析，我們可能找出一個和Query序列相關的資料庫序列，接著我們要計算這個資料庫序列的期望分數E（Expect score），它的意義是當我們對非常多個不相關序列其中的兩個作無間隙區域排比時，所得的分數會高於這個資料庫序列和Query序列之間的HSP分數之個數。經由搜尋一個有D個序列的資料庫所得之期望分數E可由下式得到。





E

≈
1
−

e

−

p


(

S

≥

x

)





{\displaystyle \mathrm {E} \approx 1-e^{-\mathbf {p} \left(\mathbf {S} \geq \mathbf {x} \right)}}


甚至當




p

<
0.1


{\displaystyle \mathbf {p} <0.1}

時，E可以由泊松分佈更進一步簡化為





E

=

p


D



{\displaystyle \mathrm {E} =\mathbf {p} \mathrm {D} }


註意這邊用來估測HSP分數（無間隙）的期望分數E和最後一個步驟用來估測具有間隙的區域排比分數的期望分數E是不一樣的。差別就在是否具有間隙（Gap），所以先前的統計變數都要重新計算。
將一個資料庫序列中的多個HSP區域結合成一個更長的排比
有時，我們會在一個資料庫序列中找到多個HSP區域，然後將它們結合成一個更長的排比序列，這提供Query序列和資料庫序列之間相關性的另一個證據。當我們要比較這些結合後的區域之間孰輕孰重時，有兩種方法讓我們選擇。一種叫做Poisson法則（Poisson method），另外一種叫做總分法則（sum-of scores method）。假設有兩個新結合出來的區域，它們個別的HSP分數分別是（65, 40）和（52, 45）。Poisson法則是以誰的低分比較高來給予評價，像（52, 45）就比（65, 40）重要，因為45>40；然而，總分法則就比較重視（65, 40）這組，因為65+40（105）比52+45（97）大。舊版的BLAST是用Poisson法則，而新版的BLAST或是WU-BLAST則是使用總分法則。

顯示Query序列和所有之前找到可能相關的資料庫序列之有間隙區域排比

舊版的BLAST只能顯示出Query序列和之前找到的HSP區域之間的無間隙區域排比，甚至當一個資料庫序列中有多個HSP也是一樣，只會分開顯示。
新版的BLAST就不像舊版那樣，若一個資料庫序列中有多個HSP，則它可以將這些HSP統統包含進一個較大型的有間隙區域排比。這邊再提醒一次，這裡做出來的有間隙區域排比之分數也是用先前提到的Gumbel EVD找出的期望分數E來作評估，但這邊的統計變數要考量到間隙懲罰值，因此和之前的期望分數E是不一樣的。


列出上一步驟中期望分數E低於我們所要求的門檻值之資料庫序列

相關的各種程式[編輯]
由NCBI管理的BLAST網站允許任何人使用瀏覽器來在包含大部分新測序的物種的不停更新的DNA或蛋白質資料庫中進行相似性搜尋。這個伺服器包含很多程式，最重要的幾個如下：
蛋白-蛋白BLAST（blastp）[編輯]
已知一個蛋白的胺基酸序列，通過這個程式可以找出在用戶選擇的蛋白質資料庫中與其最相似的序列。
已轉錄序列-蛋白BLAST（blastx）[編輯]
已知一段已經轉錄的序列，藉由這個程式對這段序列的6個ORF對上用戶所選擇的蛋白質資料庫， 比對最相似的序列。其功用可以找出在基因體DNA（genomic DNA）上轉譯出蛋白質的序列。
蛋白-已轉錄序列BLAST（tblastn）[編輯]
已知一段蛋白質的胺基酸序列，藉由這個程式可將此序列，對用戶所選擇的已轉錄序列資料庫（包含這個資料庫的6個ORF），比對出最相似的序列。
已轉錄序列-已轉錄序列BLAST（tblastx）[編輯]
已知一段已轉錄的序列，藉由這個程式對這已知序列的6個ORF，對上用戶所選擇的已轉錄序列資料庫（亦包含6個ORF），比對出最相似的序列，因為這個程式比對來源的6個ORF，與資料庫的6個ORF，所以會執行相當久。
位置相關的疊代BLAST（PSI-BLAST）[編輯]
這個程式用來搜尋蛋白質的"遠親".首先，一個用戶提交的蛋白質序列的所有"近親"的列表被建立起來，然後這些蛋白質被結合在一個作為對序列的某種平均的"特徵序列"當中。再然後用這個特徵序列在蛋白質資料庫中進行搜尋，就會找出更大的一組織蛋白質的列表。這個蛋白質列表有一個不同的特徵序列，這個序列被用來疊代地運行上述過程。
通過在搜尋中包含相關的蛋白質，PSI-BLAST對於尋找已知蛋白進化上的"遠親"的靈敏度要比一般的blastp高很多。
PHI-BLAST[編輯]
Focuses search around pattern (motif)
megaBLAST[編輯]
RPS-BLAST[編輯]
IgBLAST[編輯]
GEO BLAST[編輯]
參考文獻[編輯]


^ D.W. Mount (2004). "Bioinformatics: Sequence and Genome Analysis.". Cold Spring Harbor Press.


外部連結[編輯]

NCBI-BLAST 首頁
NCBI-BLAST 教程

參見[編輯]

序列比對









閱
論
編


生物資訊學






資料庫



測序資料庫：GenBank、European Nucleotide Archive（英語：European Nucleotide Archive）、日本DNA資料庫
輔助資料庫：UniProt, database of protein sequences grouping together Swiss-Prot, TrEMBL 和 蛋白質資訊資源（英語：Protein Information Resource）
其它資料庫：蛋白質資料庫, Ensembl, 和InterPro（英語：InterPro）
專項基因組資料庫：酵母基因組資料庫（英語：Saccharomyces Genome Database）、FlyBase（英語：FlyBase）, VectorBase（英語：VectorBase）, WormBase（英語：WormBase）, PHI-base（英語：PHI-base）, The Arabidopsis Information Resource與斑馬魚資訊網（英語：Zebrafish Information Network）








軟體



BLAST
Bowtie
Clustal（英語：Clustal）
HMMER（英語：HMMER）
MUSCLE
SAMtools（英語：SAMtools）
TopHat（英語：TopHat (bioinformatics)）








其它



伺服器：ExPASy（英語：ExPASy）
本體論：基因本體








機構



歐洲生物資訊研究所
美國國家生物技術資訊中心（NCBI）
瑞士生物資訊研究所（英語：Swiss Institute of Bioinformatics）
日本國立遺傳學研究所
博德研究所（英語：Broad Institute）
維康基金桑格研究院（英語：Wellcome Trust Sanger Institute）











計算生物學
生物資料庫列表（英語：List of biological databases）
測序
序列比對
分子種系發生學












 
						取自 "https://zh.wikipedia.org/w/index.php?title=BLAST_(生物資訊學)&oldid=41945628"					
5 個分類：生物信息學算法計算系統發生學生物信息學軟體實驗室軟體公有領域軟體 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


العربيةCatalàČeštinaDeutschEnglishEspañolEestiفارسیFrançaisÍslenskaItaliano日本語NederlandsNorsk bokmålPolskiPortuguêsРусскийСрпски / srpskiSvenskaTürkçeTiếng Việt 
編輯連結 





 本頁面最後修訂於2016年10月27日 (週四) 04:41。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 











生物資訊實驗室 - 中央研究院 資訊科學研究所




















 



關於本所


簡介
歷年簡介
本所歷史
本所組織
所長的話
學術諮詢委員會
所務工作委員會
榮譽榜
聯絡資訊
交通資訊




人員


研究人員
合聘及兼任研究人員
技師人員
行政人員
博士後研究人員 
研究助理
國際研究生
訪問學人
退休及離職研究人員





研究群


生物資訊
電腦系統
資料處理與探勘
多媒體技術
語言與知識處理
網路系統與服務 
程式語言與形式方法
計算理論與演算法




研究概況


著作目錄
院內合作計畫
院外合作計畫
重要研究成果
近期研究成果




活動訊息


卓越演講系列
近期消息與榮譽
學術演講
學術研討會




徵才



誠徵博士後研究 
誠徵助理

誠徵研發替代役
誠徵暑期實習生





JISE



圖書館


最新消息
本館導覽
館藏查詢
電子資源
文獻傳遞服務
其他常用連結
個人借閱紀錄
本所出版品
所內專區




資訊室


簡介
網路資源使用規則
IP與機房服務
電腦與網路
帳號及電子郵件
電話系統
列印裝置
會議室設備使用
軟體及物品借領
FAQ及其他
聯絡資訊




所內事務


所內公告
助理人員需知
問題通報
線上申請、填報
IP與機房服務
所內服務系統
研究人員專區
管理專區
行政各組室







 


生物資訊
電腦系統
資料處理與探勘
多媒體技術
語言與知識處理
網路系統與服務 
程式語言與形式方法
計算理論與演算法



 












 生物資訊實驗室


Principal Investigators:


施純傑 Arthur Chun-Chieh Shih(Chair)

宋定懿Ting-Yi Sung

何建明 Jan-Ming Ho



林仲彥 Chung-Yen Lin

許聞廉 Wen-Lian Hsu

蔡懷寬Huai-Kuang Tsai


Postdoctoral Fellow:


林信男 Hsin-Nam Lin
張育榮 Yu-Jung Chang
陳淑華 Shu-Hwa Chen


陳鯨太 Ching-Tai Chen
黃佳欣 Jia-Hsin Huang
蔡鬱偉 Yu-Wei Tsay


 [ 相關網站 ]      人工智慧抗癌實驗室[ 研究群介紹 ]

		本實驗室的研究是以資訊技術應用在生物和醫學研究為主，針對不同生物體學（omics）上的生物學和生物醫學進行解析，主要研究可分成基因體和轉譯體研究，蛋白體及代謝體研究兩大部份，分別詳述如下。﹙１﹚基因體和轉譯體研究

處理巨量定序資料的方法論開發：新世代定序技術已成為基因體和轉錄體研究的主要工具。然而定序的資料量相當龐大，定序的序列也常有錯誤，因此在資料處理時，常造成記憶體不足和計算時間冗長等困擾，亟待解決。因此，近年來我們致力於發展新的方法和開發新的工具來解決一連串計算的問題。在次世代 read mapping 上，我們發展了一個極為快速的演算法 Kart。Kart 將一個 read 分解成更小的碎片，並將其個別匹配到基因序列。實驗結果證實 Kart 比一般 mappers 快三到十倍之多，而且錯誤容忍度及準確度均極高。同樣的方法也可以應用在 RNA-seq 上，效果也甚佳。在基因體組裝方面，我們設計一套以延伸為基礎的組裝程式（稱為 JR-Assembler）利用整個短序做延伸，加快執行速度。另外利用跨過小於序列長度的重複片段等方式來大幅降低記憶體的需求和執行時間，同時也考慮組裝的品質。和其他程式比較，JR-Assembler 的記憶體使用率和執行時間更有效率，而且保持良好的組裝品質，特別對於序長度等於及大於 150 bp 的基因組資料。
			處理巨量定序資料的工具和資訊整合平臺開發：我們發展 Mapreduce 平臺的前組合和後組合分析技術，以預測序列片段的重複性和定序錯誤，來優化新穎基因體組合技術的正確性和效率 (https://github.com/moneycat/QReadSelector)。此外，我們也正在發展嶄新的雲端系統架構與演算法，將結合次世代與第三代單分子定序技術所產出之巨量資料，進一步加速新穎基因體組合器的執行效率與運用範疇。在基因體組裝完成後，透過我們所建構基因結構解析註解流程、線上即時分析與呈現平臺 (http://molas.iis.sinica.edu.tw)，已能整合基因體、轉錄體、蛋白質體與甲基化 (http://tea.iis.sincia.edu.tw) 等多維體資料，協同研究團隊以網頁介面，透過不同的角度來詮釋複雜生命現象的核心課題，如癌症臨床樣本、非模式生物（如龍膽石斑 (http://molas.iis.sinica.edu.tw/grouper2016)、 日本 鰻 (http://molas.iis.sinica.edu.tw/jpeel2016) 與雞肉絲菇等）、環境微生物與人類病毒 (Enterovirus, HCV) 研究等，已協助找出罕見疾病之致病融合基因、建構高品質之非模式物種資料庫與找出限制 HCV 病毒複製的機制 (PNAS,2017) 等。在複雜網路關鍵因子分析上，過去整合十一種拓樸分析之程式 cytohubba (http://apps.cytoscape.org/apps/cytohubba)，自 2011 年以來，已有超過 9,000 次的下載，近 180 次的文獻引用，而 2017 年一月上線的新版，至三月底，已有超過四百次的下載。此外，所發展之多維體相關演算法已開始轉換到 Galaxy 平臺介面，將以 DOCKER 或是 VM 影像檔方式散佈，以期讓生物學家、臨床研究人員和生物資訊學家可以輕易地獲得與整合這些工具，加速整體的研究流程。
			轉錄因子和 DNA 結構的調控關係：轉錄因子結合的預測由 DNA 序列與染色質通透性所決定，而後者通常受到染色質狀態與 DNA 結構特性所影響。藉由同時考慮這些特徵，我們提出的隨機森林分類器在預測轉錄分子結合有顯著的改善。接下來我們將進一步針對對於任何已定序之物種，單就其 DNA 序列來正確預測轉錄因子結合的可能區域。在染色體的研究方面， 我們發現非 B 型 DNA 結構在人類與老鼠中與選擇性剪接高度關聯，顯見結構妨礙在轉錄 - 剪接中扮演重要角色。更進一步發現與 DNA 迴路有關的增強子，在老鼠中附近轉錄的 eRNA 極可能參與調控該增強子之目標基因。
		
﹙２﹚蛋白體及代謝體研究

蛋白體質譜實驗大數據分析：質譜儀已成研究蛋白體學重要的實驗技術，質譜實驗有由下而上和由上而下兩類，前者是較常用的方式；我們針對此種實驗方式發展了計算方法和工具進行蛋白體定性及定量分析。大規模帶醣的醣蛋白鑑定分析極具挑戰，故目前少有具此功能的工具。為此，我們提出計算方法，並發展名為 MAGIC 的系統。我們亦建構 MAGIC-web 的平臺，處理大規模及標靶醣蛋白的鑑定。在蛋白體定量方面，我們正將前已發表的定量工具Multi-Q，重新開發，以處理目前盛行的 TMT 10-plex 定量實驗。由上而下的質譜實驗方式，能完整偵測蛋白質上的修飾，故逐漸受到重視；唯其資料分析複雜，主要難在決定蛋白質的訊號群及其電荷。我們提出一計算方法，名之為 DYAMOND, 並以此開發名為 iTop-Q 的分析軟體。
			醣合成及代謝體之自動分析：醣的合成技術雖然已臻成熟，然而複雜的實驗步驟，讓許多研究單位望之卻步。為了減少這種嘗試、錯誤的實驗方法，我們發展了一套全自動的程式，將生物化學的種種限制因素考慮進來，預測出最佳的合成序列。此外，我們在代謝體質譜資料分析上，發展定性與定量的計算方法，並完成定量工具，目前在開發定性軟體。台灣癌症登月計畫：台灣於 2016 年八月受美國癌症研究所之邀，加入國際癌症登月計畫；其中一重要目標是進行癌症的蛋白基因體表徵分析。我們針對早發及早期的肺癌進行研究，目前已知應和一些蛋白質的變異有關。但從質譜大數據可靠地鑑定變異勝肽相當困難；我們目前正為此設計演算法。我們也發展工具，幫助研究者選擇合適的水解酶分解蛋白質，以利產生合適長度的勝肽，質譜產生較好的訊號，而較有機會偵測變異勝肽。此計畫採用 TMT 10-plex 標記進行定量實驗，我們發展中的新版 Multi-Q 2 軟體，將用來定量分析。我們已展開肺癌病人檢體的質譜實驗數據分析，依美國癌症研究所的品管要求，每組病人資料必須鑑定出 1 萬個蛋白質，我們已能達到此要求。同時，我們亦將針對這些質譜大數據進行變異勝肽的鑑定。
			與國內外的合作單位：生物資訊研究是跨領域研究，我們研究合作夥伴包含本院的農生中心、生物多樣性中心、化學所、統計所、分子生物研究所、細胞生物與個體生物研究所、植微所、和生醫所等，及院外的國衛院、台灣大學（醫學院、藥理所、病理研究所、生科院、漁科所和農業化學系）、臺大醫院、成功大學生命科學院、海洋大學水產養殖系和水產試驗所等。另外與國外的學術單位也有密切的合作計畫進行，包含美國密西根州立大學植物生物學研究所、加州大學洛杉磯分校醫學院、日本大阪大學蛋白質研究所和日本產業技術總合研究所等。
		


相關資訊












網站地圖


首頁


				2012 © 中央研究院 資訊科學研究所  版權所有 
				
				115 臺北市南港區研究院路二段128號 電話: +886-2-27883799  傳真: +886-2-27824814 
				
				
				















1052生物資訊相關演算法(Algorithms in Bioinformatics)的摘要









跳到主要內容






課程資訊 










1052生物資訊相關演算法(Algorithms in Bioinformatics)教師: sher 沈林琥 
跳過 導覽導覽首頁登入說明 How to login
網站公告
舊版Moodle 1.9網址
使用手冊_教師版
使用手冊_學生版 / Instruction Manual_for Student
研習活動_講義
數位學習課程認證樣版
目前課程1052生物資訊相關演算法(Algorithms in Bioinformatics)
課程 

 










	科技大觀園 -- 生物資訊：基因序列比對的演算法–動態規劃


















































:::
						｜
						網站導覽
						｜
						科國司
						｜
						科技部
						｜
						行動版


一般大眾 
						|
						國中小生





























  單元  



新知報
新知專欄 (956)電磁波知多少 (5)科技新知 (999)專題報導 (541)人物專訪 (86)科普點子王 (33)行動與無線通..(3)產學小聯盟 (32)科普人談科普 (32)創業第一桶金 (16)


文章
科普知識 (793)精選專題 (1121)文章導覽 (9)突破的故事 (94)女科技人 (28)獎聲響起 (82)台灣新發現 (274)科技與社會 (114)科技瞭望 (67)


演講
「展望」系列..(182)「週日閱讀科..(167)「週末 Le..(146)「FUN科學..(58)經典譯註『人..(24)人文大師下午..(2)「網際網路素..(53)健康與醫藥科..(27)科學講古 (74)週末學術科普..(34)生活化與科技..(16)中研院「知識..(20)其它演講 (195)


影視
來點ㄦ科學 (100)牛頓馬戲團 (80)科學大解碼 (201)科技萬花筒 (34)發現 (129)神秘的史前踏..(5)科學再發現 (113)流言真與假 (118)有趣化學實驗..(38)百秒說科學 (23)二分鐘發現科..(37)ㄐㄧㄤˋ吃就..(26)科普一傳十 (40)其它影視 (2)


廣播
科學180 (67)生活才科學 (112)來自海洋的聲..(103)今天科學了沒..(50)科學三分鐘 (148)啟動科學腦 (52)似是而非 (54)




  訊息  

佈告欄 (16)電子報 (51)演講活動 (466)科普活動 (372)

  認證  

公務人員學習教師研習

  科學迴廊    資源  

活動成果 (45)假日科學廣場 (45)科普資源資料庫 (11720)國研院年度成果 (1)全國科學探究競賽－這樣教我就懂 (2)

  出版品  

科學發展 (67)東亞科技與社會國際期刊 (13)



























:::
首頁 > 
			單元 > 文章 > 精選專題 > 生物資訊：基因序列比對的演算法–動態規劃



				精選專題
			





	
		 
		
    


















生物資訊：基因序列比對的演算法–動態規劃
 


2005/12/08
盧錦隆 | 交通大學生物資訊研究所














 

隨著 DNA 定序技術的不斷提升以及各種基因體計畫的進行，越來越多的生物序列資料被建構成資料庫，並置於網際網路上免費供人使用。例如存放核酸序列資料的 GenBank、EMBL-Bank 和 DDBJ 等，以及存放蛋白質序列資料的 Swiss-Prot、TrEMBL 和 PIR 等。據估計，平均每 15 個月這些資料庫的內容就會增加一倍。利用這些資料，生物學家再藉由生物資訊和計算生物的分析工具，便可以瞭解許多生物問題。

在諸多生物資訊和計算生物的分析工具中，序列比對（sequence alignment）是一個基本且相當重要的研究工具，它可以比較及分析出兩條或多條序列之間的相似程度。相似度高的序列彼此間會有相似的結構及功能，這意味著它們可能源自共同的祖先。因此，生物學家一旦拿到未知功能的 DNA 或蛋白質序列時，最常做的事情就是利用序列比對工具搜尋資料庫，看看是否有已知註解功能的序列與手中未知功能的序列相似者，藉此推測手中序列的生物功能。

過去這種基因研究的工作，生物學家得純靠手工進行序列資料庫的比對和搜尋，通常得花費數年才能完成。現在利用電腦比對搜尋，可能只需幾秒鐘而已，真是不可同日而語。

試想在電腦尚未普及的年代，生物學家首先得把整個資料庫的序列（幸好當時的資料量還不算大）印出並貼在牆上，接著把手中的序列寫在另一張紙上，然後一邊喝著咖啡，一邊用眼睛來回比對和搜尋手中及牆上的序列資料。這是件多麼費時又辛苦的工作啊！拜電腦之賜，生物學家不用再過這種苦日子了，現在只要動一動手指，就可完成序列資料庫的比對和搜尋。

當然空有電腦而無序列比對軟體的輔助也是行不通的！但是要如何才能設計出一套有效率的序列比對工具呢？關鍵在於演算法。在計算機科學的領域中，演算法是一門基本且實用的學科。簡單來說，演算法就好像一套烹飪的食譜，裡頭記載著烹飪名菜（基因序列比對工具）所需的材料（輸入資料）及烹飪（比對）的細節與步驟，任何人（程式設計師）只要按照這些細節和步驟，就可料理（設計）出這道名菜（基因序列比對工具）。

事實上，任何利用電腦從事研究的人或多或少都會用到演算法。通常我們會用執行時間複雜度來衡量一個演算法是否有效率。演算法的時間複雜度往往表示成一個與 n 有關的函數，n 是輸入資料的大小。若時間複雜度是一個多項式函數，例如 nk，其中 k 是常數，那麼這個演算法就被稱為有效率的演算法。反之若只能表示成非多項式函數，例如指數函數 kn，其中 k 是常數，則稱為沒有效率的演算法。

一般而言，我們會把 DNA 和蛋白質分別看成是由 4 和 20 個英文字母所組成的序列或字串，因為他們分別是由 4 種核酸和 20 種胺基酸所組成的。對 DNA 而言，突變是非常平常的事情，也是自然的演化過程。藉由基因的突變，生物可以適應自然環境的改變。

常見的 DNA 突變有 3 種，分別是取代、插入及刪除。所謂取代，是指把一個字母（即核酸）用另外一個字母取代，而插入或刪除，是指在 DNA 序列的某一個位置插入或刪除一個新的或舊的字母。譬如我們把 DNA 序列 AAGT 的第一個字母 A 用 T 取代，然後把第三個字母 G 刪除，接著在序列的尾巴插入新的字母 C，最後便可以得到一個新的 DNA 序列 TATC。這整個突變的過程就如同大自然在對 DNA 序列進行編輯一般，所以上述 3 種突變又稱為 DNA 的編輯運算。

通常生物學家會利用所謂的編輯距離，來衡量兩條 DNA 序列之間的相異程度。生命總是朝著最短路徑進行演化，所以兩條序列之間的編輯距離被定義為：把其中一條序列編輯轉成另外一條序列，所需最少的編輯運算個數。兩條 DNA 序列之間的編輯距離越小，代表它們之間的相似程度越高。從演化的觀點來說，這意味著它們演化自同一個祖先（即所謂的同源），所以彼此間應該會有相似的結構及功能。

通常生物學家會比較喜歡利用比對來衡量兩條序列之間的相似程度。拿 GACGGATAG 和 GATCGGAATAG 這兩條 DNA 序列來說，乍看之下這兩條長度不同的 DNA 序列似乎不太相似。但是，當我們把它們重疊在一起，並在第一條序列的第二個和第三個字母之間與第六個和第七個字母之間分別插入一個空白字，就可發現其實這兩條 DNA 序列還蠻相像的。這種序列重疊的方式，就稱為序列的比對。

我們可以在兩條序列的任意位置上插入一個或多個空白字，目的是讓相同或相似的字母能夠儘量對齊，但要特別註意的是不能讓兩個插入的空白字對齊在一起，因為這樣對衡量序列之間的相似程度並無幫助。因此，字母之間對齊的方式就只有 2 種：字母與字母的對齊，以及字母與空白字的對齊（即所謂的開 gap）。當然，兩條序列之間的對齊方式不單單只有一種。例如對 AGGACTA 與 ACGTATA 這兩條 DNA 序列而言，至少就有 3 種對齊的方式。

事實上，每一種序列對齊方式都對應著一組編輯運算，可以把一條序列編輯轉成另外一條序列。以下舉例說明我們可以用 3 個編輯運算，把 AGGACTA 序列轉成 ACGTATA 序列。首先用一個取代編輯把第一個 G 轉成 C（對應第二個欄位），然後再用一個插入編輯把 T 插在第三個與第四個字母之間（對應第四個欄位），最後再利用一個刪除編輯把 C 拿掉（對應第六個欄位）。正因為如此，我們把第二個欄位稱為配錯，第四個欄位稱為插入，第六個欄位稱為刪除，其他欄位稱為配對。

一般而言，生物學家會根據某一種計分函數計算出每一種對齊方式的得分。就 3種對齊方式而言，生物學家會認為以上述的方式得分最高。計分函數是用來描述著兩個字母（包括空白字）之間的對齊分數，最簡單且最常用的計分方式，是把所有欄位的字母對齊分數加總起來做為該對齊方式的得分。所謂的兩條序列比對問題，就是在給定的兩條序列與一種計分函數前提之下，找出一種得分最高的對齊方式。

如何設計出有效率的演算法來解決兩條序列比對的問題呢？當要對齊的序列長度還算小的情況下，我們可以採用暴力法或窮舉法來解決這個問題：就是列舉出所有的對齊方式，然後再從中找出得分最高的對齊方式。但是，若要對齊的序列長度很大，這種暴力或窮舉的方法就行不通了！因為單單要列舉出所有的對齊方式，本身就是一件困難的事情。

假設要對齊的兩條序列長度都是 n，那麼它們之間總共就有



  
個對齊方式。換句話說，對齊方式的個數會隨著序列的長度呈指數成長。

以人類整個基因體來說，序列的總長約為 30 億，那麼兩條人類基因體序列的對齊總個數會是一個超級天文數字。即使利用全世界所有的電腦來做這件事情，我們（甚至我們的子孫）恐怕都無法在有生之年看到結果，這對電腦而言簡直是「不可能的任務」！幸好，我們可以利用動態規劃（dynamic programming）技巧，設計出一個簡單又有效率的演算法來解決兩條序列比對的問題。

首先我們定義一些符號，以便能夠簡單及清楚地介紹兩條序列比對問題的動態規劃演算法。令 A ＝ a1a2 … am 和 B ＝ b1b2 … bn 分別表示長度各為 m 和 n 的兩條序列；令 Align（i,j）表示兩條序列片段 Ai ＝ a1a2 … ai 和 Bj ＝ b1b2 … bj 之間分數（或相似度）最高的對齊方式，其中 i 和 j 的範圍分別是 1 ≦ i ≦ m 與 1 ≦ j ≦ n；令 S（i,j）表示 Align（i,j）的分數。我們的目的就是要求得兩條序列之間最佳的分數 S（m,n）及對齊方式 Align（m,n）。

在這之前，先把焦點放在 S（i,j）和 Align（i,j）的身上，因為若有辦法對任意的 i 和 j 都能計算出 S（i,j）和 Align（i,j），自然就可以求得 S（m,n）和 Align（m,n）。首先，我們把 Align（i,j）切成左右兩半：右半部只含 Align（i,j）的最後一個欄位，左半部則包含剩下的欄位。在這種情況之下，S（i,j）等於左半部的分數加上右半部的分數。不管 Align（i,j）的對齊方式為何，最後一個欄位的對齊方式就只有 3 種：字母對齊字母（即 ai 對齊 bj）、字母對齊空白字（即 ai 對齊 － ）、以及空白字對齊字母（即 － 對齊 bj）。

若是第一種情形，那麼右半部的分數等於 ai 對齊 bj 的分數（用 δ（ai,bj）表示），而左半部的分數等於 Ai−1 ＝ a1a2 … ai−1 與 bj−1 ＝ b1b2 … bj−1 之間對齊的最高分數（即等於 S（i−1,j−1））。換句話說，S（i,j）= S（i−1,j−1）+ δ（ai,bj）。同理可證，若是第二種情形，則 S（i,j）= S（i−1,j）+ δ（ai,－）；第三種情形，則　S（i,j）= S（i,j−1）+ δ（－,bj），其中 δ（ai,－）和 δ（－,bj）分別表示「ai 對齊空白字」與「空白字對齊 bj」的分數。綜合這三種情形，我們可以把 S（i,j）表示成一個遞迴函式如下：



  
這個遞迴函式關係就是動態規劃演算法最主要的特色之一，它告訴我們一個很重要的解題精神，就是把一個大的問題分解成幾個小的問題來解，一旦小問題都解決了，大問題就可以被輕易地解決了。

例如我們可以把計算 S（m,n）的問題分解成計算 S（m−1,n−1），S（m−1,n）和 S（m,n−1）的三個小問題，然後再把這三個小問題的解代入遞迴函式，就可求出 S（m,n）。同樣的道理，可以把計算 S（m−1,n−1）的小問題，分解成計算 S（m−2,n−2）、S（m−2,n−1）及 S（m−1,n−2）這三個更小的問題。如此遞迴下去，我們可以把整個計算 S（m,n）過程用一顆樹狀圖來描述。

然而，這種由上而下計算 S（m,n）的方式會十分耗時，因為整顆樹會有指數個節點，且每一個節點都需要花時間去計算其遞迴函式值。但是，若仔細觀察 S（m,n）的樹狀圖，我們會發現有許多的節點是在做相同的事情。越接近樹的底層，重複的節點就越多。因此若有辦法對相同的節點只做一次計算，那麼整體的執行速度不就可以加快了嗎？

於是我們想到利用由下而上的方式計算 S（m,n）：就是對所有相同的節點，只需對第一次遇到的節點做計算，然後把計算出來的值儲存起來，待下次碰到同樣的節點時，只要呼叫或參考這個節點的儲存值即可，如此便可省去重複計算的時間。

 這個主意讓我們可以把上述的樹狀圖簡化成一個（m+1）×（n+1）的二維矩陣圖，其中座標（i,j）的節點等於 S（i,j）。根據遞迴關係，S（i,j）只跟它相鄰的上、左上及左節點有關係，我們必須先知道這3個相鄰節點的分數之後才能夠求出 S（i,j）。其中直線的方向表示 S（i,j）= S（i−1,j）+ δ（ai,－），且 ai 與空白字對齊；斜對線的方向表示 S（i,j）= S（i−1,j−1）+ δ（ai,bj），且 ai 和 bj 對齊；橫線的方向表示 S（i,j）= S（i,j−1）+ δ（－,bj），且空白字和 bj 對齊。

為了求得 S（m,n），我們可以採用以列為導向的方式計算矩陣中每一個節點分數：就是以由左到右的方式先計算出第一列節點的分數（開始時令 S（o,o）= 0），然後第二列、第三列……一直到求出最後一列的S（m,n）為止。當然也可以採取以欄或斜對角線為導向的方式，計算矩陣中節點的分數。換句話說，整個計算 S（m,n）的過程就好像在表格（即二維矩陣）上填寫數字（即分數）一般。所以，動態規劃的演算法又被稱為填表格的方法。

不難發現，我們總共有（m+1）×（n+1）個節點要計算，而且每一個節點計算最多只花 3 個加法運算及 2 次的比較運算。因此，整個計算過程所花的運算時間等於 5 ×（m+1）×（n+1），其中 m 和 n 是影響整個時間複雜度最關鍵的因素，所以整個時間複雜度又被簡寫成O（m × n），意味著時間複雜度與兩條序列長度乘積成正比。

在生物資訊和計算生物相關的論文中，動態規劃是一種最常見的演算法設計策略，它不僅可以用來解決兩條序列比對的問題，也可以解決許多其他的問題。但是，它並沒有辦法解決所有的問題。正確地說，電腦並不是萬能的！因為數學家早已用理論證明有些問題是電腦沒辦法解決的，例如塗林（Alan Turing）證明停機問題（halting problem）是沒有演算法可以解決的問題。 在這種情況下，我們就得嘗試利用其他的演算策略找尋最佳解，例如貪婪策略、分割與擊破策略、消去與搜尋策略和分支與界定策略等等。有興趣的讀者可參考演算法相關書籍。 瀏覽人次：13,418    序列比對序列(1)  來源：《科學發展》2005年12月，396期，36 ~ 41頁 




已有 1 個人按~讚~


 

熱門標籤  

 


輻射(27)稀有物種滅絕(2)衛星遙測(32)物種滅絕(13)大數據(29)肥胖(48)地震(106)3D列印(29)枯草桿菌(4)擴增實境(19)聖嬰現象(14)機器人(51)電洞(21)臺灣山毛櫸(3)基因工程(6)電波(41)災害(42)演化(85)穿戴裝置(7)再生能源(27)


 


 返回列表 


 





資訊：雲端算不算
資訊：網路安全的社交工...
生物資訊：高密度片段的...
生物資訊：由拼圖與迷宮...
生物農藥：昆蟲的穿腸毒...





















單元
新知報
文章
演講
影視
廣播


訊息
佈告欄
電子報
演講活動
科普活動


認證
公務人員學習
教師研習


科學迴廊


資源
活動成果
假日科學廣場
科普資源資料庫
國研院年度成果
全國科學探究競賽－這樣教我就懂


出版品
科學發展
東亞科技與社會國際期刊














關於我們 | 著作權聲明 | 隱私權及資訊安全宣告 | 服務條款 | 聯絡我們

				瀏覽本站建議使用 IE10 以上、MS Edge、Firefox、Chrome 或 Safari 等瀏覽器，1,280 x 720 以上解析度  
				    
				網站瀏覽人次：15,174,210
			














1052生物資訊相關演算法(Algorithms in Bioinformatics) 概要









メインコンテンツへスキップする






コース情報 










1052生物資訊相關演算法(Algorithms in Bioinformatics)教師: sher 沈林琥 
ナビゲーション をスキップするナビゲーションHome登入說明 How to login
網站公告
舊版Moodle 1.9網址
使用手冊_教師版
使用手冊_學生版 / Instruction Manual_for Student
研習活動_講義
數位學習課程認證樣版
現在のコース1052生物資訊相關演算法(Algorithms in Bioinformatics)
コース 

 










系統生物與生物資訊學程















 


 


 


 



 


 


 













參與教學研究單位


電機資訊學院：資訊工程學系、生醫電子與資訊研究所
		生物資源暨農學院：動物科學技術學系、生物產業機電工程學系、生物科技研究所(籌備中)
		公共衛生學院：公共衛生學系
		醫學院：藥學系、醫學檢驗暨生物技術學系、醫學工程研究所
		生命科學院：生命科學系
		工學院：工程科學及海洋工程學系、醫學工程研究所





參與規劃師資


資訊工程學系：歐陽彥正、高成炎、趙坤茂
		電機工程學系：莊曜宇
		農藝學系：劉仁沛
		動物科學技術學系：林恩仲
		植物病理與微生物學系：劉瑞芬
		藥學系：林榮信
		醫學檢驗暨生物技術學系：李君男
		公共衛生學系：陳為堅、李文宗、蕭朱杏
		生命科學系：阮雪芬
		生物產業機電工程學系：周瑞仁、陳倩瑜
		醫學工程研究所：陳中明
		工程科學及海洋工程學系：黃乾綱





設置宗旨


臺灣大學自90學年度起即設立『生物資訊學程』，並致力延攬優秀師資以充實相關課程的開授。近年來合計新聘『生物資訊』領域教師7位(包括資訊工程系趙坤茂教授、農藝學系劉仁沛教授、電機工程學系莊曜宇副教授、藥學系林榮信助理教授、生命科學系阮雪芬助理教授、動物科學技術學系林恩仲助理教授、以及生物產業機電工程學系陳倩瑜助理教授)。加上原有師資計有7位投入『生物資訊』領域教學與研究工作(包括資訊工程學系高成炎、歐陽彥正兩位教授、公共衛生學系陳為堅、李文宗、蕭朱杏三位教授、醫學工程研究所陳中明教授、生物產業機電工程學系周瑞仁教授)。因此已組成包括14名成員陣容之堅強之團隊。以94學年度為例，合計開授生物資訊相關課程計23門共60學分(含暑期課程)。

		基於前述的基礎與本校之特色，以及未來系統生物學發展趨勢，擬提案自94學年度起將現有『生物資訊』學程重組為『系統生物與生物資訊學程』。『系統生物學』的主要面向之一是導入系統科學的數學理論與計算模型於生物醫學與生物科技現象之描述上，以建構精確的系統模型，並據以推導更複雜、更高層的生命醫學與生物科技現象之運作原理，並進一步與以實驗為基礎之生命醫學與生物科技研究相互搭配，創造生命醫學與生物科技研究更寬廣的進步空間。就這個面向而言，由於臺灣大學是一所綜合性大學，在生命醫學與生物科技領域計有醫學院、生物資源暨農學院、公共衛生學院、生命科學院等4個學院，理工領域則有理學院，工學院，電機資訊學院等3個學院。科系完整，陣容堅強，具備發展計算系統生物學的優越條件。除『系統生物學』領域課程外，由於臺灣大學『結構生物資訊學』的研究團隊近年來已研發成功數個軟體。這幾個軟體的原理均發表於Nucleic Acids Research (SCI impact factor 7.)及Bioinformatics (SCI impact factor 5.)等生物資訊領域最重要的期刊上。由此可見台灣大學的團隊在『結構生物資訊學』領域已具備國際一流水準的實力以培養最尖端的生物科技研發人才。未來更將以「分子結構分析與模擬」、「藥物基因體學」、「藥物動力學模擬」作為重點發展方向。至於『醫學生物資訊學』方面，台灣大學原本即擁有一流的臨床醫學教學與研究團隊，與校內生物資訊學團隊充分合作更能針對「疾病基因圖譜建構」、「仿生醫學」等主題建立一支極具特色的教學與研究團隊。

		此學程以醫學院、生農學院、電資學院、公衛學院、生命科學院、工學院之學生為主要對象，並對其他學院之學生開放。學程行政工作將由『生物技術研究中心』負責。





申請修讀資格


本校在學學生，修習通過本學程預修課程者，得申請修習本學程。





申請及審核程序


本學程於每學期甄選一次，學生須向本學程中心索取申請表，並檢附歷年成績單一份，經所屬系所之主管同意後，於該學期加退選日開始之前三週，將申請表及歷年成績單送至本學程中心（逾期不受理），由本學程委員會審核後，於加退選截止前一週公佈核准名單。修畢並通過本學程規定之20學分以上，由本校授與「系統生物與生物資訊學程」修習證明書。





學程規劃綱要


『系統生物與生物資訊學程』的規劃強調培訓跨領域之人才。因此，在學程的基礎課程設計上針對理工背景同學開授「生物化學」必修課。而針對生醫農背景同學則開授「系統生物數學」必修課。共同必修則包括「生物資訊學」及「系統生物學」兩門課。基礎課程合計3門課至少6學分。本學程之核心課程與特別課程則分為2個主軸「系統生物學」以及「生物資訊學」。修習本學程同學可選擇其一選修，核心課程至少3門課合計8學分以及特別課程至少2門課合計6學分完成學程。整體學程規劃請見下表。
		


預修課程(不計學分)
普通生物學或相關課程


計算機概論、程式設計或計算機相關課程


微積分


基礎課程(必修3門課、至少6學分)
生物資訊學或相關課程


系統生物學


系統生物數學(生醫農背景同學)
生物化學或相關課程(理工背景同學)


核心課程(選修至少3門課、8學分以上)
系統生物學主軸
生物資訊學主軸


系統生物學專題討論
結構生物資訊學


基因網路重建演算法
生物統計學或相關課程


生物晶片技術概論
結構生物學概論


生物資訊軟體設計實習
生物資訊學演算法


生物資訊學演算法
生物序列分析演算法


生物資訊軟體原理與應用
計算藥物學概論


生物資訊學軟體應用
生物資訊學之統計與計算方法


生物統計學或相關課程
生物晶片技術概論


生技產品統計方法
生物資訊軟體設計實習


分子生物學或相關課程
流行病學


遺傳學或相關課程
遺傳流行病學原理


分子演化學或相關課程



生理學或相關課程



基因體學或相關課程



功能基因體學或相關課程



蛋白質體學或相關課程



細胞生物學



特別課程(選修至少2門課、6學分以上)
系統生物學主軸
生物資訊學主軸


生物技術核心實驗
計算藥物學


蛋白質間交互作用
生醫資料探勘演算法


基因晶片方法與數據分析
臨床藥品動態學


生物系統鑑別
藥物基因體學


生態模擬之理論與實習
生物資訊學特論


數學模擬與系統生物學
基因晶片方法與數據分析


生物檢定統計法
基因體統計學


基因體統計學
複雜性疾病之基因圖譜建構


生物系統模擬與分析
生物晶片技術(含實驗)


基因表現與功能分析(含實驗)



細胞凋亡及流式細胞儀技術(含實驗)



生物晶片技術(含實驗)





















系統生物與生物資訊學程















 


 


 


 



 


 


 












課程規劃表
課程列表









國立台灣大學跨學院『生物資訊學程』規劃書




表一、「系統生物與生物資訊學程」課程規劃表



預修課程


普通生物學或相關課程




(不計學分)


計算機概論、程式設計或計算機相關課程




 


微積分




基礎課程


生物資訊學或相關課程




(必修3門課


系統生物學




至少6學分)


系統生物數學
 (生醫農背景同學)


生物化學或相關課程
(理工背景同學)




核心課程


系統生物學主軸


生物資訊學主軸




(選修至少3


系統生物學專題討論


結構生物資訊學




門課、8學分


基因網路重建演算法


生物統計學或相關課程




以上)


生物晶片技術概論


結構生物學概論




 


生物資訊軟體設計實習


生物資訊學演算法




 


生物資訊學演算法


生物序列分析演算法




 


生物資訊軟體原理與應用


計算藥物學概論




 


生物資訊學軟體應用


生物資訊學之統計與計算方法




 


生物統計學或相關課程


生物晶片技術概論




 


生技產品統計方法


生物資訊軟體設計實習




 


分子生物學或相關課程


流行病學




 


遺傳學或相關課程


遺傳流行病學原理




 


分子演化學或相關課程


 




 


生理學或相關課程


 




 


基因體學或相關課程


 




 


功能基因體學或相關課程


 




 


蛋白質體學或相關課程


 




 


細胞生物學


 




特別課程


系統生物學主軸


生物資訊學主軸




(選修至少2


生物技術核心實驗


計算藥物學




門課、6學分


蛋白質間交互作用


生醫資料探勘演算法




以上)


基因晶片方法與數據分析


臨床藥品動態學




 


生物系統鑑別


藥物基因體學




 


生態模擬之理論與實習


生物資訊學特論




 


數學模擬與系統生物學


基因晶片方法與數據分析




 


生物檢定統計法


基因體統計學




 


基因體統計學


複雜性疾病之基因圖譜建構




 


生物系統模擬與分析


生物晶片技術(含實驗)




 


基因表現與功能分析(含實驗)


 




 


細胞凋亡及流式細胞儀技術(含實驗)


 




 


生物晶片技術(含實驗)


 



 



 










