


NM7613: Music Signal Analysis & Retrieval (音樂訊號分析與檢索)





NM7613: Music Signal Analysis & Retrieval (音樂訊號分析與檢索)
Roger Jang (張智星)




Bulletin Board (公佈欄)



TA office hours: 10:00am~12:00am, every Friday at R439
Facebook of the course
Recordings
	
MSAR-2017
MSAR-2016
MSAR-2015

Questions logging
	
Page for logging questions in class or answers in facebook
Page for listing







Back to MSAR Home





「音樂訊號分析與檢索」期末計畫摘要：音樂節拍遊戲





「音樂訊號分析與檢索」期末計畫摘要：音樂節拍遊戲


主題說明

本計畫將透過matlab去分析音樂的節拍，之後利用分析出來的結果，在網頁上做出一個音樂遊戲。

內容大綱

節拍分析 (matlab)
網頁控制 (javascript)
matlab和javascript的連動
額外功能
在實做時的註意事項
結論、展望與感想
參考資料
報告投影片

成員及執掌
（請務必放上個人小照片，以便核對評分）

林俊豪：
	組長，資工三（b00902045），負責...

吳雨澄：
	資工三（b00902037），負責...

賴建霖：
	資工三（b00902093）：負責...
































音訊讀寫、錄製與播放 - 音樂訊號分析與檢索 (2016 Spring) | U.camdemy





















登入首頁







收藏
0








返回課程

音訊讀寫、錄製與播放

音樂訊號分析與檢索 (2016 Spring)Intro to MSARIntro to MSAR Matlab Programming初探MATLAB 二維平面繪圖 多維陣列 AudioSignalProcessing音訊讀寫、錄製與播放 AudioSignalIntro Basic Audio FeaturebasicAudioFeature Pitch Trackingpt-timeDomain pt-freqDomain dft pt-perfEval Dynamic ProgrammingdynamicProgramming MIR-Music Information RetrievalmirIntro DTWdtw QBSH-query by singing and hummingqbshMethod ASRAasra Stress DetectionstressDetection 











索引

重點

討論

筆記



長度: 59:50, 發表時間 : 2016-03-09 17:09
觀看次數 : 1,089







00:321. MATLAB 程式設計入門篇音訊讀寫、錄製與播放(Audio Reading, Writing, Recording, and Playback)
                                
00:122. 音訊的基本介紹
                                
05:183. Basics about Audio Signals
                                
03:044. Time-domain Features
                                
01:195. Frequency-domain Features
                                
00:066. 音檔的讀取、播放與顯示
                                
03:307. Read, Write and Display
                                
00:028. Read Metadata from .wav Files
                                
01:389. Read, Write and Display
                                
01:2710. 音檔的讀取、播放與顯示
                                
00:0311. Read, Write and Display
                                
01:0912. Read Metadata from .wav Files
                                
00:5813. Metadata of Other Audio Files
                                
00:4614. Scaling of Audio Signals by “audioread”
                                
00:0015. 讀取雙聲道檔案
                                
02:0216. Scaling of Audio Signals by “audioread”
                                
00:0317. 讀取雙聲道檔案
                                
02:3018. Read Stereo Audio Files
                                
00:0119. 讀取部分音檔
                                
00:3620. Read a Portion Only
                                
00:1021. 聲音訊號的播放
                                
00:4122. Playback of Audio Signals
                                
00:0323. 播放聲音 (1/2)
                                
02:5424. Playback (1/2)
                                
00:0125. 播放聲音 (2/2)
                                
01:2626. Playback (2/2)
                                
00:0127. 改變音訊的震幅
                                
01:1528. Change of Audio Amplitude
                                
00:0229. 改變音訊的震幅
                                
00:4530. Playback (2/2)
                                
00:1031. 改變音訊的震幅
                                
00:3232. Playback (2/2)
                                
00:0233. 改變音訊的震幅
                                
02:0334. Change of Audio Amplitude
                                
00:0235. 改變音訊播放的取樣率 (1/2)
                                
04:5936. Change of Sample Rates (1/2)
                                
00:0037. 改變音訊播放的取樣率 (2/2)
                                
01:0238. Change of Sample Rates (2/2)
                                
04:2639. Observations
                                
00:1540. 改變符號及改變時序
                                
02:3641. Change of Sign & Time Sequence
                                
00:0142. 同步及非同步播放
                                
00:0243. 非同步播放
                                
01:3944. Playback Modes
                                
00:0045. 音量自動調整
                                
00:3446. Automatic Volume Adjustment
                                
00:0247. 聲音訊號的錄製
                                
00:2548. Recording of Audio Signals
                                
00:0249. 音訊的錄製範例 (1/2)
                                
02:2450. Recording (1/2)
                                
00:0051. 音訊的錄製範例 (2/2)
                                
00:4552. Recording (2/2)
                                
00:0153. 聲音訊號的寫檔 (1/2)
                                
01:3554. Storing Audio Files (1/2)
                                
00:0155. 聲音訊號的寫檔 (2/2)
                                
00:4256. Storing Audio Files (2/2)
                                
01:5757. Cross-version Issues
                                
00:3258. Supplementary Material
                                





						附件											









長度: 59:50, 發表時間 : 2016-03-09 17:09
觀看次數 : 1,089















						附件											


















討論功能僅開放給課程成員，請先加入課程










筆記功能僅開放給課程成員，請先加入課程










 



 

Prev
AudioSignalProcessing

 

Next
AudioSignalIntro

































音樂訊號的基本特徵 - 音樂訊號分析與檢索 第三週 - JSON










Please click here if you are not redirected within a few seconds.






音樂訊號的基本特徵 - 音樂訊號分析與檢索 第三週
Posted by JSON on March 15, 2016













音訊常被使用的幾個特徵

Volume
Pitch
Spectrum
Zero Crossing Rate

我們的目標是對這些特徵作量化的計算，以利進一步的處理與辨識。
普遍的音樂分析的步驟：

定出Frame大小，如：20~40ms為一個frame
以Frame為單位，取出Volume, Pitch, Zero-crossing rate…等特徵
以Frame為單位進行分析

Frame Blocking


Example:

Sample Rate為16KHz，Frame Size為512Samples，
Frame duration=512/16000=0.032=32ms
承上，Overlap為192Samples，
Hop Size=512-192=320Samples，
Frame Rate=16000/320=50frames/sec

Time-domain三個最重要的Features(in frame)

Intensity
Fundamental Period(FP)
Timbre：FP的波形

Frequency-domain三個最重要的Features(in frame)

Energy：每個Sample的總和
Pitch：諧波之間的距離
Timbre：Samples取平滑的線

Matlab打包音訊資料成Frame
[y, fs] = audioread('file.wav');
frameMat = enframe(y, frameSize, overlap);


frameMat得到的矩陣，每一欄都是一個frame。
Volume
compute volume in a frame:


volume的大小會受frame size決定的大小的影響。
Zero Crossing Rate(ZCR)
the number of zero crossing in a frame，
bit resolution越低，會更容易發生Zero Crossing。
ZCR可用來偵測unvoiced sounds的開頭與結束，或者是區別其雜訊。
Pitch
fundamental frequency，每秒有幾個fundamental period，單位為hertz(Hz)，
更常用的單位為semitone，計算方式：
`
Tones

Tone1: high-high(中文的一聲)
Tone2: low-high(中文的二聲)
Tone3: high-low-high(中文的三聲)
Tone4: high-low(中文的四聲)

Tone Sandhi：例如總統應為兩個三聲，但發音上習慣發成二聲+三聲。
「請老李給我買五把好雨傘」全為Tone3，但在說的時候不會全發三聲，理解Tone Sandhi有助於TTS(Text to speech)。
Beat
兩頻率近似的聲音產生的干涉

可聽見的干涉頻率為：







Please enable JavaScript to view the comments powered by Disqus.


← 上一篇文章


下一篇文章 →







































AudioSignalIntro - 音樂訊號分析與檢索 (2016 Spring) | U.camdemy





















登入首頁







收藏
0








返回課程

AudioSignalIntro

音樂訊號分析與檢索 (2016 Spring)Intro to MSARIntro to MSAR Matlab Programming初探MATLAB 二維平面繪圖 多維陣列 AudioSignalProcessing音訊讀寫、錄製與播放 AudioSignalIntro Basic Audio FeaturebasicAudioFeature Pitch Trackingpt-timeDomain pt-freqDomain dft pt-perfEval Dynamic ProgrammingdynamicProgramming MIR-Music Information RetrievalmirIntro DTWdtw QBSH-query by singing and hummingqbshMethod ASRAasra Stress DetectionstressDetection 











索引

重點

討論

筆記



長度: 47:51, 發表時間 : 2016-03-09 18:49
觀看次數 : 1,024







47:511. ----
                                





						附件											









長度: 47:51, 發表時間 : 2016-03-09 18:49
觀看次數 : 1,024















						附件											


















討論功能僅開放給課程成員，請先加入課程










筆記功能僅開放給課程成員，請先加入課程










 



 

Prev
音訊讀寫、錄製與播放

 

Next
Basic Audio Feature































NM7613: Music Signal Analysis & Retrieval (音樂訊號分析與檢索)





NM7613: Music Signal Analysis & Retrieval (音樂訊號分析與檢索)
Roger Jang (張智星)



Course description
The course is aimed to provide students with necessary theoretical background and programming techniques for music signal analysis and music information retrieval. For the analysis part, we shall focus on   feature extraction over audio music, including pitch tracking, onset detection, beat tracking, etc. For the retrieval part, we shall cover machine learning methods for various tasks such as query by singing/humming, audio fingerprinting, genre classification, mood classification, cover song identification, singing scoring, score following, etc. The students are also expected to collect corpora to be used in programming contests in the class. MATLAB will be used extensively in our working examples, homework, and programming contests.

Here is a complete description of the course.


Back to MSAR Home




需要安全驗證



Facebook加入或登錄 Facebook   郵箱或手機號密碼忘記帳戶？登錄想加入 Facebook 嗎？註冊註冊安全驗證碼請輸入以下文本看不清楚上面的文字？換一個或播放語音驗證信息框中文字：這是什麼？安全驗證這是一個標準的安全測試，用於阻止垃圾郵件製造者創建假帳戶並向用戶發送垃圾信息。提交中文(簡體)English (US)日本語한국어Français (France)Bahasa IndonesiaPolskiEspañolPortuguês (Brasil)DeutschItalianoMessengerFacebook Lite用戶地點游戲位置名人二手市場小組食譜彩色氣球Instagram公司簡介創建廣告創建主頁開發者招聘信息隱私權政策Cookie廣告選項條款設置活動日誌 Facebook © 2017







音樂訊號簡介及Matlab音訊基本操作 - 音樂訊號分析與檢索 第二週 - JSON















Please click here if you are not redirected within a few seconds.








音樂訊號簡介及Matlab音訊基本操作 - 音樂訊號分析與檢索 第二週
Posted by JSON on March 10, 2016















聲音訊號
聲音訊號（Audio Signals）：泛指人耳聽到的訊號。可聽到的基本頻率大約是20~20000Hz。
聲音的產生過程，從某源頭例如聲帶發出震動(vibration)，
對附近的物件共振產生共鳴(resonance)例如嘴巴、鼻子，
再經由空氣或其他媒介傳送到耳膜，最後由腦辨識。
音訊的具有的基本特色：

Volume(音量): 音訊的振幅、強度。
Pitch(音高): 一秒內的基本週期個數(the number of fundamental periods in a second)
Timber(音色): waveform inside a fundamental period.

聲音的分類
以聲源的數量分類：

Monophonic: 單一聲源(like vocal only)
Polyphonic: 混合兩種以上的聲源（像是含有伴奏的歌曲)

以聲源類別分類：

Sounds from animals
Sounds from non-animals

錄音的參數
進行錄音時，有三個主要參數：

Sample rate：表示每秒要取樣幾個點
    
8KHz: 通話品質
16KHz: 一般講話辨識
44.1KHz: CD品質


Bit resolution：以多少空間表達單一sample
Number of channels
    
Mono: 單聲道
Stereo: 雙聲道



S/U/V in Speech
人聲訊號可以被分成三種：

S(silence)
U(unvoiced)：例如發S音的時候，聲帶是沒有震動的
V(voiced)：聲帶有震動的說話


音訊檔儲存大小計算

例如：一分鐘的錄音檔(sample rate: 16000、16bits、單聲道）的檔案大小
60(s) * 16(KHz) * 2(16bits=2bytes) * 1 = 1920KB = 1.92MB

Matlab讀取音訊、播放、繪出音訊
[y, fs] = audioread('nyan-cat.mp3'); % y會拿到音訊檔的所有點，fs為此音訊檔的sample rate
sound(y,fs); % 以原sample rate進行播放
sound(y,fs*2); % 以原sample rate的兩倍進行播放
sound(y,fs*0.5); % 以原sample rate的兩倍進行播放

time = 1:length(y)/fs;
plot(time, y);

[y, fs] = audioread('nyan-cat.mp3', [1 1000]); % 只讀取前一千個點
plot(y);


音訊檔的Metadata
除了音訊之外，常會有其他的資訊也存在音訊檔內，例如歌手的名字、壓縮方式、音訊長度…等。
這些資料稱為metadata，可以使用audioinfo(檔名)來讀取這些資訊：

Matlab讀取音訊的Metadata：
info = audioinfo('nyan-cat.mp3');
disp(info);


音訊檔內部儲存方式
8bits音訊檔內部儲存方式為0~255(無號)，16bits為32767~-32768(有號)，
Matlab讀取音訊後會調整成-1~1，因此對於8bits音訊進行(y-128)/128，16bits將會進行y/32768。
立體聲Stereo Audio
表示音訊檔含有雙聲道，以audioread讀取音訊所得到的y會兩欄：
[y, fs] = audioread('nyan-cat.mp3'); 
left = y(:,1); % 左聲道
right = y(:,2); % 右聲道  


若嘗試將左聲道的音訊歸零，再進行播放，會發現只有右邊的Speaker會發出聲音：
[y, fs] = audioread('nyan-cat.mp3');
y(:,1) = 0;
sound(y, fs);  


一旦能讀取音訊，我們就能對音訊進行處理，例如：調整音量、調整pitch、消除雜訊⋯⋯等。
然後再利用播放的方式來驗證調整結果。
Matlab內建一個名為handel.mat的檔案，載入後會有y與Fs兩個變數，可以利用它們來做一些簡單的音訊實驗。
>> load handel.mat
>> whos
  Name          Size             Bytes  Class     Attributes

  Fs            1x1                  8  double              
  y         73113x1             584904  double
>> length(y)/Fs % duration

ans =

    8.9249
    
>> sound(y, Fs);


同步(Synchronous)與非同步(Asynchronous)播放
sound是非同步指令(Asynchronous)，若一次執行多個sound，音訊會疊播在一起。
若要進行同步播放，須先利用audioplayer指令建立player object，在使用playblocking指令進行播放：
load handel.mat
p = audioplayer(y, Fs);
playblocking(p); % 必須播放完後才會執行下一行指令
playblocking(p);


更改音訊強度
load handel.mat
p1 = audioplayer(y, Fs);
p2 = audioplayer(y*3, Fs);
p3 = audioplayer(y*5, Fs);
playblocking(p1);
playblocking(p2);
playblocking(p3);


音訊音量不與音訊振幅成線性正比，而是對數正比，所以*3能感覺到聲音變大了但並非三倍音量。
取樣頻率Sample Rate

load handel.mat
p = audioplayer(y, Fs);
p.SampleRate = 2 * Fs; 
playblocking(p);



增加sample rate會聽到唐老鴨的聲音，聲音變短，pitch變高。
減少sample rate會聽到低沈的聲音，聲音變長，pitch變低。
若想要增高pitch而不改變聲音長度 -> Pitch moditication

若將音訊的正負號改變，聽到的聲音不會有所變化
load handel.mat
p = audioplayer(-y, Fs);
playblocking(p);


使用Matlab錄音
下麵的程式碼使用audiorecorder指令產生錄音物件，再用recordblocking指令開始錄音，
錄音完成後取得音訊資料後繪出訊號：
duration = 3;
recObj = audiorecorder;
recordblocking(recObj, duration);
play(recObj);
y = getaudiodata(recObj, 'double'); % 取得音訊資料
time = (1:length(y))/8000;
plot(time, y);


audiorecorder預設

sample rate：8000Hz
bit resolution：8bits

若要自訂參數格式為：audiorecorder(sampleRate, nBits, nChannel);
錄音後使用getaudiodata取得音訊資料後可使用audiowrite將音訊儲存成檔案：
y = getaudiodata(recObj, 'double');
audiowrite('myRec.wav', y, recObj.SampleRate);


Homework

Record your own voice of “my name is xxx and I am a student at xxx university”, 
  and save the mono recording to myVoice.wav. 
  Write a MATLAB script that can read the audio data from myVoice.wav, 
  duplicate the audio data to create a stereo audio, and then modify the volume of each channels such that the playback can create an illusion that the sound source is moving between your two speakers. 
  (Hint: You can observe the waveforms of the two channels in flanger.wav.)

Write a function to generate a sine wave with time-varying frequencies. 
The I/O format is
outputSignal=mySine(duration, freq);


where freq is a two-element vector [f1, f2], 
indicating the frequency of the sine wave should change linearly from f1 to f2.
Note that The sample rate is 16 KHz.
The first sample is zero, starting from time 0. 
(In other words, the time vector is (0:duration*fs-1)/fs, and the function to invoke is “sin”.)
Hint: The instantaneous frequency of y=sin(2πϕ(t)) is equal to ϕ′(t).


Write a function that can take a wave file, encrypt it, and save it as another wave file. The I/O format is
myEncrypt(inputFileName, outputFileName);


where “inputFileName” is a string specifying the input wave file, 
and “outputFileName” is a string specifying the output wave file. 
The encryption process is like this (assuming y is the original signal and z is the encrypted signal):

z=y;
if y(i)>0, z(i)=1-y(i) for all i
if y(i)<0, z(i)=-1-y(i) for all i
z=flipud(z);

Note that:

The encrypted file can be converted to the original file using the same function.
Be aware that this is a naive encryption; better methods exist.











Please enable JavaScript to view the comments powered by Disqus.


← 上一篇文章


下一篇文章 →
























[評價] 103-2 張智星 音樂訊號分析與檢索 - 看板 NTUcourse - 批踢踢實業坊


















批踢踢實業坊
›
看板 NTUcourse
關於我們
聯絡資訊




返回看板


分享







作者eesu (魯肥宅我本人)看板NTUcourse標題[評價] 103-2 張智星 音樂訊號分析與檢索時間Sat Jul 11 05:29:04 2015
※ 本文是否可提供臺大同學轉作其他非營利用途？（須保留原作者 ID）
         （是／否／其他條件）：


      哪一學年度修課：
                103-2
      ψ 授課教師 (若為多人合授請寫開課教師，以方便收錄)
                張智星
      λ 開課系所與授課對象 (是否為必修或通識課 / 內容是否與某些背景相關) 
                資工所 網媒所
      δ 課程大概內容
                介紹音樂訊號處理相關各種topic
                使用MATLAB

                ===========from CEIBA============
                本課程將提供音樂訊號分析與檢索的基本概念，
                並學習如何使用電腦程式來實作這些方法，
                以便對音樂訊號進行各種處理、分析、檢索、合成等，
                符合音樂在多媒體方面的各種應用需求。

                本課程的目標在於讓修課同學瞭解下列事項：
                音樂訊號處理的基本方法。
                音樂特徵擷取，如音高追蹤、節拍追蹤、起點強度計算等。
                音樂檢索及分類，如哼唱選歌、曲風分類、情緒分類、翻唱歌偵測、音樂聲紋辨識、樂譜對位等。
                收集大量音樂資料，以便進行分析與建模。
                以MATLAB實作各種方法與系統，並參加MIREX國際音樂檢索比賽。

      Ω 私心推薦指數(以五分計) ★★★★★
η 上課用書(影印講義或是指定教科書)

                老師的投影片

      μ 上課方式(投影片、團體討論、老師教學風格)

                英文授課
                老師的發音應該算是蠻道地的
                台灣人
                所以老師說的話大家應該都聽得懂
                比較複雜的部分老師會用中文再說一次
                班上有外籍生(有一次外籍生沒來上課老師就改用中文上課XD)

                老師本人應該是台灣音樂訊號第一人
                臺大裡面有碰音樂訊號的老師也蠻少的
                我本身是外系的學生
                因為自己本身對音樂訊號算是蠻有興趣的所以來修這門課
                雖然是所課但是班上有很多資工大二大三的來修
                其實也不太需要什麼基礎
                普遍大家MATLAB應該也不太熟

                老師本身教得蠻不錯的
                各種topic的不同演算法都有介紹
                偶爾比較複雜的數學會跳過叫我們自己看
                老師的教學方式很輕鬆也都教得淺顯易懂
                老師有一次講到FFT也用蠻特別的角度在思考
                音樂訊號應該算是訊號處理領域很特別的一個領域
                我自己這學期另外也有修語音的課感受就很強烈
                因為音樂跟語音的訊號很大的差別是
                音樂訊號複雜到無法拆解下去的感覺
                所以當語音訊號可以利用各種數學模型來model時
                音樂訊號就比較沒辦法這樣做
                可以想像一下同時有很多樂器一起演奏
                幾乎是無法分離的狀況
                也是因為這樣所以某些問題有時候聽老師的說法會感覺有點沒搔到癢處
                如果跟我一樣的學生聽課可能會有點不習慣
                這可能是因為電機系比較習慣物理 數學模型
                就是沒有數學模型來驗證會覺得不知道對不對
                不過這可能是我個人的問題QQQQQ

                老師本身回答大家的問題都很親切也很鼓勵大家發問
                老師本人也是高手 UCB phD
                MATLAB魔人(之前在開發MATLAB的公司工作)
                所以他自己本人也開發了好幾個toolbox供大家下載
                寫作業也會要用到那些toolbox
                遇到MATLAB一些怪問題老師也會修改toolbox還有請助教協助
                說到助教
                這門課的助教十分認真且親切 每堂課應該都有兩個助教跟著
                也都是高手

                不過這門課還是有一點點缺點
                其中比較嚴重的是後勁不足
                學期中以前每堂課內容都蠻豐富的蠻充實
                學期中後段老師不知道是累了還是怎麼了
                內容就比較鬆散了也會提早三四十分鐘以上下課
                還有可能因為是跑MATLAB
                judge system 還蠻慘的
                偶爾會出問題 又很慢
                如果當週作業比較大可能你程式跑完過2~3小時才會顯示新結果
                等到心都冷了

      σ 評分方式(給分甜嗎？是紮實分？)

                甜


                Course participation: 10%
                Each in-class technical question asked: +2% (10% top)

                Interactions with TAs and fellow students (over FB, CEIBA, etc.)

                Quiz: 15%

                About 10 assignments: 25%

                3~4 Programming contests: 25%

                Final project: 25%





      ρ 考題型式、作業方式

                整個學期大概只有3~4個禮拜沒作業
                包含3個 programming contest(依排名給分)
                作業難度不一 而且內容都很不同蠻豐富的
                其中包括好幾次錄音作業
                這就要考驗大家的恥力了
                其中包含 錄a~z 哼幾十首經典歌 唸50個冷門英文單字....等
                就是助教會讓大家把他們做的app下載到手機
                播放歌單裡面的經典歌曲
                然後跟著哼之類的
                我本人都是等到清晨或是半夜
                才跑到宿舍的陽台或是隱密的樓梯間錄一波不然實在太害羞了
                然後可能當週或下週的作業就是寫程式來處理你錄的檔案或是大家的檔案
                例如寫程式測試聲音起始點的準度等
                然後當你的檔案跑老師的程式表現差到不行的時候
                老師就會覺得很奇怪
                於是老師就會在上課的時候當場放出來
                所以就會聽到某人錄的"A~" "B~"
                然後問說這是誰的
                就會蠻好笑的

                programming contest 就是一些題目的小競賽
                本學期是end-point detection, beat tracking, pitch tracking
                的樣子如果我沒記錯
                上課介紹的一些topic然後給約兩週的時間
                你可以選擇tune 參數或是自己implement 演算法
                或是直接交
                因為老師給的example program本身就可以跑
                但是這樣分數通常會不太高（依排名給分）
                應該蠻多人都是花時間調個參數就上傳了
                但是有時候要調5~6個參數要調得好其實不容易
                花時間搞懂效果還是比較好

                像其中一次第一名accuracy 就可以撐到 9X%
                第二名也才80.X%
                實在是非常厲害
                老師會請每一次contest的前三名到前面跟大家分享自己的方法
                根據topic不同
                有一次老師原本的program就已經很猛 accuray 95%以上
                是真的不知道要怎麼改啊QQ

                final project 只要跟音樂有關係就好
                但是也有蠻多人是跟聲音有關而已
                例如用聲音的音高控制XXX的小遊戲
                大家做的主題都蠻不一樣的
                有些人找到一些open dataset train 出用聲音判別年齡的系統
                很多都是很有趣的主題
                有一個外籍生想要用聲音共振震破玻璃杯
                所以demo當天他就搬了一個大音箱來
                先找出共振頻率
                然後開始調高音量
                可能是他的玻璃杯品質太好
                杯子遲遲不肯破
                實在是有點尷尬因為真的很大聲(連續播放十分鐘)
                音量調到超大聲耳朵不太舒服了
                外面都來看是發生什麼事了
                都還不破

                外籍生有點失望
                就在大家要放棄時杯子才終於破掉
                全班歡聲雷動
                感動的一刻


                在上面有提到分數怎麼給
                上課只要有舉手問問題有加兩分至多十分
                作業有交沒有什麼錯應該就是100
                programming contest 你就算上傳不能跑的檔案出error 還是有60
                final project 是各組互評
                我本人近十次作業都有交
                6次quiz有一次爆掉(quiz就是考當天上課內容 老師想確保大家有聽課)
                3次programming contest 有一次太忙直接上傳老師的example
                其餘兩次一次進前三名一次十名內（分數大概是 79 97 95）
                final project被組員carry
                最後A+
                算是甜
                供大家參考

      ω 其它(是否註重出席率？如果為外系選修，需先有什麼基礎較好嗎？老師個性？
加簽習慣？嚴禁遲到等…)
Ψ 總結

                很有趣的課！
                有機會可以修一下！


--
※ 發信站: 批踢踢實業坊(ptt.cc), 來自: 49.158.223.44
※ 文章網址: https://www.ptt.cc/bbs/NTUcourse/M.1436563746.A.8F5.html
※ 編輯: eesu (180.217.198.99), 07/11/2015 05:34:33
※ 編輯: eesu (180.217.198.99), 07/11/2015 05:35:23
(chy1010 刪除 ntovjy2 的推文: 洗板)
(chy1010 刪除 ntovjy2 的推文: 洗板)
(chy1010 刪除 ntovjy2 的推文: 洗板)
(chy1010 刪除 ntovjy2 的推文: 洗板)
推 mitkaffee: 好有趣的課 錄音實在太羞恥了 07/11 13:25
推 warex14: 推！ 07/11 15:24
推 jeff8611: 老師大善人Ｔ＿Ｔ 07/12 01:38
推 cocoyan: 感覺有趣！ 07/16 18:37
推 worstactress: 推老師 matlab上的真的很棒～ 07/23 22:25
推 ioee: 推 07/28 05:55
















國立成功大學機構典藏:Item 987654321/93560





















































English

 | 
正體中文
 | 
簡體中文

 | 




	全文筆數/總筆數 : 79758/116691 (68%)


	



	造訪人次 : 11380756

    

	線上人數 : 90

                  	











RC Version 6.0 © Powered By DSPACE, MIT. Enhanced by NTU Library IR team. ReEnhanced by NCKU Library IR team. 











              搜尋範圍
              



全部NCKUR
電機資訊學院
   資訊工程學系
      --博碩士論文



查詢小技巧：您可在西文檢索詞彙前後加上"雙引號"，以獲取較精準的檢索結果若欲以作者姓名搜尋，建議至進階搜尋限定作者欄位，可獲得較完整資料




進階搜尋 










主頁
	                  ‧
	      
          
          	登入
          
          ‧
          上傳
 	‧
          說明
         ‧
          關於NCKUR
            
         ‧
          管理















國立成功大學機構典藏 >

電機資訊學院 >

資訊工程學系 >

博碩士論文 >



 Item 987654321/93560









資料載入中.....










書目資料匯出





Endnote RIS 格式資料匯出






Bibtex 格式資料匯出








引文資訊


                資料載入中.....
                


















請使用永久網址來引用或連結此文件:
                http://ir.lib.ncku.edu.tw/handle/987654321/93560









題名: 使用色度特徵的複音音樂訊號分析與檢索
其他題名: Polyphonic Music Information Analysis and Retrieval Using Chroma Feature
作者: 林冠廷Lin, Kuan-Ting
貢獻者: 資訊工程學系碩博士班蘇文鈺Su, Alvin Wen-Yu
關鍵詞: ChromaDTWRetrievalOnset分析檢索
日期: 2009-07-03
上傳時間: 2009-11-12 09:40:34  (UTC+8)
摘要: 隨著時代的進步，音樂的存在形式已經由過去的黑膠唱片、音樂CD等實體轉換成數位化後的檔案。在這些音樂檔案中，如何分析歌曲以及搜尋到我們所要的歌曲是一個很重要的議題。本篇論文利用Chroma Feature以及Dynamic Time Warping等基本技術配合其它的方法進行修改，並且提出多項應用。  我們的應用可以分成兩個部分，第一部分為起頭音偵測(對譜)與聲音合成，其做法有別於傳統的起頭音偵測，是以擁有樂譜資訊(MIDI File)的前提之下，利用Dynamic Time Warping來找到樂譜資訊和音樂錄音檔案所相對應的時間點。我們利用這部分的結果，來修正Partial Tracking的結果，接著將分析後所擷取出的參數將音樂重新合成，並且改變其音色。  第二部分為音樂資料庫搜尋，我們將資料庫分成樂譜資訊(MIDI File)以及音樂錄音檔案(Wav File)兩類，接著改變基本方法的特徵或計算距離的公式來做實驗。針對資料庫中為MIDI File，我們改變其計算相似度的公式，目的是希望在計算相似度時，降低其它非相關音高的能量所造成的差異。我們也利用F0 Detection和Partial Tracking的結果來加強和修改歌曲特徵，目的是希望從音樂錄音檔案中更精確地擷取到類似於MIDI File的特徵資料。於基本方法中，有搜尋移調歌曲的問題，我們提出了Base Semitone的方法改變原本的Chroma Feature，以Wav File資料庫來做實驗，並且與其它方法做比較。As time goes by  the pattern of music has been changed from material object (e g  vinyl  CD etc ) to digital files  Therefore  it is important to know how to analyze songs and search for the songs we need  We put some basic methods (e g  Chroma feature and Dynamic Time Warping) in use and improve these methods for raising their accuracy   Our applications are divided into two parts  The first part is onset detection  We use the alignment algorithm to find the onsets  Our procedure is different from the general method of in this part  With the premise of having the music scores (MIDI File)  we use “Dynamic Time Warping” algorithm to find the onsets of music records which are corresponding with onset of MIDI File  Then we use this result to improve the result of partial tracking and re-synthesize the music on changing timbres   In the second part  we present some methods to search the music database  Our music database can be divided into Wav files and MIDI files  For the MIDI Files  we have changed the equation which calculates the similarities from the basic method  In order to reduce the energy of unallied pitches  We also use the result of “F0 Detection” and “Partial Tracking” to enhance and modify the feature of songs  The purpose is to find the feature which is similar to MIDI file from Wav file  However  the basic method has the problem of key shifting  We will propose the method to solve this problem  We convert “Chroma Feature” into the other feature  The new feature is recorded the change of pitch between frames  We experiment this part by database of Wav files  and compare with the basic method
顯示於類別:[資訊工程學系] 博碩士論文

文件中的檔案:
檔案
大小格式瀏覽次數
0KbUnknown391檢視/開啟







在NCKUR中所有的資料項目都受到原著作權保護.





 -



              回饋
              







