 



首頁 | 國立臺灣科技大學資訊管理系






























首頁
|
臺灣科大
|
管理學院
|

系主任信箱
|

登入
|


English


































首頁 >
師資陣容 >
兼任師資



兼任師資




				職稱

				姓名

				最高學歷

				研究範疇

				講授課程





				副教授

				徐慧霞


					國立臺灣科技大學資訊管理系博士


				顧客關係管理、行動商務採用研究、虛擬社群研究

				電子商務



				助理教授

				楊立偉


					國立臺灣大學資訊管理系博士


				資訊科技與行銷、創業實踐、知識工程、巨量資料分析

				知識工程



				助理教授

				蔡佳倫

				國立臺灣科技大學資訊管理系博士

				密碼學、雲端安全、物聯網安全、資訊安全

				資訊系統安全與管理



				講師

				王詩鳳

				國立臺灣科技大學企業管理系博士

				經濟學、會計學

				經濟學



				講師

吳柏翰

				國立臺灣科技大學博士候選人

				數據科學、網站應用、計算機概論

				計算機概論、網頁製作



				教授級專家

				翁樸棟

				國立臺灣科技大學管理研究所博士

				商業智慧個案
			

				行銷管理



				教授級專家

				陳茂榮

				逢甲大學電子計算機科學系學士


					TSO/EISPF,
					WorkingwithDatasets,
					andUsingJCLandSDSF


				大型主機作業系統基礎與實務



				教授級專家

				廖燿堂

				國立臺灣科技大學管理學院管理學博士
				美國麻省理工學院(MIT)研究
			


					國營企業轉型私有化
					創新管理與組織變革研究
					環保資源廢棄物再利用(鎢,稀土)
					智能製造關鍵技術研究


				智能營運



				教授級專家

				陳麗如

				國立東華大學資訊工程研究所碩士

				軟體工程、雲端運算應用

				雲端運算應用與實務



				副教授級專家

				金志聿

				國立臺灣科技大學管理研究所博士

				創新與創業、創意行銷、網路行銷、大數據

				創業管理理論與實務、創業實務



				副教授級專家

				陳文川

				國立臺灣科技大學資訊管理系碩士

				軟體工程、軟體專案管理、軟體品質管理、系統分析與設計

				應用程式語言、管理資訊系統、軟體品質管理

















作業系統 - 維基百科，自由的百科全書































 







作業系統

維基百科，自由的百科全書


					前往：					導覽，					搜尋

























「operating system」的各地常用別名


中國大陸
操作系統


港臺
作業系統






作業系統簡略架構






作業系統架構，以Linux為例


作業系統（英語：operating system，縮寫：OS）是管理電腦硬體與軟體資源的電腦程式，同時也是電腦系統的核心與基石。作業系統需要處理如管理與配置記憶體、決定系統資源供需的優先次序、控制輸入與輸出裝置、操作網路與管理檔案系統等基本事務。作業系統也提供一個讓使用者與系統互動的操作介面。
作業系統的型態非常多樣，不同機器安裝的作業系統可從簡單到複雜，可從行動電話的嵌入式系統到超級電腦的大型作業系統。許多作業系統製造者對它涵蓋範疇的定義也不盡一致，例如有些作業系統整合了圖形化使用者介面，而有些僅使用命令列介面，而將圖形化使用者介面視為一種非必要的應用程式。
作業系統理論在電腦科學中，為歷史悠久而又活躍的分支；而作業系統的設計與實現則是軟體工業的基礎與核心。



目錄


1 歷史

1.1 1980年代前
1.2 1980年代
1.3 1990年代
1.4 今日

1.4.1 個人電腦
1.4.2 大型電腦
1.4.3 嵌入式
1.4.4 類Unix系統
1.4.5 微軟Windows
1.4.6 蘋果macOS
1.4.7 Chrome OS
1.4.8 其他


1.5 未來


2 功能

2.1 行程管理
2.2 記憶體管理
2.3 磁碟與檔案系統
2.4 網路
2.5 安全

2.5.1 內部通訊安全
2.5.2 外部通訊安全


2.6 使用者介面
2.7 驅動程式


3 結構
4 分類

4.1 核心結構
4.2 通用與專用、嵌入式
4.3 即時與非即時
4.4 8位元、16位元、32位元、64位元、128位元


5 參考文獻

5.1 參照
5.2 書目


6 外部連結
7 參見



歷史[編輯]




各類平臺上作業系統的功能演化


主條目：作業系統歷史
綜觀電腦之歷史，作業系統與電腦硬體的發展息息相關。作業系統之本意原為提供簡單的工作排序能力，後為輔助更新更複雜的硬體設施而漸漸演化。從最早的批次模式開始，分時機制也隨之出現，在多處理器時代來臨時，作業系統也隨之添加多處理器協調功能，甚至是分散式系統的協調功能。其他方面的演變也類似於此。另一方面，在個人電腦上，個人電腦之作業系統因襲大型電腦的成長之路，在硬體越來越複雜、強大時，也逐步實踐以往衹有大型電腦才有的功能。
總而言之，作業系統的歷史就是一部解決電腦系統需求與問題的歷史。
1980年代前[編輯]




IBM System/360，大型主機的經典之作


第一部電腦並沒有作業系統。這是由於早期電腦的建立方式（如同建造機械算盤）與效能不足以執行如此程式。但在1947年發明瞭電晶體，以及莫裡斯·威爾克斯發明的微程式方法，使得電腦不再是機械裝置，而是電子產品。系統管理工具以及簡化硬體操作流程的程式很快就出現了，且成為作業系統的濫觴。到了1960年代早期，商用電腦製造商製造了批次處理系統，此系統可將工作的建置、排程以及執行序列化。此時，廠商為每一臺不同型號的電腦創造不同的作業系統，因此為某電腦而寫的程式無法移植到其他電腦上執行，即使是同型號的電腦也不行。
到了1964年，IBM System/360推出了一系列用途與價位都不同的大型電腦，而它們都共用代號為OS/360的作業系統（而非每種產品都用量身訂做的作業系統）。讓單一作業系統適用於整個系列的產品是System/360成功的關鍵，且實際上IBM目前的大型系統便是此系統的後裔，為System/360所寫的應用程式依然可以在現代的IBM機器上執行。
OS/360也包含另一個優點：永久貯存裝置—硬碟的面世（IBM稱為DASD）。另一個關鍵是分時概念的建立：將大型電腦珍貴的時間資源適當分配到所有使用者身上。分時也讓使用者有獨佔整部機器的感覺；而Multics的分時系統是此時眾多新作業系統中實踐此觀念最成功的。
1963年，奇異公司與貝爾實驗室合作以PL/I語言建立的Multics[1]，是激發1970年代眾多作業系統建立的靈感來源，尤其是由AT&T貝爾實驗室的丹尼斯·里奇與肯·湯普遜所建立的Unix系統，為了實踐平臺移植能力，此作業系統在1973年由C語言重寫；另一個廣為市場採用的小型電腦作業系統是VMS。
1980年代[編輯]
第一代微型電腦並不像大型電腦或小型電腦，沒有裝設作業系統的需求或能力；它們只需要最基本的作業系統，通常這種作業系統都是從ROM讀取的，此種程式被稱為監視程式（Monitor）。1980年代，家用電腦開始普及。通常此時的電腦擁有8-bit處理器加上64KB記憶體、螢幕、鍵盤以及低音質喇叭。而80年代早期最著名的套裝電腦為使用微處理器6510（6502晶片特別版）的Commodore C64。此電腦沒有作業系統，而是以一8KB唯讀記憶體BIOS初始化彩色螢幕、鍵盤以及軟碟機和印表機。它可用8KB唯讀記憶體BASIC語言來直接操作BIOS，並依此撰寫程式，大部分是遊戲。此BASIC語言的直譯器勉強可算是此電腦的作業系統，當然就沒有核心或軟硬體保護機制了。此電腦上的遊戲大多跳過BIOS層次，直接控制硬體。



家用電腦C64的抽象架構


簡單應用程式
機器語言
（遊戲直接操作）


8k BASIC ROM



8k ROM-BIOS



硬體（中央處理器、儲存裝置等）



早期最著名的磁碟啟動型作業系統是CP/M，它支援許多早期的微電腦，且被MS-DOS大量抄襲其功能。最早期的IBM PC其架構類似C64。當然它們也使用了BIOS以初始化與抽象化硬體的操作，甚至也附了一個BASIC直譯器！但是它的BASIC優於其他公司產品的原因在於他有可攜性，並且相容於任何符合IBM PC架構的機器上。這樣的PC可利用Intel-8088處理器（16-bit暫存器）定址，並最多可有1MB的記憶體，然而最初只有640KB。軟式磁碟機取代了過去的磁帶機，成為新一代的儲存裝置，並可在他512KB的空間上讀寫。為了支援更進一步的檔案讀寫概念，磁碟作業系統（Disk Operating System，DOS）因而誕生。此作業系統可以合併任意數量的磁區，因此可以在一張磁碟片上放置任意數量與大小的檔案。檔案之間以檔名區別。IBM並沒有很在意其上的DOS，因此以向外部公司購買的方式取得作業系統。1980年微軟公司取得了與IBM的合約，並且收購了一家公司出產的作業系統，在將之修改後以MS-DOS的名義出品，此作業系統可以直接讓程式操作BIOS與檔案系統。到了Intel-80286處理器的時代，才開始實作基本的儲存裝置保護措施。MS-DOS的架構並不足以滿足所有需求，因為它同時衹能執行最多一個程式（如果想要同時執行程式，只能使用ISR（中斷處理常式）的方式來跳過OS而由程式自行處理多工的部份），且沒有任何記憶體保護措施。對驅動程式的支援也不夠完整，因此導致諸如音效裝置必須由程式自行設置的狀況，造成不相容的情況所在多有。某些操作的效能也是可怕地糟糕。許多應用程式因此跳過MS-DOS的服務程式，而直接存取硬體裝置以取得較好的效能。雖然如此，但MS-DOS還是變成了IBM PC上面最常用的作業系統（IBM自己也有推出DOS，稱為IBM-DOS或PC-DOS）。MS-DOS的成功使得微軟成為地球上最賺錢的公司之一。



MS-DOS在個人電腦上的抽象架構


普通應用程式（Shell script、文字編輯器）


MS-DOS（檔案系統）



BIOS（驅動程式）



硬體（中央處理器、儲存裝置等）



而1980年代另一個崛起的作業系統異數是Mac OS，此作業系統緊緊與麥金塔電腦綑綁在一起。此時一位全錄帕羅奧多研究中心的員工Dominik Hagen存取了蘋果電腦的史蒂夫·賈伯斯，並且向他展示了此時全錄發展的圖形化使用者介面。蘋果電腦驚為天人，並打算向全錄購買此技術，但因帕羅奧多研究中心並非商業單位而是研究單位，因此全錄回絕了這項買賣。在此之後蘋果一致認為個人電腦的未來必定屬於圖形使用者介面，因此也開始發展自己的圖形化作業系統。現今許多我們認為是基本要件的圖形化介面技術與規則，都是由蘋果電腦打下的基礎（例如下拉式選單、桌面圖示、拖曳式操作與雙點擊等）。但正確來說，圖形化使用者介面的確是全錄創始的。
1990年代[編輯]




Apple I電腦，蘋果電腦的第一代產品。


延續1980年代的競爭，1990年代出現了許多影響未來個人電腦市場深厚的作業系統。由於圖形化使用者介面日趨繁複，作業系統的能力也越來越複雜與巨大，因此強韌且具有彈性的作業系統就成了迫切的需求。此年代是許多套裝類的個人電腦作業系統互相競爭的時代。
上一年代於市場崛起的蘋果電腦，由於舊系統的設計不良，使得其後繼發展不力，蘋果電腦決定重新設計作業系統。經過許多失敗的專案後，蘋果於1997年釋出新作業系統——Mac OS X的測試版，而後推出的正式版取得了巨大的成功。讓原先失意離開蘋果的史蒂夫·賈伯斯風光再現。
除了商業主流的作業系統外，從1980年代起在開放原碼的世界中，BSD系統也發展了非常久的一段時間，但在1990年代由於與AT&T的法律爭端，使得遠在芬蘭赫爾辛基大學的另一股開源作業系統——Linux興起。Linux核心是一個標準POSIX核心，其血緣可算是Unix家族的一支。Linux與BSD家族都搭配GNU計畫所發展的應用程式，但是由於使用的許可證以及歷史因素的作弄下，Linux取得了相當可觀的開源作業系統市佔率，而BSD則小得多。相較於MS-DOS的架構，Linux除了擁有傲人的可移植性（相較於Linux，MS-DOS衹能運行在Intel CPU上），它也是一個分時多行程核心，以及良好的記憶體空間管理（普通的行程不能存取核心區域的記憶體）。想要存取任何非自己的記憶體空間的行程衹能透過系統呼叫來達成。一般行程是處於使用者模式（User mode）底下，而執行系統呼叫時會被切換成核心模式（Kernel mode），所有的特殊指令衹能在核心模式執行，此措施讓核心可以完美管理系統內部與外部裝置，並且拒絕無權限的行程提出的請求。因此理論上任何應用程式執行時的錯誤，都不可能讓系統崩潰。



幾乎完整的Linux架構圖


使用者
模式
應用程式（sh、vi、OpenOffice.org等）


複雜函式庫（KDE、glib等）




簡單函式庫（opendbm、sin等）



C函式庫（open、fopen、socket、exec、calloc等）


核心
模式
系統中斷、呼叫、錯誤等軟硬體訊息


核心（驅動程式、行程、網路、記憶體管理等）


硬體（處理器、記憶體、各種裝置）



另一方面，微軟對於更強力的作業系統呼聲的回應便是Windows NT於1999年的面世。
1983年開始微軟就想要為MS-DOS建構一個圖形化的作業系統應用程式，稱為Windows（有人說這是比爾·蓋茲被蘋果的Lisa電腦上市所刺激）。一開始Windows並不是一個作業系統，只是一個應用程式，其背景還是純MS-DOS系統，這是因為當時的BIOS設計以及MS-DOS的架構不甚良好之故。在1990年代初，微軟與IBM的合作破裂，微軟從OS/2（早期為命令列模式，後來成為一個很技術優秀但是曲高和寡的圖形化作業系統）專案中抽身，並且在1993年7月27日推出Windows 3.1，一個以OS/2為基礎的圖形化作業系統。並在1995年8月15日推出Windows 95。直到這時，Windows系統依然是建立在MS-DOS的基礎上，因此消費者莫不期待微軟在2000年所推出的Windows 2000上，因為它才算是第一個脫離MS-DOS基礎的圖形化作業系統。
底下的表格為Windows NT系統的架構：在硬體階層之上，有一個由微核心直接接觸的硬體抽象層（HAL），而不同的驅動程式以模組的形式掛載在核心上執行。因此微核心可以使用諸如輸入輸出、檔案系統、網路、資訊安全機制與虛擬記憶體等功能。而系統服務層提供所有統一規格的函式呼叫庫，可以統一所有副系統的實作方法。例如儘管POSIX與OS/2對於同一件服務的名稱與呼叫方法差異甚大，它們一樣可以無礙地實作於系統服務層上。在系統服務層之上的副系統，全都是使用者模式，因此可以避免使用者程式執行非法行動。



簡化版本的Windows NT抽象架構


使用者
模式
OS/2
應用程式
Win32
應用程式
DOS
程式
Win16
應用程式
POSIX
應用程式



其他DLL函式庫
DOS系統
Windows模擬系統


OS/2副系統
Win32副系統
POSIX.1副系統


核心
模式
系統服務層


輸入輸出管理
檔案系統、網路系統
物件管理系統 / 安全管理系統 / 行程管理 / 物件間通訊管理 / 行程間通訊管理 / 虛擬記憶體管理

微核心
視窗管理程式


驅動程式
硬體抽象層（HAL）
圖形驅動


硬體（處理器、記憶體、外部裝置等）



副系統架構第一個實作的副系統群當然是以前的微軟系統。DOS副系統將每個DOS程式當成一行程執行，並以個別獨立的MS-DOS虛擬機器承載其運行環境。另外一個是Windows 3.1模擬系統，實際上是在Win32副系統下執行Win16程式。因此達到了安全掌控為MS-DOS與早期Windows系統所撰寫之舊版程式的能力。然而此架構只在Intel 80386處理器及後繼機型上實作。且某些會直接讀取硬體的程式，例如大部分的Win16遊戲，就無法套用這套系統，因此很多早期遊戲便無法在Windows NT上執行。Windows NT有3.1、3.5、3.51與4.0版。Windows 2000是Windows NT的改進系列（事實上是Windows NT 5.0）、Windows XP（Windows NT 5.1）以及Windows Server 2003（Windows NT 5.2）與Windows Vista（Windows NT 6.0）也都是立基於Windows NT的架構上。
而本年代漸漸增長並越趨複雜的嵌入式裝置市場也促使嵌入式作業系統的成長。
今日[編輯]
現代作業系統通常都有一個使用的繪圖裝置的圖形化使用者介面（GUI），並附加如滑鼠或觸控面版等有別於鍵盤的輸入裝置。舊的OS或效能導向的伺服器通常不會有如此親切的介面，而是以命令列介面（CLI）加上鍵盤為輸入裝置。以上兩種介面其實都是所謂的殼，其功能為接受並處理使用者的指令（例如按下一按鈕，或在命令提示列上鍵入指令）。
選擇要安裝的作業系統通常與其硬體架構有很大關係，只有Linux與BSD幾乎可在所有硬體架構上執行，而Windows NT僅移植到了DEC Alpha與MIPS Magnum。在1990年代早期，個人電腦的選擇就已被侷限在Windows家族、類Unix家族以及Linux上，而以Linux及Mac OS X為最主要的另類選擇，直至今日。
大型機與嵌入式系統使用很多樣化的作業系統。大型主機近期有許多開始支援Java及Linux以便共享其他平臺的資源。嵌入式系統近期百家爭鳴，從給Sensor Networks用的Berkeley Tiny OS到可以操作Microsoft Office的Windows CE都有。
個人電腦[編輯]
個人電腦市場目前分為兩大陣營，此兩種架構分別有支援的作業系統：

Apple Macintosh - Mac OS X，Windows（僅Intel平臺），Linux、BSD。
IBM相容PC - Windows、Linux、BSD、Mac OS X（非正式支援）。

大型電腦[編輯]
最早的作業系統是針對20世紀60年代的大型主結構開發的，由於對這些系統在軟體方面做了巨大投資，因此原來的電腦廠商繼續開發與原來作業系統相相容的硬體與作業系統。這些早期的作業系統是現代作業系統的先驅。現在仍被支援的大型主機作業系統包括：

Burroughs MCP-- B5000，1961 to Unisys Clearpath/MCP, present.
IBM OS/360 -- IBM System/360, 1964 to IBM zSeries, present
UNIVAC EXEC 8 -- UNIVAC 1108, 1964, to Unisys Clearpath IX, present.

現代的大型主機一般也可執行Linux或Unix變種。
嵌入式[編輯]
嵌入式系統使用非常廣泛的系統（如VxWorks、eCos、Symbian OS及Palm OS）以及某些功能縮減版本的Linux或者其他作業系統。某些情況下，OS指稱的是一個內建了固定應用軟體的巨大泛用程式。在許多最簡單的嵌入式系統中，所謂的OS就是指其上唯一的應用程式。
類Unix系統[編輯]
主條目：類Unix





Unix系統的演變






KDE SC 4桌面


所謂的類Unix家族指的是一族種類繁多的OS，此族包含了System V、BSD與Linux。由於Unix是The Open Group的註冊商標，特指遵守此公司定義的行為的作業系統。而類Unix通常指的是比原先的Unix包含更多特徵的OS。
類Unix系統可在非常多的處理器架構下執行，在伺服器系統上有很高的使用率，例如大專院校或工程應用的工作站。
1991年，芬蘭學生林納斯·托瓦茲根據類Unix系統Minix編寫並發布了Linux作業系統核心，其後在理察·斯托曼的建議下以GNU通用公共許可證發布，成為自由軟體Unix變種. Linux近來越來越受歡迎，它們也在個人桌面電腦市場上大有斬獲，例如Ubuntu系統。
某些Unix變種，例如惠普的HP-UX以及IBM的AIX僅設計用於自家的硬體產品上，而SUN的Solaris可安裝於自家的硬體或x86電腦上。蘋果電腦的Mac OS X是一個從NeXTSTEP、Mach以及FreeBSD共同衍生出來的微核心BSD系統，此OS取代了蘋果電腦早期非Unix家族的Mac OS。
經歷數年的披荊斬棘，自由開源的Linux系統逐漸蠶食以往專利軟體的專業領域，例如以往電腦動畫運算巨擘──矽谷圖形公司（SGI）的IRIX系統已被Linux家族及貝爾實驗室研發小組設計的九號計畫與Inferno系統取代，皆用於分散運算式環境。它們並不像其他Unix系統，而是選擇內建圖形化使用者介面。九號計畫原先並不普及，因為它剛推出時並非自由軟體。後來改在自由及開源軟體許可證Lucent Public License釋出後，便開始擁有廣大的使用者及社群。Inferno已被售予Vita Nuova並以GPL/MIT許可證釋出。
當前，計算機按照計算能力排名世界500強中472台使用Linux，6台使用Windows，其餘為各類BSD等Unix。[來源請求]
微軟Windows[編輯]
主條目：Microsoft Windows
Microsoft Windows系列作業系統是在微軟給IBM機器設計的MS-DOS的基礎上設計的圖形作業系統。現在的Windows系統，如Windows 2000、Windows XP皆是建立於現代的Windows NT核心。NT核心是由OS/2和OpenVMS等系統上借用來的。Windows可以在32位元和64位元的Intel和AMD的處理器上運行，但是早期的版本也可以在DEC Alpha、MIPS與PowerPC架構上運行。
雖然由於人們對於開放原始碼作業系統興趣的提升，Windows的市場佔有率有所下降，但是到2004年為止，Windows作業系統在世界範圍內佔據了桌面作業系統90%的市場。[2]
Windows系統也被用在低階和中階伺服器上，並且支援網頁服務的資料庫服務等一些功能。最近微軟花費了很大研究與開發的經費用於使Windows擁有能運行企業的大型程式的能力。
Windows XP在2001年10月25日發布，2004年8月24日發布服務包2（Service Pack 2），2008年4月21日發布最新的服務包3（Service Pack 3）。
微軟上一款作業系統Windows Vista（開發代碼為Longhorn）於2007年1月30日發售[3]。Windows Vista增加了許多功能，尤其是系統的安全性和網路管理功能，並且其擁有介面華麗的Aero Glass。但是整體而言，其在全球市場上的口碑卻並不是很好。其後繼者Windows 7則是於2009年10月22日發售，Windows 7改善了Windows Vista為人詬病的效能問題，相較於Windows Vista，在同樣的硬體環境下，Windows 7的表現較Windows Vista為好。而最新的Windows 10則是於2015年7月29日發售。
蘋果macOS[編輯]




Mac OS X 10.7


主條目：Mac OS和Mac OS X
macOS，前稱「Mac OS X」或「OS X」，是一套執行於蘋果Macintosh系列電腦上的作業系統。Mac OS是首個在商用領域成功的圖形化使用者介面系統。Macintosh開發成員包括比爾·阿特金森（Bill Atkinson）、傑夫·拉斯金（Jef Raskin）和安迪·赫茨菲爾德（Andy Hertzfeld）。從OS X 10.8開始在名字中去掉Mac，僅保留OSX和版本號。2016年6月13日在WWDC2016上，蘋果公司將OS X更名為macOS，現行的最新的系統版本是macOS Sierra。
Chrome OS[編輯]
主條目：Google Chrome OS
Google Chrome OS是一項Google的輕型電腦作業系統計劃，其基於Google的瀏覽器Google Chrome的Linux核心。
其他[編輯]
大型主機以及嵌入式作業系統均與Unix或Windows家族關係不大，除了Android，Windows CE、Windows NT及Windows XP Embedded是Windows的血親產品，以及數種*BSD和嵌入式Linux套件為例外。
少數較舊的OS今日依然在一些需要穩定性的市場中活躍，例如IBM的OS/2[4]、BeOS以及XTS-400。
在達康時代狂潮過後，如AmigaOS與RISC OS等少數人使用的OS依然持續建立，以滿足狂熱的愛好者社群與特殊專業使用者。
優秀的作業系統必定要具備能讓各種能力級別的使用者滿足各種需求的工具包視覺化的高效簡便程式環境，以程式來建立程式，就如立法的法律指導規範新的法案的建立。這其實是作業系統所隱含的一部分，決定了可以有多強的擴充能力。比如，某個作業系統有對應的開發者工具包整合環境程式並且是個視覺化的，還能讓能力不太高的人一看能懂的，用於修改某個聲音合成器包含頻譜顯示，可要是作業系統本身不支援也沒有提供可用的工具程式，就會變得很繁瑣，很可能為了達到這個目標，開發者就要預備好各種相關的工具程式，甚至自己來編寫一系列相關的工具程式建立專門的工具包，最後還要檢查代碼。若是有人想通過音樂來生成五線譜，要對類似標記式語言的五線譜規則對應一下，對各種音色，音準採集並總結出一整套規律，通過聲音識別可以識別出樂器的類別等，進而標出樂符完成從聲音到樂譜的轉換並生成。可是對人聲卻又更為複雜也不必要如此。若是需要用聲音的波形圖重現聲音，沒有相關的工具集是相當難實現，另外只有使用同一套聲音的波形繪製規則的所生成的波形圖用來再現的聲音才是原來的聲音。
在作為商品出售的作業系統軟體的歷史中常常因為其中包含的瀏覽器，媒體播放器在美國遭到反壟斷起訴，差點使得功能上殘缺不全。少數作業系統軟體能夠提供較為全面的App和實用工具程式。
作業系統軟體的編譯也需要對應的編譯環境。
在同一臺電腦上執行不同的作業系統軟體，就能夠以不同的方式來使用電腦資源。比如，在Mac上執行OS X和Windows以兩種不同的技術OpenCL，Core Image:DirectX來使用圖形卡實現類似的作用。
通過圖像識別和聲音識別來進行資訊搜尋。
能夠滿足不同需求所要求的精確程度對時間的精細劃分，以及尺度細分可以互聯，同步，協調原本必須由多個人協同合作才能完成的隨時需要調整並相互同步的操控作業，這就必須有即時訊息傳送顯示，視覺化的用於協調同步計劃任務的配置指令碼，以及執行這樣計劃任務的完整元件。
未來[編輯]
研究與建立未來的作業系統依舊進行著。作業系統朝提供更省電、網路化、易用、華麗的使用者介面的方向來改進。類UNIX OS通過和桌面環境開發者協作，正努力讓自己改進使用環境。
eyeOS是一套基於PHP實現的半開源模擬雲端運算操作系統，但其實質只是在網路瀏覽器中提供一種類似無界限的類獨立操作系統，其並非於任何類似虛擬化中實現的真正電腦操作系統，能提供諸如Word、PPT、Excel的在線處理功能…
GNU Hurd是一個以完全相容Unix並加強許多功能為目標的微核心架構。微軟Singularity是一個奠基於.Net並以建立較佳記憶體保護機制為目標的研究計畫。
功能[編輯]
作業系統位於底層硬體與使用者之間，是兩者溝通的橋樑。使用者可以通過作業系統的使用者介面，輸入命令。作業系統則對命令進行解釋，驅動硬體裝置，實現使用者要求。以現代標準而言，一個標準PC的作業系統應該提供以下的功能：


行程管理（Processing management）
記憶體管理（Memory management）
檔案系統（File system）
網路通訊（Networking）
安全機制（Security）
使用者介面（User interface）
驅動程式（Device drivers）


行程管理[編輯]
主條目：行程和執行緒
不管是常駐程式或者應用程式，他們都以行程為標準執行單位。當年運用馮·諾伊曼結構建造電腦時，每個中央處理器最多只能同時執行一個行程。早期的作業系統（例如DOS）也不允許任何程式打破這個限制，且DOS同時只有執行一個行程（雖然DOS自己宣稱他們擁有終止並等待駐留能力，可以部分且艱難地解決這問題）。現代的作業系統，即使只擁有一個CPU，也可以利用多行程（multitask）功能同時執行多個行程。行程管理指的是作業系統調整多個行程的功能。
由於大部分的電腦只包含一顆中央處理器，在單核心（Core）的情況下多行程只是簡單迅速地切換各行程，讓每個行程都能夠執行，在多核心或多處理器的情況下，所有行程透過許多協同技術在各處理器或核心上轉換。越多行程同時執行，每個行程能分配到的時間比率就越小。很多作業系統在遇到此問題時會出現諸如音效斷續或滑鼠跳格的情況（稱做崩潰（Thrashing），一種作業系統只能不停執行自己的管理程式並耗盡系統資源的狀態，其他使用者或硬體的程式皆無法執行）。行程管理通常實踐了分時的概念，大部分的作業系統可以利用指定不同的特權等級（priority），為每個行程改變所佔的分時比例。特權越高的行程，執行優先順序越高，單位時間內佔的比例也越高。互動式作業系統也提供某種程度的回饋機制，讓直接與使用者互動的行程擁有較高的特權值。
除了行程管理之外，作業系統尚有擔負起行程間通訊（IPC）、行程異常終止處理以及死結（Dead Lock）偵測及處理等較為艱深的問題。
在行程之下尚有執行緒的問題，但是大部分的作業系統並不會處理執行緒所遭遇的問題，通常作業系統僅止於提供一組API讓使用者自行操作或透過虛擬機器的管理機制控制執行緒之間的互動。
記憶體管理[編輯]
根據帕金森定律：「你給程式再多記憶體，程式也會想盡辦法耗光」，因此程式設計師通常希望系統給他無限量且無限快的記憶體。大部分的現代電腦記憶體架構都是階層式的，最快且數量最少的暫存器為首，然後是快取、記憶體以及最慢的磁碟儲存裝置。而作業系統的記憶體管理提供尋找可用的記憶空間、配置與釋放記憶空間以及交換記憶體和低速儲存裝置的內含物……等功能。此類又被稱做虛擬記憶體管理的功能大幅增加每個行程可獲得的記憶空間（通常是4GB，即使實際上RAM的數量遠少於這數目）。然而這也帶來了微幅降低執行效率的缺點，嚴重時甚至也會導致行程崩潰。
記憶體管理的另一個重點活動就是藉由CPU的幫助來管理虛擬位置。如果同時有許多行程儲存於記憶裝置上，作業系統必須防止它們互相干擾對方的記憶體內容（除非透過某些協定在可控制的範圍下操作，並限制可存取的記憶體範圍）。分割記憶體空間可以達成目標。每個行程只會看到整個記憶體空間（從0到記憶體空間的最大上限）被配置給它自己（當然，有些位置被作業系統保留而禁止存取）。CPU事先存了幾個表以比對虛擬位置與實際記憶體位置，這種方法稱為分頁配置。
藉由對每個行程產生分開獨立的位置空間，作業系統也可以輕易地一次釋放某行程所佔據的所有記憶體。如果這個行程不釋放記憶體，作業系統可以結束行程並將記憶體自動釋放。
磁碟與檔案系統[編輯]
主條目：檔案系統
所謂的檔案系統，通常指稱管理磁碟資料的系統，可將資料以目錄或檔案的型式儲存。每個檔案系統都有自己的特殊格式與功能，例如日誌管理或不需磁碟重整。
作業系統擁有許多種內建檔案系統。例如Linux擁有非常廣泛的內建檔案系統，如ext2、ext3、ext4、ReiserFS、Reiser4、GFS、GFS2、OCFS、OCFS2、NILFS與Google檔案系統。Linux也支援非原生檔案系統，例如XFS、JFS、FAT家族與NTFS。另一方面，Windows能支援的檔案系統衹有FAT12、FAT16、FAT32、EXFAT與NTFS。NTFS系統是Windows上最可靠與最有效率的檔案系統。其他的FAT家族都比NTFS老舊，且對於檔案長度與分割磁碟能力都有很大限制，因此造成很多問題。而UNIX的檔案系統多半是UFS，而UNIX中的一個分支Solaris最近則開始支援一種新式的ZFS。
大部份上述的檔案系統都有兩種建置方法。系統可以以日誌式或非日誌式建置。日誌式檔案系統可以以較安全的手法執行系統回復。如果一個沒有日誌式建置的檔案系統遇上突然的系統崩潰，導致資料建立在一半時停頓，則此系統需要特殊的檔案系統檢查工具才能復原；日誌式則可自動回復。微軟的NTFS與Linux的ext3、ext4、reiserFS與JFS都是日誌式檔案系統。
每個檔案系統都實作相似的目錄／子目錄架構，但在相似之下也有許多不同點。微軟使用「\」符號以建立目錄／子目錄關係，且檔案名稱忽略其大小寫差異；UNIX系統則是以「/」建立目錄架構，且檔案名稱大小寫有差異。(其實這是給system call看的，"/"或"\"並不實際存在硬碟)
網路[編輯]
許多現代的作業系統都具備操作主流網路通訊協定TCP/IP的能力。也就是說這樣的作業系統可以進入網路世界，並且與其他系統分享諸如檔案、印表機與掃描器等資源。
許多作業系統也支援多個過去網路啟蒙時代的各路網路通訊協定，例如IBM建立的系統網路架構、DEC在它所生產的系統所設定的DECnet（英語：DECnet）架構與微軟為Windows製作的特殊通訊協定。還有許多為了特殊功能而研發的通訊協定，例如可以在網路上提供檔案存取功能的NFS系統。現今大量用於影音串流（Streaming media）及遊戲訊息傳送的UDP協定等。
安全[編輯]
大多數作業系統都含有某種程度的資訊安全機制。資訊安全機制主要基於兩大理念：

作業系統提供外界直接或間接存取數種資源的管道，例如本地端磁碟機的檔案、受保護的特權系統呼叫、使用者的隱私資料與系統執行的程式所提供的服務。
作業系統有能力認證資源存取的請求。允許通過認證的請求並拒絕無法通過的非法請求，並將適當的權力授權（Authorization（英語：授權））給此請求。有些系統的認證機制僅簡略地把資源分為特權或非特權，且每個請求都有獨特的身分辨識號碼，例如使用者名稱。資源請求通常分成兩大種類：

內部來源：通常是一個正在執行的程式發出的資源請求。在某些系統上，一個程式一旦可執行就可做任何事情（例如DOS時代的病毒），但通常作業系統會給程式一個識別代號，並且在此程式發出請求時，檢查其代號與所需資源的存取權限關係。
外部來源：從非本地端電腦而來的資源請求，例如遠端登入本機電腦或某些網路連線請求（FTP或HTTP）。為了識別這些外部請求，系統也許會對此請求提出認證要求。通常是請求輸入使用者名稱以及相對應的密碼。系統有時也會應用諸如磁卡或生物識別資料的它種認證方法。在某些例子，例如網路通訊上，通常不需通過認證即可存取資源（例如匿名存取的FTP伺服器或P2P服務）。



除了允許／拒絕形式的安全機制，一個高安全等級的系統也會提供記錄選項，允許記錄各種請求對資源存取的行為（例如「誰曾經讀了這個檔案？」）。
肇因於軍方與商業組織將敏感資料記錄在電腦上，安全機制在作業系統歷史上是一個被長久關註與討論的問題。美國國防部（DoD）便創立了《可信賴之計算機系統評鑑程式》（TCSEC（英語：TCSEC）），此手冊確立了評鑑安全機製成效的基本原則。這對作業系統作者來說非常重要，因為TCSEC是用於評鑑、分類與選拔出用於處理、儲存與獲取敏感或機密資料的電腦系統的標準程式。
內部通訊安全[編輯]
內部資訊安全可視為防止正在執行的程式任意存取系統資源的手段。大多作業系統讓普通程式可直接操作電腦的CPU，所以產生了一些問題，例如怎樣把可如作業系統一樣處理事務、執行同樣特殊指令的程式強迫停止，畢竟在此情境下，作業系統也只是另一個平起平坐的程式。為通用作業系統所生產的CPU通常於硬體層級上實踐了一定程度的特殊指令保護概念。通常特權層級較低的程式想要執行某些特殊指令時會被阻斷，例如直接存取像是硬碟之類的外部裝置。因此，程式必須得經由詢問作業系統，讓作業系統執行特殊指令來存取磁碟。因此作業系統就有機會檢查此程式的識別身分，並依此接受或拒絕它的請求。
在不支援特殊指令架構的硬體上，另一個也是唯一的保護方法，則是作業系統並不直接利用CPU執行使用者的程式，而是藉由模擬一個CPU或提供一P-code機系統（虛擬碼執行機），像是Java一樣讓程式在虛擬機器上執行。
內部安全機制在多使用者電腦上特別重要：它允許每個系統使用者擁有自己個人的檔案與目錄，且其他使用者不能任意存取或刪除。因為任何程式都可能繞過作業系統的監控，更有可能繞過側錄程式的監控，擁有強制力的內部安全機制在側錄啟動時也非常重要。
外部通訊安全[編輯]
通常一個作業系統會為其他網路上的電腦或使用者提供（主持）各種服務。這些服務通常藉由埠或作業系統網路位址後的數字存取點提供。通常此服務包括提供檔案共享（NFS）、列印共享、電子郵件、網頁服務與檔案傳輸協定（FTP）。 外部資訊安全的最前線，是諸如防火牆等的硬體裝置。在作業系統內部也常設置許多種類的軟體防火牆。軟體防火牆可設定接受或拒絕在作業系統上執行的服務與外界的連線。因此任何人都可以安裝並執行某些不安全的網路服務，例如Telnet或FTP，並且設定除了某些自用通道之外阻擋其他所有連線，以達成防堵不良連線的機制。
使用者介面[編輯]
今日大部分的作業系統都包含圖形化使用者介面（GUI）。有幾類較舊的作業系統將圖形化使用者介面與核心緊密結合，例如最早的Windows與Mac OS實作產品。此種手法可提供較快速的圖形回應能力，且實作時不需切割模組因而較為省工，但是會有強烈副作用，例如圖形系統崩潰將導致整個系統崩潰，例如藍白當機畫面。許多近代的作業系統已模組化，將圖形介面的副系統與核心分開（已知Linux與Mac OS X原先就是如此設計，而某些擴充版本的Windows終於也採用此手法）。
許多作業系統允許使用者安裝或創造任何他們喜歡的圖形化使用者介面[5]。大部分的Unix與Unix衍生系統（BSD、Linux與Minix）通常會安裝X Window系統配合GNOME或KDE桌面環境。而某些作業系統就沒有這麼彈性的圖形化使用者介面，例如Windows。這類的作業系統只能透過外加的程式來改變其圖形化使用者介面，甚至根本只能改變諸如選單風格或顏色配置等部分[來源請求]。
圖形化使用者介面與時並進，例如Windows在每次新版本上市時就會將其圖形化使用者介面改頭換面，而Mac OS的GUI也在Mac OS X上市時出現重大轉變。
驅動程式[編輯]
主條目：驅動程式
所謂的驅動程式（Device driver）是指某類設計來與硬體互動的電腦軟體。通常是一設計完善的裝置互動介面，利用與此硬體連接的電腦匯排流或通訊子系統，提供對此裝置下令與接收資訊的功能；以及最終目的，將訊息提供給作業系統或應用程式。驅動程式是針對特定硬體與特定作業系統設計的軟體，通常以作業系統核心模組、應用軟體包或普通電腦程式的形式在作業系統核心底下執行，以達到通透順暢地與硬體互動的效果，且提供硬體在處理非同步的時間依賴性介面（asynchronous time-dependent hardware interface）時所需的中斷處理常式。
設計驅動程式的主要目的在於操作抽象化，任何硬體模組，既使是同一類的裝置，在硬體設計面上也有巨大差異。廠商推出的較新模組通常更可靠更有效率，控制方法也會有所不同。電腦與其作業系統每每不能預期那些現有與新裝置的變異之處，因此無法知道其操作方法。為解決此問題作業系統通常會主動制訂每種裝置該有的操作方式，而驅動程式功能則是將那些作業系統制訂的行為描述，轉譯為可讓裝置瞭解的自訂操作手法。
理論上適合的驅動程式一旦安裝，相對應的新裝置就可以無誤地執行。此新驅動程式可以讓此裝置完美地切合在作業系統中，讓使用者察覺不到這是作業系統原本沒有的功能。
結構[編輯]
作業系統理論研究者有時把作業系統分成四大部分：

驅動程式 - 最底層的、直接控制和監視各類硬體的部分，它們的職責是隱藏硬體的具體細節，並向其他部分提供一個抽象的、通用的介面。
核心 - 作業系統之最核心部分，通常執行在最高特權級，負責提供基礎性、結構性的功能。
支承庫 - （亦作「介面庫」）是一系列特殊的程式庫，它們職責在於把系統所提供的基本服務包裝成應用程式所能夠使用的編程介面（API），是最靠近應用程式的部分。例如，GNU C執行期庫就屬於此類，它把各種作業系統的內部編程介麵包裝成ANSI C和POSIX編程介面的形式。
外圍 - 所謂外圍，是指作業系統中除以上三類以外的所有其他部分，通常是用於提供特定高階服務的部件。例如，在微核心結構中，大部分系統服務，以及UNIX/Linux中各種守護行程都通常被劃歸此列。

當然，本節所提出的四部結構觀也絕非放之四海皆準。例如，在早期的微軟視窗作業系統中，各部分耦合程度很深，難以區分彼此。而在使用外核結構的作業系統中，則根本沒有驅動程式的概念。因而，本節的討論只適用於一般情況，具體特例需具體分析。
作業系統中四大部分的不同佈局，也就形成了幾種整體結構的分野。常見的結構包括：簡單結構、層結構、微核心結構、垂直結構、和虛擬機器結構。
分類[編輯]
作業系統的分類沒有一個單一的標準，可以根據工作方式分為批次處理作業系統、分時作業系統、實時作業系統、網路作業系統和分散式作業系統等；根據架構可以分為單核心作業系統等；根據執行的環境，可以分為桌面作業系統，嵌入式作業系統等；根據指令的長度分為8bit, 16bit, 32bit, 64bit的作業系統。
核心結構[編輯]
主條目：核心
核心是作業系統最核心最基礎的構件，其結構往往對作業系統的外部特性以及應用領域有著一定程度的影響。儘管隨著理論和實踐的不斷演進，作業系統高層特性與核心結構之間的耦合有日趨縮小之勢，但習慣上，核心結構仍然是作業系統分類之常用標準。
核心的結構可以分為單核心、微核心、超微核心、以及外核等。
單核心結構是作業系統中各核心部件雜然混居的形態，該結構產生於1960年代（亦有1950年代初之說，尚存爭議），歷史最長，是作業系統核心與外圍分離時的最初形態。
微核心結構是1980年代產生出來的較新的核心結構，強調結構性部件與功能性部件的分離。20世紀末，基於微核心結構，理論界中又發展出了超微核心與外核心等多種結構。儘管自1980年代起，大部分理論研究都集中在以微核心為首的「新興」結構之上，然而，在應用領域之中，以單核心結構為基礎的作業系統卻一直占據著主導地位。
在眾多常用作業系統之中，除了QNX和基於Mach的UNIX等個別系統外，幾乎全部採用單核心結構，例如大部分的Unix、Linux，以及Windows（微軟聲稱Windows NT是基於改良的微核心架構的，儘管理論界對此存有異議）。 微核心和超微核心結構主要用於研究性作業系統，還有一些嵌入式系統使用外核。
基於單核心的作業系統通常有著較長的歷史淵源。例如，絕大部分UNIX的家族史都可上溯至1960年代。該類作業系統多數有著相對古老的設計和實現（例如某些UNIX中存在著大量1970年代、1980年代的代碼）。另外，往往在效能方面略優於同一應用領域中採用其他核心結構的作業系統（但通常認為此種效能優勢不能完全歸功於單核心結構）。
通用與專用、嵌入式[編輯]
通用作業系統是面向一般沒有特定應用需求的作業系統。由於沒有特定的應用需求，通用作業系統為了適應更廣泛的應用，需要支援更多的硬體與軟體，需要針對所有的使用者體驗，對系統進行更新。通用作業系統是一個工程量繁重的作業系統。
即時與非即時[編輯]
「即時作業系統」（Real Time OS）泛指所有據有一定實時資源排程以及通訊能力的作業系統。而所謂「即時」，不同語境中往往有著非常不同的意義。某些時候僅僅用作「高效能」的同義詞。但在作業系統理論中「即時性」所指的通常是特定操作所消耗的時間（以及空間）的上限是可預知的。比如，如果說某個作業系統提供實時記憶體分配操作，那也就是說一個記憶體分配操作所用時間（及空間）無論如何也不會超出作業系統所承諾的上限。即時性在某些領域非常重要，比如在工業控制、醫療器材、影音訊合成、以及軍事領域，即時性都是無可或缺的特性。
常用即時作業系統有QNX、VxWorks、RTLinux等等，而Linux、多數UNIX、以及多數Windows家族成員等都屬於非實時作業系統。作業系統整體的即時性通常依仗核心的即時能力，但有時也可在非即時核心上建立即時作業系統，很多在Windows上建立的即時作業系統就屬於此類。
在POSIX標準中專有一系用於規範即時作業系統的API，其中包括POSIX.4、POSIX.4a、POSIX.4b（合稱POSIX.4）以及POSIX.13等等。符合POSIX.4的作業系統通常被認可為即時作業系統（但即時作業系統並不需要符合POSIX.4標準）。
8位元、16位元、32位元、64位元、128位元[編輯]
所謂8位元、16位元、32位元、64位元、128位元等術語有時指匯流排寬度，有時指指令寬度（在定長指令集中），而在作業系統理論中主要是指記憶體定址的寬度。如果記憶體的定址寬度是16位元，那麼每一個記憶體位址可以用16個二進位位來表示，也就是說可以在64KB的範圍內定址。同樣道理32位元的寬度對應4GB的定址範圍，64位元的寬度對應16 Exabyte的定址範圍。記憶體定址範圍並非僅僅是對作業系統而言的，其他類型的軟體的設計有時也會被定址範圍而影響。但是在作業系統的設計與實現中，定址範圍卻有著更為重要的意義。
在早期的16位元作業系統中，由於64KB的定址範圍太小，大都都採用「段」加「線性位址」的二維平面位址空間的設計。分配記憶體時通常需要考慮「段置換」的問題，同時，應用程式所能夠使用的位址空間也往往有比較小的上限。
在32位元作業系統中，4GB的定址範圍對於一般應用程式來說是綽綽有餘的，因而，通常使用一維的線性位址空間，而不使用「段」。
參考文獻[編輯]
參照[編輯]


^ （英文）Multicians.org and the History of Operating Systems, Thomas Haigh, 13 September 2002
^ Why Windows Won't Always Dominate - New devices will shrink Microsoft's OS market share, researcher predicts, David Legard, IDG News Service, Friday, April 23, 2004
^ （英文）微軟Vista作業系統官方網站公告（2007年1月10日造訪）
^ OS/2曾經是Windows系統的勁敵，且比爾蓋茲直到最近還是這樣認為，請看一段專訪內容（摘錄自今日美國報）：
蓋茲談Linux
問：人們對Linux對微軟的威脅有些擔心，Sim Desk等基於全球資訊網的作業系統也讓人擔心。休斯敦、慕尼黑和北京都在考慮用Linux產品，這個問題有多大？
答：這些是我們現在的競爭對手。這與以前人們採用IBM的OS/2作業系統並沒有什麼不同。
問：沒人用OS/2。
答：你在開玩笑嗎？讓我們認真談談吧。IBM當時是我們規模的15倍，你找不出一家不用OS/2的銀行。......
^ 各項多采多姿的KDE／GNOME桌面快照。


書目[編輯]


Deitel, Harvey M.; Deitel, Paul; Choffnes, David. Operating Systems. Upper Saddle River, NJ: Pearson/Prentice Hall. 2004. ISBN 978-0-13-182827-8.  引文使用過時參數coauthors (幫助)
Silberschatz, Abraham; Galvin, Peter Baer; Gagne, Greg. Operating System Concepts. Hoboken, NJ: John Wiley & Sons. 2008). ISBN 978-0-470-12872-5.  引文使用過時參數coauthors (幫助); 請檢查|date=中的日期值 (幫助)（俗稱恐龍書，OS教科書聖經本）
Tanenbaum, Andrew S.; Woodhull, Albert S. Operating Systems. Design and Implementation. Upper Saddle River, N.J.: Pearson/Prentice Hall. 2011. ISBN 978-0-13-142938-3.  引文使用過時參數coauthors (幫助)（Linux由此書而啟發，可惜新版本將實作內容移除）
Stallings, William. Operating Systems: Internals and Design Principles, 5/E. Prentice Hall. 2005. ISBN 978-0-13-147954-8. 


外部連結[編輯]

（英文） OS的歷史
（英文） 簡略OS介紹的教育網站....
（英文） OSDP，所有作業系統的檔案網站
（英文） Unix OS家族的歷史樹
（英文） Windows的歷史
（英文） TLDP，Linux核心徹底講解，適用於想要徹底瞭解OS核心結構者
（德文） 作業系統原理介紹

參見[編輯]

計算機
作業系統核心
實時作業系統-分時系統-多工-嵌入式系統-單一使用者-多使用者
對稱多處理機（SMP）-集群（Cluster）-分散式計算
64位元作業系統


部分作業系統



Unix
FreeBSD
Solaris
AIX
HP-UX
IRIX
Tru64
MS-DOS
GNU/Linux
Mac OS
Windows
Windows NT
其它作業系統










閱
論
編


作業系統






概述



使用者（英語：Operating system advocacy）
比較（英語：Comparison of operating systems）
Forensic software engineering（英語：Forensic software engineering）
歷史
業餘愛好者開發（英語：Hobbyist operating system development）
列表
年表
使用份額








核心





系統結構




Exokernel
混合
微內核
單核心
Rump kernel（英語：Rump kernel）
Unikernel（英語：Unikernel）









元件




驅動程式
可載入核心模組
微內核
使用者空間











行程管理





概念




上下文交換
中斷
行程間通訊
行程
行程控製表
實時作業系統
執行緒
分時系統









排程演算法




多工處理
固定優先級搶占（英語：Fixed-priority pre-emptive scheduling）
多級反饋佇列（英語：Multilevel feedback queue）
搶占式多工處理
循環制
Shortest job next（英語：Shortest job next）











記憶體管理和資源保護



匯流排錯誤
一般保護錯誤
記憶體保護
分頁
分級保護域
記憶體區段錯誤
虛擬記憶體








儲存存取和檔案系統



啟動程式
碎片整理（英語：Defragmentation）
裝置檔案（英語：Device file）
檔案屬性
Inode
記錄檔
分割
虛擬檔案系統
虛擬磁帶庫（英語：Virtual tape library）








作業系統列表



AmigaOS
Android
BeOS
BSD
Chrome OS
CP/M
DOS
GNU
Haiku
Illumos
IOS
Linux
Macintosh

Classic Mac OS
MacOS


MINIX
MorphOS（英語：MorphOS）
MUSIC/SP（英語：MUSIC/SP）
NOS（英語：NOS (software)）
OpenVMS
ORVYL（英語：ORVYL and WYLBUR）
OS/2
OSv（英語：OSv）
Pick（英語：Pick operating system）
QNX
ReactOS
RISC OS
RSTS/E（英語：RSTS/E）
RSX-11
RT-11（英語：RT-11）
Solaris
TOPS-10/TOPS-20（英語：TOPS-20）
TPF（英語：Transaction Processing Facility）
UNIX
Visi On（英語：Visi On）
VM/CMS（英語：VM (operating system)）
VS/9（英語：VS/9）
Microsoft Windows
Xinu（英語：Xinu）
z/OS（英語：z/OS）








其他概念



應用程式介面（API）
電腦網路
HAL
Live CD
Live USB
殼層（OS Shell）

命令列介面（CLI）
圖形化使用者介面（GUI）
TUI（英語：Text-based user interface）
VUI（英語：Voice user interface）


預啟動執行環境
















閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類系統進行分類。











權威控制



LCCN: sh85094982
GND: 4006216-8
BNF: cb119333481（資料）
NDL: 00865121












 
						取自 "https://zh.wikipedia.org/w/index.php?title=操作系統&oldid=44918303"					
分類：作業系統隱藏分類：含有英語的條目有未列明來源語句的條目自2007年7月有未列明來源語句的條目含有過時參數的引用的頁面引文格式1錯誤：日期包含規範控制信息的維基百科條目使用ISBN魔術連結的頁面 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源維基新聞 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AcèhAfrikaansAlemannischአማርኛAragonésÆngliscالعربيةمصرىঅসমীয়াAsturianuAzərbaycancaتۆرکجهБашҡортсаŽemaitėškaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBrezhonegBosanskiБуряадCatalàMìng-dĕ̤ng-ngṳ̄НохчийнکوردیČeštinaKaszëbscziЧӑвашлаCymraegDanskDeutschZazakiΕλληνικάEnglishEsperantoEspañolEestiEuskaraفارسیSuomiVõroFrançaisFurlanGaeilgeGalego客家語/Hak-kâ-ngîעבריתहिन्दीHrvatskiHornjoserbsceMagyarՀայերենInterlinguaBahasa IndonesiaInterlingueIlokanoIdoÍslenskaItaliano日本語Basa JawaქართულიQaraqalpaqshaTaqbaylitҚазақшаಕನ್ನಡ한국어RipoarischKurdîКыргызчаLatinaLëtzebuergeschLumbaartLingálaລາວLietuviųLatviešuMalagasyОлык марийМакедонскиമലയാളംМонголमराठीBahasa MelayuMirandésမြန်မာဘာသာPlattdüütschनेपाल भाषाNederlandsNorsk nynorskNorsk bokmålOccitanଓଡ଼ିଆਪੰਜਾਬੀPälzischPolskiپنجابیپښتوPortuguêsRuna SimiRomânăРусскийРусиньскыйСаха тылаScotsSámegiellaSrpskohrvatski / српскохрватскиසිංහලSimple EnglishSlovenčinaSlovenščinaSoomaaligaShqipСрпски / srpskiBasa SundaSvenskaŚlůnskiதமிழ்తెలుగుТоҷикӣไทยTagalogTürkçeТатарча/tatarçaУкраїнськаاردوOʻzbekcha/ўзбекчаVènetoTiếng ViệtWalonWinarayWolofייִדישYorùbáBân-lâm-gú粵語 
編輯連結 





 本頁面最後修訂於2017年6月25日 (週日) 08:46。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 












中心成員 - 臺灣科技大學管理學院 




Your browser does not support JavaScript!

Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!



























迴首頁
臺科大網站
網站地圖
English version






Your browser does not support JavaScript!

































分類清單






招生訊息
管理研究所博士班招生專區
EMBA碩士在職專班招生專區


關於本院
院長簡介
院長媒體專訪
副院長簡介
院辦公室
各系辦公室
傑出校友
院務規章

最新公告

管院特色
專業學程
個案參與式學習
業界協同教學


系所簡介
工業管理系
企業管理系
資訊管理系
財務金融所
管理研究所
科技管理研究所
管研所博士班暨EMBA
MBA
管理學士班(菁英班)


研究中心
工管系實驗室
企管系研究中心
財金所研究中心

產學個案研究中心
中心簡介
中心成員
個案教學
成果瀏覽
會議研討
得獎紀錄



師資簡介
工管系師資
企管系師資
財金所師資
資管系師資
科管所師資


聯誼會/校友資訊
EMBA聯誼會
EMBA校友會
管院聯合校友會

管理學院聯合校友會獎助學金
各期電子報
表單下載
AOL資料庫
聯絡我們
EMBA校友旁聽專區








系所連結













工業管理系


















企業管理系


















資訊管理系


















財務金融所


















管理研究所


















科技管理研究所


















管研所博士班暨EMBA


















MBA


















管理學士班(菁英班)






















































首頁
 > 
研究中心 
 > 
產學個案研究中心 
 > 
中心成員 










中心成員














 
歷屆接受管院補助參與哈佛大學商學院「個案教學法和以參與者為中心的學習法」（Program on Case Method and Participate-Centered Learning）的教師名單。
 
GCPCL V (2015 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




陳俊男 


財金所 


美國雪城大學財務博士 


財報分析、計量經濟學、投資學、財富管理、財務管理、行為財務學、交易系統與技術分析實證、期貨與選擇權、國際財務管理、商業模式與財務金融策略管理、財務理論、企業分析、診斷與評價 




 
GCPCL IV (2014 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




謝劍平 


財金所 


美國肯特州立大學財務博士 


財務管理、投資銀行、投資學、國際財務管理 




 
GCPCL V (2013 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




羅乃維 


資管系 


美國紐約州立大學石溪分校 電機工程 博士 


程式語言、大型主機作業系統基礎與實務、網路服務資訊安全 




 
GCPCL IV (2012 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




張譯尹 


企管系 


英國Loughborough University博士 Harvard Business School, 2012, Global Colloquium on Participant-Centered Learning (GloColl) 


人力資源管理、國際企業概論、國際人力管理、企業質性研究方法 




 
GCPCL III (2011 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




張順教 


企管系 


美國紐約州大石溪分校經濟學博士 


高科技產業與策略分析、策略管理 




劉顯仲 


科管所 


美國洛杉磯加州大學 (UCLA) 機械航空博士/國立交通大學管理學博士 


組織創新管理、新事業發展、技術評估與預測 、社會網路分析與管理應用 




 
GCPCL II (2010 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




郭人介 


工管系 


美國賓州州立大學工業與管理系統工程博士 


生產與作業管理、服務管理、供應鏈管理、資料探勘 




 
GCPCL I (2009 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




林義貴 


工管系 


國立清華大學工業工程與工程管理博士 


全球運籌、網路分析、可靠度分析、資訊倫理 




葉穎蓉
(中心主任) 


企管系 


美國威斯康辛大學麥迪遜分校工業工程博士 


人力資源管理、績效考核、組織行為 




 
PCMPCL VI (2008 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




吳宗成 


資管系 


國立交通大學資訊工程博士 


密碼學、電腦與通訊安全、系統分析與設計、電子商務安全 




黃世禎 


資管系 


澳洲墨爾本 La Trobe大學軟體工程博士 


軟體度量與分析(研究所)、軟體工程與管理（EMBA專班）、軟體專案管理（大四)、 軟體工程（大三）、系統分析與設計（大二）、程式設計（大一） 




徐世輝 


工管系 


美國肯塔基大學統計博士 


應用機率模型、可靠度工程、統計學、隨機過程、 應用迴歸分析 




張琬喻 


財金所 


英國華威大學商學院財務管理博士 


財務管理、投資管理、統計 




PCMPCL V (2007 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




李永輝


工管系 


美國德州理工大學工業工程博士 


人因工程、生物力學、工作生理學、工作研究 




周子銓 


資管系 


英國華威大學資訊管理博士 


資訊科技管理、行銷管理、顧客關係管理、會計資訊系統 




查士朝 


資管系 


國立台灣大學資訊管理博士 


計算機概論、應用程式語言 




林維熊 


企管系 


美國堪薩斯大學經濟博士 


經濟學、經濟學實務分析、組織管理、競爭策略、 
策略性推理(賽局理論)、企業政策、產業組織、 
績效評估、科技管理、組織架構設計原理、
人事管理、代理理論 




羅士哲 


工管系 


美國南加州大學工業與系統工程博士 


模糊數學、商業物流、管理資訊系統、行動商務 




PCMPCL IV (2007 Winter)




教授姓名 


所屬科系 


學　　歷 


教授課程 




周碩彥 


工管系 


美國密西根大學工業與作業工程博士 


工程經濟、同步工程、電腦輔助繪圖與設計、實體與幾何模型、製造資訊處理、電子化企業管理、供應鏈管理、電子化企業概論、研發管理、全球運籌管理 




王孔政 


工管系 


美國威斯康辛大學工業工程博士 


生產與作業管理、決策分析、科技產業製造管理 




徐中琦 


企管系 


美國紐約州立大學經濟/財務管理博士 


財務管理、國際企業、投資管理、經濟學、投資銀行 




張光第 


企管系 


美國德州農工大學不動產財務博士 


財務管理、投資管理、不動產財務管理、財務理論、投資學、金融機構與管理 




鄭仁偉 


企管系 


國立台灣大學商學博士 


組織與管理、人力資源管理、企業概論 




林俊昇 


企管系 


美國馬里蘭大學 Smith商學院 企業管理博士 


行銷管理、服務業行銷、通路管理、行銷溝通策略 




PCMPCL III (2006 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




許總欣


工管系 


國立政治大學企業管理博士 


物料需求計劃、生產管理、組織與管理、製造策略 




欒    斌 


企管系 


美國威斯康辛大學工業工程博士 


電子商業、管理資訊系統 




葉明義 


企管系 


美國奧斯汀德州大學企管博士 


消費者行為、行銷研究 




盧希鵬 


資管系 


美國威斯康辛大學工業工程博士 


電子商務、網路行銷、網際網路與競爭優勢 




陳正綱 


資管系 


美國愛荷華州立大學工業工程博士 


作業研究、研究方法 




PCMPCL II (2006 Winter)




教授姓名


所屬科系


學　　歷


教授課程




潘昭賢


工管系 


美國休士頓大學工業工程博士 


線性規劃、作業研究、排程理論、系統分析 




歐陽超


工管系 


美國俄亥俄州立大學工業與系統工程博士 


電子化企業、企業模型建構與流程分析 




葉瑞徽 


工管系 


美國密西根大學工業工程博士 


作業研究、統計與機率、隨機過程、可靠度分析、 時間序列分析 




紀佳芬 


工管系 


美國紐約州立大學水牛城分校工業工程博士 


人因工程、工業安全、人機系統應用 




林丙輝 


企管系


英國曼徹斯特大學商學博士 


財務管理、投資管理、債券市場、期貨與選擇權、財務風險管理 




吳克振 


企管系


美國加州柏克萊大學管理科學博士 


行銷管理、品牌管理、高科技行銷管理 




PCMPCL I (2005 Summer)




教授姓名 


所屬科系 


學　　歷 


教授課程 




劉代洋 


企管系 


美國杜蘭大學經濟博士 


管理經濟學、策略管理、高階主管經營策略、經濟學、總體經濟學、財政學 




林孟彥 


企管系 


英國華威大學商學院行銷學博士 


行銷管理、行銷理論、管理學、研究方法 




 










































43, Sec.4, Keelung Road, Taipei 106, Taiwan
Tel: +886-2-2737-6437, Fax: +886-2-2737-6360

























icodding愛程式: CentOS Linux系統建置與實務重點整理1
















































































icodding愛程式




程式語言、網際網路、作業系統、資料庫系統、資訊安全、各種免費軟體、開放原碼、開源軟體等技術介紹、分享與推廣。




















網頁



首頁


Ubuntu


CentOS


Linux


Windows Server 相關


PHP


RWD


jQuery Mobile


CSS3


HTML5


JQuery


JavaScript


資料庫相關


java 相關


nsis 相關


drupal


C/C++教學


軟體測試


python


raspberry pi 


Arduino


其他


















































































2015年7月22日 星期三







CentOS Linux系統建置與實務重點整理1






1969年貝爾實驗室研發UNIX作業系統，80年代UNIX應用在大型主機或高速運轉系統，1991年就讀 Helsinki 大學的 Linus Torvalds 開發 pc 上的學術版 UNIX 並以自由授權的方式開放出來。
發行版本包凡 Red Hat、CentOS、Fedora、Ubuntu、SuSE、Debian、Slackware 等。 
virtualbox 網路設定：

橋接介面卡：虛擬網路卡藉由實體網路卡連至外部網路。


NAT：主機扮演 geteway 閘道器角色，虛擬機透過主機(閘道)的 NAT 服務，藉由主機的網路卡上網。


「僅限主機」：用來建立內部網路環境的虛擬機群，各虛擬機可以互相溝通、與主機之間也可正常連繫。


內部網路：與橋接模式相同，但需要主機host與兩部虛擬機器可以互通時，應選擇此模式，是一個內部網路。

常用 virtualbox 指令：鍵盤與滑鼠的截取提示"右邊 ctrl"、脫離 virtualbox"右邊 ctrl"。在文字模式底下帳號後面的#字號表示最高權限管理者專用命令提示符號，一般使用者則是$字號。[root@mgr home]中 root 表示使用者名稱、mgr 表示主機名稱、home 表示目前所在的目錄。
基礎 shell 指令說明：切換目錄 cd 目的地路徑、查看目錄 ls -l(ll)、查看隱藏檔 ls -al、變更使用者密碼 passwd、查看自己 whoami、查看誰在線上 who ( w 可查看更詳細的使用者資訊)、重關機 shutdown -h 分鐘(立即關機 shutdown -h now 或 poweroff )、取消先前重開機指令shoudown -c、重開機 reboot、TAB 鍵快速完成。





張貼者：



anthony




於

上午11:40











以電子郵件傳送這篇文章BlogThis！分享至 Twitter分享至 Facebook分享到 Pinterest












沒有留言:







張貼留言

















較新的文章


較舊的文章

首頁




訂閱：
張貼留言 (Atom)

















產生縮短網址











Translate













搜尋此網誌





























Popular Posts




javascript 與 php 之間的互相呼叫
1.JS方式呼叫PHP文件並取得php中的值 舉一個簡單的例子來說明: 如在頁面a.html中用下麵這句呼叫: <script type="text/javascript" src="b.php?action=test">&lt...





Python 研究 - pyserial 用法 
python中pyserial模塊使用方法  一、概述      pyserial模塊封裝了對串口的訪問。    二、特性      在支持的平臺上有統一的接口。      通過python屬性訪問串口設置。      支持不同的字節大小、停止位、校驗位和流控設置。      可...





python 研究-with as 用法
With語句是什麼? 有一些任務，可能事先需要設置，事後做清理工作。對於這種場景，Python的with語句提供了一種非常方便的處理方式。一個很好的例子是文件處理，你需要獲取一個文件句柄，從文件中讀取資料，然後關閉文件句柄。 如果不用with語句，程式碼如下：     file ...





利用 python 來執行 selenium 自動測試
python 撰寫 selenium 自動化測試流程的相關環境設定；  1. 安裝 python (本範例以 python 2.6.6 進行)：   請參考「在 Windows 7 環境安裝 Python 2.6.6」  我的電腦/進階系統設定/環境變數/  path c:\Pt...










Python 使用 PyQt 開發 windows 視窗軟體
當我們想要利用 Python 開發 windows 視窗軟體其實有幾種套件可以使用，PyQt、PyGTK、wx、tkinter、pywin等，其中我們採用 PyQt 來小牛刀試一下 windows 視窗軟體開發，相關的Qt 參數及函式都可以在官網上查詢到，本次我們則是安裝 win...





python 研究-raw_input 和 input 差異比較
python中raw_input和input用法與區別 raw_input和input兩個函數是python中常用的函數了，但是我用到最多的是input函數了這個不有置疑了，但raw_input函數有與input函數在用法上有什麼區別呢？下麵我們一起來看看吧。 在使用python...





 Python 研究-List、Tuple、String、Dict、Set分析
python的基礎資料結構有：列表(list), 元祖(tuple), 字典(dict), 字串(string), 集合(set) 1）列表(list) 列表是Python中最具靈活性的有序集合物件類型,與字串不同的是,列表可以包含任何種類的物件:數字,字串,甚至是其他列表.並且...










windows server 2012 建置 AD DS 網域
網域(Active Directory)環境可以說是Windows 核心功能，比如單一驗證、企業權限管控、叢集架構及集中化伺服器管理等等都必須依靠網域來簡化管理，所以網域對Windows作業系統是很重要的架構。  接下來介紹如何安裝Active Directory Domain ...





PHP教學-MySQL、MySQLi、PDO差異
PHP-MySQL 是 PHP 操作 MySQL 資料庫最原始的 Extension ，PHP-MySQLi 的 i 代表 Improvement ，提更了相對進階的功能，就 Extension 而言，本身也增加了安全性。而 PDO (PHP Data Object) 則是提供了...





raspberry pi (linux pi) 如何設定開機自動執行 sell script 呢?
 要在 /etc/init.d資料下撰寫一個shell script檔，去執行你要執行的指令   我用shell script去啟動另一個shell script，並且執行java程式，以達到開機時，啟動程式。   假設我在/etc/init.d下，擺放run_start.sh ...















Follow us on G+












網誌存檔








        ► 
      



2016

(70)





        ► 
      



九月

(7)







        ► 
      



八月

(3)







        ► 
      



七月

(2)







        ► 
      



五月

(24)







        ► 
      



四月

(2)







        ► 
      



三月

(5)







        ► 
      



二月

(20)







        ► 
      



一月

(7)









        ▼ 
      



2015

(452)





        ► 
      



十二月

(86)







        ► 
      



十一月

(42)







        ► 
      



十月

(64)







        ► 
      



九月

(70)







        ► 
      



八月

(107)







        ▼ 
      



七月

(81)

共同的 DOS 與 Linux 指令的比較
CMD常用網管指令
CMD 檔案管理指令
Linux 效能分析
MySQL 指令查詢資料庫使用容量
如何改變命令提示字元 cmd 視窗的預設視窗大小
MySQL查詢快取的狀態和維護
查詢mysql使用的記憶體數量
CentOS Linux系統建置與實務重點整理7 (檔案伺服器架設 vsftpd )
CentOS Linux系統建置與實務重點整理8 (名稱伺服器架設 )
MySQL 常用指令2
架設更安全的vsftpd
CentOS Linux系統建置與實務重點整理7 (檔案伺服器架設 vsftpd )
CentOS Linux系統建置與實務重點整理5 (十三、十四章)
CentOS Linux系統建置與實務重點整理6 (網頁伺服器架設)
Got error 28 from storage engine 解決方法
Windows Server 2008 R2 關閉 Internet Explorer增強式安全性設...
Windows 7如何啟用系統管理員 Administrator 帳戶
windows server 2012 R2 如何關閉【Internet Explorer 增強式安...
CMD指令大全
Windows Server 2012 R2在桌面上顯示我的電腦等圖示
CentOS Linux系統建置與實務重點整理4
vi 及 vim 指令
date日期時間指令用法
linux如何設定磁碟機配額?
如何讓Apache不自動產生目錄的索引呢?
YUM指令
cron自動排程
chmod檔案權限包含哪些參數呢?
CentOS Linux系統建置與實務重點整理3
Virtualbox 安裝 windows8.1 或者是 windows server 2012 時...
如何讓 CentOS 6 支援 exFAT 檔案系統
如何使用virtualbox 中 linux 系統掛載usb隨身碟呢?
如何利用virualbox linux 安裝新硬碟呢?
CentOS Linux系統建置與實務重點整理2
MySQL 常用指令
linux history指令用法
CentOS Linux系統建置與實務重點整理1
hosts的作用
centos nfs server和client架設實作
linux 指令中cp、mv、rm、ls中的別名alias
linux發生”du: cannot access”錯誤
使用navicat時發生1045 error解決方式
linux 利用nohup來檢測目前備份的情況
CentOS 6.x 安裝 nslookup 的步驟 (與 yum 如何查詢套件)
Windows IP釋放，更新，清除DNS
centos 實作 rsync
centos 安裝samba
xampp命令列指令
在vim, vi使用數字鍵盤(pietty, putty)
用 locate 指令尋找檔案
PHP教學 - 運算子(Operators) - 下
PHP教學 - 運算子(Operators) - 上
linux文字模式如何複製資料夾內的檔案移動到其他資料夾內?
PHP 的 @、# 符號的意思
php >>>和===符號
PHP中的.=的意思
PHP中的符號 ->、=> 和 :: 分別表示什麼意思?
[VirtualBox] Samba 下 Ubuntu與Win7共享資料夾設定，利用 host-on...
利用.htaccess來保護主機下的目錄與檔案
centos 安裝monitorix即時系統狀態監控
centos xampp 安裝 bitnami drupal
centos 設定ssh連線
CentOS 安裝 XAMPP完整詳解
入侵監測系統的構建（ chkrootkit ）
MRTG 流量統計安裝教學
my.conf說明(二)
my.conf設定說明(一)
php.ini設定說明
httpd.conf 設定檔的參數說明
Virtualbox網路模式說明
iptables常用指令
iptables 指令詳解
優化 tcp/ip 設定 (kuann 版本)
檢查及修復檔案系統指令 — e2fsck
centos 忘記root密碼
故障排除trouble shooting
centos系統目錄架構圖
常用指令
Linux故障排除技術和修復技巧
LINUX 常見問題處理








        ► 
      



六月

(2)

















關於我自己




anthony


熱愛的程度有分等級
很愛 -> 狂人
極愛 -> 魔人
狂愛 -> 魔王

對於一個喜愛電腦，網路，行動裝置，熱愛分享與學習的我，目前的等級應該在狂人吧


檢視我的完整簡介











總瀏覽量
















Be our Fan












More information


























Popular Topics










































Linux Shell 程式設計與管理實務 - Books on Google Play                                            Cookies help us deliver our services. By using our services, you agree to our use of cookiesLearn moreGot itMy AccountSearchMapsYouTubePlayNewsGmailDriveCalendarGoogle+TranslatePhotosMoreShoppingWalletFinanceDocsBooksBloggerContactsHangoutsKeepEven more from GoogleSign inHidden fieldsSearch             Apps       My apps     Shop      Games     Family     Editors' Choice            Movies & TV       My movies & TV     Shop      TV     Family     Studios     Networks            Music       My music     Shop            Books       My books     Shop      Comics     Textbooks     Children's Books            Newsstand       My newsstand     Shop            Devices       Shop            Entertainment          Account     Redeem     Buy gift card     My wishlist     My Play activity     Parent Guide                  Genres              Arts & Entertainment  Biographies & Memoirs  Books in Spanish  Business & Investing  Computers & Technology  Cooking, Food & Wine  Education  Engineering  Fiction & Literature  Health, Mind & Body  History  Home & Garden  Law  Medicine  Mystery & Thrillers  Parenting & Families  Politics & Current Events  Religion & Spirituality  Romance  Science & Math  Science Fiction & Fantasy  Sports  Textbooks  Travel  Young Adult       Comics    General  Crime & Mystery  Fantasy  Horror  Literary  Manga  Media Tie-In  Science Fiction  Superheroes       Children's Books    Ages 5 & Under  Ages 6-8  Ages 9-12  Action & Adventure  Animals & Nature  Comics  Early Learning  Education  Fiction  Growing Up  History & Biographies  Mysteries  Science Fiction & Fantasy  Sports                        Home            Top Charts            New Arrivals                                       Settings      Android Device Manager                        Linux Shell 程式設計與管理實務         8            臥龍小三    臥龍小三工作室                       Add to Wishlist   Adding...   Added to Wishlist   Remove   Removing...      Item added to wishlist.     Item removed from wishlist.      0              自動化管理主機的王道Shell是作業系統的重要元件之一。當我們管理一部主機時，擔負系統與使用者之間溝通橋樑的就是Shell。Shell負責解譯使用者輸入的命令，進行存取檔案系統、操作各種設備、管理行程、記憶體等任務。因此，我們可以說：對Shell的操控能力，大約就等於是主機的管理能力。所以，想要熟練主機的管理，熟悉Shell的操作是不可或缺的功課。本書希望能帶領讀者，瞭解Shell的重要性，熟悉Shell的運用方法，建立自動化管理主機的能力，迅速、輕鬆地解決您在工作現場遇到的問題。．完整涵蓋Bash 4.x的各項功能，是目前最詳實的中文Shell書籍．由簡入繁，循序漸進，建立紮實的Bash Shell程式設計基礎．帶領讀者學習如何設計自動化程式，輕鬆解決問題，增進工作效率．包含許多網路管理實務，可快速提升讀者主機管理的能力．各章均附有詳實的範例程式，並提供多個主機管理script檔的自動產生器      Read more                  About the author    臥龍小三台灣大學數學系畢。擁有豐富的網管經驗，歷任：數學教師、導師、資訊組長、教網中心程式研發組組長、教網中心主任等工作。擁有以下身分：■ BBS站資深站長。■ 自由軟體技術交流網站長。■ B2D中文Linux計劃創立者。■ B2D Server開發者。     Read more                 My review                                  Review from                                            Reviews      Write a Review      Edit Review         4.9        8 total                      Jason Wang          Easier for me to read and provide a lot of useful info.            User reviews               Jason Wang  November 29, 2016                         Easier for me to read and provide a lot of useful info.   Full Review             Review deleted         Additional information     Features Flowing text   Best for Web, Tablet, Phone   Pages  995    Language Chinese   Content protection This content is DRM protected.   Read Aloud Available on Android devices   Report  Flag as inappropriate          Reading information     Smartphones and Tablets   Install the  Google Play Books app  for  Android  and  iPad/iPhone . It syncs automatically with your account and allows you to read online or offline wherever you are.   Laptops and Computers   You can read books purchased on Google Play using your computer's web browser.     eReaders and other devices   To read on e-ink devices like the Sony eReader or Barnes & Noble Nook, you'll need to download a file and transfer it to your device. Please follow the detailed  Help center  instructions to transfer the files to supported eReaders.           Similar   See more                   Pre-ordered           Ubuntu 指令新手馬上會用到的 35 個技法    餘嘉適 January 24, 2015    2  $4.99 $3.82       [+] 適合對象本書適合已經開始接觸 Ubuntu 指令，但是，找不到該學那些指令或想學習常用指令的操作方式的讀者。  [+] 本書特色- 本書內含 35 個實用情境、40 多種指令應用及近 70 個實用操作範例，即看、即查、即用。- 簡單明瞭及結構化的撰寫風格，可快速查詢並應用，不用浪費時間於搜尋及驗證。- 本書經過仔細分類和撰寫，可幫助快速學會使用 Ubuntu 常用指令和技巧。- 本書所介紹的指令除 Ubuntu 外，可適用於多數的 Linux 發行版。- 本書所有範例均於 Ubuntu 14.04 版完成實例測試與驗證。[+] 網站更多詳細資料請參考下列網站。https://books.arthurtoday.com/u35/                  2  $4.99 $3.82                      Pre-ordered           生物人的電腦教室：高通量定序分析一次搞定: 2016年修訂版    李鎮宇 / Eric Lee October 1, 2012    2  $9.84 $7.87       「生物資訊」本身就是一套強大的工具，原始資料在這套工具分析處理後具備說故事的功能。生物研究有了資訊的影子，就意味著她的發展會跟資訊一樣快，這就是生物資訊的現況。尤其資訊技術與日俱進，基因體定序的價格越來越便宜。我在這本書的目標並不遠大，就是把這些生物資料都會遇到的「處理通則」解釋一次，然後做給大家看。本書採取的策略是，「如何第一次分析高通量基因定序就上手」。讀者不必擔心會被太多理論所淹沒，反而會驚訝於原來在自己電腦上安裝分析基因定序的軟體是多麼的簡單。他們會發現，以後再也不必低聲下氣的去懇求生物資訊學者，來分析自己產生的大量實驗數據。只要對生物資料處理有興趣，加上對Linux有學習需求的人都用得上。一向待在「濕實驗室」，想要瞭解基礎生物資訊的朋友，這本書是你的救贖。                  2  $9.84 $7.87                      Pre-ordered           Swift 入門指南 V1.21    Kaiching Chang March 16, 2015    2  $9.99 $7.99       Swift 為 Apple 新推出的程式語言之一，目的是簡化 Mac OS App 及 iOS App 的開發，目前中、英文學習資源都很豐富，無論是網路上免費的或是書店裡販賣的書籍，入門書籍方面，惟獨缺少直接帶領讀者學習開發軟體的教材，此亦本書的設計理念，希望藉由帶領讀者開發簡單的 Mac OS App ，以此帶給讀者完整的軟體開發觀念。本書分成三大部分，每一部分又分成 7 到 13 個單元 ◎ 基礎篇 ◎ 軟體開發篇 ◎ GUI 篇由基礎篇 13 個單元開始，帶領讀者進入 Xcode 的 Playground 世界，依序漸進熟悉 Swift 的基本語法後，進入軟體開發篇 7 個單元，由常見的 MVC 開發模式先發展 M 的部分，也就是計算核心 Encrypt 類別，接著進入 GUI 篇 7 個單元發展 V 跟 C 的部分，最後將 M 、 V 、 C 組合成完整的 Mac OS App 專案。這樣的教學模式，其重點在引導讀者開發簡單的圖形介面程式，以期讀者能自動自發多做程式練習，所以本書特別適合高中到大一或程式設計的完全新手，至於語言細節或是程式設計的技巧，您可讀完本書最後一個「單元 27 - 下一步」後，再去找尋第二本書到第三本書繼續深入研究 Swift 語言，因此本書是提供給完全初學者的第一本書，而非最後一本書。電子書版本會隨 Xcode 及 Swift 版本進行更新，預計後續版本也會加入發展 iOS App 的部分。從一開始整理資料、打字、編輯、校稿等等完全由作者獨力進行，計有 28 篇文章及多個程式範例，寫書就像開發大型軟體一樣難免會有 bug （怕有不少 bug 說），若您發現本書的任何錯誤，敬請利用以下網頁回報 ◎ 《Swift 入門指南》V1.00 錯誤回報（Google 表單）本書的主要參考資料為 Swift 官方的文件 ◎ The Swift Programming Language: About Swift您不一定要購買這本電子書，若您願意花一點錢購買這份 V1.00 的電子書，感謝您以行動贊助作者持續開發程式語言教材，謝謝您 ^_^更新資訊：本次更新主要為更換封面與訂正內容，以及將內文程式碼加上淺灰色背景。更新資訊： Swift 已是開放原始碼的程式語言，詳見官網 Swift.org 。更新資訊：本次更新將範例程式碼改為 Swift 2.1 ，並在 Xcode 7.2.1 下執行。更新資訊：訂正內容及重寫「關於本書」。張凱慶2016/03/30                  2  $9.99 $7.99                      Pre-ordered           Java嵌入式程式設計-Raspberry Pi    張益裕 January 1, 2015    2  $1.92       2015/04/30改版，支援Raspberry Pi 2 Model B與Pi4J 1.0。 Java嵌入式程式設計入門，介紹最新的Java SE Embedded 8應用程式開發技術，在Raspberry Pi設計各種嵌入式應用程式。從基礎的LED、開關、伺服馬達與超音波感應器控制與開發，最後使用停車場模擬系統，整合基礎的應用為一個可以實際運作的嵌入式系統。在CodeData連載的Java Embedded系列專欄，改編並重新排版為電子書。所有範例程式與高解析度插圖、線路圖，都公開在GitHub。                  2  $1.92                      Pre-ordered           Android 6 Tutorial    張益裕 October 22, 2015    2  $3.23 $2.45        * 適用 Android 2.X ~ 6.X* 實作 Android 6 Runtime Permission* 適用 Android Studio 與 Material Design* 使用最新的Android Studio開發工具* 學習全新的Material Design與RecylerView* 從分析、設計到實作，完成一個多功能記事應用程式                  2  $3.23 $2.45                      Pre-ordered           Dropbox 不用整理的檔案整理術: 把混亂變效率的魔法，除了同步還有60個運用技巧    Pseric August 30, 2013    2  $6.01 $4.63       ?你或許已經看過許多介紹辦公室環境、居家雜物整理術的書，但是，在現代人工作、生活時「一定會接觸」的數位工具上，那些雜亂的檔案、文件、影音資料，有沒有一個好的整理方法呢？在網路時代，有沒有可以顛覆你的想像，讓你更有效率的整理技巧？有的！那就是 Dropbox 的雲端整理術。這才是現代人在工作與生活上最需要的整理技巧！Dropbox 是目前世界上最多人使用的一種雲端檔案同步服務，它可以幫助你在不同的電腦、手機、平板之間，輕鬆的把所有重要文件即時同步，讓每一臺電腦裡同時擁有最新的檔案資料。但不僅僅是如此，Dropbox帶來的是一種全新的工作方法的革命，讓你忘掉以前那種用隨身碟複製檔案的方法吧！現在，我們要用全新的觀念來做檔案整理，成為更有效率的工作達人。                  2  $6.01 $4.63                      Pre-ordered           C++ 速查手冊 V1.10    Kaiching Chang April 11, 2014    2  $11.99 $9.59       對於 C++ 的初學者而言，最難的是 C++ 有太多太多的東西需要熟練掌握，很多 C++ 書籍提供的例子過於複雜、深奧，常常無法將每個章節獨立抽出來閱讀，除非願意從頭一字一句的花時間好好啃，導致學習效果因人而異。這本書是將 C++ 語言包含 C++11 標準的各個部分，整理成初學者看得懂的內容，每個部分都提供盡可能最簡單的例子，也都可以獨立抽出來閱讀，使之成為初學者可隨時翻查的手冊。學習程式設計的目的是為了開發軟體，本書採取「拆」的策略介紹 C++ ，也就是介紹 C++ 中有哪些小零件，可是開發軟體是把各種小零件組合起來的藝術，這門藝術需要靠不斷的演練才能達成。若是您打算以本書窺看 C++ 的各種零件，卻又擔心不知道如何組裝，建議您可再去找坊間專門討論用 C++ 開發軟體的書籍，或是本書作者的另一本給初學者的電子書《C++ 入門指南》，就是以一完整的小軟體範例貫穿全書。從一開始整理資料、打字、編輯、校稿等等完全由作者獨力進行，計有 130 篇文章及 138 個程式範例，寫書就像開發大型軟體一樣難免會有 bug （怕有不少 bug 說），若您發現本書的任何錯誤，敬請利用作者網誌的目錄頁中的連結回報 http://pydoing.blogspot.com/2014/04/cpp-manual.html 。您不一定要購買本電子書，若您願意花一點錢購買這份 V1.00 的電子書，感謝您以行動贊助作者持續開發程式語言教材，謝謝您 ^_^更新資訊：本次更新主要為更換封面與訂正內容，以及將內文程式碼加上淺灰色背景。更新資訊：本次更新主要為更換封面與訂正英文術語拼寫錯誤。Kaiching Chang 2014/04/06 2015/10/292017/03/27紙本書 http://www.inknet.com.tw/bookstore/view/bi/7247/ui/4259                  2  $11.99 $9.59                      Pre-ordered           Python 入門指南 V2.31    Kaiching Chang July 27, 2014    2  $9.99 $7.99       Python 為熱門的程式語言之一，中英文學習資源都琳瑯滿目，無論是網路上免費的或是書店裡販賣的書籍，讀者可以找到各式各類的教材，目前中、英文學習資源都很豐富，無論是網路上免費的或是書店裡販賣的書籍，入門書籍方面，惟獨缺少直接帶領讀者學習開發軟體的教材，此亦本書的設計理念，希望藉由帶領讀者開發簡單的應用軟體，以此帶給讀者完整的軟體開發觀念。本書分成三大部分，每一部分又分成 6 到 13 個單元 ◎ 基礎篇 ◎ 軟體開發篇 ◎ GUI 篇由基礎篇 13 個單元開始，帶領讀者利用 Python 官方直譯器直接執行程式，並依序漸進熟悉 Python 的基本語法後，進入軟體開發篇 8 個單元，由常見的 MVC 開發模式先發展 M 的部分，也就是計算核心 Encrypt 類別，接著進入 GUI 篇 6 個單元發展 V 跟 C 的部分，也就是利用 Tk 開發 GUI ，最後將 M 、 V 、 C 組合成完整的圖形應用程式專案。這樣的教學模式，其重點在引導讀者開發簡單的圖形介面程式，以期讀者能自動自發多做程式練習，所以本書特別適合高中到大一或程式設計的完全新手，至於語言細節或是程式設計的技巧，您可讀完本書最後一個「單元 27 - 下一步」後，再去找尋第二本書到第三本書繼續深入研究 Python 語言，因此本書是提供給完全初學者的第一本書，而非最後一本書。電子書版本會隨 Python 版本進行更新，目前介紹的是 Python 版本為 3.4 。從一開始整理資料、打字、編輯、校稿等等完全由作者獨力進行，計有 27 篇文章、 40 個程式範例及 80 個練習，寫書就像開發大型軟體一樣難免會有 bug （怕有不少 bug 說），若您發現本書的任何錯誤，敬請利用以下網頁回報 ◎ 《Python 入門指南》V2.00 錯誤回報（Google 表單）本書的主要參考資料有 ◎ Index of Python Enhancement Proposals ◎ The Python 2 Tutorial ◎ The Python 3.4 Tutorial ◎ Beginning Python: From Novice to Professional ◎ How to Think Like a Computer Scientist: Learning with Python, 2nd Edition您不一定要購買這本電子書，若您願意花一點錢購買這份 V2.00 的電子書，感謝您以行動贊助作者持續開發程式語言教材，謝謝您 ^_^更新資訊：本次更新主要為更換封面與訂正內容，以及將內文程式碼加上淺灰色背景。更新資訊：訂正內容及重寫「關於本書」。張凱慶2016/03/31紙本書 http://www.inknet.com.tw/bookstore/view/bi/7216/ui/4259                  2  $9.99 $7.99              Show More      ©2017 Google  Site Terms of Service  Privacy  Developers  Artists  About Google   By purchasing this item, you are transacting with Google Payments and agreeing to the Google Payments  Terms of Service  and  Privacy Notice .        

國立臺灣科技大學電算機一般學類教師名錄 - 大學教師名錄














國立臺灣科技大學電算機一般學類教師名錄




大學教師名錄
國立臺灣科技大學
電算機一般學類





資訊管理系


教師姓名專兼任聘書職級專長
王有禮專任教授NET程式設計
呂永和專任教授資料庫交易處理理論與實務、高等資料庫管理
吳宗成專任教授密碼學、資訊安全、資料工程
陳正綱專任教授科技與創新管理、資訊管理專題研討
周子銓專任教授個案研究方法、行銷管理、資訊科技管理
盧希鵬專任教授創新企業經營模式 、網路行銷
李國光專任教授管理資訊系統、管理學、策略知識管理
徐俊傑專任教授微積分
賴源正專任教授電子資訊科學
黃世禎專任教授軟體工程與管理 、軟體專案管理
楊傳凱專任教授離散數學、多媒體系統
查士朝專任副教授資訊安全管理、資料庫管理系統
楊維寧專任副教授統計學、數量方法─統計方法與資料分析 、應用統計學
羅乃維專任副教授高容量交易處理系統概論、無線網路專題研究
洪政煌專任助理教授管理數學
林伯慎專任助理教授物件導向程式語言、資料結構
朱宇倩專任助理教授資訊系統開發團隊管理、知識管理、電子商務
魏小蘭專任助理教授電子化企業
李清旗兼任教授生產管理、策略規劃、營運管理
翁樸棟兼任教授企業管理、資訊科技管理
高尚偉兼任教授企業e化、資訊管理、策略規劃、營運管理
廖繼寬兼任副教授管理研究所
韓孟麒兼任副教授財務管理
林俊吉兼任副教授大型主機作業系統基礎與實務
陳茂榮兼任副教授大型主機作業系統基礎與實務
徐慧霞兼任副教授電子商務
林秀慧兼任副教授軟體專案管理
陳文川兼任副教授資訊管理系
楊惠雯兼任助理教授策過規劃、技術規劃、專案管理、網站規劃
王詩鳳兼任講師軟體工程
吳柏翰兼任講師計算機概論、網頁製作
翁浩正兼任講師資訊安全











 







Linux / UNIX 作業系統介紹與安裝


Linux / UNIX 作業系統介紹與安裝
 
 
簡介
用 LINUX 建構科學運算環境的好處

LINUX 是自由軟體、也是所謂的開放軟體，內部原始碼完全公開，使用者完全知道其機制，並可以任意更改。
LINUX 是免費的（特別適合於架設多台電腦），經常更新也無負擔，而且坊間的書籍也很多。
在 LINUX 上可使用的免費應用軟體眾多，中文、程式編譯器（FORTRAN, C）、作圖簡報軟體等，一應俱全。
LINUX 是 UNIX 的一種，起源甚早，成熟穩定，共通性高，經常為超級電腦、大型主機、工作站所採用。每當有最新的 CPU 硬體架構出現時，都是以 UNIX 為作業系統。（沒聽過那一家超級電腦會跑 Windows NT 或 Windows XP, Vista ?）
UNIX （LINUX）是內建網路功能的作業系統，適合叢集運算。
熟悉 LINUX（UNIX）環境，則自動可用於各式科學及商用系統，學習之附加價值高。
在此要強調的是，今天的所有示範皆建構在自由開放的免費軟體上，也就是說：大家都可以在宿舍�堬捰菑v的科學運算環境
 

 
安裝
安裝至硬碟

在此以 Fedora Core 4/5
    (即自由軟體版的 RedHat) 為例：
安裝之前，先備好以下資料以便安裝時給入：

主機名稱及網路IP 地址，硬碟分割規劃
安裝軟體有一定的防獃檢查機制，
 
PC 之硬碟分割區特性的簡介 

主開機紀錄（Master Boot Record, MBR） 

      分割表
分割區

 要存放作業系統看得到的資料

主分割區

 一顆硬碟，可以分割出最多四個主分割區（primary partition），

邏輯分割區

在這�堙A並不是說主分割區就不合邏輯，而只有邏輯分割區才合邏輯。邏輯在這�堛漸峈k意涵，有形式上、非實體、以對應方式產出之之虛擬
所有的邏輯分割區都必須在同一個主分割區�堶惘A去切出來，就好像想要有很多口袋，就先要有一件大外套一般。

 

硬碟分割的規劃策略

前面的單元已經提到過，UNIX 檔案系統的最上層目錄是 "/"，又稱作是 root（根）目錄，其他所有各種貯存裝置（device）�堶悸漱漁e，則是以掛載（mount，需管理者權限）的方式引入而成為樹狀的目錄架構中的一的子目錄。貯存空間最常用的裝置是硬碟上的一個分割區，而不是一整顆硬碟，請大家註意一下，這就像是說，很多電腦中只人裝一顆硬碟，卻可以分割成獨立的兩個分割區，在微軟視窗作業系統中被看成是 "C: 槽" 與 "D: 槽"。
虛擬記憶體（作業系統在實體記憶體不足時，暫存到硬碟特定專屬的檔案或分割區中），也需要佔一個分割區
最簡單的的切割方式是完全不分割。整個硬碟只有拿一個分割區來放整個作業系統。
常會被分成不同分割區來配置的目錄，是 "/"、"/home"、"/var" 

 
參考連結

http://www.mjmwired.net/resources/mjm-fedora-f9.html
http://www.mjmwired.net/resources/mjm-fedora-f8.html


 
硬碟分割區調整工具

有時候我們會遇到原硬碟已有其他作業系統安裝，但空間仍很足夠，只是分割區已全部分切完，沒能再有多的獨立分割區來安裝作業系統。此時，可利用分割區調整工具來把尚有空間的大分割區作邊界調整，縮小原分割區而空出新的空間。有興趣者可參考下列兩套工具組合：
Parted Megic 

http://partedmagic.com/download.html
 

SystemRescureCD

http://www.sysresccd.org/Download



 
使用 Live CD

另一種方便初學者使用（免於安裝 Linux 到電腦之中，影響到原有機器的風險性）的方案，是可以直接從光碟開機並完整運行的作業系統，一般稱作是 Live CD（有興趣找更多資料的同學們可以用 Linux Live CD 三個字到搜尋引擎找找看），以 Knoppix 最為有名（目前己出到 5.0.1，另有實驗室自行改編的 3.2 版，另外 4.0.2 也是不錯的版本）
Live CD 的進階用法，是依自己的需要配置來重新製作一張專屬的 Knoppix Linux CD， 
 

使用虛擬機器（Virtual Machine）

虛擬機器意指在某作業系統平臺上可以同時跑另一個同種或不同的整個作業系統環境。Linux 的 Xen、 微軟Virtual Server、以及相營成熟的 VMWare 產品（Windows 與 Linux 都能用）。 
請你跟我這樣做：快速入門

 
 
延伸閱讀：網路伺服器安裝與設定（新竹縣）

學生用伺服器建置流程（Fedora Core 5 版）
http://apt.nc.hcc.edu.tw/web/student_server_FC5/student_server_FC5.html
學生用伺服器建置流程（CentOS 5 版）
http://apt.nc.hcc.edu.tw/web/student_server_centos/student_server_centos.html




























IBM  公有雲服務+ 雲端管理與主機 - Taiwan


















選取一個國家/地區: Taiwan




IBM®


網站導覽




搜尋



















SmartCloud
 






主要標籤導覽
概觀 - 已選取的標籤, 
SCE+應用












企業級雲端管理基礎架構

雲端管理提供超值的選擇和自動化的程序，而不止是虛擬機器的配置而已
IBM 公有雲服務+ 是全方面管理、極具安全性和立即作業的雲端環境，設計用來確保企業級效能和可用性。公有雲服務+ 提供完整的控管和管理控制，並具備服務等級協定 (SLA)，能配合您的特殊商業及使用需求。內建於虛擬基礎架構和網路的多種安全性與隔離選項，讓此雲端環境與別不同。


深入瞭解管理雲端雲端基礎架構服務 (145KB)


IBM 提供新服務協助客戶將企業應用程式移至雲端
深入瞭解
(連結 ibm.com 外部網頁) 金融、醫療保健、政府和電子業客戶為何選定 IBM 公有雲服務+； IBM SmartCloud for SAP 應用程式現在於全球推出 







重點特色




【雲端運算】想知道 SmartCloud 提供什麼樣的服務嗎？ . (00:03:22)
親自瞭解公有雲服務 + 如何超越虛擬機器的配置，達到提供全方面管理 IaaS 的目的



白皮書： 選擇和控制 (PDF, 907KB)
IBM 分享開發企業雲端策略的考量



【智慧雲端】上雲致勝關鍵 (00:04:26)
IBM 的內部雲端轉換



影片： 將工作量移轉至 IBM 公有雲服務+ (00:05:48)
提高移轉的確定性和達到更快速的投資報酬率






澳洲加拿大 - 英文加拿大 - 法文法國德國印度愛爾蘭義大利日本臺灣新加坡西班牙英國美國




我們隨時提供協助
IBM 市場行銷處 0800-016-888 按1

臺灣
電子郵件






















支援執行 x86、Power、System z 的作業系統，包括 Windows、Linux、AIX、z/OS、VMWare 或 PowerVM Hypervisor
共用多用戶或專用交付模型









安全性、備份和備援服務將協助管理法律規範和需求
IBM 公有雲服務+ 會為監控和備份等程序安裝安全及規範代理程式，然後執行超過 40 個步驟，以提供企業級品質保證和檢查相符性， 並收集和儲存資訊供審核使用。









可依商業及使用需求調整的承諾服務等級協定
可選擇搭配專用容量來提升工作量隔離和控制


























































具備靈活配置選項的雲端管理
IBM 公有雲服務+ 並非一體適用的解決方案。但藉由靈活的配置選項，您可以依據您的獨特需求配置雲端基礎架構。由於能使用各種不同的標準選項，您可以彈性選擇適當的配置，以滿足您的應用程式工作量於各類使用情況所需的容量與效能。


企業作業系統的選擇


x86 作業系統 


Red Hat Enterprise Linux
Microsoft Windows


IBM Power Systems™ 作業系統 


IBM AIX® 6.1


z/OS




虛擬機器容量的選擇


我們為個別執行環境的 CPU、記憶體與儲存體提供一套標準、預先定義的配置。透過此種方式，您可以兼顧彈性與成本效益。



x86 options
32-bit configurations
64-bit configurations




Small


Medium


Large


Small


Medium


Large


Extra large



Virtual CPUs


1


2


4


1


2


4


8



Virtual memory (gigabytes)


1


2


4


2


4


8


16



Instance storage (gigabytes)


64


128


192


64


128


192


384



IBM Power Systems options
64-bit configurations




Small


Medium


Large


Extra large


Jumbo



Virtual CPUs


1


2


4


8


16



Virtual memory (gigabytes)


2


4


8


16


32



Instance storage (gigabytes)


64


128


192


384


512




軟體的選擇


我們可以視要求在服務型錄中包含 IBM 和非 IBM 軟體，包括： 


IBM DB2® EE V9.7
IBM WebSphere® MQ V7.0
Apache Tomcat V5.5
Apache HTTP V2.2






System z 專用的 SmartCloud


將 SmartCloud 功能延伸至大型主機客戶。此服務可讓客戶運用正確等級的大型主機運算資源，並可以利用可預期定價模型的彈性，根據業務需求變化動態調整容量等級。提供高度虛擬化的環境，使用 System z 領先業界的邏輯分割和 IBM 安全性產品保障安全，並由 IBM 全球的服務交付團隊加以管理。此服務搭載最新的 z/OS 作業系統並配合 IBM 中介軟體解決方案和選用功能，以確保最高階的可用性。
閱讀更多 IBM SmartCloud for System z 的相關資訊（型錄）(808KB) 
閱讀更多 IBM SmartCloud for System z 的相關資訊（解決方案簡介）(631KB) 





以 ITIL 實務為基礎的雲端管理服務，提供控管和控制


作業系統的監控和管理 (OS)，包括： 

OS 元件的監控和修補程式管理
Microsoft Windows OS 的防毒
軟體授權計算
OS 等級安全及規範
安全原則管理和法規支援
支援環境和法規方案管理的基礎審核

ITIL 型管理服務提供更一致、有效的服務管理，包括： 

服務型錄
服務要求啟動和取消啟動
事件、問題和變更管理
事件管理
配置管理
資產管理

您也可以選擇支援管理服務，以啟用其他的管理和備援： 

管理上述作業系統（例如資料庫和中介軟體） 
監控及回應警示
修補程式管理

管理環境的漏洞管理 
使用 IBM 安全服務進行掃描
回應警示及事件










自助式服務入口網站方便快速存取


方便使用的設計，我們的自助式服務入口網站提供自動化的服務啟動，可加速配置並減少出錯和手動的處理程序。
使用標準化、網路型的入口網站，您可以透過圖形使用者介面要求建立或刪除環境。在高階環境中，配置程序將依據四個重要的環節建立執行環境： 

服務型錄所提供，一組預先定義的虛擬機器大小，做為建立執行環境容量的來源
與執行環境相關聯的 SLA
要在執行環境上建立的軟體映像
要在執行環境上建立的選用管理服務，例如應用程式監控或修補程式管理





使用自有 Microsoft 授權


利用雲端所提供的軟體，使用 Microsoft 「License Mobility through Software Assurance」方案 (英文)








網路
企業級網路功能，包括：

備援 10 GBps 區域網路 (LAN)
多個虛擬區域網路 (VLAN)
透過網際網路的虛擬私密網路 (VPN) 和/或站台對站台 VPN 或專用網路連線
管理防火牆
專用對抗網路入侵
客戶網路的靜態 IP 位址
軟體負載平衡器 (IBM WebSphere® Edge)
3 種網路介面卡： 客戶、IBM 管理及備份
使用安全的 VLAN 分割客戶路資料流量




儲存體
IBM 公有雲服務+ 的設計是專為需求嚴苛、巨量交易的企業級應用程式而設計，以雲端環境提供作業儲存功能。此解決方案包括區塊型、企業等級、高效能、完整備援的光纖通道儲存區域網路，以 IBM 成熟並領先業界的 SVC 和 IBM 儲存虛擬化技術為基礎。

自動化
許多雲端供應商將重心放在虛擬機器的自動化（配置），將環境準備留給一般使用者，而忽略了讓雲端環境變得高安全性、健全與穩定的處理程序。IBM 公有雲服務+ 將此情況納入考量，並將 IBM 經驗結合重要的自動化專業能力，在幾小時內就能提供完整的雲端環境，而不必花上數星期的時間。









返回頁首

























「如今雲端型解決方案備受矚目，五花八門的比較和選擇很容易讓人眼花撩亂。但談到諸如 SAP 重要的應用程式，我們期待能找到一個成熟的模式，可以擴充並滿足我們獨特的必要條件。公有雲服務+ 產品服務完全符合我們的需要，還有值得信賴的全球合作夥伴做為後盾。」

- Yuri Aguiar，資深合作夥伴暨資訊長
Ogilvy & Mather
 
閱讀 5 月 17 日的雲端服務新聞稿 (英文)

導覽 IBM 的 Raleigh Leadership Data Center（Raleigh 卓越資料中心）
IBM 最先進的資料中心，專為支援雲端運算而打造





雲端管理監控和預防措施
IBM 公有雲服務+ 讓您可以看得更清楚帳戶的活動與威脅。技術熟練的 IBM 專業人員將監控數千個客戶帳戶環境中的安全性威脅。這些專家會從日常活動監控取得安全情報，然後向您的帳戶回報。
其他的安全性功能包括：





整合式端點管理，加強法規遵循及配置
身分及存取權管理，確保使用者存取權的可靠性
進階網路威脅保護和強化系統隔離，包括可變安全區域
定期驗證的企業等級安全原則
管理層面（包括全球和站台管理工具）和受管理層面（包括伺服器、路由器和儲存裝置）的控制項目
強化實體安全的第 3 層資料中心代管
嚴格遵守 IBM 企業修補程式和漏洞掃描管理實務
以國際標準組織和國際電子技術委員會 27001/2 為基礎的資訊安全 (ISeC) 協定，支援法規與產業需求







強化作業系統映像，可選用主機型侵入偵測系統和主機型侵入預防系統定期驗證 ISeC 控制項目
ISeC 安全性控制項的自動驗證
服務啟動和取消啟動及修補程式管理的的自動化程序
標準聯合身分方法，以支援現有的企業目錄




選擇性的 IBM 安全服務
IBM 安全服務提供豐富的服務產品組合，由 IBM X-Force® 安全性研究及開發提供。管理安全產品服務可加強安全的相關設定，包括漏洞管理、應用程式安全管理、安全性事件和日誌管理，以及侵入偵測與預防。












返回頁首

























IBM 實證的軟體映像


x86 作業系統 (VMWare ESXI 4.1)、RedHat Enterprise Linux 5.4 - 5.6（32 和 64 位元）、Microsoft Windows Server 2003 R2 Standard Edition（32 和 64 位元）、Microsoft Windows Server 2003 R2 Standard Edition（64 位元）
IBM Power SystemsTM 作業系統 (IBM Power VM8) IBM AIX® 6.1






雲端管理服務等級協定
IBM 公有雲服務+ 服務等級套件由兩項元件組成： 虛擬機器 (VM) 可用性和基礎架構服務。我們因此可以在幾小時內便提供高安全性、健全與穩定的環境，通常這需要數星期的時間。
我們提供多種選項，讓您可以選擇符合您特定商業及使用協定的 SLA。每個高階選項都包括更多基本選項的功能，可以視需要輕鬆擴充。



套件
虛擬機器可用性
基礎架構服務



Bronze


98.5%

32 位元和 64 位元 IBM System x® – Microsoft Windows 和 Linux64 位元 IBM Power Systems™ - IBM AIX®預定義 VM 大小可供選擇（CPU、記憶體、儲存體）24 小時服務要求履約



Silver


99.5%

以虛擬叢集提供 VM 行動力24 小時服務要求履約



Gold


99.7%

VM 故障時自動重新啟動48 小時全方位服務要求履約



Platinum


99.9%

不同實體儲存裝置的儲存抄寫功能72 小時全方位服務要求履約









返回頁首



















原則鏈結


聯絡我們
隱私權條款
使用條款








