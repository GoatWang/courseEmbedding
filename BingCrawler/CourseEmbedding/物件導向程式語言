


物件導向程式設計 - 維基百科，自由的百科全書






























 







物件導向程式設計

維基百科，自由的百科全書


					前往：					導覽，					搜尋












中國大陸
面向對象程序設計


臺灣
物件導向程式設計


港澳
物件導向程式設計


物件導向程式設計（英語：Object-oriented programming，縮寫：OOP）是種具有物件概念的程式編程典範，同時也是一種程式開發的抽象方針。它可能包含資料、屬性、程式碼與方法。物件則指的是類別的例項。它將物件作為程式的基本單元，將程式和資料封裝其中，以提高軟體的重用性、靈活性和擴充功能性，物件裡的程式可以存取及經常修改物件相關連的資料。在物件導向程式編程裡，電腦程式會被設計成彼此相關的物件[1][2]。
物件導向程式設計可以看作一種在程式中包含各種獨立而又互相呼叫的物件的思想，這與傳統的思想剛好相反：傳統的程式設計主張將程式看作一系列函式的集合，或者直接就是一系列對電腦下達的指令。物件導向程式設計中的每一個物件都應該能夠接受資料、處理資料並將資料傳達給其它物件，因此它們都可以被看作一個小型的「機器」，即物件。目前已經被證實的是，物件導向程式設計推廣了程式的靈活性和可維護性，並且在大型專案設計中廣為應用。此外，支持者聲稱物件導向程式設計要比以往的做法更加便於學習，因為它能夠讓人們更簡單地設計並維護程式，使得程式更加便於分析、設計、理解。反對者在某些領域對此予以否認。
當我們提到物件導向的時候，它不僅指一種程式設計方法。它更多意義上是一種程式開發方式。在這一方面，我們必須瞭解更多關於物件導向系統分析和物件導向設計（Object Oriented Design，簡稱OOD）方面的知識。許多流行的程式語言是物件導向的,它們的風格就是會透由物件來創出實例。
重要的物件導向程式語言包含Common Lisp、Python、C++、Objective-C、Smalltalk、Delphi、Java、Swift、C#、Perl、Ruby 與 PHP等。



目錄


1 特徵

1.1 分享非物件導向程式前身語言
1.2 類別與物件
1.3 動態配置與訊息傳遞機制
1.4 封裝性
1.5 繼承
1.6 多型
1.7 抽象性


2 歷史
3 物件導向編程語言

3.1 腳本中的OOP


4 參見
5 參考文獻
6 延伸閱讀
7 外部連結



特徵[編輯]
物件導向程式編程的定義是使用「物件」來做設計，但並非所有的程式語言都直接支援「物件導向程式編程」相關技術與結構。對於OOP的準確定義及其本意存在著不少爭論。通常，OOP被理解為一種將程式分解為封裝資料及相關操作的模組而進行的編程方式。有別於其它編程方式，OOP中的與某資料類別型相關的一系列操作都被有機地封裝到該資料類別型當中，而非散放於其外，因而OOP中的資料類別型不僅有著狀態，還有著相關的行為。
OOP理論，及與之同名的OOP實踐相結合創造出了新的一個編程架構；OOP思想被廣泛認為是非常有用的，以致一套新的編程典範被創造了出來。（其它的編程典範例如函數語言程式設計或程序式編程專註於程式執行的過程，而邏輯編程專註於引發程式代碼執行的斷言）。對面向模擬系統的語言（如：SIMULA 67）的研究及對高可靠性系統架構（如：高效能作業系統和CPU的架構）的研究最終導致了OOP的誕生。其中由Deborah J. Armstrong進行的長達40年之久的電腦著作調查中，顯示出了一系列物件導向程式設計的基本理論。物件導向程式特徵被條列如下[3][4][5][6]
分享非物件導向程式前身語言[編輯]
物件導向程式設計通常共享高階編程語言的低階功能。可用於建構一個程式的基本工具包括：

變數 能儲存一些內建型態的資訊如整數與字元，也有些是資料結構像是字串、串列與雜湊表等包含內建或複合的變數如指標。
程式：也稱為函式、方法或常式，是指輸入資料產生輸出結果，現代語言還包含結構化編程結構如程式迴圈與條件。

類別與物件[編輯]
支援物件導向編程語言通常利用繼承其他類別達到代碼重用和可擴展性的特性。而類別有兩個主要的概念：

類別（Class）：定義了一件事物的抽象特點。類別的定義包含了資料的形式以及對資料的操作。
物件：是類別的實例。

其中類別別（Class）定義了一件事物的抽象特點。類別的定義包含了資料的形式以及對資料的操作。舉例來說，「狗」這個類別會包含狗的一切基礎特徵，即所有「狗」都共有的特徵或行為，例如它的孕育、毛皮顏色和吠叫的能力。類別可以為程式提供模版和結構。一個類別的方法和屬性被稱為「成員」。 我們來看一段虛擬碼：

類別 狗
開始
    公有成員:
        吠叫():
    私有成員:
        毛皮顏色:
        孕育:
結束


在這串代碼中，我們聲明瞭一個類別，這個類別具有一些狗的基本特徵。關於公有成員和私有成員，請參見下麵的繼承性一節。
物件（Object）是類別的例項。物件有時會對應到現實世界中的事物，舉例來說，一個圖形程式可能有圓形、矩形與畫面等物件，一個線上購物系統可能有購物車、顧客與產品等類別。[7]。有時物件會表示更抽象的實體，比如一個被開啟的檔案或是一個提供美國慣用量測轉換的服務。每個物件就是一個特定類別的實例（例如，名稱是「瑪麗」的物件可能是類別雇員的一個實例）。程式在物件導向編程當中被視為方法，變數被視為成員或屬性。例如，「狗」這個類別列舉狗的特點，從而使這個類別定義了世界上所有的狗。而萊絲這個物件則是一條具體的狗，它的屬性也是具體的。狗有皮毛顏色，而萊絲的皮毛顏色是棕白色的。因此，萊絲就是狗這個類別的一個例項。一個具體物件屬性的值被稱作它的「狀態」。（系統給物件分配記憶體空間，而不會給類別分配記憶體空間。這很好理解，類別是抽象的系統不可能給抽象的東西分配空間，而物件則是具體的。）
假設我們已經在上面定義了狗這個類別，我們就可以用這個類別來定義物件：

定義萊絲是狗
萊絲.毛皮顏色:棕白色
萊絲.吠叫()

我們無法讓狗這個類別去吠叫，但是我們可以讓物件「萊絲」去吠叫，正如狗可以吠叫，但沒有具體的狗就無法吠叫。
類別和物件就好比是「實型」和「1.23」，「實型」是一種資料的類別型，而「1.23」是一個真正的「實數」（即物件）。所有的「實數」都具有「實型」所描訴的特徵，如「實數的大小」，系統則分配記憶體給「實數」儲存具體的數值。
動態配置與訊息傳遞機制[編輯]
定義上動態配置是指方法會隨著實例動態的改變。而訊息傳遞機制（Message Passing）是指一個物件通過接受訊息、處理訊息、傳出訊息或使用其他類別的方法來實作一定功能。如：萊絲可以通過吠叫引起人的註意，從而導致一系列的事發生。
封裝性[編輯]
具備封裝性（Encapsulation）的物件導向程式設計隱藏了某一方法的具體執行步驟，取而代之的是通過訊息傳遞機制傳送訊息給它。封裝是通過限制只有特定類別的物件可以存取這一特定類別的成員，而它們通常利用介面實作訊息的傳入傳出。舉個例子，介面能確保幼犬這一特徵只能被賦予狗這一類別。通常來說，成員會依它們的存取權限被分為3種：公有成員、私有成員以及保護成員。有些語言更進一步：Java可以限制同一包內不同類別的存取；C#和VB.NET保留了為類別的成員聚集準備的關鍵字：internal（C#）和Friend（VB.NET）；Eiffel語言則可以讓使用者指定哪個類別可以存取所有成員。
具備封裝性（Encapsulation）的物件導向程式設計隱藏了某一方法的具體執行步驟，取而代之的是通過訊息傳遞機制傳送訊息給它。因此，舉例來說，「狗」這個類別有「吠叫()」的方法，這一方法定義了狗具體該通過什麼方法吠叫。但是，萊絲的朋友並不知道它到底是如何吠叫的。
從例項來看：

/* 一個程序導向的程式會這樣寫： */
定義萊絲
萊絲.設定音調(5)
萊絲.吸氣()
萊絲.吐氣()

/* 而當狗的吠叫被封裝到類別中，任何人都可以簡單地使用： */
定義萊絲是狗
萊絲.吠叫()

繼承[編輯]
繼承性（Inheritance）是指，在某種情況下，一個類別會有「子類別」。子類別比原本的類別（稱為父類別）要更加具體化。例如，「狗」這個類別可能會有它的子類別「牧羊犬」和「吉娃娃犬」。在這種情況下，「萊絲」可能就是牧羊犬的一個例項。子類別會繼承父類別的屬性和行為，並且也可包含它們自己的。我們假設「狗」這個類別有一個方法（行為）叫做「吠叫()」和一個屬性叫做「毛皮顏色」。它的子類別（前例中的牧羊犬和吉娃娃犬）會繼承這些成員。這意味著程式設計師只需要將相同的代碼寫一次。
在虛擬碼中我們可以這樣寫：

類別牧羊犬:繼承狗

定義萊絲是牧羊犬
萊絲.吠叫()    /* 註意這裡呼叫的是狗這個類別的吠叫方法。*/

回到前面的例子，「牧羊犬」這個類別可以繼承「毛皮顏色」這個屬性，並指定其為棕白色。而「吉娃娃犬」則可以繼承「吠叫()」這個方法，並指定它的音調高於平常。子類別也可以加入新的成員，例如，「吉娃娃犬」這個類別可以加入一個方法叫做「顫抖()」。設若用「牧羊犬」這個類別定義了一個例項「萊絲」，那麼萊絲就不會顫抖，因為這個方法是屬於吉娃娃犬的，而非牧羊犬。事實上，我們可以把繼承理解為「是」或「屬於」。萊絲「是」牧羊犬，牧羊犬「屬於」狗類別。因此，萊絲既得到了牧羊犬的屬性，又繼承了狗的屬性。 我們來看虛擬碼：

類別吉娃娃犬:繼承狗
開始
   公有成員:
      顫抖()
結束
類別牧羊犬:繼承狗

定義萊絲是牧羊犬
萊絲.顫抖()    /* 錯誤：顫抖是吉娃娃犬的成員方法。 */

當一個類別從多個父類別繼承時，我們稱之為「多重繼承」。如一隻狗既是吉娃娃犬又是牧羊犬（雖然事實上並不合邏輯）。多重繼承並不總是被支援的，因為它很難理解，又很難被好好使用。
多型[編輯]
多型（Polymorphism）是指由繼承而產生的相關的不同的類別，其物件對同一訊息會做出不同的回應[8]。例如，狗和雞都有「叫()」這一方法，但是呼叫狗的「叫()」，狗會吠叫；呼叫雞的「叫()」，雞則會啼叫。 我們將它體現在虛擬碼上：

類別狗
開始
   公有成員:
       叫()
       開始
          吠叫()
       結束
結束

類別雞
開始
   公有成員:
       叫()
       開始
          啼叫()
       結束
結束

定義萊絲是狗
定義魯斯特是雞
萊絲.叫()
魯斯特.叫()

這樣，雖然同樣是做出叫這一種行為，但萊絲和魯斯特具體做出的表現方式將大不相同。多型性的概念可以用在運算子過載上，本文不再贅述。
抽象性[編輯]
抽象（Abstraction）是簡化複雜的現實問題的途徑，它可以為具體問題找到最恰當的類別定義，並且可以在最恰當的繼承級別解釋問題。舉例說明，萊絲在大多數時候都被當作一條狗，但是如果想要讓它做牧羊犬做的事，你完全可以呼叫牧羊犬的方法。如果狗這個類別還有動物的父類別，那麼你完全可以視萊絲為一個動物。
歷史[編輯]
物件導向程式設計的雛形，早在1960年的Simula語言中即可發現，當時的程式設計領域正面臨著一種危機：在軟硬體環境逐漸複雜的情況下，軟體如何得到良好的維護？物件導向程式設計在某種程度上通過強調可重複性解決了這一問題。20世紀70年代的Smalltalk語言在物件導向方面堪稱經典——以至於30年後的今天依然將這一語言視為物件導向語言的基礎。
電腦科學中物件和例項概念的最早萌芽可以追溯到麻省理工學院的PDP-1系統。這一系統大概是最早的基於容量架構（capability based architecture）的實際系統。另外1963年Ivan Sutherland的Sketchpad應用中也蘊含了同樣的思想。物件作為編程實體最早是於1960年代由Simula 67語言引入思維。Simula這一語言是奧利-約翰·達爾和克利斯登·奈加特在挪威奧斯陸電腦中心為模擬環境而設計的。（據說，他們是為了模擬船隻而設計的這種語言，並且對不同船隻間屬性的相互影響感興趣。他們將不同的船隻歸納為不同的類別，而每一個物件，基於它的類別，可以定義它自己的屬性和行為。）這種辦法是分析式程式的最早概念體現。在分析式程式中，我們將真實世界的物件對映到抽象的物件，這叫做「模擬」。Simula不僅引入了「類別」的概念，還應用了例項這一思想——這可能是這些概念的最早應用。
20世紀70年代全錄PARC研究所發明的Smalltalk語言將物件導向程式設計的概念定義為，在基礎運算中，對物件和訊息的廣泛應用。Smalltalk的建立者深受Simula 67的主要思想影響，但Smalltalk中的物件是完全動態的——它們可以被建立、修改並銷毀，這與Simula中的靜態物件有所區別。此外，Smalltalk還引入了繼承性的思想，它因此一舉超越了不可建立例項的程式設計模型和不具備繼承性的Simula。此外，Simula 67的思想亦被應用在許多不同的語言，如Lisp、Pascal。
物件導向程式設計在80年代成為了一種主導思想，這主要應歸功於C++——C語言的擴充版。在圖形化使用者介面（GUI）日漸崛起的情況下，物件導向程式設計很好地適應了潮流。GUI和物件導向程式設計的緊密關聯在Mac OS X中可見一斑。Mac OS X是由Objective-C語言寫成的，這一語言是一個仿Smalltalk的C語言擴充版。物件導向程式設計的思想也使事件處理式的程式設計更加廣泛被應用（雖然這一概念並非僅存在於物件導向程式設計）。一種說法是，GUI的引入極大地推動了物件導向程式設計的發展。
蘇黎世聯邦理工學院的尼克勞斯·維爾特和他的同事們對抽象資料和模組化程式設計進行了研究。Modula-2將這些都包括了進去，而Oberon則包括了一種特殊的物件導向方法——不同於Smalltalk與C++。
物件導向的特性也被加入了當時較為流行的語言：Ada、BASIC、Lisp、Fortran、Pascal以及種種。由於這些語言最初並沒有物件導向的設計，故而這種糅合常常會導致相容性和維護性的問題。與之相反的是，「純正的」物件導向語言卻缺乏一些程式設計師們賴以生存的特性。在這一大環境下，開發新的語言成為了當務之急。作為先行者，Eiffel成功地解決了這些問題，並成為了當時較受歡迎的語言。
在過去的幾年中，Java語言成為了廣為應用的語言，除了它與C和C++語法上的近似性。Java的可移植性是它的成功中不可磨滅的一步，因為這一特性，已吸引了龐大的程式設計師群的投入。
在最近的電腦語言發展中，一些既支援物件導向程式設計，又支援程序導向程式設計的語言悄然浮出水面。它們中的佼佼者有Python、Ruby等等。
正如程序導向程式設計使得結構化程式設計的技術得以提升，現代的物件導向程式設計方法使得對設計模式的用途、契約式設計和建模語言（如UML）技術也得到了一定提升。
物件導向編程語言[編輯]
支援部分或絕大部分物件導向特性的語言即可稱為基於物件的或物件導向的語言。Simula (1967)被視為第一個具有物件導向特性的語言。早期，完全物件導向的語言主要包括Smalltalk等語言，目前較為流行的語言中有Java、C#、Eiffel等。隨著軟體工業的發展，比較早的程序導向的語言在近些年的發展中也紛紛吸收了許多物件導向的概念，比如C→C++，C→Objective-C，BASIC→Visual Basic→Visual Basic .NET，Pascal→Object Pascal，Ada→Ada95。「純粹」的物件導向語言, 因為所有的東西都是由物件所組成，例如: Eiffel, Emerald,[9] JADE, Obix, Ruby, Scala, Smalltalk, Self.
腳本中的OOP[編輯]
近年來，物件導向的程式設計越來越流行於手稿語言中。Python和Ruby是建立在OOP原理的指令碼語言，Perl和PHP亦分別在Perl 5和PHP 4時加入物件導向特性。
參見[編輯]

一次且僅一次（once and only once，OAOO）
Distributed Component Object Model
UML

參考文獻[編輯]


^ Kindler, E.; Krivy, I. Object-Oriented Simulation of systems with sophisticated control. International Journal of General Systems: 313–343. 2011. 
^ Lewis, John; Loftus, William. Java Software Solutions Foundations of Programming Design 6th ed. Pearson Education Inc. 2008. ISBN 0-321-53205-8. , section 1.6 "Object-Oriented Programming"
^ Deborah J. Armstrong. The Quarks of Object-Oriented Development. A survey of nearly 40 years of computing literature which identified a number of fundamental concepts found in the large majority of definitions of OOP, in descending order of popularity: Inheritance, Object, Class, Encapsulation, Method, Message Passing, Polymorphism, and Abstraction.
^ John C. Mitchell, Concepts in programming languages, Cambridge University Press, 2003, ISBN 0-521-78098-5, p.278. Lists: Dynamic dispatch, abstraction, subtype polymorphism, and inheritance.
^ Michael Lee Scott, Programming language pragmatics, Edition 2, Morgan Kaufmann, 2006, ISBN 0-12-633951-1, p. 470. Lists encapsulation, inheritance, and dynamic dispatch.
^ Pierce, Benjamin. Types and Programming Languages. MIT Press. 2002. ISBN 0-262-16209-1. , section 18.1 "What is Object-Oriented Programming?" Lists: Dynamic dispatch, encapsulation or multi-methods (multiple dispatch), subtype polymorphism, inheritance or delegation, open recursion ("this"/"self")
^ Booch, Grady. Software Engineering with Ada. Addison Wesley. 1986: 220. ISBN 978-0805306088. Perhaps the greatest strength of an object-oriented approach to development is that it offers a mechanism that captures a model of the real world. 
^ 譚浩強：《C++物件導向程式設計》，清華大學出版社，2006年1月第一版。ISBN 978-7-302-12315-6
^ The Emerald Programming Language. 2011-02-26. 


延伸閱讀[編輯]

Abadi, Martin; Luca Cardelli. A Theory of Objects. Springer Verlag. 1998. ISBN 0-387-94775-2. 
Abelson, Harold; Gerald Jay Sussman. Structure and Interpretation of Computer Programs. MIT Press. 1997. ISBN 0-262-01153-0. 
Armstrong, Deborah J. The Quarks of Object-Oriented Development. Communications of the ACM. February 2006, 49 (2): 123–128 [8 August 2006]. ISSN 0001-0782. doi:10.1145/1113034.1113040. 
Booch, Grady. Object-Oriented Analysis and Design with Applications. Addison-Wesley. 1997. ISBN 0-8053-5340-2. 
Eeles, Peter; Oliver Sims. Building Business Objects. John Wiley & Sons. 1998. ISBN 0-471-19176-0. 
Gamma, Erich; Richard Helm, Ralph Johnson, John Vlissides. Design Patterns: Elements of Reusable Object Oriented Software. Addison-Wesley. 1995. ISBN 0-201-63361-2.  引文使用過時參數coauthors (幫助)
Harmon, Paul; William Morrissey. The Object Technology Casebook - Lessons from Award-Winning Business Applications. John Wiley & Sons. 1996. ISBN 0-471-14717-6. 
Jacobson, Ivar. Object-Oriented Software Engineering: A Use Case-Driven Approach. Addison-Wesley. 1992. ISBN 0-201-54435-0. 
Kay, Alan. The Early History of Smalltalk. 
Meyer, Bertrand. Object-Oriented Software Construction. Prentice Hall. 1997. ISBN 0-13-629155-4. 
Pecinovsky, Rudolf. OOP - Learn Object Oriented Thinking & Programming. Bruckner Publishing. 2013. ISBN 978-80-904661-8-0. 
Rumbaugh, James; Michael Blaha; William Premerlani; Frederick Eddy; William Lorensen. Object-Oriented Modeling and Design. Prentice Hall. 1991. ISBN 0-13-629841-9. 
Schach, Stephen. Object-Oriented and Classical Software Engineering, Seventh Edition. McGraw-Hill. 2006. ISBN 0-07-319126-4. 
Schreiner, Axel-Tobias. Object oriented programming with ANSI-C. Hanser. 1993. ISBN 3-446-17426-5. hdl:1850/8544.  參數|id=值左起第40位存在刪除符 (幫助)
Taylor, David A. Object-Oriented Information Systems - Planning and Implementation. John Wiley & Sons. 1992. ISBN 0-471-54364-0. 
Weisfeld, Matt. The Object-Oriented Thought Process, Third Edition. Addison-Wesley. 2009. ISBN 0-672-33016-4. 
West, David. Object Thinking (Developer Reference). Microsoft Press. 2004. ISBN 0735619654. 

外部連結[編輯]



維基語錄上的相關摘錄：Object-orientation





維基學院中的Topic:Object-Oriented Programming相關學習資源：

物件導向程式設計






您可以在維基教科書中尋找此百科條目的相關電子教程：
Object Oriented Programming



開放式目錄計劃中和Object-oriented programming相關的內容
Introduction to Object Oriented Programming Concepts (OOP) and More by L.W.C. Nirosh
Discussion about the flaws of OOD
OOP Concepts (Java Tutorials)









閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類別型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類別系統進行分類別。











權威控制



LCCN: sh87007503
GND: 4233947-9
BNF: cb12115131k（資料）
NDL: 00937980
BNE: XX537453












 
						取自 "https://zh.wikipedia.org/w/index.php?title=面向對象程序設計&oldid=43533641"					
2 個分類：編程典範物件導向的程序設計隱藏分類：使用ISBN魔術連結的頁面含有英語的條目含有過時參數的引用的頁面引文格式1錯誤：不可見字符包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansالعربيةAzərbaycancaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBosanskiCatalàČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiEuskaraفارسیSuomiFrançaisGalegoעבריתहिन्दीHrvatskiMagyarՀայերենBahasa IndonesiaIlokanoIdoÍslenskaItaliano日本語ქართულიҚазақша한국어КыргызчаLatinaLietuviųLatviešuМакедонскиമലയാളംМонголBahasa Melayuမြန်မာဘာသာNorsk nynorskNorsk bokmålPolskiPortuguêsRomânăРусскийРусиньскыйSicilianuScotsSrpskohrvatski / српскохрватскиSimple EnglishSlovenčinaShqipСрпски / srpskiSvenskaதமிழ்ไทยTürkçeУкраїнськаاردوTiếng Việt吳語粵語 
編輯連結 





 本頁面最後修訂於2017年3月8日 (週三) 22:43。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 










Java 程式語言教學








程式語言









































Developer Network
Developer Network
Developer




登入




MSDN 訂閱




取得工具





















































很抱歉。您所要求的內容已遭移除。將會在 1 秒內自動重新導向。





設計分散式應用程式
規劃分散式應用程式

選擇工具和技術





選擇工具和技術
程式語言




程式語言




程式語言

















設計工具 

基礎結構技術 

安全性模型 

程式語言 

資料存取技術 

分散式應用程式的通訊 

Visual Studio 中的 XML 



TOC

 
摺疊目錄
展開目錄




本文件已封存並已停止維護。



本文件已封存並已停止維護。

程式語言



                Visual Studio .NET 2003
            




  選擇程式語言要依據您的語言使用經驗以及您所建置之應用程式的範圍而定。小型的應用程式通常只使用一種語言來建立，但使用多種語言來開發大型應用程式並不是件稀奇的事。 例如，如果您正在使用現有的 XML Web Service 來擴充應用程式，您可能會使用只需花費很少或不需花費程式設計功夫的指令碼語言。如果是主從式應用程式，您可能會選擇最習慣使用的單一語言來設計整個應用程式。如果是新的企業應用程式，因為需要有為數眾多的開發人員小組來建立可跨多重遠端站台而部署的元件與服務，那麼最佳的選擇可能是依據開發人員的技術與長期維護的期望來使用數種語言。 .NET 平臺程式設計語言 (包含 Visual Basic .NET、Visual C#、Managed Extensions for C++，以及各種廠商的許多其他程式語言)，是經由一組常用的統一類別來使用 .NET Framework 的服務與功能。.NET 的統一類別提供了一致性的方法以存取平臺功能。如果您學會使用類別庫，就會發現所有工作都會依循相同的制式架構。您將不再需要學習與操控不同的 API 架構以撰寫應用程式。 在大部分情況下，您都可以有效的使用所有 Microsoft 程式語言。然而，每一個程式語言都有其相對強勢之處，您應該會想要瞭解每一個語言獨特的功能。下列章節會協助您選擇開發應用程式時，所需的正確程式語言。 Visual Basic .NET Visual Basic .NET 是 Microsoft 的 Visual Basic 語言的新世代產品。您可以使用 Visual Basic 來建置 .NET 應用程式，包括 Web 服務與 ASP.NET Web 應用程式，既快速又容易。Visual Basic 建立的應用程式是建置在 Common Language Runtime 的服務之上，並充分利用 .NET Framework 的優勢。 Visual Basic 有許多新的與改善的功能，例如繼承、介面與多載化 (Overloading)，讓它成為強大的物件導向程式語言。其他新的語言功能還包括無限制執行緒 (Free Threading) 和結構化例外處理 (Structured Exception Handling)。Visual Basic 可和 .NET Framework 與 Common Language Runtime 完全整合在一起，以提供語言互通性 (Interoperability)、記憶體回收、增強安全性以及改良的版本控制支援。Visual Basic 支援單一繼承並建立 Microsoft Intermediate Language (MSIL)，作為對機器碼編譯器的輸入。 Visual Basic 相對上是比較容易學習與使用的，並且 Visual Basic 在過去十年間已經成為成千上萬個開發人員的程式語言選擇。學會使用 Visual Basic 可以應用在很多方面，例如可在 Visual Studio 中撰寫巨集，並可在如 Microsoft Excel、Access 與 Word 等應用程式中提供程式設計功能。 Visual Basic 提供一些常用之專案類型的原型 (Prototype)，包括：

 Windows 應用程式。 類別庫。 Windows 控制項程式庫。 ASP.NET Web 應用程式。 ASP.NET Web 服務。 Web 控制項程式庫。 主控台應用程式。 Windows 服務。  如需詳細資訊，請參閱 Visual Basic 語言與使用巨集自動執行重複的動作。 Visual C# .NET Visual C# (發音成 C Sharp) 是專門為了快速而輕鬆的建立 .NET 應用程式 (包括 Web 服務與 ASP.NET Web 應用程式) 而設計的一套程式語言。使用 Visual C# 寫成的應用程式是建置在 Common Language Runtime 的服務之上，並充分利用 .NET Framework 的優勢。 C# 是一種簡單、優雅、型別安全、物件導向式的語言，是 Microsoft 新近開發的程式語言，可用於建置各種類型的應用程式。任何熟悉 C 以及相似語言的人，會發現改用 C# 並沒有什麼問題。C# 的設計是要將快速的開發方法帶給 C++ 的程式設計人員，而不需犧牲 C 與 C++ 的強大性與控制性。因為繼承這樣的傳統，C# 對 C 與 C++ 之間擁有很高的相似性，使得熟悉這些語言的開發人員很快就能使用 C# 來提高生產力。C# 提供內建程式碼信任機制以得到高層級的安全性、記憶體回收與型別安全。C# 支援單一繼承並建立 Microsoft Intermediate Language (MSIL)，作為對機器碼編譯器的輸入。 C# 可和 .NET Framework 與 Common Language Runtime 完全整合在一起，以提供語言互通性、記憶體回收、增強安全性以及改良的版本控制支援。C# 簡化並現代化了 C 與 C++ 的一些比較複雜的方面，特別是命名空間 (Namespace)、類別、列舉型別 (Enumeration)、多載化與結構化例外處理。C# 還排除了 C 與 C++ 的一些功能，例如巨集、多重繼承與虛擬基底類別 (Virtual Base Class)。對於目前的 C++ 開發人員而言，C# 提供了強大、高生產力的另一個語言選擇。 Visual C# 提供一些常用之專案類型的原型，包括：

 Windows 應用程式。 類別庫。 Windows 控制項程式庫。 ASP.NET Web 應用程式。 ASP.NET Web 服務。 Web 控制項程式庫。 主控台應用程式。 Windows 服務。  如需詳細資訊，請參閱 Visual C# Standard 版功能與 C# 語言教學課程。 Visual C++ .NET Visual C++ .NET 是 Microsoft Visual C++ 語言的新世代產品。Visual C++ 一直是建立高效能 Windows 與全球資訊網 (World Wide Web) 應用程式的最佳語言。 Visual C++ 提供一些重要的程式庫來協助您撰寫應用程式，包括 Active Template Library (一組用於 COM 物件的範本式 C++ 類別)、ATL Server 程式庫 (一組用於建立 Web 應用程式、Web 服務以及其他伺服器應用程式的原生 C++ 類別) 與 Microsoft Foundation Classes (MFC，支援寫給 Windows API 之應用程式的一組類別)。 Visual C++ 提供一些常用之專案類型的原型，包括：

 Active Template Library (ATL) 專案。 ATL Server 專案。 ATL Server Web 服務。 自訂精靈。 延伸預存程序 DLL。 Makefile 專案。 ASP.NET Web 服務。 類別庫 (.NET)。 主控台應用程式 (.NET)。 Windows 控制項程式庫 (.NET)。 Windows Form 應用程式 (.NET) Windows 服務 (.NET) Microsoft Foundation Classes (MFC) ActiveX 控制項。 MFC 應用程式。 MFC DLL。 MFC ISAPI 擴充程式 DLL。 Win32 專案。  如需詳細資訊，請參閱 Visual C++ 與 Visual C++ .NET Standard 版。 Managed Extensions for C++ 如果您正在建立新應用程式或元件，您可以使用目前的 C++ 知識，以 Managed Extensions for C++ 來撰寫 Managed 程式碼。使用 Managed Extensions 時，您可以取得 Common Language Runtime 所提供的支援與服務等益處 (例如記憶體管理、跨程式語言的整合、程式碼存取安全性以及物件的自動存留期控制)。 Managed Extensions for C++ 也提供了簡單的方式，以便將現有的應用程式整合至 .NET Framework。例如，您可能需要將一些 Unmanaged 程式碼移植至 .NET。因為您已經有先前編譯的靜態、連結程式庫、DLL 與各種 Unmanaged C++ 類別，您可以直接將現有的 Win32 程式碼編譯成 .NET 應用程式。然後，當時間許可時，您還可以利用 Managed 程式碼重新建置元件。 如需詳細資訊，請參閱 Managed Extensions for C++ 程式設計。 Transact-SQL Transact-SQL 是用來儲存、修改與擷取 Microsoft SQL Server 關聯式資料庫中資訊的原生語言。您也可以使用 Transact-SQL 來建立資料庫以及儲存在資料庫中的任何物件，例如資料表、資料行、觸發程序 (Trigger)、索引鍵、索引、檢視、預存程序和函式。Visual Studio 編輯器與 Visual Database Tools 所提供的設計工具，可完全支援 Transact-SQL。  註意   Visual Database Tools 也可以連接至 Oracle 資料庫。當您使用 Oracle 資料庫時，Visual Database Tools 可以正確地處理 Oracle 的特定SQL 語法。如需詳細資訊，請參閱 Oracle 資料庫。 如需詳細資訊，請參閱 SQL Server 2000 與 Visual Database Tools。 指令碼語言 當具有 Internet 功能的應用程式獲取技術上的註目時，與分散式運算環境有關聯之程式設計問題的解決方案也持續在開發。一般來說，指令碼語言並不是什麼新技術，但一些很有用的指令碼語言是最近才開發的。使用這些新的指令碼語言，您就可以輕鬆的在本機桌面上或遠端主控臺中執行指令碼，以處理系統管理工作與程式事件。 Windows Script Host Windows Script Host (WSH) 是 32 位元 Windows 平臺上，與語言無關的指令碼環境。使用 WSH，Microsoft 提供 VBScript、JScript 與 JScript .NET 指令碼引擎。這些指令碼語言可以用於 Web 伺服器的 ASP 網頁、用於在 Internet Explorer 中執行的 HTML 網頁，以及用於 Windows 98 與 Windows 2000 上的 Windows Script Host 指令碼引擎中。 WSH 可以使用任何指令碼語言，來自動化伺服器上的系統管理工作。例如，系統管理員可以撰寫 VBScript 以建立新的虛擬目錄，然後當 WSH 在背景運作時，從命令列執行此指令碼檔案，以便在網站上建立新的虛擬目錄。此外，系統管理員可以針對多個網站或多個實體伺服器，撰寫單一指令碼。 協力廠商有提供其他語言 (例如 Perl、TCL、REXX 與 Python) 的 ActiveX 指令碼引擎。 如需詳細資訊，請參閱 Windows Script Host。 VBScript Microsoft Visual Basic Scripting Edition (VBScript) 是 Microsoft Visual Basic 的子集  如果您曾經用過 Visual Basic，就會覺得它看起來很熟悉。然而，卻不是完全相同。因為 VBScript 的設計是專門讓您用在 Internet Explorer (IE) 瀏覽器中，所以它沒有包含通常是屬於指令碼範圍外的功能，例如檔案存取與列印。不過，搭配 VBScript 使用 FileSystem 物件來操作檔案倒是很常見。 VBScript 將 Active Scripting 帶到各種環境中，包括 IE 中的 Web 用戶端指令碼以及在 Microsoft Internet Information Services (IIS)、Microsoft Internet Security and Acceleration Server (ISA) 與 Sun Solaris 中的 Web 伺服器指令碼。VBScript 是一種快速、可攜式並且解譯過的物件導向式指令碼語言，可處理直接內嵌於 HTML 網頁中的原始程式碼。您可以使用 VBScript 將智慧功能與互動功能加入 WSH、ASP 與 HTML 網頁中。 就像 JScript 一樣，VBScript 會使用 Windows Script 和主應用程式溝通。使用 Windows Script 時，瀏覽器與其他主應用程式不需要在每一個指令碼元件中使用特殊的整合程式碼。Windows Script 會啟用主機來編譯指令碼，取得和呼叫進入點，並管理開發人員可用的命名空間。 VBScript 是一種型別鬆散的語言。型別鬆散的意思是說您不需要明確地宣告變數的資料型別。實際上，您也無法在 VBScript 中明確地宣告資料型別。此外，在許多情況下，VBScript 會在需要時自動執行轉換作業。例如，如果您將數字加入包含文字 (字串) 的項目中，數字就會轉換成文字。 如需詳細資訊，請參閱《VBScript User's Guide》。IE、IIS 與 ISA 都有提供 VBScript，或者您也可以從 Microsoft Windows Script 技術網站 (http://www.microsoft.com/taiwan/products/develop/scripting/default.asp) 下載 VBScript。 JScript Microsoft JScript 是專為 Web 網頁指令碼而設計的程式語言。JScript 符合 ECMA 262 語言規格。JScript 是專門用於 Internet 的強大指令碼語言。就像 VBScript 一樣，JScript 是一種解譯的、物件導向式的指令碼語言，可處理直接內嵌於 HTML 網頁中的原始程式碼。JScript 可在 Internet Explorer 與 Netscape 瀏覽器上執行。 就像 VBScript 一樣，JScript 也是使用 Windows Script Host 與主應用程式溝通。使用 Windows Script Host ，瀏覽器與其他主應用程式不需要在每一個指令碼元件中使用特殊的整合程式碼。Windows Script Host 會啟用主機來編譯指令碼，取得和呼叫進入點，並管理開發人員可用的命名空間。 JScript 是一種型別鬆散的語言。型別鬆散的意思是說您不需要明確地宣告變數的資料型別。實際上，您也無法在 JScript 中明確地宣告資料型別。此外，在許多情況下，JScript 會在需要時自動執行轉換作業。例如，如果您將數字加入包含文字 (字串) 的項目中，數字就會轉換成文字。 如需詳細資訊，請參閱 JScript。 JScript .NET JScript .NET 是 Microsoft 實作 ECMA 262 語言的新世代產品，是和 ECMAScript 第 4 版一起開發的。它是專門設計在 Common Language Runtime 內執行，以管理程式碼的執行，並提供可讓開發程序更簡易的服務。使用 JScript .NET 時，您可以使用的功能有：跨程式語言的整合、跨程式語言的例外處理、增強的安全性、版本控制與部署支援、元件互動的簡化模型以及偵錯與分析服務。 JScript .NET 將傳統 JScript (可以完全回溯相容) 的現有功能組和 Common Language Runtime 以及類別式語言的最佳功能結合在一起，為您提供了所有的優點。JScript .NET 改良的功能包括真實編譯的程式碼、具型別和不具型別的變數、類別 (具有繼承、函式多載化、屬性存取子等等)、封裝、跨程式語言支援以及存取 .NET Framework。 如需詳細資訊，請參閱 JScript .NET 的新功能。 可延伸標記語言 (XML) XML 提供描述結構式資料的格式，讓您可以有精確的內容宣告以及跨多種平臺的有用之搜尋結果。XML 是依據目的來定義資訊與資料，而不是依據其表現方式，這樣數個應用程式就可以用可促進多樣化的應用程式重新使用與擴充性的方式來使用資訊與資料。XML 是日漸重要的中繼標記語言，很適合在 Internet 上使用。  重要的是您必須知道 .NET Enterprise Servers 的各種產品都支援 XML 作為資料交換格式。例如，SQL Server 2000 的 SQL XML 功能讓 .NET 應用程式可以用 XML 文件的方式，來取得資料庫的查詢結果，而不是取得關聯式結果集。作為 .NET 平臺的重要技術，XML 正開啟了用戶端與提供者 Web 式服務的新世代。 XML 並不是 HTML 的替代方案。雖然兩者都是標記語言，它們卻以互補的方式在運作。HTML 的強勢之處是在資訊的顯示方面，而 XML 則是描述資訊的優異方法。XML 的強勢之處，有部分是由於它能將使用者介面與所顯示資料分開的能力，如先前所述，這樣就能達到跨平臺的效能。 在分散式應用程式架構中，XML 的訊息功能可讓您以標準傳輸機制，輕易地透過防火牆並在異質性系統之間移動資料。無論您的應用程式需要的是什麼  匯入、匯出、資料交換、與其他應用程式的互通性 (例如 Office 2000 或 Exchange 2000)、剖析、修改、資料存取、資料儲存  XML 都是很好用的資料交換格式。Visual Studio .NET 提供一些很好的工具，可以與 XML 以及您最愛的程式語言搭配使用。 如需詳細資訊，請參閱 Visual Studio 中的 XML。 Visual J++ Microsoft 提供 Java User Migration Path to Microsoft .NET (JUMP to .NET ─ 「跳」至 .NET)，作為可讓程式設計人員將 Java 語言專案保留、增強與轉換至 Microsoft .NET 平臺上的一組技術與服務。若使用 JUMP to .NET，在將應用程式與元件擴充至 .NET 平臺上時，您還可以繼續利用現有 Visual J++ 技術與原始程式碼的優勢。如果您熟悉 Visual J++ 語言，就可以用它來建立新的 .NET 應用程式，或是使用自動化轉換工具將現有的程式碼，輕鬆地遷移至新的 C# 語言。  如需詳細資訊，請參閱 Microsoft Visual J++ 網站 (http://msdn.microsoft.com/visualj/jump/default.asp)。 其他語言 Microsoft 和許多公司合作，將他們的程式語言帶到 .NET 平臺。除了 Microsoft 所提供的語言之外，還有許多以 .NET 平臺為目標的其他語言，包括：

 COBOL for Microsoft .NET。 Perl for Microsoft .NET。 Eiffel for Microsoft .NET。 Python for Microsoft .NET。 Pascal for Microsoft .NET。 Mercury for Microsoft .NET。 Mondrian for Microsoft .NET。 Oberon for Microsoft .NET。 Salford FTN95 (Fortran) for Microsoft .NET。 SmallTalk for Microsoft .NET。 Standard ML for Microsoft .NET。 Dyalog APL for Microsoft .NET。  如需詳細資訊，請洽詢相關程式語言廠商。 請參閱 決策圖表 | Visual Basic 語言 | Visual C# 語言 | Visual C++ | JScript .NET 的新功能 | Visual Studio 中的 XML  


顯示:

受繼承
        

受保護
        







列印

匯出 (0)
            







列印

分享
            













本文內容




















本頁對您有幫助嗎？
是
否





其他意見反應？


剩餘 1500 個字元

提交
略過此項







謝謝！
我們非常感謝您提供的意見反應。










© 2017 Microsoft











TQC 物件導向程式語言認證指南Java 6 | 金石堂網路書店 - Yahoo奇摩超級商城




























 


   首頁 購物中心 拍賣 中古車 折扣城 信箱 App下載 


  Yahoo!奇摩超級商城        電腦資訊    全部分類      電腦資訊                
          我的商城     購物車清單 我的最愛 收藏商品 超贈點 折價券 我的專屬優惠 商店客服 超級商城公告    | 登入     訂單查詢     出貨進度 退換申請 發票查詢 新手上路 常見問題      
   商品分類 逛商店    漢神百貨  流行館  型男館  熱銷榜  折扣城  聯名卡  超贈點         登入後可收藏最愛商店    


     服飾服飾   分類  漢神百貨品牌服飾 漢神百貨內睡衣 流行女裝 中大尺碼女裝(M-7L) 女性內睡衣 品牌/潮流男裝  本類推薦  ★ 夏日玩色穿搭5折起 ★ 質 感 女 裝 推 薦 LIST ★ ★MOMA旗艦館：新品上市 ★a la sha：滿2000現折200 ★cantwo：網路獨家均一價 網友熱搜TOP1．洋裝 網友熱搜TOP2．背心 網友熱搜TOP3．寬褲 7/25前抽渡邊直美代言淨味劑 機能內衣超值★專區5折up 型男夏日穿搭★均一價199up    人氣商店  糖罐子►超取99元免運費 Miu-Star►50元券現領現折 東京著衣►100元券現領現折 設計家 原創風格►全店69折 TMH 好評女裝►全店88折 LAMECHIC►5折回饋專區 Life8►居家系列5折 OB大尺碼►襯衫均一價269 Peach Love►全店5折  新進商店  金安德森►萊爾富99免運 新時尚►萊爾富99免運 MOMA►萊爾富99免運         美妝美妝   分類  漢神百貨美妝保養 專櫃美妝/香水 開架美妝/藥妝 美體/私密/手足保養 香氛沐浴/髮品/假髮  本類推薦  2017防曬大集合►看更多 專櫃美妝香水►滿1500打88折 代購超紅►The saem遮瑕膏免運 beautyblender►15周年限定 口紅鎖色神器►怎麼吃喝都不掉色 ★薇佳100元現領現折★ =====本週熱搜關鍵字===== 熱搜No.1 ♥ SOFINA妝前乳 熱搜No.2 ♥ 香水 熱搜No.3 ♥ 法婡雅    人氣商店  86小舖►萊爾富99免運 屈臣氏►現折$50 康是美►滿千折百 小三美日►萊爾富99免運 寶拉珍選►專區79折 薇姿VICHY►100元券現領現折 巴黎萊雅►彩妝85折 無印良品►滿700折50 巴黎草莓►萊爾富99免運  新進商店  三原水►萊爾富99免運 純淨佳人►去角質買一送一免運 聯合利華►開幕慶現折50元         鞋包/精品/配飾鞋包/精品/配飾   分類  漢神百貨精品珠寶 漢神百貨鞋包配飾 國際精品 品牌鞋包 流行女包/皮夾 流行女鞋 型男鞋包配件 手錶 珠寶/ 飾品/配件  本類推薦  ☀質感穿搭真皮鞋包5折起 ☀新鮮人好感度up穿搭特輯 ☀放暑出遊鞋包全攻略 ☀玩色夏日！50%off 年終優選．潮流時尚單品 ★夏日配飾★新品299起 ★施華洛世奇★開幕慶限時超贈點5倍送 ★型男配件↘精選店家五折起    人氣商店  Pixy►全店任2件79折 天藍小舖►任選2件398 Ann'S►涼鞋季9折 Sophie&Sam►兩雙1500 MAGY瑪格►開幕慶百款$990 FOSSIL►熱銷男夾7折 大新莊鐘錶►MK錶享87折 施華洛世奇►超贈點5倍送+獨家滿額贈 周大福►小小兵黃金現折388  新進商店  Kwoomi►萊爾富99免運 時光鐘錶►萊爾富99免運 OSEWAYA►萊爾富99免運         媽咪寶貝媽咪寶貝   分類  漢神百貨媽咪寶貝 童裝/媽咪裝 寶貝媽咪用品  本類推薦  ▶尿布特賣最低800up ▶新手媽咪懶人包特搜 ▶寶貝玩水必備79折up ＝＝＝夏季熱搜榜＝＝＝ 熱搜推薦 ▶ 涼鞋 熱搜推薦 ▶ 泳裝 熱搜推薦 ▶ 地墊 熱搜推薦 ▶ 費雪 熱搜推薦 ▶ 學步鞋 熱搜推薦 ▶ 親子裝 熱搜推薦 ▶ 哺乳衣 熱搜推薦 ▶ 帽子    人氣商店  AIB小舖☛限時任2件69折 米妮希望屋☛新品79折 QB allshine☛童裝均一價$99 美國派☛新品折後$166/件 baby童衣☛人氣童裝任選65折 拍手童裝☛全館滿699現折100 母嬰同室☛涼感包巾第二件5折 哈韓孕媽咪☛哺乳衣任選79折 橘魔法☛涼鞋第二件76折  新進商店  魔幻甜心►萊爾富99免運 時尚寶貝►萊爾富99免運 UNICO-LIFE►萊爾富99免運         電腦/週邊電腦/週邊   分類  Apple 專區 平板/NB/PC 週邊設備/零組件  本類推薦  【爆殺】微軟藍芽滑鼠↘990 全新SurfacePro↘31888 iPad 9.7吋 WIFI↘10300 ZENBOOK雙碟版↘129990 小米智能攝影機↘1049 4G獨顯i7電競筆電↘36900 EPSON三合一印表機↘4190 128G金屬防水隨身碟↘249 SanDisk雙用隨身碟↘1090 Intuos創意觸控繪圖板↘3400 華碩雙頻IP分享器↘2290 NEW! 小學堂♥雷射印表機    人氣商店  三井3C►買品牌印表機送咖啡券 每家比電子►全館結帳2%回饋! 紐頓e世界►買繪圖板送電影票 浩昇科技►EPSON原廠匣95折 台灣奇茂購物►全館最高折200 PC PARTY►雷蛇煉獄奎蛇7折 雙飛燕►全館滿999折99元 科大電腦►全館滿2千折150元 彩虹3C►專區滿3千折300元  新進商店  Luminee►萊爾富99免運 嗨殼F巷►萊爾富99免運 達墨精品3C►萊爾富99免運         家電/視聽家電/視聽   分類  生活/廚房家電 電視/影音/耳機 冷氣/冰箱/洗衣機  本類推薦  強檔▶父親節採購指南討爹歡心 強檔▶揪感心空調讓老爸超涼爽 好康☛四合一移動式空調8,099 好康☛超急速降溫水冷扇1,380 好康☛盛夏必備款冷凍櫃6,830 好康☛三洋11(kg)媽媽樂 7,800 新奇☛鬼怪男代言清淨機8,600 新奇☛極淨水過濾吸塵器6,699 送88☛千尋盒子下單秒出2,490 送88☛Sony 暢銷耳罩耳機 749 送88☛買刮鬍刀送吹風機4,980 送88☛全自動研磨咖啡機1,580    人氣商店  封館殺9折+狂賀開店60年：德昌 滿額折500+空調兩天快裝：翠亨 滿額折300+空調兩天快裝：上新 滿額折300+樂金家電狠殺：神坊 滿額折300+大同電鍋很俗：雙喬 滿額折300+藍芽無線耳機：無線 滿額折300+女神必備品：沛莉緹 滿額折300+專業溫控烤箱：山崎 滿額折300+直流扇破盤價：凱創  新進商店  濾網88折+助你對抗PM25：綠能 滿額折300+專賣佰元風扇：雅山 現領折200+就是折奇美：大碗公         相機/手機/玩具相機/手機/玩具   分類  單眼相機/鏡頭 數位相機/拍立得 相機週邊 手機 手機配件/通訊 電玩/玩具  本類推薦  ☞新品NEW²報首刊▼幾何手機殼 ★小小兵拍立得↘3590現貨 ★小米夜視攝影↘1100免運 ★SONY運動攝影↘10900免運 ★DJI  SPARK↘15500現貨! ★血氧血壓智能手環↘849起 ★小米1000mah電源↘499 ★暑假瘋玩 熱銷桌遊↘299 ★bitplayd照相手機殼↘1280 ★NOKIA 5 現貨↘5390 ★夏日戲水用玩具↘79起 ★暑假瘋玩 熱銷桌遊↘299    人氣商店  東菱數位科技➤GH5現貨零利率 WL數碼達人➤蔡司鏡頭現折8800元 SG➤全館配件滿6百現折100 一手流通➤手機滿3千現折350 帝谷通信➤OPPO A57$6988 GOSHOP➤小米手環現折$50 數位風潮➤美肌自拍桿買1送1 龐奇桌遊➤滿千折百 再送桌遊 funbox➤全館滿888送$100禮券  新進商店  放肆購►萊爾富99免運 Nydus►萊爾富99免運 亞果元素►全館免運         美食/纖體/保健美食/纖體/保健   分類  漢神百貨美食街 美顏美體/營養保健 冷凍/生鮮/甜點 小吃熟食/糕餅/零食 飲料/食材/雜貨 有機食品  本類推薦  oh爸男神★美食x保健滿千88折! 健康美麗迎夏日★保健熱銷榜 異國零食特搜No1★限時87折! 閨月表達孝心★豬腳麵線No.1 ★網友熱搜=88節蛋糕早鳥預購 ★網友熱搜=小小兵起司拉麵 ★網友熱搜=曾粉 海味叻沙 ★網友熱搜=芒果青冰 ★網友熱搜=愛文芒果 ★網友熱搜=亞培安素2箱立即送 ★網友熱搜=辣炒年糕點心麵 ★網友熱搜=老協珍滴雞精    人氣商店  亞尼克★現領現折50元 愛買★好友週任2件88折 每日優果★全館滿千88折 夢甜屋★生乳捲任2條699免運 大樂購物中心★全館滿千折百 煲好湯★全館滿千88折 飲食生活家★亞培成人系列95折 Double手法式甜點★全館8折 橙姑娘★梅精買五送一  新進商店  青鳥旅行►萊爾富99免運 甜園小舖►萊爾富99免運 豆嫂的零食►萊爾富99免運         醫療/日用品/寵物醫療/日用品/寵物   分類  醫療用品/器材 生活百貨/日用品 寵物/水族用品  本類推薦  ▶一點絕！領券後＄922 ▶開幕慶～熊寶貝買1送6 ▶Durex旗艦店 $ 50領折 ▶愛康衛生棉～再也回不去 熱搜字 ❤ 梅雨季_除濕防霉 熱搜字 ❤ 防蚊 熱搜字 ❤ 液體衛生棉 熱搜字 ❤ 保險套 寵物熱搜❤ 涼墊 寵物熱搜❤推車 寵物熱搜❤ 除臭吸水尿布 寵物熱搜❤ 低粉塵貓砂    人氣商店  ★屈臣氏指定商品75折 ★ASAP天天領50折券 ★康是美＄50領折 ★雙寶醫療 ＄100領折 ★康諾醫療＄100領折 ★維康醫療護具88折 寵物夢工廠►全店滿千折百 King Wang 精品館►滿額送贈品 培菓平價寵物網►全店95折  新進商店  快意生活►萊爾富99免運 木酢達人►萊爾富99免運 派對盒►萊爾富99免運         居家/寢具/傢具居家/寢具/傢具   分類  漢神百貨居家生活 居家/雜貨/園藝 寢具/家飾 傢俱/收納/床墊 廚房鍋具/餐具/用品 衛浴設備/浴室用品 五金/照明工具  本類推薦  酷涼冰沙杯★ 居家好物5折up 蛋黃哥玻璃杯★ 88折＆免運 涼夏消暑首選★ 冰沙杯$63/瓶 涼夏杯具組★ 任選62折 晴雨小幫手★ 遮陽傘↘6折 熱搜字 ❤  鞋櫃 熱搜字 ❤  衣櫃 熱搜字 ❤ 沙發床 熱搜字 ❤  毯/被子 熱搜字 ❤ 天絲（床組）    人氣商店  H&D東稻家居 ♥ 專區86折 翔仔居家 ♥ 新品享85折 完美主義 ♥ 收納盒系列2件79折 棉床本舖 ♥ 滿990送德國兔 收納專科 ♥ 專區最高折1000 戀家小舖 ♥ 簡約素色款9折 Modern Deco ♥ 全館79折 HOLA ♥ 全館滿千折100 特力屋 ♥ 全館滿千折100  新進商店  漫生活居家►萊爾富99免運 OH!Show►萊爾富99免運 易奇寶居家►萊爾富99免運         運動/戶外/交通運動/戶外/交通   分類  漢神百貨休閒運動 腳踏車/汽機車精品 運動器材/用品 運動鞋/服飾/包包 戶外用品/行李箱 樂器 18禁專區  本類推薦  ►Outdoor控●完全指南5折up ►Summer趴～IG拍照打卡特輯 熱搜關鍵字 ❤ FUN暑假全攻略 ►女人節目●Puma緞帶鞋均一價 ►夏季露營趣●Coleman78折up 熱搜關鍵字 ❤ 比基尼 熱搜關鍵字 ❤ 運動風 熱搜關鍵字 ❤ 防曬穿搭 熱搜關鍵字 ❤ 行李箱 熱搜關鍵字 ❤ 腳踏車    人氣商店  ★SKECHER旗艦店最低55折 ★TheNorthFace新品2件85折 ★A PLUS全店NIKE5折up ★UV100防曬 $99免運 ★運動世界＄150領折 ★宅神也健身小物＄99免運 ★native shoes藝人最愛朝聖拖 ★Pump306最高折188 ★喬依比基尼 滿599送手機套  新進商店  INDULGENCE►萊爾富99免運 IronSteel安全鞋►萊爾富99免運 Juniper 朱尼博►萊爾富99免運         餐券/娛樂/旅遊餐券/娛樂/旅遊   分類  美食餐券 娛樂/生活/服務券 旅遊住宿券  本類推薦  📣  吃喝玩樂暑期全攻略 📣 『限量』饗食天堂餐券免運 『VIP』義大買1送7+快速通關 『預購』丹堤父親節蛋糕88折 『推薦』六福萬怡酒店下午茶 『搶先』六福水樂園299元 『熱賣』騎士堡3小時親子券 『FUN』劍湖山王子飯店住宿 激推品 ►遊樂園門票 激推品 ►親子住宿 激推品 ►高CP吃到飽 超贈點折抵首選★天仁/翰林    人氣商店  農場美食/田園1日遊 ►全台任選 奧塞美術館大展 ►門票即買即用 品花苑午晚餐吃到飽  ►599起 東森海洋4人住宿  ►25折 便利商店24H洗衣服 ► 3件369 日月潭碼頭水沙連飯店►湖景房 冷氣空調清洗►下殺55折 東森海洋4人住宿  ►25折 耐斯王子大飯店4人住宿►44折  新進商店  ♥指舞春秋 舒壓放鬆 ♥台灣農場趴趴走  體驗小小農夫 ♥葛洛莉spa萊爾富99免運         圖書/文具/影音圖書/文具/影音   分類  書籍/雜誌期刊 二手書專區 音樂/電影/影集 文具/辦公用品  本類推薦  ▶珍藏齊柏林 ►關西親子遊-金石堂滿700送70元 ►30色彩筆文具/手藝↘39 ►NORNS-迪士尼文具小物 ►3M生活-文具超值選$18起 ►DATABANK文具-第2件8折 ❤熱搜NO.1~紙膠帶 ❤熱搜NO.2~萬寶龍鋼筆 ❤熱搜NO.3~療癒小物 ❤熱搜NO.4~迪士尼 ❤熱搜NO.5~文創小物    人氣商店  ★讀冊5折up/萊爾富$99免運 ★金石堂-滿700送70元 ★城邦-滿499現折50元 ★大創萊爾富$99免運 ★bluecat萊爾富$99免運 ★書立得童書7折起 ★時報文化69折起 ★麥克英文有聲書78折起 ★今周刊全店免運  新進商店  芮菲客筆►萊爾富99免運 文禮學院►萊爾富99免運 易撕貼本鋪►萊爾富99免運       











超級商城
 > 
圖書/文具/影音
 > 
書籍/雜誌期刊
 > 
電腦資訊
 
















金石堂網路書店金石堂網路書店★中文新書79折起｛超商取貨滿350免運｝★ 











本店購物車
 加入最愛店家



訂閱電子報












商店首頁
商店滿意度
 商店介紹
購物須知
商店客服
限時促銷活動(1)










特惠活動

運動塑身

現代文學

心理勵志

手作甜點

影視娛樂

親子教養

童書繪本

手作設計

暢銷旅遊

錢流進來

語言工具

電影原著

國家考試



























分享到Facebook



 分享到Plurk






加入收藏清單








 







 






商品編號：p033732238693
店家貨號：2013120143401
購買人次：0
銷售件數：0



本店促銷活動



★金石堂網路書店暑期閱讀★全館滿700元送70元折價券★第二波









熱賣相關品

                        更多
                    







                        網路價 
                        
                        元
                    
購買





 






TQC 物件導向程式語言認證指南Java 6
作者:電腦技能基金會出版日:2010/12/27ISBN:9789572238493






網路價


320元 253元
約可獲得超贈點： 2 點 





付款方式


網購必備筆筆享3%．辦卡送威秀電影票


刷卡最有利筆筆享2%最高送2400刷卡金
刷卡紅利折抵 
      接受20家銀行

信用卡 
ATM轉帳 
全家付款取貨 
7-11付款取貨 







交貨方式


萊爾富純取貨 (購物滿99元免運費) 、貨運 / 宅配 (購物滿1000元免運費) 、7-11取貨付款 (購物滿350元免運費) 、全家取貨付款 (購物滿350元免運費)  












服務承諾


七日鑑賞期內退貨免運費
 









        立即購買    


加入購物車













商品詳細說明















分級標示普級 



























內容簡介：公信力最具權威的「TQC  物件導向程式語言Java 6」，認證屬於程式語言的重要觀念，題型包含基本認識、條件判斷式、迴圈、遞迴程式設計、陣列設計能力以及物件導向程式設計與例外處理等，完整包含Java程式語言的重要觀念，藉由題型之設計，可協助讀者學習最紮實的重要觀念及程式撰寫能力，並厚實自身能力，運用物件導向概念，撰寫出精簡並富邏輯性的程式。本書特色「TQC  物件導向程式語言認證Java 6」，係為TQC  軟體設計領域之物件導向程式語言認證能力鑑定，以實務操作方式進行認證，評核符合企業需求的新時代專業設計人才。亦為考核「TQC  Java程式設計專業人員」必備專業技能之一。．內附完整的測驗題及操作題，題型設計均以實務應用為導向，品質及認證公信力最具權威！．「TQC  物件導向程式語言認證Java 6」範例題目包含基本認識、條件判斷式、迴圈、遞迴程式設計、陣列設計能力以及物件導向程式設計與例外處理等，完整涵蓋Java程式語言的重要觀念，學習最紮實的重要觀念及程式撰寫能力。．透過本書所附光碟之範例題目練習系統依類別進行自我測驗，提升使用者學習效率。．配合中華民國電腦技能基金會(www.csf.org.tw)測驗流程，一舉取得專業證照，讓您求學、求職更具競爭力。本書範例題目內容為認證題型與命題方向之示範，正式測驗試題不以範例題目為限。作者介紹： 





 



9.6
店家滿意度


1.1
出貨天數


0.5
回信天數


1.9
缺貨率%


 





        立即購買
    


加入購物車













消費者滿意度：9.6





平均服務品質

                    出貨速度：1.1 天
                    回信速度：0.5 天
                    缺貨率：1.9 %



                近一週瀏覽次數：58065            






本店商品搜尋






商品名稱
        	店家貨號
        
價格範圍
 ~ 








本店全部分類


全部商品(135312)
      
新書推薦(916)文學(206)心理勵志(79)飲食料理(100)財經企管(85)醫療保健(73)語言／考試書(85)生活風格／旅遊(143)教育／親子／童書(145)中文書(134280)文學(13599)旅行飲食／自然文學(268)圖文繪本(858)現代華文創作(3048)現代詩(470)世界古典文學(601)中國古典文學(451)國學／古詩詞(409)文學總論(455)現代翻譯文學(2179)奇幻／科幻小說(1304)推理／犯罪小說(1246)恐怖／驚悚小說(1084)歷史／武俠小說(1198)其他文學(23)簡體版-文學小說(5)財經企管(5594)經濟／金融(376)全球趨勢(233)國際／兩岸經貿(100)投資理財(1295)創業／開店(201)行銷／業務(612)電子商務(146)企業案例分享(405)企業經營(949)管理實務(268)求職(68)職場工作術(933)其他財經企管(8)生活風格(4069)手作設計(1206)文具／雜貨／紙(331)影視娛樂(295)美妝／時尚(503)運動(317)戶外活動(131)品味／指南(232)休閒／嗜好(672)武術(381)其他生活風格(1)飲食料理(3295)鍋具／家電料理(146)中式料理(291)各國料理(430)主題料理(370)食材料理(530)烘培／點心(841)茶／酒／飲品(347)飲食生活(340)心理勵志(4881)自我成長(1787)勵志小品(1003)家庭／兩性(519)人性／人際(719)心理學(249)心理諮商／治療(327)學習／潛能開發(259)其他心理勵志(18)醫療保健(5139)懷孕／育兒(152)健康觀念(787)疾病百科(1009)醫療人文(335)其他醫療保健(8)中醫養生(893)舒壓養生(720)健康飲食(776)減重／塑身(459)旅遊(2535)日本(632)亞洲(323)台灣旅遊(520)旅遊遊記(239)世界旅遊(110)中國(183)歐洲(322)美洲(96)大洋洲(55)非洲(17)台灣地圖(25)世界地圖(10)其他旅遊(3)宗教命理(4363)新時代(473)基督教(443)佛教(1384)占星／血型(156)占卜(261)命理(879)曆書(52)靈異／神秘(233)道教(39)台灣民間信仰(180)其他宗教(206)宗教總論(48)其他宗教命理(9)教育/親子教養(1875)教育/教學現場(549)0-3歲嬰幼兒(276)親子教養(985)親子生活(65)童書(13299)寶寶書(0-3)(993)學前幼兒(4-6)(2090)遊戲教具(761)繪本／圖畫書(3017)兒童故事／小說(3106)歷史／傳記(606)寫作／語文學習(560)科普／百科(964)生活／學習(291)知識學習漫畫(904)其他童書(7)羅曼史(7025)古代羅曼史(5080)現代羅曼史(1789)世界羅曼史(114)原創小說（簡體）(42)輕小說(16331)華文奇幻／科幻輕小說(2502)華文推理／神怪輕小說(843)華文玄幻／仙俠輕小說(6396)華文戀愛輕小說(940)華文其他輕小說(18)日系奇幻／神怪輕小說(2405)日系推理／神怪輕小說(650)日系戀愛輕小說(1697)日系其他輕小說(19)週邊精品(822)其他輕小說(3)簡體版-輕小說(36)漫畫(25337)戀愛關係(8527)魔幻冒險(5522)武俠／格鬥(665)推理／驚悚(2325)職場／運動(2609)輕鬆生活(2701)社會歷史(1180)電玩／攻略(328)歐美漫畫(20)畫冊／週邊(535)其他漫畫(70)國人漫畫(699)韓系漫畫(156)語言／字辭典(5368)英語學習(2076)英語檢定(651)留學／留學考(38)英語辭典(62)日語學習(961)韓語學習／檢定(313)日語檢定考試(404)日語辭典(26)外語學習／辭典(251)其他語言／字辭典(4)中文學習(297)中文字辭典(82)華語學習(146)地方方言(57)藝術設計(4619)攝影(577)繪畫(1234)建築／空間設計(696)音樂／樂譜(366)設計(371)藝術／美學(394)電影(208)藝術投資／收藏(226)中國書畫(307)工藝／雕塑(57)表演藝術(173)其他藝術設計(8)簡體版-藝術設計(2)電腦資訊(2355)3C數位生活(225)網頁設計(215)繪圖／影音／多媒體(483)辦公軟體／應用軟體(341)作業系統(103)程式設計(342)資料庫(75)網路／安全／概論(259)APPLE專區(79)認證考試(226)其他電腦資訊(7)自然科普(2446)普及科學(270)數學(220)化學(63)物理(98)生命科學(226)動物／寵物(518)植物／花草生活(486)地球生態／天文(153)科技／應用科學(404)其他自然科普(8)人文歷史(3514)世界史地(390)西洋史地(343)亞洲史地(402)中國史地(1628)台灣史地(744)其他史地(7)社會哲思(3701)各國觀察(363)社會議題(447)哲學／當代思潮(251)西方哲學(138)東方哲學(413)法律(497)政治／國際情勢(659)環境／飲食(157)社會科學研究(72)社會學(184)戰爭／軍事(328)語言學(82)書店／出版／傳播(105)其他社會哲思(5)考試書／政府出版品(4935)大學教科用書(965)公務人員／高普考(1110)考試秘笈(144)就業考試(321)軍警消考試(193)教師甄試／檢定(59)證券／金融證照(161)職訓檢定(334)專技人員考試(201)其它考試用書(1)銀行招考(7)領隊導遊(110)國中會考(121)升科大四技(339)升大學／插大(353)政府出版品(406)研究所考試(110)設計文具(316)2017吉卜力年曆(3)2017手帳(12)書寫用品(22)中性筆(5)原子筆(17)黏貼修正(194)膠帶(台)(124)橡皮擦(70)事務週邊(41)量測用品(3)裝訂文具(20)事務針夾(1)會議／留言／投影片(17)書畫美術(41)彩色筆(18)色鉛筆(23)精緻名筆(3)觸控筆(3)

 

平臺說明



開創新客群，同時擁有電腦版、手機版&APP商店！專人輔導立即開店！


服務說明
購物須知
常見問題



 





熱賣相關品
（購買這件商品的人，通常也會購買下列商品。）
TOP




 » 更多商品 






商品促銷區TOP







世界最強日語50音記憶口訣(附50音記憶口訣...
網路價：210元





教育扭轉未來：當文憑成為騙局，21世紀孩子必...
網路價：332元





當我提筆寫下你：你就來到我面前
網路價：277元





出包王女 軟膠弔飾B款
網路價：162元





蝴蝶的祕密生命 (出版十周年優雅紀念版)
網路價：237元




» 更多商品











[x]





[x]










手機逛超級商城
加入超級商城粉絲團
退貨辦法
服務說明
我要開店


服務條款
隱私權






加入收藏清單





商品名稱：



標籤：(非必填)


 
你還可新增  個標籤 (每次新增限輸入一個，每次限10個字)您可自訂標籤，方便資料分類與管理 
常用的標籤：








資料傳輸中.






  













書籍/雜誌期刊 (文學, 動/漫畫, 親子童書, 生活娛樂) - Yahoo奇摩超級商城 


























   首頁 購物中心 拍賣 中古車 折扣城 信箱 App下載 


  Yahoo!奇摩超級商城        書籍/雜誌期刊    全部分類      書籍/雜誌期刊                
          我的商城     購物車清單 我的最愛 收藏商品 超贈點 折價券 我的專屬優惠 商店客服 超級商城公告    | 登入     訂單查詢     出貨進度 退換申請 發票查詢 新手上路 常見問題          商品分類 逛商店    漢神百貨  流行館  型男館  熱銷榜  折扣城  聯名卡  超贈點         登入後可收藏最愛商店    
 






     服飾服飾   分類  漢神百貨品牌服飾 漢神百貨內睡衣 流行女裝 中大尺碼女裝(M-7L) 女性內睡衣 品牌/潮流男裝  本類推薦  ★ 夏日玩色穿搭5折起 ★ 質 感 女 裝 推 薦 LIST ★ ★MOMA旗艦館：新品上市 ★a la sha：滿2000現折200 ★cantwo：網路獨家均一價 網友熱搜TOP1．洋裝 網友熱搜TOP2．背心 網友熱搜TOP3．寬褲 7/25前抽渡邊直美代言淨味劑 機能內衣超值★專區5折up 型男夏日穿搭★均一價199up    人氣商店  糖罐子►超取99元免運費 Miu-Star►50元券現領現折 東京著衣►100元券現領現折 設計家 原創風格►全店69折 TMH 好評女裝►全店88折 LAMECHIC►5折回饋專區 Life8►居家系列5折 OB大尺碼►襯衫均一價269 Peach Love►全店5折  新進商店  金安德森►萊爾富99免運 新時尚►萊爾富99免運 MOMA►萊爾富99免運         美妝美妝   分類  漢神百貨美妝保養 專櫃美妝/香水 開架美妝/藥妝 美體/私密/手足保養 香氛沐浴/髮品/假髮  本類推薦  2017防曬大集合►看更多 專櫃美妝香水►滿1500打88折 代購超紅►The saem遮瑕膏免運 beautyblender►15周年限定 口紅鎖色神器►怎麼吃喝都不掉色 ★薇佳100元現領現折★ =====本週熱搜關鍵字===== 熱搜No.1 ♥ SOFINA妝前乳 熱搜No.2 ♥ 香水 熱搜No.3 ♥ 法婡雅    人氣商店  86小舖►萊爾富99免運 屈臣氏►現折$50 康是美►滿千折百 小三美日►萊爾富99免運 寶拉珍選►專區79折 薇姿VICHY►100元券現領現折 巴黎萊雅►彩妝85折 無印良品►滿700折50 巴黎草莓►萊爾富99免運  新進商店  三原水►萊爾富99免運 純淨佳人►去角質買一送一免運 聯合利華►開幕慶現折50元         鞋包/精品/配飾鞋包/精品/配飾   分類  漢神百貨精品珠寶 漢神百貨鞋包配飾 國際精品 品牌鞋包 流行女包/皮夾 流行女鞋 型男鞋包配件 手錶 珠寶/ 飾品/配件  本類推薦  ☀質感穿搭真皮鞋包5折起 ☀新鮮人好感度up穿搭特輯 ☀放暑出遊鞋包全攻略 ☀玩色夏日！50%off 年終優選．潮流時尚單品 ★夏日配飾★新品299起 ★施華洛世奇★開幕慶限時超贈點5倍送 ★型男配件↘精選店家五折起    人氣商店  Pixy►全店任2件79折 天藍小舖►任選2件398 Ann'S►涼鞋季9折 Sophie&Sam►兩雙1500 MAGY瑪格►開幕慶百款$990 FOSSIL►熱銷男夾7折 大新莊鐘錶►MK錶享87折 施華洛世奇►超贈點5倍送+獨家滿額贈 周大福►小小兵黃金現折388  新進商店  Kwoomi►萊爾富99免運 時光鐘錶►萊爾富99免運 OSEWAYA►萊爾富99免運         媽咪寶貝媽咪寶貝   分類  漢神百貨媽咪寶貝 童裝/媽咪裝 寶貝媽咪用品  本類推薦  ▶尿布特賣最低800up ▶新手媽咪懶人包特搜 ▶寶貝玩水必備79折up ＝＝＝夏季熱搜榜＝＝＝ 熱搜推薦 ▶ 涼鞋 熱搜推薦 ▶ 泳裝 熱搜推薦 ▶ 地墊 熱搜推薦 ▶ 費雪 熱搜推薦 ▶ 學步鞋 熱搜推薦 ▶ 親子裝 熱搜推薦 ▶ 哺乳衣 熱搜推薦 ▶ 帽子    人氣商店  AIB小舖☛限時任2件69折 米妮希望屋☛新品79折 QB allshine☛童裝均一價$99 美國派☛新品折後$166/件 baby童衣☛人氣童裝任選65折 拍手童裝☛全館滿699現折100 母嬰同室☛涼感包巾第二件5折 哈韓孕媽咪☛哺乳衣任選79折 橘魔法☛涼鞋第二件76折  新進商店  魔幻甜心►萊爾富99免運 時尚寶貝►萊爾富99免運 UNICO-LIFE►萊爾富99免運         電腦/週邊電腦/週邊   分類  Apple 專區 平板/NB/PC 週邊設備/零組件  本類推薦  【爆殺】微軟藍芽滑鼠↘990 全新SurfacePro↘31888 iPad 9.7吋 WIFI↘10300 ZENBOOK雙碟版↘129990 小米智能攝影機↘1049 4G獨顯i7電競筆電↘36900 EPSON三合一印表機↘4190 128G金屬防水隨身碟↘249 SanDisk雙用隨身碟↘1090 Intuos創意觸控繪圖板↘3400 華碩雙頻IP分享器↘2290 NEW! 小學堂♥雷射印表機    人氣商店  三井3C►買品牌印表機送咖啡券 每家比電子►全館結帳2%回饋! 紐頓e世界►買繪圖板送電影票 浩昇科技►EPSON原廠匣95折 台灣奇茂購物►全館最高折200 PC PARTY►雷蛇煉獄奎蛇7折 雙飛燕►全館滿999折99元 科大電腦►全館滿2千折150元 彩虹3C►專區滿3千折300元  新進商店  Luminee►萊爾富99免運 嗨殼F巷►萊爾富99免運 達墨精品3C►萊爾富99免運         家電/視聽家電/視聽   分類  生活/廚房家電 電視/影音/耳機 冷氣/冰箱/洗衣機  本類推薦  強檔▶父親節採購指南討爹歡心 強檔▶揪感心空調讓老爸超涼爽 好康☛四合一移動式空調8,099 好康☛超急速降溫水冷扇1,380 好康☛盛夏必備款冷凍櫃6,830 好康☛三洋11(kg)媽媽樂 7,800 新奇☛鬼怪男代言清淨機8,600 新奇☛極淨水過濾吸塵器6,699 送88☛千尋盒子下單秒出2,490 送88☛Sony 暢銷耳罩耳機 749 送88☛買刮鬍刀送吹風機4,980 送88☛全自動研磨咖啡機1,580    人氣商店  封館殺9折+狂賀開店60年：德昌 滿額折500+空調兩天快裝：翠亨 滿額折300+空調兩天快裝：上新 滿額折300+樂金家電狠殺：神坊 滿額折300+大同電鍋很俗：雙喬 滿額折300+藍芽無線耳機：無線 滿額折300+女神必備品：沛莉緹 滿額折300+專業溫控烤箱：山崎 滿額折300+直流扇破盤價：凱創  新進商店  濾網88折+助你對抗PM25：綠能 滿額折300+專賣佰元風扇：雅山 現領折200+就是折奇美：大碗公         相機/手機/玩具相機/手機/玩具   分類  單眼相機/鏡頭 數位相機/拍立得 相機週邊 手機 手機配件/通訊 電玩/玩具  本類推薦  ☞新品NEW²報首刊▼幾何手機殼 ★小小兵拍立得↘3590現貨 ★小米夜視攝影↘1100免運 ★SONY運動攝影↘10900免運 ★DJI  SPARK↘15500現貨! ★血氧血壓智能手環↘849起 ★小米1000mah電源↘499 ★暑假瘋玩 熱銷桌遊↘299 ★bitplayd照相手機殼↘1280 ★NOKIA 5 現貨↘5390 ★夏日戲水用玩具↘79起 ★暑假瘋玩 熱銷桌遊↘299    人氣商店  東菱數位科技➤GH5現貨零利率 WL數碼達人➤蔡司鏡頭現折8800元 SG➤全館配件滿6百現折100 一手流通➤手機滿3千現折350 帝谷通信➤OPPO A57$6988 GOSHOP➤小米手環現折$50 數位風潮➤美肌自拍桿買1送1 龐奇桌遊➤滿千折百 再送桌遊 funbox➤全館滿888送$100禮券  新進商店  放肆購►萊爾富99免運 Nydus►萊爾富99免運 亞果元素►全館免運         美食/纖體/保健美食/纖體/保健   分類  漢神百貨美食街 美顏美體/營養保健 冷凍/生鮮/甜點 小吃熟食/糕餅/零食 飲料/食材/雜貨 有機食品  本類推薦  oh爸男神★美食x保健滿千88折! 健康美麗迎夏日★保健熱銷榜 異國零食特搜No1★限時87折! 閨月表達孝心★豬腳麵線No.1 ★網友熱搜=88節蛋糕早鳥預購 ★網友熱搜=小小兵起司拉麵 ★網友熱搜=曾粉 海味叻沙 ★網友熱搜=芒果青冰 ★網友熱搜=愛文芒果 ★網友熱搜=亞培安素2箱立即送 ★網友熱搜=辣炒年糕點心麵 ★網友熱搜=老協珍滴雞精    人氣商店  亞尼克★現領現折50元 愛買★好友週任2件88折 每日優果★全館滿千88折 夢甜屋★生乳捲任2條699免運 大樂購物中心★全館滿千折百 煲好湯★全館滿千88折 飲食生活家★亞培成人系列95折 Double手法式甜點★全館8折 橙姑娘★梅精買五送一  新進商店  青鳥旅行►萊爾富99免運 甜園小舖►萊爾富99免運 豆嫂的零食►萊爾富99免運         醫療/日用品/寵物醫療/日用品/寵物   分類  醫療用品/器材 生活百貨/日用品 寵物/水族用品  本類推薦  ▶一點絕！領券後＄922 ▶開幕慶～熊寶貝買1送6 ▶Durex旗艦店 $ 50領折 ▶愛康衛生棉～再也回不去 熱搜字 ❤ 梅雨季_除濕防霉 熱搜字 ❤ 防蚊 熱搜字 ❤ 液體衛生棉 熱搜字 ❤ 保險套 寵物熱搜❤ 涼墊 寵物熱搜❤推車 寵物熱搜❤ 除臭吸水尿布 寵物熱搜❤ 低粉塵貓砂    人氣商店  ★屈臣氏指定商品75折 ★ASAP天天領50折券 ★康是美＄50領折 ★雙寶醫療 ＄100領折 ★康諾醫療＄100領折 ★維康醫療護具88折 寵物夢工廠►全店滿千折百 King Wang 精品館►滿額送贈品 培菓平價寵物網►全店95折  新進商店  快意生活►萊爾富99免運 木酢達人►萊爾富99免運 派對盒►萊爾富99免運         居家/寢具/傢具居家/寢具/傢具   分類  漢神百貨居家生活 居家/雜貨/園藝 寢具/家飾 傢俱/收納/床墊 廚房鍋具/餐具/用品 衛浴設備/浴室用品 五金/照明工具  本類推薦  酷涼冰沙杯★ 居家好物5折up 蛋黃哥玻璃杯★ 88折＆免運 涼夏消暑首選★ 冰沙杯$63/瓶 涼夏杯具組★ 任選62折 晴雨小幫手★ 遮陽傘↘6折 熱搜字 ❤  鞋櫃 熱搜字 ❤  衣櫃 熱搜字 ❤ 沙發床 熱搜字 ❤  毯/被子 熱搜字 ❤ 天絲（床組）    人氣商店  H&D東稻家居 ♥ 專區86折 翔仔居家 ♥ 新品享85折 完美主義 ♥ 收納盒系列2件79折 棉床本舖 ♥ 滿990送德國兔 收納專科 ♥ 專區最高折1000 戀家小舖 ♥ 簡約素色款9折 Modern Deco ♥ 全館79折 HOLA ♥ 全館滿千折100 特力屋 ♥ 全館滿千折100  新進商店  漫生活居家►萊爾富99免運 OH!Show►萊爾富99免運 易奇寶居家►萊爾富99免運         運動/戶外/交通運動/戶外/交通   分類  漢神百貨休閒運動 腳踏車/汽機車精品 運動器材/用品 運動鞋/服飾/包包 戶外用品/行李箱 樂器 18禁專區  本類推薦  ►Outdoor控●完全指南5折up ►Summer趴～IG拍照打卡特輯 熱搜關鍵字 ❤ FUN暑假全攻略 ►女人節目●Puma緞帶鞋均一價 ►夏季露營趣●Coleman78折up 熱搜關鍵字 ❤ 比基尼 熱搜關鍵字 ❤ 運動風 熱搜關鍵字 ❤ 防曬穿搭 熱搜關鍵字 ❤ 行李箱 熱搜關鍵字 ❤ 腳踏車    人氣商店  ★SKECHER旗艦店最低55折 ★TheNorthFace新品2件85折 ★A PLUS全店NIKE5折up ★UV100防曬 $99免運 ★運動世界＄150領折 ★宅神也健身小物＄99免運 ★native shoes藝人最愛朝聖拖 ★Pump306最高折188 ★喬依比基尼 滿599送手機套  新進商店  INDULGENCE►萊爾富99免運 IronSteel安全鞋►萊爾富99免運 Juniper 朱尼博►萊爾富99免運         餐券/娛樂/旅遊餐券/娛樂/旅遊   分類  美食餐券 娛樂/生活/服務券 旅遊住宿券  本類推薦  📣  吃喝玩樂暑期全攻略 📣 『限量』饗食天堂餐券免運 『VIP』義大買1送7+快速通關 『預購』丹堤父親節蛋糕88折 『推薦』六福萬怡酒店下午茶 『搶先』六福水樂園299元 『熱賣』騎士堡3小時親子券 『FUN』劍湖山王子飯店住宿 激推品 ►遊樂園門票 激推品 ►親子住宿 激推品 ►高CP吃到飽 超贈點折抵首選★天仁/翰林    人氣商店  農場美食/田園1日遊 ►全台任選 奧塞美術館大展 ►門票即買即用 品花苑午晚餐吃到飽  ►599起 東森海洋4人住宿  ►25折 便利商店24H洗衣服 ► 3件369 日月潭碼頭水沙連飯店►湖景房 冷氣空調清洗►下殺55折 東森海洋4人住宿  ►25折 耐斯王子大飯店4人住宿►44折  新進商店  ♥指舞春秋 舒壓放鬆 ♥台灣農場趴趴走  體驗小小農夫 ♥葛洛莉spa萊爾富99免運         圖書/文具/影音圖書/文具/影音   分類  書籍/雜誌期刊 二手書專區 音樂/電影/影集 文具/辦公用品  本類推薦  ▶珍藏齊柏林 ►關西親子遊-金石堂滿700送70元 ►30色彩筆文具/手藝↘39 ►NORNS-迪士尼文具小物 ►3M生活-文具超值選$18起 ►DATABANK文具-第2件8折 ❤熱搜NO.1~紙膠帶 ❤熱搜NO.2~萬寶龍鋼筆 ❤熱搜NO.3~療癒小物 ❤熱搜NO.4~迪士尼 ❤熱搜NO.5~文創小物    人氣商店  ★讀冊5折up/萊爾富$99免運 ★金石堂-滿700送70元 ★城邦-滿499現折50元 ★大創萊爾富$99免運 ★bluecat萊爾富$99免運 ★書立得童書7折起 ★時報文化69折起 ★麥克英文有聲書78折起 ★今周刊全店免運  新進商店  芮菲客筆►萊爾富99免運 文禮學院►萊爾富99免運 易撕貼本鋪►萊爾富99免運       




書籍/雜誌期刊  文學(144126) 心理勵志(34506) 生活娛樂(56252) 自然科學(9998) 藝術設計(24550) 動/漫畫(69189) 親子童書(64510) 語言學習/字辭典(15961) 財經企管/商業理財(36081) 醫療保健(25168)   電腦資訊(5686) 人文歷史(28775) 社會科學(21745) 考試書/政府出版品(18062) 中外文雜誌期刊(5388) 原文書/外文書籍(675) 簡體書籍(91) 中文電子書(0) 原文電子書(0) 中文電子雜誌(2) 其他圖書(30354) 限制級書籍/寫真@(9435)     更多 
 二手書專區(201525) 音樂/電影/影集(79992) 文具/辦公用品(184254) 

 人氣店家  讀冊生活網路書店 金石堂網路書店 城邦讀書花園 時報文化 麥克兒童外文書店   書立得童書城 國考王 書寶二手書店 零國界二店     更多 

 熱門分類活動排行榜    1   愛閱節 滿499折50 滿888折100 城邦讀書花園     2   【教養X閱讀都是花時間的事】任選2書再95折！ TAAZE 讀冊生活網路書店     3   【暑假最夏趴】全館滿千送兔子收納式跳棋！ 玩得購網通購物生活館     4   【滿件贈】購物滿8件送小禮物1份 購潮8     5   夏日閱讀季，全館滿千折百大放送~! 書立得童書城     6   ★贈送滿額禮~ mama-papa親子網     7   夏季充電! 全館購書滿999.急降5%優惠 麥克兒童外文書店     8   FUN暑假，找回屬於小朋友的童心‧童樂 時報文化     9   正版卡通文具童書~5件75折 日月星媽咪寶貝館     10   購物滿999元，贈螢石半拋原礦 聖哲曼魔法屋     11   臺北童書城閱讀週 臺北童書城網路書店     12   鼎文公職助您掌握"先"機，即日起各類課程再享96折優惠 國考王     13   K's Kids滿兩件折5% 伯澄國際     14   精選雜誌★現折500元！ 逗點生活市集     15   線上特賣季~週末下殺四折起 麗翔親子館   


    超級商城開店說明會臺北場：7/12(星期三) 超級商城開店說明會臺中場：7/18 (星期二) 超級商城開店說明會高雄場：7/26 (星期三)  






     首頁        圖書/文具/影音       書籍/雜誌期刊       二手書專區   音樂/電影/影集   文具/辦公用品     

                 $ 237  教室裡的阿德勒         $ 300  走到哪玩到哪         $ 182  你不可以隨便摸我！         $ 316  跟著王宏哲，早期教育so easy！         $ 395  天天在家玩創藝                 $ 237  關西親子遊         $ 236  和雅菲一起做卡片         $ 300  經典不敗台式麵包         $ 284  我們都會好好的         $ 237  教室裡的阿德勒                 $ 314  白金數據         $ 291  教孩子學規矩         $ 299  來貘新定義         $ 276  第二次誕生         $ 235  學上當                 $ 60  書立得童書城         $ 315  粉紅豬小妹水洗書         $ 1,138  小雞妙妙的成長日記         $ 236  動物王國向前衝         $ 537  毛毛蟲嘉年華         第1頁，共4頁     

 促銷優惠        滿額    全館滿一千五再打9折!   9折  書立得童書城     好物    靈界的譯者   TOP  金石堂網路書店     好物    情緒勒索：那些在伴侶、親子、職場間，最讓   TOP  城邦讀書花園     好物    教養的秘密：無效管教Out ，科學育兒   TOP  TAAZE 讀冊生活網路書店     好物    如果有一天，我們說再見   TOP  金石堂網路書店     好物    1張瑜伽墊練肌力，成功瘦50公斤：過量運   TOP  TAAZE 讀冊生活網路書店         我要曝光｜第1頁，共1頁   

 註目推薦                       1 2 3          MUJI無印良品/書寫生活 MUJI無印良品      英文繪本說故事 麥克兒童外文書店      4~6歲童書 １６８幼福童書網‧童書嬰兒用品童裝      威利在哪裡？繽紛樂套書（共5冊 城邦讀書花園      哈哈英單7000：諧音、圖像記 金石堂網路書店      做工的人 TAAZE 讀冊生活網路書店      教養的秘密：無效管教Out ， 時報文化      《算股高手》的驚人財富翻倍術！ 城邦讀書花園      【今周特刊】省稅大作戰 今周刊網路商店      寫字書專區 TAAZE 讀冊生活網路書店            你的善良必須有點鋒芒：36則讓你有態度、不委曲，深諳世故卻不世故的世道智慧 $221 TAAZE 讀冊生活網路書店      室內設計手繪製圖必學1 平面、天花、剖立面圖：詳細解說輕重線條運用、人體工學、... $355  活動 $322起  城邦讀書花園      棉花糖女孩的逆襲：擊退33kg肥肉！改變飲食+超省錢簡單運動+顯瘦穿搭的小甜甜平民瘦身法 $308 金石堂網路書店      讓體脂肪及癌細胞消失的生酮飲食：只要多吃好肉及大量蔬菜、菇類，讓體內生酮，再.. $253 TAAZE 讀冊生活網路書店      情緒勒索：那些在伴侶、親子、職場間，最讓人窒息的相處 $245 TAAZE 讀冊生活網路書店      情緒勒索：那些在伴侶、親子、職場間，最讓人窒息的相處 $244  活動 $219起  城邦讀書花園      教養的秘密：無效管教Out ，科學育兒 In，兒童發展專家王宏哲的新世代教養術（隨書... $314  活動 $281起  城邦讀書花園      知識大富翁(DIY手作桌遊） $236 TAAZE 讀冊生活網路書店      棉花糖女孩的逆襲：擊退33kg肥肉！改變飲食＋超省錢簡單運動＋顯瘦穿搭的小甜甜平... $307  活動 $274起  城邦讀書花園      蒙特梭利專家親授！教孩子學規矩一點也不難：淡定面對0～6歲孩子的情緒勒索，不用... $291  活動 $266起  城邦讀書花園      終生瘦用 211全平衡瘦身法 $299  活動 $266起  城邦讀書花園      被討厭的勇氣：自我啟發之父「阿德勒」的教導 $237 TAAZE 讀冊生活網路書店                           第1頁，共20頁   

 品牌主打          城邦讀書花園 提供全國圖書的詳細介紹，為您提供全方位閱讀方案的網路書店。        NG書城 本館提供讀者尋書及購買新書的服務~購物滿489元，一律免收運費        金石堂網路書店 金石堂網路書店★中文新書79折起｜每日66折｜暢銷排行榜｜雜誌            書立得童書城 擁有豐富童書各類兒童、親子教養類書籍，歡迎參觀選購!        TAAZE 讀冊生活網路書店 新書79折！二手書1折起！宅配滿千免運｜超商取貨350免運費        麥克兒童外文書店 專營英文繪本.幼兒童書.英文書+CD.培養孩子的英語耳朵.          我要曝光｜第1頁，共2頁    
 發燒速遞      超人氣小雞幸福書包(5冊合售)  $1,098   活動$989起  書立得童書城      猜猜我在比什麼？  $188   活動$170起  書立得童書城      你的名字  $ 221  TAAZE 讀冊生活網路書店      女演員  $ 237  金石堂網路書店      【今周刊1058期】會填息的股票這樣挑  $ 80  今周刊網路商店      孤單又燦爛的神：鬼怪 Dokebi 寫真散文  $ 590  金石堂網路書店       我要曝光  

 銷售排行    ★人氣熱銷分類★  美體★瘦身就是美 理財★這樣變有錢 暢銷★冠軍勵志書 超實用★保健知識 親子★童書時光 國考★必勝秘笈            1    你的善良必須有點鋒芒：36則讓你有態度、不委曲，深諳世故卻不世故的世道智慧 $ 221 TAAZE 讀冊生活網路書店     2    室內設計手繪製圖必學1 平面、天花、剖立面圖：詳細解說輕重線條運用、人體工學、... $ 355 城邦讀書花園     3    棉花糖女孩的逆襲：擊退33kg肥肉！改變飲食+超省錢簡單運動+顯瘦穿搭的小甜甜平民瘦身法 $ 308 金石堂網路書店     4    讓體脂肪及癌細胞消失的生酮飲食：只要多吃好肉及大量蔬菜、菇類，讓體內生酮，再.. $ 253 TAAZE 讀冊生活網路書店     5    情緒勒索：那些在伴侶、親子、職場間，最讓人窒息的相處 $ 245 TAAZE 讀冊生活網路書店         6    教養的秘密：無效管教Out ，科學育兒 In，兒童發展專家王宏哲的新世代教養術（隨書... $ 314 城邦讀書花園     7    棉花糖女孩的逆襲：擊退33kg肥肉！改變飲食＋超省錢簡單運動＋顯瘦穿搭的小甜甜平... $ 307 城邦讀書花園     8    知識大富翁(DIY手作桌遊） $ 236 TAAZE 讀冊生活網路書店     9    終生瘦用 211全平衡瘦身法 $ 299 城邦讀書花園     10    蒙特梭利專家親授！教孩子學規矩一點也不難：淡定面對0～6歲孩子的情緒勒索，不用... $ 291 城邦讀書花園         11    被討厭的勇氣：自我啟發之父「阿德勒」的教導 $ 237 TAAZE 讀冊生活網路書店     12    從土地到餐桌上的恐慌：揭露與理解我們的食品安全到底哪裡出了錯 $ 237 城邦讀書花園     13    神奇的肌筋膜酸痛自療法〔增訂版〕：鬆開10個關鍵點，解決難治性疼痛 $ 299 城邦讀書花園     14    我可以心甘情願，但你不能理所當然 $ 261 金石堂網路書店     15    你的善良必須有點鋒芒：36則讓你有態度、不委曲，深諳世故卻不世故的世道智慧 $ 221 金石堂網路書店         16    高手的養成：股市新手必須知道的3個祕密 $ 394 城邦讀書花園     17    英語每日一滴：IG最夯，學校不教，聊天、搭訕、吐槽都有戲 $ 252 城邦讀書花園     18    我們都會好好的：不安沒關係，脆弱與寂寞也沒關係，今天的你會很好，明天也是 $ 283 城邦讀書花園     19    情緒勒索：那些在伴侶、親子、職場間，最讓人窒息的相處 $ 245 金石堂網路書店     20    ETF煉金術：狠賺全球波段財 $ 236 城邦讀書花園         21    別讓現在的壞事，趕走未來的好事 $ 260 城邦讀書花園     22    只買4支股，年賺18％ $ 253 金石堂網路書店     23    房思琪的初戀樂園 $ 253 金石堂網路書店     24    科學氣功：李嗣涔博士30年親身實證，每天10分鐘，通經絡袪百病（超值收錄30分鐘科... $ 299 城邦讀書花園     25    你的善良必須有點鋒芒：36則讓你有態度、不委曲，深諳世故卻不世故的世道智慧 $ 220 城邦讀書花園         26    完全圖解1小時學會英文文法 $ 276 TAAZE 讀冊生活網路書店     27    每天3行，寫小日記練出好英文：天天寫短句，訓練用「英文思考」的大腦，程度突飛猛進.. $ 253 TAAZE 讀冊生活網路書店     28    (許又天姓名學)算算您的職場運勢! $ 99 DESiRAY黛絲芮     29    MONEY錢特刊：籌碼K線滾錢術5 $ 134 TAAZE 讀冊生活網路書店     30    美好的愛，是先給自己幸福 $ 292 金石堂網路書店         第1頁，共6頁         親子陪伴不能等  繪本/圖畫書 遊戲書 有聲書 啟蒙成長            1    教養的秘密：無效管教Out ，科學育兒 In，兒童發展專家王宏哲的新世代教養術（隨書... $ 314 城邦讀書花園     2    知識大富翁(DIY手作桌遊） $ 236 TAAZE 讀冊生活網路書店     3    蒙特梭利專家親授！教孩子學規矩一點也不難：淡定面對0～6歲孩子的情緒勒索，不用... $ 291 城邦讀書花園     4    詩魂：仙靈傳奇（1） $ 300 TAAZE 讀冊生活網路書店     5    謝謝你來當我的寶貝 $ 198 TAAZE 讀冊生活網路書店         6    教出情緒不暴走的孩子暢銷修訂版：人氣諮商心理師的36堂高效能情緒教養課，幫助父... $ 268 城邦讀書花園     7    詞靈：仙靈傳奇（2） $ 300 TAAZE 讀冊生活網路書店     8    男生小雞雞 $ 90 TAAZE 讀冊生活網路書店     9    戒吃、戒抓，告別異位性皮膚炎：臺大過敏免疫風濕科權威醫師＆商業周刊百大良醫的... $ 220 城邦讀書花園     10    風車童書-波波熊學穿衣 $ 295 伯澄國際         11    原來科普這麼有趣套書（共2冊）：原來科學這麼好玩/原來數學這麼漂亮 $ 552 TAAZE 讀冊生活網路書店     12    兒歌歡唱繪本 風車童書  (購潮8) $ 250 購潮8     13    小王子 $ 221 TAAZE 讀冊生活網路書店     14    【店長強力推薦!! 】《按鍵聲音小書》LISTEN TO THE MUSIC /樂器篇 $ 335 麥克兒童外文書店     15    『繪本123‧吳敏蘭老師書單』-- NO DAVID /英文繪本 $ 164 麥克兒童外文書店         16    小雨麻的副食品全紀錄(2015增修版)：158道寶寶超愛的當令食譜，過敏兒這樣吃也沒問... $ 315 城邦讀書花園     17    每天15分鐘，動出孩子的專註力 $ 237 TAAZE 讀冊生活網路書店     18    青春修鍊40堂課 $ 198 TAAZE 讀冊生活網路書店     19    成語故事：小學生必讀經典文學 $ 126 TAAZE 讀冊生活網路書店     20    上誼/信誼 可愛的動物-觸覺書 $ 176 麗兒採家.         21    屁屁偵探  噗噗！世紀怪盜現身！ $ 221 TAAZE 讀冊生活網路書店     22    名著大家讀 世界著名故事70篇(經典故事、偉人傳記、星座神話、知名故事，共4冊) $ 952 １６８幼福童書網‧童書嬰兒用品童裝     23    【粉紅豬小妹。大開本聲音書】PEPPAS SUPER NOISY SOUND BOOK $ 536 麥克兒童外文書店     24    球球館 快樂創意圓圓貼(全4冊，無盒) $ 99 mama-papa親子網     25    立體小手工：玩具【立體勞作書】 $ 62 書立得童書城         26    筆順練習簿 $ 22 TAAZE 讀冊生活網路書店     27    【Bizzy Bear 可愛操作書】BIZZY BEAR: OFF WE GO /硬頁書 $ 216 麥克兒童外文書店     28    幾何魔術棒(收納箱) $ 236 １６８幼福童書網‧童書嬰兒用品童裝     29    屁屁偵探讀本 紫衣夫人的暗號事件 $ 221 TAAZE 讀冊生活網路書店     30    新生兒父母手冊（新世代增訂版）：0~12個月寶寶的學習發展與健康照顧 $ 474 TAAZE 讀冊生活網路書店         第1頁，共6頁         美容保養控  零失敗眼妝技巧 拯救！3C惡視力 吃出好氣色好體質 逆齡美顏按摩            1    精油圖鑑——150種最佳芳療精油圖解指南 $ 356 城邦讀書花園     2    In Red 7月號2017【附嚕嚕米×Adam et Rope Le Magasin聯名小不點涼風托特包.保冷拉鍊袋】 $ 317 金石堂網路書店     3    COMME des GARCONS研究 $ 237 金石堂網路書店     4    神奇的提拉美溫感石 每天3分鐘U臉變V臉，去斑除皺消浮腫，還能重現全身顯瘦線條.. $ 284 TAAZE 讀冊生活網路書店     5    sweet 7月號2017【附snidel 迷你波士頓包】 $ 317 金石堂網路書店         6    韓國家事女王的10分鐘聰明打掃術：1天1次1空間，絕對不疲累！年終不必大掃除，永 $ 355 金石堂網路書店     7    零橘皮組織按摩：只要伸展+揉壓，4週剷除多餘脂肪，不必運動就能瘦 $ 252 城邦讀書花園     8    Oh！My 立體無瑕4K女神妝：5大季節色系+7大基礎全臉妝+16款變化技巧妝效，超越日.. $ 263 TAAZE 讀冊生活網路書店     9    型人風潮！365天的平價時尚穿搭術：日本超人氣部落客教你這樣穿，只要Uniqlo、 無.. $ 236 TAAZE 讀冊生活網路書店     10    芳療香草‧慢生活：NHK人氣節目、英國香草專家親繪300張插畫＆精美圖，70種香 $ 458 金石堂網路書店         11    麻理惠的整理魔法：108項技巧全圖解 $ 237 金石堂網路書店     12    型人風潮！365天的平價時尚穿搭術：日本超人氣部落客教你這樣穿，只要Uniqlo $ 236 金石堂網路書店     13    大饅大力網購穿搭聖經：跟上歐美日韓時尚潮流，百大質感品牌×旅行生活指南 $ 240 金石堂網路書店     14    貪玩美：莫莉的享瘦塑身書 $ 299 城邦讀書花園     15    西裝的鐵則 $ 300 金石堂網路書店         16    好感穿搭 $ 253 金石堂網路書店     17    瘦得有態度：王麗雅的健美筆記（內附20分鐘馬甲線x蜜桃臀 S曲線特訓班Step By Step... $ 276 城邦讀書花園     18    一休陪你一起愛瘦身：5個燃脂動作，甩肉25公斤，線條再升級！（附一休示範大全集DV... $ 299 城邦讀書花園     19    讓男孩們瞬間戀愛的韓系好感妝 $ 283 城邦讀書花園     20    清水洗臉，一生美肌：看診突破百萬人次的日本皮膚科名醫教你破除保養迷思，4步驟輕... $ 190 城邦讀書花園         21    Forever chic：那些法國女人天生就懂的事－－從保養、妝髮、飲食、運動、穿搭到生... $ 276 城邦讀書花園     22    萌系！自拍臉讚妝：韓妞都在畫，日本女生搶著學！仿妝女王教你偽素顏真裸妝的聰明美妝 $ 221 金石堂網路書店     23    戴美瑩《珍藏版》梳編盤髮造型 $ 1,738 金石堂網路書店     24    水噹噹美人餐 $ 253 金石堂網路書店     25    剪髮造型設計實務 $ 312 金石堂網路書店         26    韓國化妝女王Pony’s超正女神妝：4大色系＋43款妝容，打造完美韓妞全臉妝！（附贈：90分鐘... $ 282 TAAZE 讀冊生活網路書店     27    給全家人的芳香療法入門 $ 221 TAAZE 讀冊生活網路書店     28    經筋美容絕學 $ 194 TAAZE 讀冊生活網路書店     29    Forever chic：那些法國女人天生就懂的事－－從保養、妝髮、飲食、運動、穿搭到生活哲.. $ 308 TAAZE 讀冊生活網路書店     30    讓男孩們瞬間戀愛的韓系好感妝 $ 238 金石堂網路書店         第1頁，共6頁         旅遊/運動休閒  日本!最愛旅遊勝地 第1次自助遊超簡單 吃遍美食玩透透 最夯懶人食譜DIY            1    棉花糖女孩的逆襲：擊退33kg肥肉！改變飲食+超省錢簡單運動+顯瘦穿搭的小甜甜平民瘦身法 $ 308 金石堂網路書店     2    1張瑜伽墊練肌力，成功瘦50公斤：過量運動不會瘦，養肌肉才會一直瘦下去！每天堅持.. $ 300 TAAZE 讀冊生活網路書店     3    史蒂芬．柯瑞：無所不能的NBA神射手 $ 299 城邦讀書花園     4    1082萬次轉動 $ 300 TAAZE 讀冊生活網路書店     5    航海環球夢：花小錢也能享受郵輪生活環遊世界！ $ 315 城邦讀書花園         6    去日本自助旅行！給超新手的旅遊密技全圖解：交通攻略X食宿玩買X旅程規劃，有問必... $ 252 城邦讀書花園     7    遊樂園：親子旅遊團長小禎最強樂園攻略！機票、門票一起撿便宜，嗨玩16座世界樂園... $ 307 城邦讀書花園     8    走進英雄島：金門戰地巡禮之旅 $ 334 TAAZE 讀冊生活網路書店     9    大首爾攻略完全制霸2017-2018 $ 332 NG書城     10    不多走冤枉路！不多花一毛錢！－跟著小氣少年自由行大阪．神戶．奈良（附行動地圖集.. $ 315 TAAZE 讀冊生活網路書店         11    秘魯自助全攻略 $ 299 TAAZE 讀冊生活網路書店     12    米粒Q的巴黎私心瘋 $ 355 城邦讀書花園     13    東京旅遊全攻略(2017 18年版)第64刷 $ 387 金石堂網路書店     14    搭地鐵玩遍上海（新第六版） $ 277 TAAZE 讀冊生活網路書店     15    克羅埃西亞．斯洛維尼亞．蒙特內哥羅 $ 331 城邦讀書花園         16    沖繩 地球步方MOOK 2017-18最新版 $ 252 城邦讀書花園     17    享受吧，倫敦小旅行：10種散步路線，200個最in景點 $ 315 TAAZE 讀冊生活網路書店     18    東京近郊旅遊全攻略（第2刷） $ 387 TAAZE 讀冊生活網路書店     19    東京超導覽 2017 $ 356 金石堂網路書店     20    澳洲東岸(2017 18 最新版) $ 299 金石堂網路書店         21    史蒂芬．柯瑞：無所不能的NBA神射手 $ 300 金石堂網路書店     22    大阪自由行全攻略 $ 253 金石堂網路書店     23    完勝馬拉松 SUB3達陣計畫！ $ 213 TAAZE 讀冊生活網路書店     24    日本東北深度之旅：青森．宮城．岩手．秋田．山形．福島(附函館．木) $ 379 金石堂網路書店     25    京阪神旅遊全攻略2017 18年版(19刷) $ 387 金石堂網路書店         26    開始在關西自助旅行 $ 308 TAAZE 讀冊生活網路書店     27    下飛機Day by Day，愛上京‧阪‧神‧奈 $ 261 TAAZE 讀冊生活網路書店     28    自助遊一本就GO！麗江深度遊最強地圖導航書 $ 221 TAAZE 讀冊生活網路書店     29    沖繩(2017年全新上市)JTB Publishing  Inc. $ 236 金石堂網路書店     30    小公主的奇幻旅程 $ 422 TAAZE 讀冊生活網路書店         第1頁，共6頁         文青最愛現代文學  網友爆笑按讚！ HOT電影相關書籍 總裁~愛情文藝小說 人氣動/漫畫            1    房思琪的初戀樂園 $ 253 金石堂網路書店     2    黑白猜不猜 $ 220 城邦讀書花園     3    (現貨/正版) 房思琪的初戀樂園  華文創作小說書 作者林奕含 游擊文化 (OS小舖) $ 226 OS 小舖     4    白金數據 $ 314 城邦讀書花園     5    解憂雜貨店 $ 277 金石堂網路書店         6    從你的全世界路過 $ 269 TAAZE 讀冊生活網路書店     7    花甲男孩（增訂新版） $ 237 TAAZE 讀冊生活網路書店     8    羊與鋼之森 $ 236 城邦讀書花園     9    【現貨免運】房思琪的初戀樂園 華文創作小說書 (購潮8) $ 253 購潮8     10    哈利波特（8）：被詛咒的孩子【原著劇本特別排演版】 $ 331 城邦讀書花園         11    轉學生的惡作劇：穿越時空找回勇氣的成長冒險旅程 $ 221 TAAZE 讀冊生活網路書店     12    小王子 【70周年精裝紀念版】 $ 198 TAAZE 讀冊生活網路書店     13    安妮日記【獨家授權‧70週年紀念典藏版】 $ 253 TAAZE 讀冊生活網路書店     14    精靈使的劍舞 (首刷限定版) 16.魔王凱旋 $ 366 金石堂網路書店     15    水問 $ 202 TAAZE 讀冊生活網路書店         16    天橋上的魔術師 $ 221 TAAZE 讀冊生活網路書店     17    妖怪公館的新房客（10） $ 194 TAAZE 讀冊生活網路書店     18    最好別想起 $ 299 城邦讀書花園     19    探病：禁忌錄 $ 181 金石堂網路書店     20    剪刀石頭布 $ 212 城邦讀書花園         21    迫害效應 $ 221 城邦讀書花園     22    人生複本 $ 307 城邦讀書花園     23    你走慢了我的時間 $ 269 TAAZE 讀冊生活網路書店     24    無盡之境02：追尋 $ 197 城邦讀書花園     25    有個秘密，叫初戀 $ 141 城邦讀書花園         26    #愛過以後忘記的事 $ 237 TAAZE 讀冊生活網路書店     27    三生三世枕上書【終篇】 $ 236 金石堂網路書店     28    房思琪的初戀樂園 $ 253 TAAZE 讀冊生活網路書店     29    迷路天堂 $ 197 城邦讀書花園     30    紙星星 $ 220 城邦讀書花園         第1頁，共6頁         考試書/政府出版品  國家考試 升學考試 教科書/參考書 資格檢定/證照            1    國考申論式空白作答紙(6份) $ 31 三民輔考資訊有限公司     2    這是一本社會學解題書 $ 450 TAAZE 讀冊生活網路書店     3    高普特考2017試題大補帖【文化資產概論與法規】(97~105年試題)三等 $ 255 金石堂網路書店     4    高中7000字隨身背 $ 162 TAAZE 讀冊生活網路書店     5    【105年全新適用版】民法與信託法概要(地政士考試適用)(贈地政士專業科目模擬試.. $ 405 TAAZE 讀冊生活網路書店         6    【105年全新適用版】土地法規(地政士考試適用)(贈地政士專業科目模擬試捲) $ 282 TAAZE 讀冊生活網路書店     7    【105年全新適用版】土地稅法規(含房地合一稅)(地政士考試適用)(贈地政士專業科.. $ 317 TAAZE 讀冊生活網路書店     8    國中會考滿分祕笈（英語閱讀）第2版 $ 260 TAAZE 讀冊生活網路書店     9    會計事務丙級檢定學科試題解析 $ 186 TAAZE 讀冊生活網路書店     10    大學化學實驗一暨實驗二（第四版） $ 308 TAAZE 讀冊生活網路書店         11    行政法‧寶 終極十講-2015秋冬版-各類科適用 $ 540 TAAZE 讀冊生活網路書店     12    乙級電腦輔助機械設計製圖學科題庫必通解析：2015年（附贈OTAS題測系統） $ 270 TAAZE 讀冊生活網路書店     13    企業管理精修 $ 396 TAAZE 讀冊生活網路書店     14    汽車駕照應考手冊 $ 229 TAAZE 讀冊生活網路書店     15    照顧服務員單一級檢定學術科應試指南 $ 475 TAAZE 讀冊生活網路書店         16    乙級汽車修護技能檢定學科題庫整理與分析（2015最新版） $ 190 TAAZE 讀冊生活網路書店     17    深入淺出零件設計SolidWorks 2012（附動態影音教學光碟） $ 694 TAAZE 讀冊生活網路書店     18    必備國中單字片語隨身讀 $ 131 TAAZE 讀冊生活網路書店     19    計算機概論升學寶典2018年版（商管群與外語群計）-升科大四技 $ 414 TAAZE 讀冊生活網路書店     20    丙級會計事務(人工記帳)術科通關寶典含解析本-第四版 $ 216 TAAZE 讀冊生活網路書店         21    【鼎文公職】6W11中華電信工務類:工務類：專業職(四)第二類專員（線路維護）套書 $ 1,050 國考王     22    丙級電腦軟體應用學科題庫工作項目解析 2017年版(附贈OTAS題測系統) $ 113 金石堂網路書店     23    【106年全新改版】自來水評價人員共同科目20天上榜速成(年年銷售冠軍，上榜生口碑推薦)(Q009E17-1) $ 411 三民輔考資訊有限公司     24    106年臺灣銀行[一般金融人員][專業科目]套書(S056F17-1) $ 1,051 三民輔考資訊有限公司     25    【106年最新版】郵政三法搶分小法典(含重點標示+精選試題747題)(中華郵政(郵局)考試適用) $ 198 三民輔考資訊有限公司         26    社會福利服務 搶分題庫（五版） $ 277 TAAZE 讀冊生活網路書店     27    國文(論文寫作)[台電、中油、中鋼、捷運、中華電信] $ 315 金石堂網路書店     28    文化行政類專業科目(五)歷屆試題精闢新解【藝術概論】 $ 308 TAAZE 讀冊生活網路書店     29    【鼎文公職‧國考直營】1U43- 消防設備士歷屆試題精解 $ 413 國考王     30    國中會考作文高分挑戰（第3版） $ 209 TAAZE 讀冊生活網路書店         第1頁，共6頁     

              


 



付款方式

超商取貨付款
信用卡分期
信用卡紅利折抵
ATM



會員專區

我的帳戶
折價券查詢
電子報訂閱/取消
如何獲得超贈點



客戶服務

新手上路
常見問題
退貨辦法
註冊








交易安全
金流代收最安心



7日鑑賞
退貨免運費



優良商店
商店評核制度




B 0 0 0 0 1 0 ( 0 1 )







  關閉


ga conf






    手機逛超級商城 加入超級商城粉絲團 退貨辦法 服務說明 我要開店     服務條款 隱私權   






































電腦資訊 (書籍/雜誌期刊) - Yahoo奇摩超級商城 


























   首頁 購物中心 拍賣 中古車 折扣城 信箱 App下載 


  Yahoo!奇摩超級商城        電腦資訊    全部分類      電腦資訊                
          我的商城     購物車清單 我的最愛 收藏商品 超贈點 折價券 我的專屬優惠 商店客服 超級商城公告    | 登入     訂單查詢     出貨進度 退換申請 發票查詢 新手上路 常見問題          商品分類 逛商店    漢神百貨  流行館  型男館  熱銷榜  折扣城  聯名卡  超贈點         登入後可收藏最愛商店    
 






     服飾服飾   分類  漢神百貨品牌服飾 漢神百貨內睡衣 流行女裝 中大尺碼女裝(M-7L) 女性內睡衣 品牌/潮流男裝  本類推薦  ★ 夏日玩色穿搭5折起 ★ 質 感 女 裝 推 薦 LIST ★ ★MOMA旗艦館：新品上市 ★a la sha：滿2000現折200 ★cantwo：網路獨家均一價 網友熱搜TOP1．洋裝 網友熱搜TOP2．背心 網友熱搜TOP3．寬褲 7/25前抽渡邊直美代言淨味劑 機能內衣超值★專區5折up 型男夏日穿搭★均一價199up    人氣商店  糖罐子►超取99元免運費 Miu-Star►50元券現領現折 東京著衣►100元券現領現折 設計家 原創風格►全店69折 TMH 好評女裝►全店88折 LAMECHIC►5折回饋專區 Life8►居家系列5折 OB大尺碼►襯衫均一價269 Peach Love►全店5折  新進商店  金安德森►萊爾富99免運 新時尚►萊爾富99免運 MOMA►萊爾富99免運         美妝美妝   分類  漢神百貨美妝保養 專櫃美妝/香水 開架美妝/藥妝 美體/私密/手足保養 香氛沐浴/髮品/假髮  本類推薦  2017防曬大集合►看更多 專櫃美妝香水►滿1500打88折 代購超紅►The saem遮瑕膏免運 beautyblender►15周年限定 口紅鎖色神器►怎麼吃喝都不掉色 ★薇佳100元現領現折★ =====本週熱搜關鍵字===== 熱搜No.1 ♥ SOFINA妝前乳 熱搜No.2 ♥ 香水 熱搜No.3 ♥ 法婡雅    人氣商店  86小舖►萊爾富99免運 屈臣氏►現折$50 康是美►滿千折百 小三美日►萊爾富99免運 寶拉珍選►專區79折 薇姿VICHY►100元券現領現折 巴黎萊雅►彩妝85折 無印良品►滿700折50 巴黎草莓►萊爾富99免運  新進商店  三原水►萊爾富99免運 純淨佳人►去角質買一送一免運 聯合利華►開幕慶現折50元         鞋包/精品/配飾鞋包/精品/配飾   分類  漢神百貨精品珠寶 漢神百貨鞋包配飾 國際精品 品牌鞋包 流行女包/皮夾 流行女鞋 型男鞋包配件 手錶 珠寶/ 飾品/配件  本類推薦  ☀質感穿搭真皮鞋包5折起 ☀新鮮人好感度up穿搭特輯 ☀放暑出遊鞋包全攻略 ☀玩色夏日！50%off 年終優選．潮流時尚單品 ★夏日配飾★新品299起 ★施華洛世奇★開幕慶限時超贈點5倍送 ★型男配件↘精選店家五折起    人氣商店  Pixy►全店任2件79折 天藍小舖►任選2件398 Ann'S►涼鞋季9折 Sophie&Sam►兩雙1500 MAGY瑪格►開幕慶百款$990 FOSSIL►熱銷男夾7折 大新莊鐘錶►MK錶享87折 施華洛世奇►超贈點5倍送+獨家滿額贈 周大福►小小兵黃金現折388  新進商店  Kwoomi►萊爾富99免運 時光鐘錶►萊爾富99免運 OSEWAYA►萊爾富99免運         媽咪寶貝媽咪寶貝   分類  漢神百貨媽咪寶貝 童裝/媽咪裝 寶貝媽咪用品  本類推薦  ▶尿布特賣最低800up ▶新手媽咪懶人包特搜 ▶寶貝玩水必備79折up ＝＝＝夏季熱搜榜＝＝＝ 熱搜推薦 ▶ 涼鞋 熱搜推薦 ▶ 泳裝 熱搜推薦 ▶ 地墊 熱搜推薦 ▶ 費雪 熱搜推薦 ▶ 學步鞋 熱搜推薦 ▶ 親子裝 熱搜推薦 ▶ 哺乳衣 熱搜推薦 ▶ 帽子    人氣商店  AIB小舖☛限時任2件69折 米妮希望屋☛新品79折 QB allshine☛童裝均一價$99 美國派☛新品折後$166/件 baby童衣☛人氣童裝任選65折 拍手童裝☛全館滿699現折100 母嬰同室☛涼感包巾第二件5折 哈韓孕媽咪☛哺乳衣任選79折 橘魔法☛涼鞋第二件76折  新進商店  魔幻甜心►萊爾富99免運 時尚寶貝►萊爾富99免運 UNICO-LIFE►萊爾富99免運         電腦/週邊電腦/週邊   分類  Apple 專區 平板/NB/PC 週邊設備/零組件  本類推薦  【爆殺】微軟藍芽滑鼠↘990 全新SurfacePro↘31888 iPad 9.7吋 WIFI↘10300 ZENBOOK雙碟版↘129990 小米智能攝影機↘1049 4G獨顯i7電競筆電↘36900 EPSON三合一印表機↘4190 128G金屬防水隨身碟↘249 SanDisk雙用隨身碟↘1090 Intuos創意觸控繪圖板↘3400 華碩雙頻IP分享器↘2290 NEW! 小學堂♥雷射印表機    人氣商店  三井3C►買品牌印表機送咖啡券 每家比電子►全館結帳2%回饋! 紐頓e世界►買繪圖板送電影票 浩昇科技►EPSON原廠匣95折 台灣奇茂購物►全館最高折200 PC PARTY►雷蛇煉獄奎蛇7折 雙飛燕►全館滿999折99元 科大電腦►全館滿2千折150元 彩虹3C►專區滿3千折300元  新進商店  Luminee►萊爾富99免運 嗨殼F巷►萊爾富99免運 達墨精品3C►萊爾富99免運         家電/視聽家電/視聽   分類  生活/廚房家電 電視/影音/耳機 冷氣/冰箱/洗衣機  本類推薦  強檔▶父親節採購指南討爹歡心 強檔▶揪感心空調讓老爸超涼爽 好康☛四合一移動式空調8,099 好康☛超急速降溫水冷扇1,380 好康☛盛夏必備款冷凍櫃6,830 好康☛三洋11(kg)媽媽樂 7,800 新奇☛鬼怪男代言清淨機8,600 新奇☛極淨水過濾吸塵器6,699 送88☛千尋盒子下單秒出2,490 送88☛Sony 暢銷耳罩耳機 749 送88☛買刮鬍刀送吹風機4,980 送88☛全自動研磨咖啡機1,580    人氣商店  封館殺9折+狂賀開店60年：德昌 滿額折500+空調兩天快裝：翠亨 滿額折300+空調兩天快裝：上新 滿額折300+樂金家電狠殺：神坊 滿額折300+大同電鍋很俗：雙喬 滿額折300+藍芽無線耳機：無線 滿額折300+女神必備品：沛莉緹 滿額折300+專業溫控烤箱：山崎 滿額折300+直流扇破盤價：凱創  新進商店  濾網88折+助你對抗PM25：綠能 滿額折300+專賣佰元風扇：雅山 現領折200+就是折奇美：大碗公         相機/手機/玩具相機/手機/玩具   分類  單眼相機/鏡頭 數位相機/拍立得 相機週邊 手機 手機配件/通訊 電玩/玩具  本類推薦  ☞新品NEW²報首刊▼幾何手機殼 ★小小兵拍立得↘3590現貨 ★小米夜視攝影↘1100免運 ★SONY運動攝影↘10900免運 ★DJI  SPARK↘15500現貨! ★血氧血壓智能手環↘849起 ★小米1000mah電源↘499 ★暑假瘋玩 熱銷桌遊↘299 ★bitplayd照相手機殼↘1280 ★NOKIA 5 現貨↘5390 ★夏日戲水用玩具↘79起 ★暑假瘋玩 熱銷桌遊↘299    人氣商店  東菱數位科技➤GH5現貨零利率 WL數碼達人➤蔡司鏡頭現折8800元 SG➤全館配件滿6百現折100 一手流通➤手機滿3千現折350 帝谷通信➤OPPO A57$6988 GOSHOP➤小米手環現折$50 數位風潮➤美肌自拍桿買1送1 龐奇桌遊➤滿千折百 再送桌遊 funbox➤全館滿888送$100禮券  新進商店  放肆購►萊爾富99免運 Nydus►萊爾富99免運 亞果元素►全館免運         美食/纖體/保健美食/纖體/保健   分類  漢神百貨美食街 美顏美體/營養保健 冷凍/生鮮/甜點 小吃熟食/糕餅/零食 飲料/食材/雜貨 有機食品  本類推薦  oh爸男神★美食x保健滿千88折! 健康美麗迎夏日★保健熱銷榜 異國零食特搜No1★限時87折! 閨月表達孝心★豬腳麵線No.1 ★網友熱搜=88節蛋糕早鳥預購 ★網友熱搜=小小兵起司拉麵 ★網友熱搜=曾粉 海味叻沙 ★網友熱搜=芒果青冰 ★網友熱搜=愛文芒果 ★網友熱搜=亞培安素2箱立即送 ★網友熱搜=辣炒年糕點心麵 ★網友熱搜=老協珍滴雞精    人氣商店  亞尼克★現領現折50元 愛買★好友週任2件88折 每日優果★全館滿千88折 夢甜屋★生乳捲任2條699免運 大樂購物中心★全館滿千折百 煲好湯★全館滿千88折 飲食生活家★亞培成人系列95折 Double手法式甜點★全館8折 橙姑娘★梅精買五送一  新進商店  青鳥旅行►萊爾富99免運 甜園小舖►萊爾富99免運 豆嫂的零食►萊爾富99免運         醫療/日用品/寵物醫療/日用品/寵物   分類  醫療用品/器材 生活百貨/日用品 寵物/水族用品  本類推薦  ▶一點絕！領券後＄922 ▶開幕慶～熊寶貝買1送6 ▶Durex旗艦店 $ 50領折 ▶愛康衛生棉～再也回不去 熱搜字 ❤ 梅雨季_除濕防霉 熱搜字 ❤ 防蚊 熱搜字 ❤ 液體衛生棉 熱搜字 ❤ 保險套 寵物熱搜❤ 涼墊 寵物熱搜❤推車 寵物熱搜❤ 除臭吸水尿布 寵物熱搜❤ 低粉塵貓砂    人氣商店  ★屈臣氏指定商品75折 ★ASAP天天領50折券 ★康是美＄50領折 ★雙寶醫療 ＄100領折 ★康諾醫療＄100領折 ★維康醫療護具88折 寵物夢工廠►全店滿千折百 King Wang 精品館►滿額送贈品 培菓平價寵物網►全店95折  新進商店  快意生活►萊爾富99免運 木酢達人►萊爾富99免運 派對盒►萊爾富99免運         居家/寢具/傢具居家/寢具/傢具   分類  漢神百貨居家生活 居家/雜貨/園藝 寢具/家飾 傢俱/收納/床墊 廚房鍋具/餐具/用品 衛浴設備/浴室用品 五金/照明工具  本類推薦  酷涼冰沙杯★ 居家好物5折up 蛋黃哥玻璃杯★ 88折＆免運 涼夏消暑首選★ 冰沙杯$63/瓶 涼夏杯具組★ 任選62折 晴雨小幫手★ 遮陽傘↘6折 熱搜字 ❤  鞋櫃 熱搜字 ❤  衣櫃 熱搜字 ❤ 沙發床 熱搜字 ❤  毯/被子 熱搜字 ❤ 天絲（床組）    人氣商店  H&D東稻家居 ♥ 專區86折 翔仔居家 ♥ 新品享85折 完美主義 ♥ 收納盒系列2件79折 棉床本舖 ♥ 滿990送德國兔 收納專科 ♥ 專區最高折1000 戀家小舖 ♥ 簡約素色款9折 Modern Deco ♥ 全館79折 HOLA ♥ 全館滿千折100 特力屋 ♥ 全館滿千折100  新進商店  漫生活居家►萊爾富99免運 OH!Show►萊爾富99免運 易奇寶居家►萊爾富99免運         運動/戶外/交通運動/戶外/交通   分類  漢神百貨休閒運動 腳踏車/汽機車精品 運動器材/用品 運動鞋/服飾/包包 戶外用品/行李箱 樂器 18禁專區  本類推薦  ►Outdoor控●完全指南5折up ►Summer趴～IG拍照打卡特輯 熱搜關鍵字 ❤ FUN暑假全攻略 ►女人節目●Puma緞帶鞋均一價 ►夏季露營趣●Coleman78折up 熱搜關鍵字 ❤ 比基尼 熱搜關鍵字 ❤ 運動風 熱搜關鍵字 ❤ 防曬穿搭 熱搜關鍵字 ❤ 行李箱 熱搜關鍵字 ❤ 腳踏車    人氣商店  ★SKECHER旗艦店最低55折 ★TheNorthFace新品2件85折 ★A PLUS全店NIKE5折up ★UV100防曬 $99免運 ★運動世界＄150領折 ★宅神也健身小物＄99免運 ★native shoes藝人最愛朝聖拖 ★Pump306最高折188 ★喬依比基尼 滿599送手機套  新進商店  INDULGENCE►萊爾富99免運 IronSteel安全鞋►萊爾富99免運 Juniper 朱尼博►萊爾富99免運         餐券/娛樂/旅遊餐券/娛樂/旅遊   分類  美食餐券 娛樂/生活/服務券 旅遊住宿券  本類推薦  📣  吃喝玩樂暑期全攻略 📣 『限量』饗食天堂餐券免運 『VIP』義大買1送7+快速通關 『預購』丹堤父親節蛋糕88折 『推薦』六福萬怡酒店下午茶 『搶先』六福水樂園299元 『熱賣』騎士堡3小時親子券 『FUN』劍湖山王子飯店住宿 激推品 ►遊樂園門票 激推品 ►親子住宿 激推品 ►高CP吃到飽 超贈點折抵首選★天仁/翰林    人氣商店  農場美食/田園1日遊 ►全台任選 奧塞美術館大展 ►門票即買即用 品花苑午晚餐吃到飽  ►599起 東森海洋4人住宿  ►25折 便利商店24H洗衣服 ► 3件369 日月潭碼頭水沙連飯店►湖景房 冷氣空調清洗►下殺55折 東森海洋4人住宿  ►25折 耐斯王子大飯店4人住宿►44折  新進商店  ♥指舞春秋 舒壓放鬆 ♥台灣農場趴趴走  體驗小小農夫 ♥葛洛莉spa萊爾富99免運         圖書/文具/影音圖書/文具/影音   分類  書籍/雜誌期刊 二手書專區 音樂/電影/影集 文具/辦公用品  本類推薦  ▶珍藏齊柏林 ►關西親子遊-金石堂滿700送70元 ►30色彩筆文具/手藝↘39 ►NORNS-迪士尼文具小物 ►3M生活-文具超值選$18起 ►DATABANK文具-第2件8折 ❤熱搜NO.1~紙膠帶 ❤熱搜NO.2~萬寶龍鋼筆 ❤熱搜NO.3~療癒小物 ❤熱搜NO.4~迪士尼 ❤熱搜NO.5~文創小物    人氣商店  ★讀冊5折up/萊爾富$99免運 ★金石堂-滿700送70元 ★城邦-滿499現折50元 ★大創萊爾富$99免運 ★bluecat萊爾富$99免運 ★書立得童書7折起 ★時報文化69折起 ★麥克英文有聲書78折起 ★今周刊全店免運  新進商店  芮菲客筆►萊爾富99免運 文禮學院►萊爾富99免運 易撕貼本鋪►萊爾富99免運       




電腦資訊  



   商品評價         以上  價格    -     300元~400元 (1675) 400元~500元 (1554) 200元~300元 (790)  付款方式   0利率 可分期 可刷卡 超商付款  運送方式   超商取貨  商品狀況   有現貨 有影音  店家資格   優良商店 
  
 符合商店  TAAZE 讀冊生活網路書店(3008) 金石堂網路書店(2353) 城邦讀書花園(281) 小菱資訊站(14) 零國界二店(11) 堃邑Oget專業電子線上購物(5)   玉山最低比價網(4) NG書城(3) １６８幼福童書網‧童書嬰兒用品童裝(2) 時報文化(1) 臺北童書城網路書店(1) 書寶二手書店(1) 中美資訊(1) 哈GAME族(1)     更多 


    超級商城開店說明會臺北場：7/12(星期三) 超級商城開店說明會臺中場：7/18 (星期二) 超級商城開店說明會高雄場：7/26 (星期三)  






     首頁        圖書/文具/影音       書籍/雜誌期刊       二手書專區   音樂/電影/影集   文具/辦公用品        電腦資訊       文學   心理勵志   生活娛樂   自然科學   藝術設計   動/漫畫   親子童書   語言學習/字辭典   財經企管/商業理財   醫療保健   人文歷史   社會科學   考試書/政府出版品   中外文雜誌期刊   原文書/外文書籍   簡體書籍   中文電子書   原文電子書   中文電子雜誌   其他圖書   限制級書籍/寫真@       共 5686 項商品 

     最高人氣   價格低至高   價格高至低   評價高至低   評論數多至少              

    Word 2013實力養成暨評量解題秘笈       $ 198   	金石堂網路書店     SolidWorks 2012 入門手冊       $ 435   	金石堂網路書店     Project 2010 專案管理實務       $ 432   	TAAZE 讀冊生活網路書店     透視C語言指標 | 深度探索記憶體管理核心技術       $ 379   	金石堂網路書店     成為Linux大師的第一步       $ 458   	金石堂網路書店     初探NFC：近距離無線通訊與Arduino、Android和PhoneGap       $ 395   	金石堂網路書店     Access 2016程式設計  VBA、SQL、ADO應用程式封裝/部署與系統       $ 545   	金石堂網路書店     Dreamweaver絕對出色網站規劃與動靜態網頁設計--PC/智慧手機/平板電腦的跨平臺..       $ 484   	TAAZE 讀冊生活網路書店     React 啟動與運行       $ 458   	金石堂網路書店     會計事務資訊項丙級檢定術科練功坊 分錄練習       $ 128   	金石堂網路書店     挑戰PHP7/MySQL程式設計與超強專題特訓班(第四版)(適用PHP5~7，M       $ 435   	金石堂網路書店     鳥哥的Linux私房菜  基礎學習篇(第四版)     (2)   $ 774   	金石堂網路書店     Python Spark 2.0 Hadoop 機器學習與大數據分析實戰       $ 537   	金石堂網路書店     印前製程乙級檢定學術科應檢寶典(適用Illustrator / Photosho       $ 408   	金石堂網路書店     Excel 2013實力養成暨評量解題秘笈     (1)   $ 198   	金石堂網路書店     Java SE 8與Android 7.x程式設計範例教本       $ 427   	金石堂網路書店     改變未來20年最重要的20個視覺機器學習理論深讀       $ 387   	金石堂網路書店     第一次學 Python 就上手！       $ 456   	TAAZE 讀冊生活網路書店     拆掉一本書：把房間、書櫃、辦公桌清空，神奇的自炊紙整理術       $ 220 活動$200起   	城邦讀書花園     光感應遙控自走車 豪華版(創客.Arduino相容)       $ 1,143   	金石堂網路書店     Make： 感測器|運用Arduino和Raspberry Pi感測的專題與實驗       $ 458   	金石堂網路書店     Think Python｜學習程式設計的思考概念 第二版       $ 484   	TAAZE 讀冊生活網路書店     全彩圖解通信原理：每天都在用的網際網路、行動通信，你瞭解多少？       $ 235 活動$210起   	城邦讀書花園     R 錦囊妙計     (1)   $ 537   	金石堂網路書店     使用Linux動手打造企業E化環境       $ 458   	金石堂網路書店     高效能 Python 程式設計       $ 537   	金石堂網路書店     寫給IT人看的MacTalk       $ 237   	金石堂網路書店     把他拍美美       $ 298 活動$265起   	城邦讀書花園     Word 完全教本（適用2013/2016）       $ 419   	TAAZE 讀冊生活網路書店     跟Adobe徹底研究Premiere Pro CC       $ 629   	TAAZE 讀冊生活網路書店     與Ubuntu共舞：中文環境調校x雲端共享x Libreoffice x 架站 x dropbox自己架       $ 379   	TAAZE 讀冊生活網路書店     ASP.NET 4.6 網頁製作徹底研究   使用 C#     (1)   $ 519   	金石堂網路書店     圖解資料庫系統理論 使用MySQL實作       $ 490   	金石堂網路書店     Oh!原來專業攝影師這樣修人像：Lightroom後製秘密超圖解，色調、風格、眼神、膚質完..       $ 379   	TAAZE 讀冊生活網路書店     圖解密碼學與比特幣原理       $ 539   	TAAZE 讀冊生活網路書店     瞭解人工智慧的第一本書：機器人和人工智慧能否取代人類？       $ 283 活動$258起   	城邦讀書花園     AutoCAD 2008實例應用(附教學光碟)       $ 360   	金石堂網路書店     測試驅動開發|使用 Python       $ 695   	金石堂網路書店     Excel 2016嚴選教材！(附範例光碟)       $ 476   	金石堂網路書店     Mastercam X4電腹D異U設計與加工       $ 435   	金石堂網路書店     Google超活用點子集 搞定工作.生活大小事       $ 282   	金石堂網路書店     用Autodesk 123D Design玩出3D設計大未來(附270分鐘影音教       $ 300   	金石堂網路書店     《The Wall Street Journal》與《Business Week       $ 277   	金石堂網路書店     Excel 公式 函數職場專用超級辭典：新人、老鳥到大師級部D搨n的速查指引       $ 427   	金石堂網路書店     正確學會Dreamweaver CS6的16堂課       $ 458   	金石堂網路書店     使用EXCEL學習統計預測法       $ 332   	金石堂網路書店     Access 2016嚴選教材！資料庫建立．管理．應用(附範例光碟)       $ 442   	金石堂網路書店     跟我學Word 2013(附範例檔與影音教學光碟)       $ 383   	金石堂網路書店     Excel職場函數468招：超完整！新人工作就要用到的計算函數＋公式範例集       $ 338   	TAAZE 讀冊生活網路書店     實戰聊天機器人Bot開發：使用Node.js       $ 300   	TAAZE 讀冊生活網路書店       

 



付款方式

超商取貨付款
信用卡分期
信用卡紅利折抵
ATM



會員專區

我的帳戶
折價券查詢
電子報訂閱/取消
如何獲得超贈點



客戶服務

新手上路
常見問題
退貨辦法
註冊








交易安全
金流代收最安心



7日鑑賞
退貨免運費



優良商店
商店評核制度




B 0 0 0 0 1 0 ( 0 1 )







  關閉


ga conf






    手機逛超級商城 加入超級商城粉絲團 退貨辦法 服務說明 我要開店     服務條款 隱私權   
































何謂物件導向技術... | Yahoo奇摩知識+




















 









   ⌂首頁信箱新聞股市名人娛樂氣象運動App下載購物中心商城拍賣更多⋁知識+汽車機車電影字典遊戲旅遊理財房地產時尚美妝折扣城   Yahoo 奇摩知識+                        👤 登入    ✉ 信箱     ⚙ 服務說明    帳號資料 服務說明 意見回報        
















Yahoo奇摩知識+ 首頁











所有分類
 
健康
 
商業與財經
 
娛樂與音樂
 
家居與園藝
 
家庭與人際關係
 
寵物
 
懷孕與育兒
 
政治與政府
 
教育與參考
 
新聞與活動
 
旅遊
 
汽車與交通
 
消費電子產品
 
環境
 
社會科學
 
社會與文化
 
科學
 
美容與造型
 
藝術與人文
 
遊戲與休閒活動
 
運動
 
電腦與網際網路
 
食品與飲料
 
餐廳與小吃
 





世界Yahoo 








阿根廷





澳洲





巴西





加拿大





法國





德國





印度





印尼





義大利





馬來西亞





墨西哥







紐西蘭





菲律賓





魁北克





新加坡





香港





西班牙





泰國





英國與愛爾蘭





美國





越南





西班牙文







關於





關於 Yahoo奇摩知識+
社群指南
排行榜
點數與等級
部落格
如何安全地使用 Yahoo奇摩

 








 電腦與網際網路

 程式設計


 看另一則問題 




 


            何謂物件導向技術...
        


不知道有誰可以幫我回答這個問題.. 
因為蠻需要相關資訊的..





 
3 個人正在追蹤 


 
 5 個解答 
5


檢舉不當使用









您確定要刪除此解答嗎？
是
否












 









抱歉，似乎發生一些問題。



Trending Now





 

解答


評分


最新
最舊







 



最佳解答: 
             物件導向技術主要包含封裝、繼承與多型三大基本觀念。所謂封裝是 

    指，將軟體中的資料及操作資料的方法封裝在一起成為一個物件，物 

    件間則透過訊息的傳遞來執行物件所提供的方法，而不可直接存取其 

    它物件的資料內容。所謂繼承是一種分類的概念，相同分類中的物件 

    具有相同的特性。多型的觀念則是用來讓設計者設計相同的功能介面 

    ，來操作不同類型的物件，以呈現不同的行為的一種機制。 

    物件導向技術在應用方面具有以下特色：一、可經由直接模塑企業物 

    件，讓資訊系統與企業管理完全整合；二、讓應用系統不受限於執行 

    環境、開發環境、程式語言而能彼此互通；三、讓發展者可以很容易 

    的再用或修改物件。 

    物件導向技術的發展，最終的目標是使得軟體達到「元件化」的境界 

    ；元件式軟體的來臨，將帶來重大的影嚮。就使用者而言，元件式的 

    軟體在操作上要比傳統容易得多，而工作導向的操作方式，將可使電 

    腦軟體成為人人可輕易使用的工具，進而擴大軟體產業規模。在企業 

    方面，企業可自行累積專業元件，資訊服務業者與企業使用者之間的 

    溝通將更為有效，降低系統開發專案失敗的風險。就發展者的角度看 

    來，軟體的開發可同硬體製造一般，運用現成的軟體元件，以最經濟 

    、快速的方式提供新功能。在市場方面，不同的軟體業者可累積建立 

    其特有的專業元件；產品行銷時，可依據使用者需求，挑選最合適的 

    軟體元件；當某部份功能須變更時，只須更動相關的軟體元件，降低 

    產品維護的困難。 

    物件導向技術已經公認成為未來的趨勢，將會對軟體產業產生革命性 

    的影響，並且帶來巨大的產業效益，但是，相對地需要投入相當的心 

    力，希望國內軟體產業在一番努力之後，將軟體技術向前推進，進入 

    物件導向的新紀元。 




 參考資料： 
 ㄋㄋ 


 匿名使用者 
 · 12 年前 





0
真讚



0
真遜





檢舉不當使用


意見





 




新增意見











送出












 · 剛才不久






















 據我所知，物件導向比較簡單的說法，就是我們拿別人做好的東西把他組裝成我們想要的東西，就好像我們想要組一臺車子，我們可以拿別人已經用好的輪子、外殼、引擎、‧‧‧‧然後靠我們的技術把它組裝成我們想要的車子囉。





minzen
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久























 物件導向的程式技術他用一種"物件化"的概念來建構整個程式 
那到底什麼是物件化呢？ 
程式不就是函數呼叫，寫資料結構跟演算法而已嗎？ 
是的，本來就是這些東西啊，但是物件導向引入了一些更複雜的包裝法， 
他把相關的變數與函數包成一個"類別"，好像傳統想法中一支獨立的程式， 
這個獨立的程式類別因為被包起來了，以後可以重複使用他 
想要用時就"引入類別"(藍圖)，"產生物件"(運作實體)， 
然後去使用他的"功能"，其實就是去呼叫它本身有的函數而已， 
物件導向把它想成是"傳訊息"給他。 

所以事實上還是寫資料結構跟演算法，還是函數呼叫這些東西， 
只是想法比較"特別"，"另類"一點，不過真的是很棒的想法喔， 
不然怎麼每個人都愛用，你會用OO時，你就會很興奮喔， 
什麼都不用自己寫，這些零件拿一點，那些拿一點， 
再用"Main"物件來定義運作流程(訊息傳來傳去，飛來飛去)， 
你就可以"堆"出程式了，甚至連程式都不會寫， 
依樣畫葫蘆也可以很快拼出程式喔。 

不過物件導向真的去瞭解的話真的比傳統"結構式"程式的想法更加複雜， 
"一切以物件為中心"去想，很另類吧^^，是一種現代程式開發必備的想法， 
當你會用物件式來想事情，那你就踏進OO一半了， 
再來再學什麼繼承，多型這些噁心的東西^^，到時不會再上來問吧。





小咖
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 上面講的太複雜了 我簡單解釋一下物件導向是配合 程式語言 而產生的 ,那有提供這樣的物件導向的方法的語言 我們就稱 物件導向語言 那物件導向是什麼 , 很簡單 ,物件就是我們肉眼看的見的東西 ,我們利用程式 去 製造出一個 物件(當然這物件是用代號表示)那這樣的物件 就跟現實中的物件意思一樣 ,一個物體 一定有它的使用方法 跟屬性 ,譬如 電鍋? 電鍋使用方法 就是煮飯 屬性 就是指它的外觀跟顏色 ,那換成 程式裡也是一樣 我們利用我們做出來的物件給予它自己的屬性與方法 讓程式來利用 就稱為物件導向那其他物件導向還有很多觀念 像繼承 多行性 這些都跟現實的意義是相通的 想想看 就會知道了 還是不知道線上跟我討論一下吧!!~祝好運!!!





nL- AUG-TW
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 麻煩爬文一下好不好.. 這個問題我已經回答兩次了.. 每個幾個星期都有人問一遍





?
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久













 

檢舉不當使用

 我認為此問題違反社群指南 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此問題違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此解答違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此解答違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此意見違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此意見違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消



 

你可能對以下搜尋感興趣：


好背好搭的後背包

防毒軟體為您抵擋病毒攻擊

最火熱線上遊戲

高效率學習程式設計












發問問題
通常可在幾分鐘內獲得解答！







展開»






詳細資料



詳細資料






現有問題




更多





請多詳述您的問題
上傳處理中




上傳失敗。 請上傳大於 100x100 像素的檔案
目前發生問題，請再試一次。
您只能上傳 PNG、JPG 或 JPEG 等類型的檔案。
您只能上傳 3GP、3GPP、MP4、MOV、AVI、MPG、MPEG 或 RM 等類型的檔案。
您只能上傳不超過 5 MB 的相片。
您只能上傳不超過 600 MB 的影片。
您只能上傳相片 (png, jpg, jpeg) 或影片 (3gp, 3gpp, mp4, mov, avi, mpg, mpeg, rm)。
您只能上傳相片或影片。
影片不應超過 <b>600mb/5 分鐘</b>
相片不應超過 <b>5mb</b>
影片不應超過 <b>600mb/5 分鐘</b>相片不應超過 <b>5mb</b>
  







解答問題


我打的C語言哪裡打錯了?



 

需高手指導，PCI Express windows driver in VC++ or MFC or Qt tool?



 

有誰可以幫我翻譯下文並附上解決辦法? mantle 1.11.2-1.?



 

做什麼運動可以緩解陽痿?



 


發燒問題




如何用EXCEL亂數產生210~230之間的亂數,間距為5
210、215、220、225---?

                  6 個解答
              

 

想自學遊戲設計，有什麼書籍是可以買來自己看的?

                  7 個解答
              

 

Dreamweaver做完為什麼是file:///C:/Users/.......，怎麼把它改掉?

                  5 個解答
              

 
更多問題





本人想學程式語言 但這方面什麼都不懂 什麼迴圈阿 函數之類的 請問有什麼方法可以入門程式語言嗎?

             5 個解答
         

 

誰能認真教我做出一個簡單的網站
稍微設計一點程式就好了
要交大學專題用的
可以一步一步交的
會給回饋?

             5 個解答
         

 

想請問去職訓局學程式設計 對就業上的幫助?

             7 個解答
         

 

  








服務條款


隱私權


RSS

















	物件導向程式設計 | 南臺科技大學南臺開放式課程平臺









































:::



網站導覽


迴首頁


南臺首頁


教學發展中心


繁
    ⇌
    簡


RSS












:::






最新消息


商管學院


工學院


人文社會學院


數位設計學院


通識教育課程


證照培訓區 


留言板




















:::






工學院




物件導向程式設計


Copy Constructor and Assignment Operator


Operator Overloading 運算元重載


Virtual Function


2D Array and Pointer


Exception Handling


Standard Template Libraries



電子學

電子學一

電子學二

物理二

微積分一

工程數學一

微積分二

材料力學

工程數學二











:::

目前位置：主選單>工學院>物件導向程式設計



物件導向程式設計
 任課老師     資訊工程系 林泓宏 老師 學 期 別     103學年度 第一學期 課程介紹    [物件導向程式設計] 此課程以 C/C++ 程式語言的教學為主，佐以 C++ 裡頭物件導向程式設計的概念介紹，期望讓同學們對於物件導向程式設計建立基本的認識與實作能力。 課程目標    使學生能熟悉 C++ 物件類別與繼承。   使學生能瞭解 C/C++ 指標運作以及虛擬函數。   使學生能建立 C++ 應用程式。   使學生能養成良好程式撰寫習慣。   課程大綱    [C++] Copy Constructor。   [C++] Operator Overloading 運算元重載。   [C++] Virtual Function。   [C++] 2D Array and Pointer。   [C++] Exception Handling。   [C++] Standard Template Libraries。

















:::



快速連結



南臺科技大學MOOCs學習平臺


南臺科技大學遠距教學網


OpenCourseWare Consortium


台灣開放式課程聯盟


國立交通大學開放式課程


雲嘉南區域教學資源中心


教育部創用CC資訊網


智慧財產權--宣導專區


開放式課程問捲調查











                  南臺開放式課程QRcode








熱門課程








:::

COPYRIGHT ©2014 南臺科技大學 計算機與資訊網路中心 ALL RIGHTS RESERVED.  本網頁由計網中心維護 分機：2605  計網中心信箱:center@mail.stust.edu.tw   本網站所有內容僅供學術使用，嚴禁任何商業與重製行為























JavaScript 物件導向介紹 - JavaScript | MDN




























































MDN’s new design is in Beta! A sneak peek: https://blog.mozilla.org/opendesign/mdns-new-design-beta/



跳到主要內容
選擇語言
跳到搜尋




mozilla


Mozilla Developer Network




            登入
            













語言



English (US) (en-US)
عربي (ar)
Català (ca)
Čeština (cs)
Deutsch (de)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
한국어 (ko)
Melayu (ms)
မြန်မာဘာသာ (my)
Polski (pl)
Português (do Brasil) (pt-BR)
Русский (ru)
中文 (簡體) (zh-CN)




編輯
進階



進階

歷史紀錄
列印此文件













cwlin0416



fscholz



jackblackevo



nightsnow0918



irvinfly



sailplaneTW



JavaScript 物件導向介紹









在這篇文章

複習 JavaScript物件導向程式設計專門用語以雛型為基礎 (Prototype-based) 的程式設計JavaScript 物件導向程式設計命名空間標準內建物件自訂物件類別 (Class)物件 (Object) - 類別的實例 (Instance)建構子 (Constructor)屬性 (Property) - 物件的屬性方法 (Method)繼承封裝抽象化多型註意參考文獻相關資料








深入淺出物件導向，JavaScript 支援強大、彈性的物件導向程式設計 (OOP)。本篇文章會先介紹物件導向程式設計，然後複習 JavaScript 物件模型，最後示範在 JavaScript 物件導向程式設計的概念。本篇文章並不會介紹 在 ECMAScript 6 的物件導向程式設計 的新語法。
複習 JavaScript
若您對 JavaScript 變數、型態、函數及作用範圍的觀念並不是很有信心，您可以閱讀 重新膫解 JavaScript 中相關的主題。您也可以參考 JavaScript 指南。
物件導向程式設計
物件導向程式設計 (Object-oriented programming, OOP) 是一種使用 abstraction 概念表達現實世界的程式設計方式。物件導向程式設計運用數個先前所建立的技術所組成，包含模組化 (modularity)、多型 (polymorphism) 以及封裝 (encapsulation) 。直到今天許多主流的程式語言 (如 Java, JavaScript, C#, C++, Python, PHP, Ruby 與 Objective-C) 也都支援物件導向程式設計。
物件導向程式設計是將軟體想像成由一群物件交互合作所組成，而非以往以函數 (Function) 或簡單的指令集交互合作所組成。在物件導向的架構中，每個物件都具有接收訊息，處理資料以及發送訊息給其他物件的能力。每個物件都可視為獨一無二的個體，他們扮演不同的角色並有不同的能力及責任。
物作導向程式設計提出了一個一個更有彈性且易於維護的設計方法，且廣泛被許多大型軟體工程所採用。由於物件導向程式設計強調模組化，因為物件導向的程式碼變的較為容易開發且易於理解。與較少模組化的程式設計技術相比，物件導向的程式碼更能更直接分析、編寫、理解複雜的情況與程序。1
JavaScript 是一個以雛型為基礎 (Prototype-based) 的程式設計語言 (或更準確的說是以雛型為基礎的腳本語言)，它採用了複製的模式而非繼承。以雛型為基礎的程式設計語言是一種物件導向程式設計，使用了函數來當做類別 (Class) 的建構子 (Constructor)，儘管 JavaScript 擁有類別 (Class) 的關鍵字，但它沒有類別敘述，當要拿 JavaScript 與其他物件導向程式語言相比時，這是很重要的區別。
專門用語

Namespace
可讓開發人員包裝所有功能到一個獨一無二、特定應用程式名稱的容器。
Class
用來定義物件的特徵，類別 (Class) 是物件屬性與方法的藍圖。
Object
類別 (Class) 的實際案例。
Property
物件 (Object) 的特徵，例如：顏色。
Method
物件 (Object) 的功能，例如：行走。它是與類別相關的子程序或函數。
Constructor
一個在物件產生時會被呼叫的方法。通常會使用與其所在類別 (Class) 相同的名稱。
Inheritance
一個類別 (Class) 可以繼承另一個類別的特徵與功能。
Encapsulation
可以將資料與方法包裝在一起使用的技術。
Abstraction
結合物件的複雜繼承關係、方法與屬性來充分反映現實的模型。
Polymorphism
Poly 指的是 "多" 而 Morphism 指的是 "型"。是指不同的類別可以定義相同的方法或屬性。

要瞭解物件導向程式設計更廣泛的說明，請參考維基百科的  Object-oriented programming。
以雛型為基礎 (Prototype-based) 的程式設計
以雛型為基礎的程式設計是一種不使用類別的物件導向程式設計模式，但它是第一個透過修改 (或者擴充) 既有的 prototype 來達到類別的功能並可重複使用 (等同在以類別為基礎的程式語言中的繼承)。 又稱作無類別 (Classless)、雛型導向 (Prototype-oriented) 或以實例為基的程式語言 (Instance-based programming)。
最早 (最典型) 以雛型為基礎的程式語言的典範是由 David Ungar 與 Randall Smith 所開發的 Self。近年來無類別 (Class-less) 的程式設計風格越來越流行，並且被 JavaScript, Cecil, NewtonScript, Io, MOO, REBOL, Kevo, Squeak (在使用 Viewer 框架來處理 Morphic 元件時)，還有許多其他程式語言所採用。2
JavaScript 物件導向程式設計
命名空間
命名空間是一個可讓開發人員包裝所有功能到一個獨一無二、特定應用程式名稱的容器。在 JavaScript 中命名空間其實是另一個包含方法、屬性及物件的物件。

註意，在 JavaScript 中一般物件與命名空間並無語法上的差異，這於其他許多物件導向的語言並不相同，可能是初學 JavaScript 的程式設計師容易混淆的地方。

在 JavaScript 建立一個命名空間背後的概念非常的簡單：建立一個全域的物件，然後將所有的變數、方法及函數設為該物件的屬性。使用命名空間可以減少應用程式中名稱衝突發生的機率，由於每個應用程式的物件皆會是應用程式定義的全域物件的屬性。
讓我們來建立一個叫做 MYAPP 全域物件：
// 全域命名空間
var MYAPP = MYAPP || {};
在上述程式範例，我們會先檢查 MYAPP 是否已經定義過 (不論是定義在同一檔案或在其他檔案)。若已定義過，便會使用現有的 MYAPP 全域物件，否則會建一個稱作 MYAPP 的空物件來包裝方法、函數、變數及物件。
我們也可以建立子命名空間 (要註意，全域物件必須已事先定義)：
// 子命名空間
MYAPP.event = {};
以下的程式碼會建立一個命名空間並加入變數、函數以及一個方法：
// 建立一個稱作 MYAPP.commonMethod 的容器來存放常用方法與屬性
MYAPP.commonMethod = {
  regExForName: "", // define regex for name validation
  regExForPhone: "", // define regex for phone no validation
  validateName: function(name){
    // Do something with name, you can access regExForName variable
    // using "this.regExForName"
  },
 
  validatePhoneNo: function(phoneNo){
    // do something with phone number
  }
}

// 物件與方法宣告
MYAPP.event = {
    addListener: function(el, type, fn) {
    // code stuff
    },
    removeListener: function(el, type, fn) {
    // code stuff
    },
    getEvent: function(e) {
    // code stuff
    }
  
    // 可以加入其他方法與屬性
}

// 使用 addListener 方法的語法：
MYAPP.event.addListener("yourel", "type", callback);
標準內建物件
 JavaScript 的核心內建了許多物件，例如有 Math, Object, Array 以及 String。以下範例將示範如何使用 Math 物件中的 random() 方法來取得一個隨機的數字。
console.log(Math.random());

註意：這個例子及之後的例子會假設全域已經有定義名稱為 console.log() 的函數。console.log() 函數並不算是 JavaScript 的一部份，但是有許多瀏覽器會實作這個功能來協助除錯使用。
請參考 JavaScript 參考: 標準內建物件 來取得在 JavaScript 中所有核心物件的清單。
每個在 JavaScript 中的物件均為物件 Object 的實例 (Instance)，因此會繼承其所有的屬性與方法。
自訂物件
類別 (Class)
JavaScript 是以雛形為基礎的程式語言，並沒有像在 C++ 或 Java 中看以到的 class 敘述句，這有時會讓習慣使用有 class 敘述句的程式設計師混淆。JavaScript 使用函數來作為類別 (Class) 的建構子 (Constructor)，要定義一個類別 (Class) 如同定義一個函數 (Function)一樣簡單，以下例子中我們使用空的建構子來定義了一個新的 Person 類別。
var Person = function () {};

物件 (Object) - 類別的實例 (Instance)
要建立物件 obj 的新實例，我們可以使用 new obj 敘述句，並將結果 (型態為 obj) 指派 (Assign) 到一個變數方便之後存取。
在先前翻例中我們定義了一個名稱為 Person 的類別 (Class)。在以下的例子我們會建立兩個實例 (person1 與 person2)。
var person1 = new Person();
var person2 = new Person();


請參考 Object.create() 來瞭解建立未初始化實例的實例化新方法。

建構子 (Constructor)
建構子會在實例化 (Instantiation) 時被呼叫 (建立物件實例被建立時)。建構子是類別的一個方法，在 JavaScript 中會以函數來當做物件的建構子，因此無須明確的定義建構子方法，而每個在類別中宣告的動作均會在實例化時被執行。
建構子會用來設定物件的屬性 (Property) 或是呼叫要準備讓物件可以使用的方法 (Method)。增加類別的方法及定義會使用另一種語法，在本文稍後會說明。
在以下例之中，類別 Person 的建構子在 Person 實例化時會記錄下一個訊息。
var Person = function () {
  console.log('instance created');
};

var person1 = new Person(); // 會記錄 "instance created"
var person2 = new Person(); // 會記錄 "instance created"

屬性 (Property) - 物件的屬性
屬性即為在類別中的變數，每個物件的實例都會有同樣的屬性。屬性會在類別的建構子 (函數) 中設定，所以屬性在每個實例產生時才會產生。
關鍵字 this 可以引用目前的物件，讓您使用在該類別中的其他屬性。存取 (讀寫或寫入) 一個在類別之外的屬性可以用語法：InstanceName.Property，如同在 C++, Java 以及其他語言。 (在類別內會使用語法 this.Property 來取得或設定屬性的數值。)
在以下例子中，我們會在實例化時定義 Person 類別的 firstName 屬性：
var Person = function (firstName) {
  this.firstName = firstName;
  console.log('Person instantiated');
};

var person1 = new Person('Alice'); // 會記錄 "Person instantiated"
var person2 = new Person('Bob'); // 會記錄 "Person instantiated"

// 顯示物件的 firstName 屬性
console.log('person1 is ' + person1.firstName); // 會記錄 "person1 is Alice"
console.log('person2 is ' + person2.firstName); // 會記錄 "person2 is Bob"

方法 (Method)
方法即為函數 (也如同函數般定義)，但是依照屬性的邏輯來運作，呼叫一個方法如同存取一個屬性，但您需要在函數名稱後加上 () ，並有可能會有參數。要定義一個方法，只需將函數指定 (Assign) 給類別的 prototype 屬性中一個已命名的屬性，接著，您便可用剛指定的屬性名稱來呼叫該物件的方法。
以下範例中，我們為 Person  類別定義了方法 sayHello() 並使用。
var Person = function (firstName) {
  this.firstName = firstName;
};

Person.prototype.sayHello = function() {
  console.log("Hello, I'm " + this.firstName);
};

var person1 = new Person("Alice");
var person2 = new Person("Bob");

// 呼叫 Person sayHello 方法。
person1.sayHello(); // 會記錄 "Hello, I'm Alice"
person2.sayHello(); // 會記錄 "Hello, I'm Bob"

在 JavaScript 中，方法其實是一般的函數物件 (Function object) 連結到一個物件的屬性，這意謂著您可以在  "物件之外" 呼叫方法。請看以下範例程式碼：
var Person = function (firstName) {
  this.firstName = firstName;
};

Person.prototype.sayHello = function() {
  console.log("Hello, I'm " + this.firstName);
};

var person1 = new Person("Alice");
var person2 = new Person("Bob");
var helloFunction = person1.sayHello;

// 會記錄 "Hello, I'm Alice"
person1.sayHello();

// 會記錄 "Hello, I'm Bob"
person2.sayHello();

// 會記錄 "Hello, I'm undefined" (或在 Strict 
// 模式會出現 TypeError)
helloFunction();                                    

// 會記錄 true
console.log(helloFunction === person1.sayHello);

// 會記錄 true
console.log(helloFunction === Person.prototype.sayHello);

// 會記錄 "Hello, I'm Alice"
helloFunction.call(person1);
如範例中所示，我們讓所有的參考均指向 sayHello 函數 — 一個在 person1、一個在 Person.prototype、另一個在 helloFunction 變數 — 這些均參考相同的函數。在呼叫的過程中 this 的值會根據我們如何呼叫來決定，最常見的地方是：我們取得函數的物件屬性所在，在表示法中呼叫 this — person1.sayHello()— 會設定 this 為我們取得函數的地方 (person1)，這也是 person1.sayHello() 顯示的名稱為 "Alice" 以及 person2.sayHello() 顯示的名稱為 "Bob" 的原因。但如果我們以其他的方式來呼叫，那麼 this 結果將截然不同：在變數中呼叫 this — helloFunction()— 會設定 this 為所在的全域物件 (在瀏覽器即為 window)。由於物件 (可能) 並沒有 firstName 屬性，因此會得到 "Hello, I'm undefined" 這樣的結果 (在 Loose 模式才有這樣的結果，若在 strict mode 則會不同 [會出現錯誤]，為了避免混淆，此處將不會再詳述)。 或者我們可以像最後一個例子使用 call (或 apply) 來明確的設定 this。
註意：請參考 call 及 apply 來取得更多有關 this 的資訊
繼承
繼承是一種用一個或多個類別建立一個特殊版本類別的方式 (JavaScript 僅支援單一繼承)。這個特殊的類別通常稱做子類別，而其引用的類別則通常稱作父類別。在 JavaScript 您可以指定父類別的實例到子類別來做到這件事。在最近的瀏覽器中您也可以使用 Object.create 來實作繼承。

註意：JavaScript 不會偵測子類別的 prototype.constructor (請參考 Object.prototype)，所以我們必須手動處理。請參考在 Stackoverflow 的問題 "為什麼一定要設定 prototype 的建構子?"。

於以下範例，我們會定義類別 Student 做為 Person 的子類別。然後我們會重新定義 sayHello() 方法然後加入 sayGoodBye() 方法。
// 定義 Person 建構子
var Person = function(firstName) {
  this.firstName = firstName;
};

// 加入兩個方法到 Person.prototype
Person.prototype.walk = function(){
  console.log("I am walking!");
};

Person.prototype.sayHello = function(){
  console.log("Hello, I'm " + this.firstName);
};

// 定義 Student 建構子
function Student(firstName, subject) {
  // Call the parent constructor, making sure (using call)
  // that "this" is set correctly during the call
  Person.call(this, firstName);

  // Initialize our Student-specific properties
  this.subject = subject;
}

// 建立 Student.prototype 物件來繼承 Person.prototype。
// 註意: 在此處經常見的錯誤是使用 "new Person()" 來建立
// Student.prototype。不正確的原因許多個，尤其是
// 我們沒有給予 Person 任何 "firstName" 的參數。
// 呼叫 Person 的正確位置在上方，也就是我們呼叫 Student 
// 的地方。
Student.prototype = Object.create(Person.prototype); // 詳見以下說明

// 設定 "constructor" 屬性參考 Student
Student.prototype.constructor = Student;

// 替換 "sayHello" 方法
Student.prototype.sayHello = function(){
  console.log("Hello, I'm " + this.firstName + ". I'm studying "
              + this.subject + ".");
};

// 加入"sayGoodBye" 方法
Student.prototype.sayGoodBye = function(){
  console.log("Goodbye!");
};

// 範例用法:
var student1 = new Student("Janet", "Applied Physics");
student1.sayHello();   // "Hello, I'm Janet. I'm studying Applied Physics."
student1.walk();       // "I am walking!"
student1.sayGoodBye(); // "Goodbye!"

// 檢查 instanceof 可正常運作
console.log(student1 instanceof Person);  // true 
console.log(student1 instanceof Student); // true

於 Student.prototype = Object.create(Person.prototype); 一行：在舊版的 JavaScript 引擎沒有 Object.create，可以使用 "polyfill" (又稱 "shim"，請參考以下文章連結) 或使用函數來達到同樣的效果，如：
function createObject(proto) {
    function ctor() { }
    ctor.prototype = proto;
    return new ctor();
}

// 用法:
Student.prototype = createObject(Person.prototype);

註意： 請參考 Object.create 來瞭解其功能與舊引擎使用的 shim。
要在不管物件如何實例化的情況下確保 this 指向正確的地方並不簡單，儘管如此，這裡仍有一個簡單的習慣用法讓這件事變的較簡單。
var Person = function(firstName) {
  if (this instanceof Person) {
    this.firstName = firstName;
  } else {
    return new Person(firstName);
  }
}

封裝
於上述例子中 Student 並不需要知道 Person 類別的 walk() 方法實作的方式，但仍可以使用該方法，除非我們想要更改該函數，否則 Student 類別並不需要明確的定義該函數。這樣的概念稱就叫作封裝 (Encapsulation)，透過將每個類別的資料與方法包裝成一個單位。
隱藏資訊在其他語言是常見的功能，通當會使用私有 (Private) 與保護 (Protected) 方法/屬性。既使如此，您仍可在 JavaScript 模擬類似的操作，這並不是物件導向程式設計必要的功能。3
抽象化
抽象化是一個機制能讓您將工作問題的目前部份進行建立模型，不論是用繼承 (特殊化) 或是組合的方式。JavaScript 可以透過繼承達到特殊化 (Specialization)，並可讓類別實例成為其他物件的屬性來達到組合 (Composition)。
JavaScript 的 Function 類別繼承 Object 類別 (這示範了模型的特殊化) 而 Function.prototype 屬性是 Object 的實例 (這示範了組合)。
var foo = function () {};

// 會記錄 "foo is a Function: true"
console.log('foo is a Function: ' + (foo instanceof Function));

// 會記錄 "foo.prototype is an Object: true"
console.log('foo.prototype is an Object: ' + (foo.prototype instanceof Object));
多型
如同所有方法與屬性會定義在 prototype 之中，不同的類別可以定義相同名稱的方法，而這些方法的有效範圍其所在的類別之中，除非兩個類別之間有父子關係 (例如，其中一個類別是繼承另一個類別而來)。
註意
在 JavaScript 並不是只有這些方式可以實作物件導向程式設計，JavaScript 在這方面非常有彈性。另外，在此處示範的方法並沒有使用任何語言特殊技巧，也沒有模仿其他語言的物件理論來實作。
在 JavaScript 也有其他的方式可以做更進階的物件導向程式設計，但已超出本篇簡介的範圍。
參考文獻

Wikipedia - Object-oriented programming
Wikipedia - Prototype-based programming
Wikipedia - Encapsulation (object-oriented programming)

相關資料

Function.prototype.call()
Function.prototype.apply()
Object.create()
嚴謹模式 (Strict mode)


這份文件有幫助嗎？



是



否



感謝您！





文件標籤與貢獻者


標籤: 
    
中階
命名空間
封裝
建構子
成員
物件
物件導向
物件導向程式設計



 此頁面的貢獻者:
cwlin0416, 
    
        fscholz, 
    
        jackblackevo, 
    
        nightsnow0918, 
    
        irvinfly, 
    
        sailplaneTW


 最近更新:
cwlin0416,
                      Dec 29, 2016, 12:07:39 AM






瞭解網頁開發精華
發送最新最棒的 MDN 新聞到您的信件匣中。
電子報目前僅有英文版。






電子郵件





                我同意 Mozilla 依照 隱私權保護政策 當中描述的方式處理我的資訊。
                


立即註冊




感謝您！請到信箱收信確認訂閱。
若您先前沒有確認訂閱過 Mozilla 電子報，現在可能需要確認。請到信箱收信，或到垃圾信件匣中看看有沒有來自我們的訊息。
        

隱藏註冊電子報







詳見

JavaScript
Tutorials:
JavaScript Guide

Introduction
Grammar and types
Control flow and error handling
Loops and iteration
Functions
Expressions and operators
Numbers and dates
Text formatting
Regular expressions
Indexed collections
Keyed collections
Working with objects
Details of the object model
Iterators and generators
Meta programming


Introductory

JavaScript basics
JavaScript technologies overview
Introduction to Object Oriented JavaScript


Intermediate

A re-introduction to JavaScript
JavaScript data structures
Equality comparisons and sameness
Closures


Advanced

Inheritance and the prototype chain
Strict mode
JavaScript typed arrays
SIMD types
Memory Management
Concurrency model and Event Loop


References:
Built-in objects
ArrayArrayBuffer AsyncFunction [Translate] Atomics [Translate]Boolean [Translate]DataViewDateErrorEvalError [Translate]Float32Array [Translate]Float64Array [Translate]FunctionGenerator [Translate]GeneratorFunction [Translate]InfinityInt16Array [Translate]Int32Array [Translate]Int8Array [Translate]InternalError [Translate]Intl [Translate]Intl.Collator [Translate]Intl.DateTimeFormat [Translate]Intl.NumberFormat [Translate] Iterator [Translate]JSONMap [Translate]MathNaNNumberObject ParallelArray [Translate]PromiseProxy [Translate]RangeError [Translate]ReferenceError [Translate]Reflect [Translate]RegExp [Translate] SIMD [Translate] SIMD.Bool16x8 [Translate] SIMD.Bool32x4 [Translate] SIMD.Bool64x2 [Translate] SIMD.Bool8x16 [Translate] SIMD.Float32x4 [Translate] SIMD.Float64x2 [Translate] SIMD.Int16x8 [Translate] SIMD.Int32x4 [Translate] SIMD.Int8x16 [Translate] SIMD.Uint16x8 [Translate] SIMD.Uint32x4 [Translate] SIMD.Uint8x16 [Translate]Set [Translate] SharedArrayBuffer [Translate] StopIteration [Translate]字串Symbol [Translate]SyntaxError [Translate]TypeError [Translate]TypedArrayURIError [Translate]Uint16Array [Translate]Uint32Array [Translate]Uint8Array [Translate]Uint8ClampedArray [Translate]WeakMap [Translate]WeakSet [Translate]decodeURI() [Translate]decodeURIComponent() [Translate]encodeURI() [Translate]encodeURIComponent() [Translate] escape() [Translate]eval() [Translate]isFinite() [Translate]isNaN() [Translate]nullparseFloat() [Translate]parseInt()undefined unescape() [Translate]uneval() [Translate]

Expressions & operators
Arithmetic operators [Translate] Array comprehensions [Translate]Assignment operators [Translate]Bitwise operators [Translate]Comma operator [Translate]Comparison operators [Translate]Conditional (ternary) Operator [Translate]Destructuring assignmentExpression closures [Translate] Generator comprehensions [Translate]Grouping operator [Translate]Legacy generator function expression [Translate]Logical Operators [Translate]Object initializer [Translate]運算子優先等級Property accessors [Translate]Spread syntax [Translate] async function expression [Translate] await [Translate]class expression [Translate]delete operator [Translate]function expression [Translate]function* expression [Translate]in operator [Translate]instanceof [Translate]new operator [Translate]new.target [Translate]super [Translate]thistypeofvoid operator [Translate]yield [Translate]yield* [Translate]

Statements & declarations
Legacy generator function [Translate] async function [Translate]區塊breakclass [Translate]const [Translate]continue [Translate]debugger [Translate]default [Translate]do...while [Translate]empty [Translate]export [Translate]for [Translate]  for each...in [Translate]for...infor...of [Translate]function [Translate]function*if...else [Translate]import [Translate]label [Translate]letreturn [Translate]switch [Translate]throw [Translate]try...catch [Translate]varwhile [Translate] with [Translate]

Functions
Arguments 物件的使用箭頭函數 (Arrow Function)Default parameters [Translate]Method definitions [Translate]Rest parameters [Translate]getter [Translate]setter [Translate]

Classes
constructor [Translate]extends [Translate]static

Errors
Error: Permission denied to access property "x" [Translate]InternalError: too much recursionRangeError: argument is not a valid code point [Translate]RangeError: invalid array length [Translate]RangeError: precision is out of range [Translate]RangeError: radix must be an integer [Translate]RangeError: repeat count must be less than infinity [Translate]RangeError: repeat count must be non-negative [Translate]ReferenceError: "x" is not definedReferenceError: assignment to undeclared variable "x" [Translate]ReferenceError: deprecated caller or arguments usage [Translate]ReferenceError: invalid assignment left-hand side [Translate]ReferenceError: reference to undefined property "x" [Translate]SyntaxError: "use strict" not allowed in function with non-simple parameters [Translate]SyntaxError: "x" is not a legal ECMA-262 octal constant [Translate]SyntaxError: JSON.parse: bad parsing [Translate]SyntaxError: Malformed formal parameter [Translate]SyntaxError: Unexpected token [Translate]SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead [Translate]SyntaxError: missing ) after argument list [Translate]SyntaxError: missing ; before statement [Translate]SyntaxError: missing ] after element list [Translate]SyntaxError: missing } after property list [Translate]SyntaxError: redeclaration of formal parameter "x" [Translate]SyntaxError: return not in functionSyntaxError: test for equality (==) mistyped as assignment (=)? [Translate]SyntaxError: unterminated string literal [Translate]TypeError: "x" has no properties [Translate]TypeError: "x" is (not) "y" [Translate]TypeError: "x" is not a constructor [Translate]TypeError: "x" is not a functionTypeError: "x" is read-only [Translate]TypeError: More arguments needed [Translate]TypeError: invalid Array.prototype.sort argument [Translate]TypeError: property "x" is non-configurable and can't be deleted [Translate]TypeError: variable "x" redeclares argument [Translate]Warning: -file- is being assigned a //# sourceMappingURL, but already has one [Translate]Warning: JavaScript 1.6's for-each-in loops are deprecated [Translate]Warning: unreachable code after return statement [Translate]

Misc

Lexical grammar
JavaScript data structures
Enumerability and ownership of properties
Iteration protocols
Strict mode
Transitioning to strict mode
Template literals
Deprecated features


New in JavaScript
ECMAScript 5 support in Mozilla [Translate]ECMAScript 6 support in Mozilla [Translate]ECMAScript Next support in Mozilla [Translate]Firefox JavaScript changelog [Translate]New in JavaScript 1.1New in JavaScript 1.2New in JavaScript 1.3New in JavaScript 1.4New in JavaScript 1.5JavaScript 1.6 新鮮事JavaScript 1.7 新鮮事JavaScript 1.8 新鮮事JavaScript 1.8.1 新鮮事New in JavaScript 1.8.5

Documentation:
Useful lists

All pages index
Methods index
Properties index
Pages tagged "JavaScript"


Contribute

JavaScript doc status
The MDN project









 





















JavaScript | MDN















































































MDN’s new design is in Beta! A sneak peek: https://blog.mozilla.org/opendesign/mdns-new-design-beta/



跳到主要內容
選擇語言
跳到搜尋




mozilla


Mozilla Developer Network




            登入
            













語言



English (US) (en-US)
عربي (ar)
Bamanankan (bm)
বাংলা (বাংলাদেশ) (bn-BD)
বাংলা (ভারত) (bn-IN)
Català (ca)
Čeština (cs)
Deutsch (de)
Ελληνικά (el)
Español (es)
فارسی (fa)
Français (fr)
עברית (he)
हिन्दी (भारत) (hi-IN)
magyar (hu)
Bahasa Indonesia (id)
Italiano (it)
日本語 (ja)
ქართული (ka)
Taqbaylit (kab)
한국어 (ko)
Melayu (ms)
မြန်မာဘာသာ (my)
Nederlands (nl)
Polski (pl)
Português (do Brasil) (pt-BR)
Português (Europeu) (pt-PT)
Română (ro)
Русский (ru)
Shqip (sq)
Српски (sr)
Svenska (sv-SE)
தமிழ் (ta)
ไทย (th)
Türkçe (tr)
Українська (uk)
Tiếng Việt (vi)
中文 (簡體) (zh-CN)




編輯
進階



進階

歷史紀錄
列印此文件













iigmir



cwlin0416



thomasaria



dolphinlin



pa-da



jackblackevo



mai7855



Shiyou



wildsky



teoli



steely.wing



ethertank



sycheng



sailplaneTW



linhomeyeu



happysadman



Mgjbot



BobChao



Kourge



JavaScript











JavaScript (簡稱 JS) 是具有一級函數 (First-class functions) 的輕量級、直譯式或即時編譯（JIT-compiled）的程式語言。它因為用作網頁的腳本語言而大為知名，但也用於許多非瀏覽器的環境，像是 node.js、Apache CouchDB。JavaScript 是一個基於原型的 (Prototype-based)、多典範的、動態語言，支援物件導向、指令式以及宣告式 (如函數式程式設計) 風格。 閱讀關於 JavaScript 以取得更多資訊。


本章節主要說明 JavaScript，不涉及網頁特有項目或主機環境。有關網頁特有的 APIs ，請參考 Web API 和 DOM。
JavaScript 所採用的標準是 ECMAScript，自 2012 年起，所有現代的瀏覽器均已全面支援 ECMAScript 5.1。較老舊的瀏覽器最少也會支援 ECMAScript 3。ECMA International 於 2015 年 6 月 17 日發布第六版的 ECMAScript，其正式名稱是 ECMAScript 2015，原先被稱作 ECMAScript 6 或 ES6。從那時起， ECMAScript 標準的發布週期是一年，本文件參考了最新的草稿版本，也就是目前的 ECMAScript 2017。
別搞混了 JavaScript 和 Java 程式語言。雖然 "Java" 和 "JavaScript" 都是 Oracle 公司在美國和其他國家的商標或註冊商標，但兩個語言有著非常不同的語法、語意和用途。



教學
透過指南和教學來學習編寫 JavaScript。
給完全新手
如果你想學習 JavaScript 但過去沒有 JavaScript 或程式設計經驗，請前往 Learning Area JavaScript topic。該處完整單元如下：

JavaScript 入門
說明一些基本問題像是「什麼是 JavaScript？」、「它看來像什麼？」、「它能做什麼？」，也討論 JavaScript 的主要特色，例如變數、字串、數值以及陣列。
JavaScript 組成元素
繼續我們對 JavaScript 主要基本特色的說明，焦點轉向經常碰到的程式碼區塊類型，像是條件式陳述、迴圈、函數以及事件。
介紹 JavaScript 物件
如果你想加深對 JavaScript 語言的認識並撰寫更有效率的程式，理解 JavaScript 的物件導向特質是件重要的事。

JavaScript 指南

 
JavaScript 指南
更為詳細的 JavaScript 語言指南，供過去有 JavaScript 或其他語言的程式設計經驗的人看。



中等

重新介紹 JavaScript
為了那些以為他們懂 JavaScript 的人寫的簡介。


JavaScript 資料結構
簡介在 JavaScript 可用的資料結構。
比較
JavaScript 提供了三種不同的數值比較方式：嚴謹的相等用 ===，寬鬆的相等用 ==，以及 Object.is() 方法。

進階

繼承與原型鍊
對於原型繼承的常見的迷思和誤解。
嚴謹模式
嚴謹模式會禁止您使用未初始化過的變數。這樣的限制源自於 ECMAScript 5 的規範，為了提高效率和簡化偵錯。
JavaScript 型別陣列
JavaScript 類型陣列提供一個存取二進制數據的機制。
記憶體管理
JavaScript 的記憶體生命週期和垃圾回收機制。
併行模組和事件循環
JavaScript 具有基於「事件循環」的併行模組。



參考
瀏覽完整的 JavaScript 參考文件。

標準內建物件
瞭解標準內建物件： Array、 Boolean、 Date、 Error、 Function、 JSON、 Math、 Number、 Object、 RegExp、 String、 Map、 Set、 WeakMap、 WeakSet 等等。
表式法與運算子
瞭解更多 JavaScript 運算子的行為：instanceof、 typeof、 new、 this、運算子優先序等等。
敘述和宣告
瞭解 do-while、for-in、 for-of、 try-catch、let、 var、 const、 if-else、 switch 和其他 JavaScript 敘述和關鍵字的運作方式。
函數
瞭解如何運用函數來開發你的應用程式。

工具與資源
有用的工具和資源幫助你更好的撰寫 JavaScript。

Firefox 開發工具
Scratchpad、Web Console、JavaScript Profiler、Debugger 等等。
JavaScript Shell
JavaScript Shell 讓你更快的測試片段的 JavaScript。
TogetherJS
合作更簡單了。藉著在你的網站增加 TogetherJS，你的用戶們能在網站上互助 in real time！
Stack Overflow
Stack Overflow 上有關 JavaScript 的問題。
JavaScript 版本和發行說明
瀏覽 JavaScript 的功能歷史和兼容狀態。
JSFiddle
編輯 JavaScript、CSS、HTML 並取得及時結果。可以使用外部資源和與在線上與你的夥伴協作。





Join the JavaScript community

Choose your preferred method for joining the discussion:

 郵件討論
 Google 群組
 feed 消息來源



IRC: #js (learn more)ES discuss: esdiscuss.orgSpiderMonkey: Project pageTwitter: @SpiderMonkeyJS


 

這份文件有幫助嗎？



是



否



感謝您！





文件標籤與貢獻者


標籤: 
    
JavaScript
入口
學習
所有類別



 此頁面的貢獻者:
iigmir, 
    
        cwlin0416, 
    
        thomasaria, 
    
        dolphinlin, 
    
        pa-da, 
    
        jackblackevo, 
    
        mai7855, 
    
        Shiyou, 
    
        wildsky, 
    
        teoli, 
    
        steely.wing, 
    
        ethertank, 
    
        sycheng, 
    
        sailplaneTW, 
    
        linhomeyeu, 
    
        happysadman, 
    
        Mgjbot, 
    
        BobChao, 
    
        Kourge


 最近更新:
iigmir,
                      Apr 10, 2017, 1:25:58 AM






瞭解網頁開發精華
發送最新最棒的 MDN 新聞到您的信件匣中。
電子報目前僅有英文版。






電子郵件





                我同意 Mozilla 依照 隱私權保護政策 當中描述的方式處理我的資訊。
                


立即註冊




感謝您！請到信箱收信確認訂閱。
若您先前沒有確認訂閱過 Mozilla 電子報，現在可能需要確認。請到信箱收信，或到垃圾信件匣中看看有沒有來自我們的訊息。
        

隱藏註冊電子報







詳見

JavaScript
Tutorials:
Complete beginners

JavaScript basics
JavaScript first steps
JavaScript building blocks
Introducing JavaScript objects


JavaScript Guide

Introduction
Grammar and types
Control flow and error handling
Loops and iteration
Functions
Expressions and operators
Numbers and dates
Text formatting
Regular expressions
Indexed collections
Keyed collections
Working with objects
Details of the object model
Iterators and generators
Meta programming


Intermediate

A re-introduction to JavaScript
JavaScript data structures
Equality comparisons and sameness
Closures


Advanced

Inheritance and the prototype chain
Strict mode
JavaScript typed arrays
SIMD types
Memory Management
Concurrency model and Event Loop


References:
Built-in objects
ArrayArrayBuffer AsyncFunction [Translate] Atomics [Translate]Boolean [Translate]DataViewDateErrorEvalError [Translate]Float32Array [Translate]Float64Array [Translate]FunctionGenerator [Translate]GeneratorFunction [Translate]InfinityInt16Array [Translate]Int32Array [Translate]Int8Array [Translate]InternalError [Translate]Intl [Translate]Intl.Collator [Translate]Intl.DateTimeFormat [Translate]Intl.NumberFormat [Translate] Iterator [Translate]JSONMapMathNaNNumberObject ParallelArray [Translate]PromiseProxy [Translate]RangeError [Translate]ReferenceError [Translate]Reflect [Translate]RegExp [Translate] SIMD [Translate] SIMD.Bool16x8 [Translate] SIMD.Bool32x4 [Translate] SIMD.Bool64x2 [Translate] SIMD.Bool8x16 [Translate] SIMD.Float32x4 [Translate] SIMD.Float64x2 [Translate] SIMD.Int16x8 [Translate] SIMD.Int32x4 [Translate] SIMD.Int8x16 [Translate] SIMD.Uint16x8 [Translate] SIMD.Uint32x4 [Translate] SIMD.Uint8x16 [Translate]Set [Translate] SharedArrayBuffer [Translate] StopIteration [Translate]字串Symbol [Translate]SyntaxError [Translate]TypeError [Translate]TypedArrayURIError [Translate]Uint16Array [Translate]Uint32Array [Translate]Uint8Array [Translate]Uint8ClampedArray [Translate]WeakMap [Translate]WeakSet [Translate] WebAssembly [Translate]decodeURI() [Translate]decodeURIComponent() [Translate]encodeURI() [Translate]encodeURIComponent() [Translate] escape() [Translate]eval() [Translate]isFinite() [Translate]isNaN()nullparseFloat() [Translate]parseInt()undefined unescape() [Translate]uneval() [Translate]

Expressions & operators
Arithmetic operators [Translate] Array comprehensions [Translate]Assignment operators [Translate]Bitwise operators [Translate]逗號運算子比較運算子Conditional (ternary) Operator [Translate]解構賦值Expression closures [Translate] Generator comprehensions [Translate]Grouping operator [Translate]Legacy generator function expression [Translate]Logical Operators [Translate]Object initializer [Translate]運算子優先等級Property accessors [Translate]Spread syntax [Translate] async function expression [Translate] awaitclass expression [Translate]delete operator [Translate]function expression [Translate]function* expression [Translate]in operator [Translate]instanceof [Translate]new operator [Translate]new.target [Translate]super [Translate]thistypeofvoid operator [Translate]yield [Translate]yield* [Translate]

Statements & declarations
Legacy generator function [Translate] async function區塊breakclass [Translate]const [Translate]continue [Translate]debugger [Translate]default [Translate]do...while [Translate]empty [Translate]exportfor [Translate]  for each...in [Translate]for...infor...of [Translate]function declaration [Translate]function*if...else [Translate]importlabel [Translate]letreturn [Translate]switch [Translate]throwtry...catch [Translate]varwhile [Translate] with [Translate]

Functions
Arguments 物件的使用箭頭函數 (Arrow Function)預設參數( Default parameters )Method definitions [Translate]Rest parameters [Translate]getter [Translate]setter [Translate]

Classes
建構子extends [Translate]static

Errors
Error: Permission denied to access property "x" [Translate]InternalError: too much recursionRangeError: argument is not a valid code point [Translate]RangeError: invalid array length [Translate]RangeError: invalid date [Translate]RangeError: precision is out of range [Translate]RangeError: radix must be an integer [Translate]RangeError: repeat count must be less than infinity [Translate]RangeError: repeat count must be non-negative [Translate]ReferenceError: "x" is not definedReferenceError: assignment to undeclared variable "x" [Translate]ReferenceError: deprecated caller or arguments usage [Translate]ReferenceError: invalid assignment left-hand side [Translate]ReferenceError: reference to undefined property "x" [Translate]SyntaxError: "0"-prefixed octal literals and octal escape seq. are deprecated [Translate]SyntaxError: "use strict" not allowed in function with non-simple parameters [Translate]SyntaxError: "x" is a reserved identifier [Translate]SyntaxError: JSON.parse: bad parsing [Translate]SyntaxError: Malformed formal parameter [Translate]SyntaxError: Unexpected token [Translate]SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead [Translate]SyntaxError: a declaration in the head of a for-of loop can't have an initializer [Translate]SyntaxError: applying the 'delete' operator to an unqualified name is deprecated [Translate]SyntaxError: for-in loop head declarations may not have initializers [Translate]SyntaxError: function statement requires a name [Translate]SyntaxError: identifier starts immediately after numeric literal [Translate]SyntaxError: illegal character [Translate]SyntaxError: invalid regular expression flag "x" [Translate]SyntaxError: missing ) after argument list [Translate]SyntaxError: missing ) after condition [Translate]SyntaxError: missing : after property id [Translate]SyntaxError: missing ; before statement [Translate]SyntaxError: missing = in const declaration [Translate]SyntaxError: missing ] after element list [Translate]SyntaxError: missing formal parameter [Translate]SyntaxError: missing name after . operator [Translate]SyntaxError: missing variable name [Translate]SyntaxError: missing } after function body [Translate]SyntaxError: missing } after property list [Translate]SyntaxError: redeclaration of formal parameter "x" [Translate]SyntaxError: return not in functionSyntaxError: test for equality (==) mistyped as assignment (=)? [Translate]SyntaxError: unterminated string literal [Translate]TypeError: "x" has no properties [Translate]TypeError: "x" is (not) "y"TypeError: "x" is not a constructor [Translate]TypeError: "x" is not a functionTypeError: "x" is not a non-null object [Translate]TypeError: "x" is read-only [Translate]TypeError: More arguments needed [Translate]TypeError: can't access dead object [Translate]TypeError: can't define property "x": "obj" is not extensible [Translate]TypeError: can't redefine non-configurable property "x" [Translate]TypeError: cyclic object value [Translate]TypeError: invalid 'in' operand "x" [Translate]TypeError: invalid Array.prototype.sort argument [Translate]TypeError: invalid arguments [Translate]TypeError: invalid assignment to const "x" [Translate]TypeError: property "x" is non-configurable and can't be deleted [Translate]TypeError: setting getter-only property "x" [Translate]TypeError: variable "x" redeclares argument [Translate]URIError: malformed URI sequence [Translate]Warning: -file- is being assigned a //# sourceMappingURL, but already has one [Translate]Warning: 08/09 is not a legal ECMA-262 octal constant [Translate]Warning: Date.prototype.toLocaleFormat is deprecated [Translate]Warning: JavaScript 1.6's for-each-in loops are deprecated [Translate]Warning: String.x is deprecated; use String.prototype.x instead [Translate]Warning: expression closures are deprecated [Translate]Warning: unreachable code after return statement [Translate]

Misc

JavaScript technologies overview
Lexical grammar
JavaScript data structures
Enumerability and ownership of properties
Iteration protocols
Strict mode
Transitioning to strict mode
Template literals
Deprecated features


New in JavaScript
ECMAScript 2015 support in Mozilla [Translate]ECMAScript 5 support in Mozilla [Translate]ECMAScript Next support in Mozilla [Translate]Firefox JavaScript changelog [Translate]New in JavaScript 1.1New in JavaScript 1.2New in JavaScript 1.3New in JavaScript 1.4New in JavaScript 1.5JavaScript 1.6 新鮮事JavaScript 1.7 新鮮事JavaScript 1.8 新鮮事JavaScript 1.8.1 新鮮事New in JavaScript 1.8.5

Documentation:
Useful lists

All pages index
Methods index
Properties index
Pages tagged "JavaScript"


Contribute

JavaScript doc status
The MDN project









 




















程式語言 - 維基百科，自由的百科全書































 







程式語言

維基百科，自由的百科全書


					前往：					導覽，					搜尋






本條目需要補充更多來源。（2017年2月10日） 
請協助添加多方面可靠來源以改善這篇條目，無法查證的內容可能會因為異議提出而移除。 

















中國大陸
程序設計語言、編程語言


臺灣
程式設計語言、程式語言


港澳
程序設計語言、編程語言






程式設計語言中的經典語句：
Hello World。


程式語言（英語：programming language），是用來定義電腦程式的形式語言。它是一種被標準化的交流技巧，用來向電腦發出指令。一種電腦語言讓程式設計師能夠準確地定義電腦所需要使用的資料，並精確地定義在不同情況下所應當採取的行動。
最早的程式語言是在電腦發明之前產生的，當時是用來控制提花織布機（英語：Jacquard loom）及自動演奏鋼琴的動作[1]。在電腦領域已發明瞭上千不同的編程語言，而且每年仍有新的編程語言誕生。很多編程語言需要用指令方式說明計算的程式，而有些編程語言則屬於宣告式編程，說明需要的結果，而不說明如何計算。
程式語言的描述一般可以分為語法（英語：Syntax (programming languages)）及語義。語法是說明程式設計語言中，哪些符號或文字的組合方式是正確的，語義則是對於編程的解釋[2]。有些語言是用規格檔案定義，例如C語言的規格檔案也是ISO標準中一部份，2011年後的版本為ISO/IEC 9899:2011[3]，而其他語言（像Perl）有一份主要的程式語言實現（英語：Programming language implementation）檔案，視為是參考實現（英語：reference implementation）。



目錄


1 概論
2 特點

2.1 資料和資料結構
2.2 指令及流程控制
2.3 參照機制和重用


3 功能

3.1 實體的傳輸連結
3.2 應用程式的發展


4 使用

4.1 量測各程式語言的使用量


5 歷史
6 參見
7 參考文獻
8 延伸閱讀
9 外部連結



概論[編輯]
程式語言原本是被設計成專門使用在電腦上的，但它們也可以用來定義演算法或者資料結構。正是因為如此，程式設計師才會試圖使程式代碼更容易閱讀。
程式語言往往使程式設計師能夠比使用機器語言更準確地表達他們所想表達的目的。對那些從事電腦科學的人來說，懂得程式設計語言是十分重要的，因為在當今所有的計算都需要程式設計語言才能完成。
目前發明瞭許多的程式語言，程式語言本身可能修改以符合新需求，或是和其他的程式語言結合使用，儘管人們多次試圖創造可以符合所有需求的通用程式語言，但以「符合所有需求」的標準來看，這些嘗試都失敗了[來源請求]。之所以有那麼多種不同的程式語言存在的原因是，編寫程式的初衷其實也各不相同；新手與老手之間技術的差距非常大，而且有許多語言對新手來說太難學；還有，不同程式之間的執行成本（runtime cost）各不相同。
有許多用於特殊用途的語言，只在特殊情況下使用。例如，PHP專門用來顯示網頁；Perl更適合文字處理；C語言被廣泛用於作業系統和編譯器的開發（所謂的系統編程）。[4]
高階語言的出現使得電腦程式設計語言不再過度地依賴某種特定的機器或環境。這是因為高階語言在不同的平臺上會被編譯成不同的機器語言，而不是直接被機器執行。最早出現的程式語言之一FORTRAN的一個主要目標，就是實現平臺獨立。
雖然大多數的語言既可被編譯又可被解譯，但大多數僅在一種情況下能夠良好執行。在一些編程系統中，程式要經過幾個階段的編譯，一般而言，後階段的編譯往往更接近機器語言。這種常用的使用技巧最早在1960年代末用於BCPL，編譯程式先編譯一個叫做「0代碼」的轉換程式（representation），然後再使用虛擬器轉換到可以執行於機器上的真實代碼。這種成功的技巧之後又用於Pascal和P-code，以及Smalltalk和二進位碼，在很多時候，中間過渡的代碼往往是解譯，而不是編譯的。
如果所使用的翻譯的機制是將所要翻譯的程式代碼作為一個整體翻譯，並之後執行內部格式，那麼這個翻譯過程就被成為編譯。因此，一個編譯器是一個將人可閱讀的程式文字（叫做原始碼）作為輸入的資料，然後輸出執行檔（object code）。所輸出的執行檔可以是機器語言，由電腦的中央處理器直接執行，或者是某種模擬器的二進位代碼。
如果程式代碼是在執行時才即時翻譯，那麼這種翻譯機制就被稱作直譯。經直譯的程式執行速度往往比編譯的程式慢，但往往更具靈活性，因為它們能夠與執行環境互相作用。
特點[編輯]
每一種程式設計語言可以被看作是一套包含語法、詞彙和含義的正式規範。
這些規範通常包括：

資料和資料結構
指令及流程控制
參照機制和重用
設計哲學

程式語言不成文規定：

識別元（Identifier）命名常規

大多數被廣泛使用或經久不衰的語言，擁有負責標準化的組織，經常會晤來創造及發布該語言的正式定義，並討論擴充功能或貫徹現有的定義。
資料和資料結構[編輯]
現代電腦內部的資料都只以二元方式儲存，即開-關模式（on-off）。現實世界中代表資訊的各種資料，例如名字、銀行帳號、度量以及同樣低端的二後設資料，都經由程式設計語言整理，成為高端的概念。
一個程式中專門處理資料的那個系統被稱為程式語言的型態系統（type system）；對型態系統的研究和設計被稱為型態理論（type theory）。語言可以被分為靜態型態系統（statically typed systems），例如C++和Java，和動態型態系統（dynamically typed systems），例如Lisp，JavaScript，Tcl和Prolog。前者可被進一步分為包含宣告型態（manifest type）的語言，即每一個變數和函式的型態都清楚地宣告，或type-inferred語言（例如MUMPS，ML）。
大多數語言還能夠在內建的型態基礎上組合出複雜的資料結構型態（使用陣列，列表，堆疊，檔案等等）。物件導向語言（Object Oriented Language，又譯作「物件導向語言」）允許程式設計師定義新的資料型態，即物件（objects），以及執行於該物件的函式（functions）和方法（methods）。
除了何時以及如何確定運算式和型態的聯繫，另外一個重要的問題就是語言到底定義了哪些型態，以及允許哪些型態作為運算式的值。諸如C程式語言之類的低端語言允許程式命名記憶體位置、記憶體區域以及編譯時的常量；ANSI C甚至允許運算式返回結構值（struct values）。功能性的語言一般允許變數直接使用執行時計算出的值，而不是指出該值可能儲存的記憶體位址。
常見的資料結構：

陣列
記錄
連結串列
堆疊
佇列
樹
圖
堆
雜湊

指令及流程控制[編輯]
一旦資料被確定，機器必須被告知如何對這些資料進行處理。較簡單的指令可以使用關鍵字或定義好的語法結構來完成。不同的語言利用序列系統來取得或組合這些語句。除此之外，一個語言中的其他指令也可以用來控制處理的過程（例如分支、迴圈等）。
參照機制和重用[編輯]
參照的中心思想是必須有一種間接設計儲存空間的方法。最常見的方法是通過命名變數。根據不同的語言，進一步的參照可以包括指向其他儲存空間的指標。還有一種類似的方法就是命名一組指令。大多數程式設計語言使用宏呼叫、過程呼叫或函式呼叫。使用這些代替的名字能讓程式更靈活，並更具重用性。
功能[編輯]
程式語言可透過機械、電腦來達成與完成人類需求的演算、功能與目的。
實體的傳輸連結[編輯]
透過低階程式語言或高階程式語言，將實體間接達成傳輸連結或控制實體。
應用程式的發展[編輯]
高階程式語言可發展多功能的應用程式軟體，如：作業系統、工程計算機軟體、轉檔軟體、燒錄軟體、播放軟體、網頁設計…等。
使用[編輯]
程式語言已超過上千種，大部份用在計算領域[5]。 程式語言和其他人類使用的語言在精準度和完整性上有很大的差異。
人們在用自然語言溝通時，內容可以不明確，甚至小的錯誤，而聽的人仍然可能理解說的人想要說的內容。但電腦不同，電腦「只做被告知要做的事」，無法理解程式設計者想要寫的程式。語言的定義、編程以及編程輸入的組合需完整定義程式執行時的外部特性。另一方面，演算法的概念可以表示為虛擬碼，是交織有自然語言和程式碼的程式語言，和其他人溝通時使用，此時就不一定要那麼精確。
程式語言提供定義片段資料的結構化機制，以及在資料中需自動進行的運算或是轉換。程式設計者利用程式語言提供的抽象化來表示計算的相關概念，這些概念則是由許多最簡單元素（稱為語言基元（英語：language primitive））的集合所組成[6]。程式設計就是指利用語言基元來撰寫新的程式，或是將舊程式改寫，配合新的應用或是新的環境。
電腦程式語言可能是以批次處理任務的方式執行，中間不需和使用者互動，也有可能是由用戶在直譯器中指定執行特定的的程式。若某一程式語言的是目的是在某一應用軟體（如Unix shell）或其他命令列介面執行其他程式，此程式語言會稱為手稿語言。
量測各程式語言的使用量[編輯]
很難去比較哪一種程式語言的使用量最大，而且「使用量」一詞也很難定義。某一種程式語言可能需要較多的時間進行開發，另一種程式語言可能產生的程式碼較長，第三種程式語言可能在CPU中執行的時間較長。有些語言在特定的領域仍十分受歡迎，例如COBOL在公司的資料中心仍相當常用，多半是在大型計算機上執行[7][8]，Fortran常用在科學及工程應用，C語言常用在嵌入式應用及作業系統中等。
有許多不同的量測方式不同程式語言使用的程度，不同的量測方式也有其各自的誤差：

計算徵才廣告中提到各程式語言的次數[9]。
計算教授或描述各程式語言書籍賣出的數量[10]。
佔計各程式語言目前仍在使用程式碼的長度，不過可能會低估一些公開搜尋不容易找到的程式語言[11]。
利用搜尋引擎計算找到不同程式語言的次數。

langpop.com在2013年整理了不同網站的資料，提出十大最受歡迎的語言如下：C語言、Java、PHP、JavaScript、C++、Python、Shell指令碼、Ruby、Objective-C及C♯.[12]。
歷史[編輯]
主條目：程式語言歷史
1940年代當電腦剛剛問世的時候，程式設計師必須手動控制電腦。當時的電腦十分昂貴，唯一想到利用程式設計語言來解決問題的人是德國工程師康拉德·楚澤。
幾十年後，電腦的價格大幅度下跌，而電腦程式也越來越複雜。也就是說，開發時間已經遠比執行時間寶貴。
於是，新的整合、可視的開發環境越來越流行。它們減少了所付出的時間、金錢（以及腦細胞）。只要輕敲幾個鍵，一整段代碼就可以使用了。這也得益於可以重用的程式代碼庫[13]。
參見[編輯]


程式設計語言列表
編譯器、直譯器
Hello World程式
手稿語言
程式設計
電腦科學、基本的電腦科學主題列表
教育程式語言
文學編程
程式語言理論
虛擬碼
軟體工程、軟體工程主題列表




電腦程式設計主題



參考文獻[編輯]


^ Ettinger, James (2004) Jacquard's Web, Oxford University Press
^ 語言系統簡介. .nuu.edu.tw. [2014-06-05]. 
^ C++語言漫談 (PDF). [2014-06-05]. 
^ MXL
^ HOPL: an interactive Roster of Programming Languages. Australia: Murdoch University. [1 June 2009]. This site lists 8512 languages. 
^ Abelson, Sussman, and Sussman. Structure and Interpretation of Computer Programs. [3 March 2009]. 
^ Georgina Swan. COBOL turns 50. computerworld.com.au. 2009-09-21 [2013-10-19]. 
^ Ed Airey. 7 Myths of COBOL Debunked. developer.com. 2012-05-03 [2013-10-19]. 
^ Nicholas Enticknap. SSL/Computer Weekly IT salary survey: finance boom drives IT job growth. Computerweekly.com. [2013-06-14]. 
^ Counting programming languages by book sales. Radar.oreilly.com. 2 August 2006 [3 December 2010]. 
^ Bieman, J.M.; Murdock, V., Finding code on the World Wide Web: a preliminary investigation, Proceedings First IEEE International Workshop on Source Code Analysis and Manipulation, 2001
^ Programming Language Popularity. langpop.com. 2013-10-25 [2014-01-02]. 
^ Steven R. Fischer,. A history of language,. Reaktion Books,. 2003,. ISBN 186189080X.  請檢查|date=中的日期值 (幫助)


延伸閱讀[編輯]


Abelson, Harold; Sussman, Gerald Jay. Structure and Interpretation of Computer Programs 2nd. MIT Press. 1996. 
Raphael Finkel: Advanced Programming Language Design, Addison Wesley 1995.
Daniel P. Friedman, Mitchell Wand, Christopher T. Haynes: Essentials of Programming Languages, The MIT Press 2001.
Maurizio Gabbrielli and Simone Martini: "Programming Languages: Principles and Paradigms", Springer, 2010.
David Gelernter, Suresh Jagannathan: Programming Linguistics, The MIT Press 1990.
Ellis Horowitz (ed.): Programming Languages, a Grand Tour (3rd ed.), 1987.
Ellis Horowitz: Fundamentals of Programming Languages, 1989.
Shriram Krishnamurthi: Programming Languages: Application and Interpretation, online publication.
Bruce J. MacLennan: Principles of Programming Languages: Design, Evaluation, and Implementation, Oxford University Press 1999.
John C. Mitchell: Concepts in Programming Languages, Cambridge University Press 2002.
Benjamin C. Pierce: Types and Programming Languages, The MIT Press 2002.
Terrence W. Pratt and Marvin V. Zelkowitz: Programming Languages: Design and Implementation (4th ed.), Prentice Hall 2000.
Peter H. Salus. Handbook of Programming Languages (4 vols.). Macmillan 1998.
Ravi Sethi: Programming Languages: Concepts and Constructs, 2nd ed., Addison-Wesley 1996.
Michael L. Scott: Programming Language Pragmatics, Morgan Kaufmann Publishers 2005.
Robert W. Sebesta: Concepts of Programming Languages, 9th ed., Addison Wesley 2009.
Franklyn Turbak and David Gifford with Mark Sheldon: Design Concepts in Programming Languages, The MIT Press 2009.
Peter Van Roy and Seif Haridi. Concepts, Techniques, and Models of Computer Programming, The MIT Press 2004.
David A. Watt. Programming Language Concepts and Paradigms. Prentice Hall 1990.
David A. Watt and Muffy Thomas. Programming Language Syntax and Semantics. Prentice Hall 1991.
David A. Watt. Programming Language Processors. Prentice Hall 1993.
David A. Watt. Programming Language Design Concepts. John Wiley & Sons 2004.


外部連結[編輯]

開放式目錄計劃中和Computer Programming Languages相關的內容
開放式目錄計劃中和程式語言相關的內容
Syntax Patterns for Various Languages
電腦高階程式語言的發展歷程資訊圖










閱
論
編


程式語言分類






按平臺




.NET框架平臺語言



C++/CLI
C#
F#
IronPython
IronRuby
J#
Visual C#
VB.NET
Small Basic








Java虛擬機器上的語言



Java
Jython
JRuby
JScheme（英語：JScheme）
Groovy
Kawa（英語：Kawa）
Scala
Clojure
Kotlin








iOS蘋果手機平臺上的語言



Swift
Objective-C








Android手機平臺上的語言



Java








Fire OS（英語：Fire OS）手機平臺上的語言



Java








Windows Phone手機平臺上的語言



C#











按家族




C/C++語言



C
C++
Turbo C++
Borland C++
C++ Builder - C++/CLI
Visual C++元件擴充功能
Objective-C
Visual C++








BASIC語言




有行號



BASIC
BASICA
GW-BASIC
ETBASIC
GVBASIC








無行號



QBASIC
QuickBASIC
True BASIC
Turbo BASIC
PowerBASIC
FreeBasic
DarkBASIC
Visual Basic
Gambas
VB.NET
VBScript
VBA
REALbasic
Small Basic











Pascal/Delphi語言



Pascal
Turbo Pascal
Object Pascal
Free Pascal
Delphi
Lazarus











按範式




聲明式




函數式




Lisp家族



LISP
Scheme
Common Lisp
Clojure
Racket








ML家族



ML
Standard ML
OCaml
F#











Haskell
Scala
Erlang
Elixir
Clean
Miranda
Logo











邏輯式



Prolog











命令式




結構化




程序式



BASIC
Fortran
C
Pascal
Go








物件導向



Smalltalk
Java
C#
Objective-C
C++
Eiffel
Python
Ruby
Rust
Swift











非結構化







COBOL














超編程




泛型




模板



C++
D











Ada
C#
Delphi
Eiffel
Java
Swift
Visual Basic .NET











反射化



C#
ECMAScript
Java
Perl
PHP
Python
R
Ruby














手稿語言







Lua
Perl
PHP
Python
Ruby
ASP
JSP
Tcl/Tk
VBScript
AppleScript
AAuto（基於Lua）








ECMAScript衍生語言



ActionScript
CoffeeScript
Dart
DMDScript
ECMAScript
JavaScript
JScript
TypeScript








Shell語言



sh
bash
sed
awk
PowerShell
csh
tcsh
ksh
zsh











專業工具語言




科學與統計計算



FORTRAN
SAS
MATLAB
Scilab
GNU Octave
R
S-Plus（英語：S-Plus）
Mathematica
Maple
Julia








GPU用著色器語言



Cg
GLSL
HLSL








資料庫相關程式語言



xBase（英語：xBase）

Clipper
Visual FoxPro


SQL

PL/SQL
T-SQL
SQL/PSM（英語：SQL/PSM）


LINQ
XQuery（英語：XQuery）








置標語言




SGML家族




XML家族



XML
SVG
XML Schema
XSLT
XHTML
MathML
XAML
SSML











SGML
HTML














Curl











工業與輔助設計



AutoCAD











其它



組合語言
ALGOL
APL/J
Falcon
Forth
Io
MUMPS（英語：MUMPS）
PL/I
PostScript
REXX
SAC
Self
Simula
















閱
論
編


電腦語言分類









架構描述語言
硬體描述語言
標記語言
建模語言（英語：Modeling language）
程式語言
查詢語言
規約語言
樣式表語言（英語：Style sheet language）
模板語言
轉換語言（英語：Transformation language）
















閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類系統進行分類。











權威控制



LCCN: sh85107313
GND: 4047409-4
BNF: cb13318353n（資料）
NDL: 00569224












 
						取自 "https://zh.wikipedia.org/w/index.php?title=編程語言&oldid=44047976"					
3 個分類：程序設計語言人工語言計算機技術隱藏分類：引文格式1錯誤：日期自2017年2月需補充來源的條目拒絕當選首頁新條目推薦欄目的條目自2017年2月有未列明來源語句的條目含有英語的條目包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansAlemannischአማርኛAragonésالعربيةمصرىঅসমীয়াAsturianuAzərbaycancaتۆرکجهБашҡортсаBoarischŽemaitėškaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBrezhonegBosanskiᨅᨔ ᨕᨘᨁᨗCatalàMìng-dĕ̤ng-ngṳ̄کوردیČeštinaЧӑвашлаCymraegDanskDeutschZazakiΕλληνικάEnglishEsperantoEspañolEestiEuskaraفارسیSuomiFrançaisGaeilgeGalegoעבריתहिन्दीHrvatskiHornjoserbsceMagyarՀայերենInterlinguaBahasa IndonesiaInterlingueIlokanoIdoÍslenskaItaliano日本語La .lojban.Basa JawaქართულიTaqbaylitҚазақшаភាសាខ្មែរ한국어КыргызчаLatinaLëtzebuergeschLumbaartLietuviųLatviešuОлык марийМакедонскиമലയാളംМонголमराठीBahasa MelayuMirandésမြန်မာဘာသာPlattdüütschनेपालीNederlandsNorsk nynorskNorsk bokmålOccitanਪੰਜਾਬੀPolskiپنجابیPortuguêsRomânăРусскийРусиньскыйСаха тылаScotsSrpskohrvatski / српскохрватскиසිංහලSimple EnglishSlovenčinaSlovenščinaShqipСрпски / srpskiBasa SundaSvenskaதமிழ்తెలుగుТоҷикӣไทยTagalogTürkçeТатарча/tatarçaУкраїнськаاردوOʻzbekcha/ўзбекчаTiếng ViệtWinarayმარგალურიייִדישYorùbáBân-lâm-gú粵語 
編輯連結 





 本頁面最後修訂於2017年4月18日 (週二) 16:55。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 


















物件導向程式設計 - Crsintro























物件導向程式設計

出自Crsintro

跳轉到: 導航, 搜尋 



 物件導向程式設計


 OBJECT-ORIENTED SOFTWARE DESIGN


 課程編號
 902 10730


 學分數
 3


 必選修
 必帶


 修課年級
 學士班 1 年級


 修課學期
 下學期


 課程長度
 半年


 目前授課教授
 林軒田


 擋修課程



 建議先修
 計算機程式設計


 上課時間
 [Mon: 234 (單班)]
[Tue: 678 (雙班)]



在物件導向程式設計這門課當中，我們將學習以物件的角度來設計一個程式、組織我們的程式碼。我們會學到類別(class)、物件(object)、方法(method)、封裝(encapsulation)、繼承(inheritance)等重要的「物件導向程式設計」的概念。除此之外，課程還會提到一些和 Java 程式語言有關的語法。

目錄

1 課程內容
2 指定教科書
3 額外參考書
4 歷年課程網頁


  課程內容 
在上學期的計算機程式設計當中，我們學到瞭如何寫一個程式與如何告訴電腦該怎麼去工作。在該課程當中，我們的想法都會是「該怎麼去做一件事情」，所以我們的程式的組識方式十之八九就是會有數個函式，每一個函式就負責一些工作。我們稱這種程式設計典範(Programming Paradigm)為程序導向程式設計(Procedural-oriented Programming)，遵從這個設計典範的程序員，在撰寫程式或者資訊系統的時候，會把大工作分解成數個小工作，直到工作變得夠簡單，就直接寫一個函式去處理它。
然而在實際情況中，程序導向程式設計在一個很大的資訊系統當中是不敷使用的。過去的經驗告訴我們，若只採用程序導向程式設計，即便每一個函式都設計得很好（功能明確簡單），我們的程式碼的重複利用率(Code reuse)還是很有限。更不用說程序導向程式設計本身帶有一些藝術的成份。不是每個人都寫得出容易閱讀、容易維護的程式碼。
經過數十年的演進，有一套方法在激烈的競爭中脫穎而出，那就是「物件導向程式設計」。他主張我們應該要從「物件」的角度去設計一個系統、去寫我們的程式。而「物件導向程式設計」這門課就是要教我們從物件的角度去設計程式，教我們一些物件導向程式設計背後的想法。
本課程將會教授 Java 程式語言。做為一個物件導向的程式語言，Java 提供了一些語法構件，如 class, extends, implements, public, private 等等，讓我們可以更容易地處理物件。
以下是本課程的相關主題：

 如何撰寫 Java 程式 這一部分通常會介紹 Javac (Java 的編譯器)、Javadoc (Java 特有的文件生成器)、Java (JVM，Java 的執行環境) 等 Java 環境的工具鏈(Toolchain)。
 Class、Object 介紹「類別」的概念。告訴我們如何把現實中的物件分門別類、如何從現實的物件中提取有用的性質、如何把一個具體的物件變成一個抽象的類別。例如：我手上有一臺 MP3 Player，你也有一臺，我想要寫一個程式模擬這二個 MP3 Player 的行為我們該怎麼做？
 Method 介紹物件的「方法」。和我們在 C 程式語言中學到的函式很像，都是一大堆表達式、述句、指令的集合，用以實作某個「功能」。不過和 C 程式語言中的函式不同，Method 是以物件為中心，我們設計 Method 的時候考量的是一個物件可以做什麼事，例如像是 MP3 Player 可以有一個 "Play" Method，用來撥放音樂。
 Encapsulation 介紹類別的「封裝」。也就是每一個類別對外只提供必要的介面、隱藏內部的實作。一個封裝完善的類別，可以讓我們隨意地修改其內部實作，而且不必更新類別的使用者(其他的類別)。例如我們的 MP3 Player 只會提供播放、暫停、關機等介面，我們不會也不需要知道它內部的電路是長什麼樣子。
 Inheritance介紹類別與類別之間的「繼承」。在物件導向程式設計當中，我們有「繼承」語意可以幫助我們重覆利用我們現有的程式碼。例如：我們如果要寫一個新的 MP3 Player Touched 類別，為我的 MP3 Player 加上觸控的功能，我們的新類別 MP3 Player Touched 可以繼承 MP3 Player，然後再加上自己的 touch method。
 Polymorphism介紹「多型」的概念。當我們同時有二個子類別繼承同一個父類別時，二個子類別的 Method 的實作可能有所不同，但是我們可以用同樣的函式名稱去呼叫他們，我們稱之為多型。例如：我們可能有 MP3 Player Touched、MP3 Player Cellphone 二個子類別皆繼承自 MP3 Player。我們只要知道它是一個 MP3 Player 的物件，我們就可以用 Play 來播放音樂，而且當我們呼叫 Play 的時候，透過 Virtual Method Invocation 機制，程式會自動找出正確的子類別的 Play Method。
 Interface介紹「介面」的概念。當我們傳遞物件的時候，通常我們儘可能使用父類別的 Reference 來接收物件，可是有時候我們沒有辦法同時滿足繼承的要求（例如：有時候我們可能必需使用 Java 禁止的多重繼承），在這樣的情況下，我們可以使用 Interface。例如：Home Theatre 與 MP3 Player 都有 Play 功能，可是他們沒有共同的父類別，我們可以寫一個函式同時接收二種物件嗎？我們可以讓這二個類別同時實作 Playable Interface，然後函式就可以使用 Playable 的 Reference 來接收二者的物件。
 Exception例外處理機制。在物件導向程式設計當中，因為例外處理遠較過去程序導向程式設計複雜，所以我們有截然不同的例外處理機制。我們改用 try-catch 敘句來攔截例外，而使用 throw 敘句來拋出例外。
 Generic泛型，讓我們的容器(Container)可以裝載不同型別的資料，而不必重寫我們的容器。
 SynchronizeJava 在多執行緒之下，用以管控資料完整性的機制。

  指定教科書 
 W. Savitch, Absolute Java, 4th Ed., Pearson, 2009.

  額外參考書 
 Ken Arnold, James Gosling, David Holmes, The Java Programming Language, 4th edition, Addison-Wesley, 2006.
 Kathy Sierra, Bert Bates, Sierra Kathy, Bates Bert, Head First Java, 2nd edition, O'Reilly, 2005.

  歷年課程網頁 


 年度  季節  班別  教授  網址


 2010  春季  單雙  林軒田  http://ceiba.ntu.edu.tw/982oop http://www.csie.ntu.edu.tw/~htlin/course/oop10spring/


 2009  春季  單  陳俊良  http://ceiba.ntu.edu.tw/972oop


 2009  春季  雙  林軒田  http://ceiba.ntu.edu.tw/972oop_even http://www.csie.ntu.edu.tw/~htlin/course/oop09spring/





取自"https://council.csie.ntu.edu.tw/crsintro/index.php/%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88"
3個分類: 學士班 1 年級課程 | 必修課程 | 學士班 1 年級必修課程 






檢視


頁面
討論
原始碼
歷史 



個人工具


登入








搜尋




 
				




導航


首頁
現行課綱
必修課程分類
選修課程分類
課程列表
近期變動




工具箱


鏈入頁面
相關頁面修訂記錄
特殊頁面
可列印版 永久連結 








 本頁最後更動時間在 2010年4月27日 (星期二) 12:43。
本頁面已經被瀏覽11,395次。
本站的文字內容除另有聲明外，全部以 Attribution-Noncommercial 3.0 Unported 條款授權使用。
隱私政策
關於Crsintro
免責聲明





