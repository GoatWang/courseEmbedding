


高等作業系統期末專案—Linux多視窗系統 | 逍遙文工作室





































































廣告









逍遙文工作室



關於我 (About Me)
留言板 (Guestbook)
合作提案 (Cooperation Proposal)
贊助 (Sponsor)
創用 (Creative Commons)
iOS技術文章
 






					Just a Computer Graphics Studio & My Life				







高等作業系統期末專案—Linux多視窗系統 
2011 年 09 月 26 日



這是2011/01時高等作業系統所做的期末專案：Linux多視窗系統。
現行的作業系統皆用GUI來呈現畫面，更有作業系統有多個視窗可作切換，在此利用Linux平臺來簡易模擬多視窗系統的環境。
實做環境：繫上主機Linux作業系統，C語言加上ncurse函式庫。
上圖為老師建議的架構，然而我實做時扣除P0p、P1p、P2p、P3p和IPC_NOWAIT，直接將Pipe r0、Pipe r1、Pipe r2、Pipe r3通到Pm。
上圖為我產生四個子程序的步驟，是parent者一直都是parent，而child會在各層只產生一個。以層級來產生子程序，可使得parent得到四個子程序的ID，以便管理子程序。
上圖為我產生八個管線示意圖。
上圖為File Descripter結構的示意圖。
上圖為視窗安排方式，Win0到Win3為子視窗，主要視窗為Win4，主要來偵測鍵盤訊號以及子視窗的顯示。此外，我再創立四個視窗，專門來為Win0到Win3畫邊框的視窗，使得邊框獨立，不會因為子視窗更新內容而破壞邊框。
字元讀取與顯示：
敲打鍵盤後，由Win[4]接收訊號，因為關閉立即顯示模式，所以一讀到訊號後，馬上輸出到螢幕。
指令執行：
利用陣列儲存各字元，接著write()寫入管線，由另一程序read()讀取各字元，放入陣列後，執行system()，來達到目的。寫入可一次寫一整行，而讀取一次只讀一個字元，此時使用spinlock來判斷是否有字元可以讀取。
資料結構：
WINDOW *Win[5], *WinB[5], *Curwin;
//5個主視窗、5個邊框窗、目前視窗
int PidA, PidB, PidC, PidD, Pipe[8][2];
//4個子程序ID、8個管線
char Command[LINESIZE];
//命令列
演算法：
void Initial(void);//初始化環境
void CreateWindow();//創造視窗
void CreatePipe();//創造管線
void CreateProcess();//創造程序
void ManageProcess(WINDOW *Win[], int Pipe[][2]);//管理子程序
void ReadCommand(int fd, char Command[]);//讀取指令
由於時間的關係，我來不及實作subwindow，想要在按下ｈ鍵，就能立即顯示輔助視窗，裡頭寫如何使用本系統的指令表。還有游標控制ＩＯ等，但多做了：

特殊架構（非老師建議之架構）
彩色介面
ＴＡＢ切換視窗

在實做fork()的時候，若沒有在結束前把子程序殺掉就結束掉自己程序，會因為執行exit()而把子程序交還給系統，它們就變成佔系統資源的障礙物。題外話，若特別使用此方法來產生無限多個「流浪的程序」，將使得系統負擔沉重，可謂我已經製造了「病毒」！若要殺掉流浪程序，只要打指令kill -9 -1，便會殺掉包括目前程序的所有你帳號所產生的程序，所以一按enter鍵，馬上會有訊息跳出說「Server unexpectedly closed network connection」，不知道指令怎麼用，就打「man kill」，會印出有關kill指令的用法。
 

廣告




 


分享：）Tweet更多列印電子郵件請按讚：喜歡 載入中...

相關
 

分類：
課業, 成果
發表留言


資料庫期末專案—Windows Live Contact Information
新學期對計圖的期待



發表留言 取消回覆 



在此輸入你的回應…




在下方填入你的資料或按右方圖示以社群網站登入：



























 
 


電子郵件 (必) （電子郵件地址不會被公開）



名稱 (必)



個人網站














 您的留言將使用 WordPress.com 帳號。 ( 登出 / 變更 )












 您的留言將使用 Twitter 帳號。 ( 登出 / 變更 )












 您的留言將使用 Facebook 帳號。 ( 登出 / 變更 )












 您的留言將使用 Google+ 帳號。 ( 登出 / 變更 )




取消
連結到 %s




 透過電子郵件通知我後續回應。 有新文章時用Email通知我
 



 






廣告







HappyMan．GravatarI am a graduate student specializing in Computer Graphics.
HappyMan・迴響 
「廣角鏡拍攝婚宴敬酒 | 逍遙文工作室」對「訂婚和結婚禮金行情表」留言「廣角鏡拍攝婚宴敬酒 | 逍遙文工作室」對「阿弟完婚記」留言「Mozu's Art Studio」對「[圖解] 12星座的人生比例圖」留言「[圖解] 機車里程數保養 | 逍遙文工作…」對「機車10公里保養」留言「[香港尖沙嘴] 撲撲旅舍 Hopinn…」對「韓國釜山住三個旅館」留言 
HappyMan．搜尋


Search:

Go!

HappyMan．熱門文章 

						[圖解] 臺北車站立體導覽圖					



						咖啡成份比例圖解 (Illustrations Composition Ratio of Coffee Drinks)					



						如何用英語稱呼學長、學弟、學姊、學妹					



						臺北車站平面圖 (Taipei Main Station Plan)					



						韓國釜山地鐵路線圖 (South Korea Busan Subway Route Map)					



						[C++] 開啟檔案和寫入檔案 (Open File and Write File)					



						臺北捷運路線圖 (Taipei MRT Route Map)					



						[C++] string 和 char[]互轉 (string and char[] transform)					



						[OpenCV] 人臉偵測 (Face Detection)					



						[C++] 讀取檔案 (Read File)					

HappyMan．分類雲APP Blender C&C++ GLSL iOS OpenCV 休閒 圖表 娛樂 工具 技術 攝影 教學 旅遊 景點 服務 生活 研究 精品 繪圖 美食 計算機圖學 課業 論文 資訊 軟體 運動 閒聊 電影 音樂 HappyMan．月曆
九月 2011


日
一
二
三
四
五
六




« 八月
 
十月 »




 123


45678910


11121314151617


18192021222324


252627282930
 


  HappyMan．近期文章 

廣角鏡拍攝婚宴敬酒
2017 年 07 月 20 日


切換多個臉書帳號登入問題
2017 年 07 月 17 日


[圖解] 機車里程數保養
2017 年 07 月 16 日


[香港尖沙嘴] 撲撲旅舍 Hopinn
2017 年 07 月 15 日


[Ionic][AngularJS] 選單
2017 年 07 月 15 日


Google Map 時間軸
2017 年 07 月 12 日


[Ionic][AngularJS] 回傳呼叫 (Callback)
2017 年 07 月 11 日


香港地鐵路線圖 (Hong Kong Subway Route Map)
2017 年 07 月 10 日


[Git] Git查詢Repository位址
2017 年 07 月 09 日


[APP] 小米運動之睡眠
2017 年 07 月 08 日


 HappyMan．彙整 HappyMan．彙整

選擇月份
 2017 年 七月  (15)
 2017 年 六月  (17)
 2017 年 五月  (15)
 2017 年 四月  (10)
 2017 年 三月  (15)
 2017 年 二月  (10)
 2017 年 一月  (19)
 2016 年 十二月  (17)
 2016 年 十一月  (7)
 2016 年 十月  (14)
 2016 年 九月  (12)
 2016 年 八月  (10)
 2016 年 七月  (14)
 2016 年 六月  (10)
 2016 年 五月  (11)
 2016 年 四月  (18)
 2016 年 三月  (19)
 2016 年 二月  (19)
 2016 年 一月  (11)
 2015 年 十二月  (19)
 2015 年 十一月  (18)
 2015 年 十月  (20)
 2015 年 九月  (21)
 2015 年 八月  (13)
 2015 年 七月  (29)
 2015 年 六月  (8)
 2015 年 五月  (21)
 2015 年 四月  (25)
 2015 年 三月  (9)
 2015 年 二月  (17)
 2015 年 一月  (30)
 2014 年 十二月  (20)
 2014 年 十一月  (29)
 2014 年 十月  (11)
 2014 年 九月  (18)
 2014 年 八月  (23)
 2014 年 七月  (8)
 2014 年 六月  (21)
 2014 年 五月  (25)
 2014 年 四月  (21)
 2014 年 三月  (20)
 2014 年 二月  (7)
 2014 年 一月  (12)
 2013 年 十二月  (28)
 2013 年 十一月  (14)
 2013 年 十月  (16)
 2013 年 九月  (15)
 2013 年 八月  (15)
 2013 年 七月  (17)
 2013 年 六月  (9)
 2013 年 五月  (26)
 2013 年 四月  (17)
 2013 年 三月  (24)
 2013 年 二月  (19)
 2013 年 一月  (32)
 2012 年 十二月  (20)
 2012 年 十一月  (17)
 2012 年 十月  (41)
 2012 年 九月  (18)
 2012 年 八月  (3)
 2012 年 七月  (18)
 2012 年 六月  (38)
 2012 年 五月  (45)
 2012 年 四月  (31)
 2012 年 三月  (28)
 2012 年 二月  (40)
 2012 年 一月  (35)
 2011 年 十二月  (40)
 2011 年 十一月  (34)
 2011 年 十月  (45)
 2011 年 九月  (32)
 2011 年 八月  (32)
 2011 年 七月  (32)
 2011 年 六月  (34)
 2011 年 五月  (36)
 2011 年 四月  (37)
 2011 年 三月  (22)
 2011 年 二月  (2)
 2010 年 六月  (2)
 2010 年 五月  (1)

HappyMan．分類HappyMan．分類
選擇分類
研究  (562)
   APP  (60)
   生活  (90)
   生涯  (9)
   簡報  (6)
   繪圖  (165)
   過程  (18)
   金融  (1)
   關係  (10)
   藝術  (8)
   觀察  (16)
   設計  (16)
   論文  (27)
   資訊  (107)
   iPad  (7)
   Mac OS X  (9)
   健康  (11)
   創業  (4)
   圖表  (26)
   工作  (19)
   技術  (45)
   攝影  (23)
   文章  (6)
   服務  (22)
競賽  (3)
   PTC  (3)
閒聊  (179)
   故事  (7)
課業  (112)
   研討會  (2)
   遊戲設計  (12)
   電腦視覺  (2)
   計算理論  (6)
   計算機圖學  (42)
   高等演算法  (7)
   資訊產業動態與實務  (9)
   圖形辨識  (7)
   多媒體系統設計  (17)
   平行與分散式程式設計  (8)
   企業人才培訓  (2)
動畫  (1)
娛樂  (131)
   球類  (1)
   相片  (5)
   遊戲  (15)
      暗黑破壞神  (1)
      仙劍奇俠傳五  (4)
   藝術  (2)
   電視劇  (5)
   電影  (32)
   音樂  (20)
   動漫  (14)
   小說  (3)
   影片  (19)
   故事  (2)
   晚會  (7)
   書籍  (14)
實習  (14)
工具  (49)
   網頁  (10)
   軟體  (21)
   平臺  (15)
工作  (14)
   訪談  (1)
愛情  (8)
成果  (15)
   APP  (5)
   遊戲  (2)
教學  (503)
   AngularJS  (7)
   Blender  (23)
   C&C++  (39)
   練習  (2)
   DirectX  (1)
   DOS  (2)
   Excel  (3)
   英語  (1)
   Git  (2)
   GLSL  (26)
   Ionic  (10)
   iOS  (264)
   Java  (1)
   Javascript  (4)
   jQuery  (12)
   MatLAB  (1)
   Node  (2)
   notepad++  (2)
   Objective C  (10)
   OpenCV  (63)
   OpenGL  (7)
   OpenMP  (4)
   PhotoImpact  (2)
   php  (6)
   Swift  (5)
   TheFly  (2)
   watchOS  (4)
   WebCL  (1)
   WebGL  (5)
   wordpress  (3)
   Xamarin  (5)
未分類  (18)
活動  (3)
休閒  (266)
   節日  (4)
   精品  (55)
   美食  (106)
   運動  (22)
   展覽  (8)
   旅遊  (21)
   旅館  (11)
   景點  (65)
   會議  (1)
   演講  (5)
修行  (12)


HappyMan．Instagram







HappyMan．其它 
註冊 登入
文章 RSS 訂閱
迴響 RSS 訂閱
WordPress.com 




標籤雲


teach ios illustration food app travel chat life opencv relationship tool restaurant photos technique record love design information work service experience art accessory facebook problem chart animation photography exercise user interface platform health movies apple opengl environment map xcode iphone story ipad jog festival mrt game blender video youtube taipei book software statistics company activity image project image processing glsl memory open source google research transportation paper song notification thought music objective c network hotel lecture experiment practice marriage device observation lyrics photo friend wifi all you can eat macbook install business customization hamburger quotation technology user experience apple watch achievement career internet performance file taiwan line camera programming competition breakfast bike tone mapping stylization movie coffee history buffet notebook start-up money bbq trend library svm gift color space github income course korea typhoon swift thailand Ionic photoimpact firework face detection flow celebration friendship mac os x birthday rgb wwdc high dynamic range algorithm article sex girl culture enterprise family time learn language reunion photograph architecture hong kong profession process report date debug weather share vacation shop mv wordpress future plan japan c++ concept attitude stitch job recall value instagram product scenery framework message flowchart introduction mission rule javascript cie lab soap opera feast temple meeting conference webgl decision leisure 3g campus sleep clothes web website computer graphics filter advertisement station sport database train happiness magazine image compression open data end banquet data version monitor definition application style cartoon group facility ice cream review banquet growth ibeacon android election comparison club uniform flower recreation team lab camera calibration night market couple chrome windows xp illustrator route habit class shoes bus navigation delegate idea park nutrition christmas beverage 







在WordPress.com寫網誌.


















張貼到



取消







 










 

傳送到電子郵件地址

你的姓名

你的Email






取消

				文章沒有送出-請確認你的Email位置			

				Email確認失敗,請稍後再試.			

				抱歉，你的網誌無法透過電子郵件分享			









 
 
%d 位部落客按了讚：









































































































































王友群老師 (You-Chiun Wang)









 
TEACHING 
COURSES



Home

Resume

Publication

Service

Teaching

Link







		 





					 

Index:  
					




On-going Courses    
					

Previous Courses











					 

					 






					On-going Courses:


 




 
 
					


 



Graduate 
					Courses
CSE663: 
			Wireless Ad 
			Hoc and Sensor Network Technology
			(無線隨意與感測網路技術),  
			
2017-srping.

[英文授課]



 




 
 
					


 



Undergraduate 
					Courses

CSE491: 
			Network 
			Applications Programming 
(網路應用程式設計), 
			2017-srping. 

GEAE2406:
			Modern 
			Science & Technology and Society (現今科技與社會), 
			2017-srping. [通識課程]





 




 
 
					







Back to TOP


 

 






Previous 
					Courses:


 




 
 
					


 



Graduate 
					Courses


CSE520: 
			Advanced 
			Operating Systems (高等作業系統), 
2016-fall. 
			(43 students) 
			
[必修課程]


CSE663: 
			Wireless Ad 
			Hoc and Sensor Network Technology
			(無線隨意與感測網路技術), 
			2016-spring. 
			(11 students)
[英文授課]


CSE520: 
			Advanced 
			Operating Systems (高等作業系統), 
2015-fall. 
			(40 students) 
[必修課程]


CSE525/CSE525A/CSE705: 
			Seminar 
			
(書報討論), 
			2015-fall. 
			(170 students) 
[必修課程]


CSE663: 
			Wireless Ad 
			Hoc and Sensor Network Technology
			(無線隨意與感測網路技術), 
			2015-spring.
			(10 students) [英文授課]


CSE520: 
			Advanced Operating Systems (高等作業系統), 
2014-fall. 
(25 students) 
[必修課程]


CSE663: 
			Wireless Ad 
			Hoc and Sensor Network Technology
			(無線隨意與感測網路技術), 
			2013-spring.
			(9 students) [英文授課]


CSE520: 
			Advanced Operating Systems (高等作業系統), 
2013-fall. 

			(33 students) 
[必修課程]


CSE663: 
			Wireless Ad 
			Hoc and Sensor Network Technology
			(無線隨意與感測網路技術), 
			2013-spring.
			(4 students) [英文授課]


CSE520: Advanced Operating Systems (高等作業系統), 
			2012-fall.
			(38 students) [必修課程]


CSE525/CSE525A: Seminar 
			
(書報討論), 
			2012-fall.
			(151 students) [必修課程]


M3040026: Wireless Ad Hoc and Sensor 
			Network Technology 
(無線隨意與感測網路技術), 
			2012-spring.
			(10 students)


M3041004:
			Advanced Operating Systems (高等作業系統), 
			2011-fall.
			(29 students) [必修課程]



 




 
 
					


 



Undergraduate 
					Courses

CSE445/GEAI1349: 
			Wireless Internet (無線網際網路), 
			2016-fall. 
			(74 students)  [資工系選修兼跨院選修課程]

GEAE2406: Modern 
			Science & Technology and Society (現今科技與社會), 
			2016-fall. 
			(121 students)  [通識課程] 
[獲選為中山大學教學優良課程]

CSE491: 
			Network 
			Applications Programming 
(網路應用程式設計), 
			
			2016-spring.
			(22 students)

GEAE2406: 
			Modern 
			Science & Technology and Society (現今科技與社會), 
			2016-spring. 
			(113 students) [通識課程] 
[獲選為中山大學教學優良課程]

CSE445: 
			Wireless 
			Internet (無線網際網路), 
			2015-fall.
			(27 students)

GEAE2406: 
			Modern 
			Science & Technology and Society (現今科技與社會), 
			2015-fall.
			(110 students) [通識課程]

CSE491: Network 
			Applications Programming 
(網路應用程式設計), 
			
			2015-spring.
			(21 students)


GEAE2406: 

			Modern Science & Technology and Society
			(現今科技與社會), 
			2015-spring.
(119 students) 
[通識課程]

CSE135/GEAI1317: 
			Introduction to Computer Science and Engineering (資訊科學與工程概論), 
			2014-fall.
			(60 students) [資工系必修兼跨院選修課程]

CSE445: Wireless 
			Internet (無線網際網路), 
			2014-fall.
			(53 students)

GEAE2406: Modern 
			Science & Technology and Society (現今科技與社會), 
			2014-fall.
			(140 students) [通識課程]

CSE491: Network 
			Applications Programming 
(網路應用程式設計), 
			
			2013-spring.
			(18 students)


GEAE2406: 
Modern 
			Science & Technology and Society
			(現今科技與社會), 
			2014-spring.
(103 students) [通識課程]

CSE445: 
			Wireless Internet (無線網際網路), 
			
			2013-fall. (27 students)


GEAE2406: 
Modern Science & Technology and Society
			(現今科技與社會), 
			2013-fall. 
(114 students) 
[通識課程]

CSE491: 
			Network 
			Applications Programming 
(網路應用程式設計), 
			2013-spring.
			(20 students)


GEAE2406: 
Modern Science & Technology and Society
			(現今科技與社會), 
			2013-spring.
			(74 students) 
[通識課程]

CSE445: 
			Wireless Internet 
(無線網際網路), 
			
			2012-fall. (36 students) 
[獲選為中山大學教學優良課程]
CSE405: 
						Special 
			Topics in Practice 2
						(專題製作二), 
			2012-fall.
						(45 students) [必修課程]
B3043002: Special Topics in Practice 1 
			(專題製作一), 
			2012-spring.
						(47 students) [必修課程]

B3044004: Network Applications 
			Programming (網路應用程式設計), 
			2012-spring.
			(25 students)

B3044004:
			Wireless 
			Communications & Networks (無線通訊網路), 
			2011-fall.
			(30 students)




 




 
 
					






 Back to TOP




		 

		 






	 






[公告] 高等作業系統 期末報告文件 繳交說明 - 看板 SHU-MISM97 - 批踢踢實業坊


















批踢踢實業坊
›
看板 SHU-MISM97
關於我們
聯絡資訊




返回看板


分享







作者deepfeel (深刻的感覺)看板SHU-MISM97標題[公告] 高等作業系統 期末報告文件 繳交說明時間Tue May 26 21:55:11 2009
dear 同學，

您好，

關於97 下學期 高等作業系統 期末報告文件 繳交說明。


期末繳交：(婉茹會在學期結束前，匯整各位的檔案，一併提供給鄭老師)
收件日期：6月11日(星期四)
投影片檔案
與期中報告相同且更詳細的word 檔(10頁以上即可；文章需整理過，不要只有copy
paste)。
檔名請務必配合命名規則。(投影片、word檔 命名方式：「學號_姓名」 ex.
 S97660015_黃婉茹 )

感謝配合；有問題，仍可與我聯絡。


[email protected]

我把碩專班班代的信內文貼上了   就這樣.....


--
※ 發信站: 批踢踢實業坊(ptt.cc) 
◆ From: 59.117.0.71
推 qtmarmot:推她認真負責， 05/26 23:30
推 HsinJia: 推她落入懸崖， 05/27 01:04
推 aphysh:  推她萬丈光芒， 05/27 02:08
推 APee0509:推她上床睡覺，                                     XD 05/27 08:54
推 deathkgboy:推文的都跟課程沒關係!!! 05/27 10:21
推 momofly:推阿伯不合群, 05/27 10:36
推 qtmarmot:但我認識那個班代嘛....... 05/27 10:45
→ deepfeel:推她隔壁同學， 05/27 12:08
噓 bobw:    噓樓上我同學， 05/27 12:41
→ deepfeel:噓樓上假正經， 05/27 12:58
噓 bobw:    噓樓上真男人， 05/27 13:13
推 HsinJia: 噓樓上不拉轉，                        來點幽默感可嗎? 05/28 01:13
噓 bobw:    ◢███◣  ╭─────────╮ 05/28 02:41
→ bobw:    ◤╬ ≡  ▌ │幹你娘，你說三小？│ 05/28 02:41
→ bobw:   │ ─⊙-⊙-▏╯─────────╯ 05/28 02:41
→ bobw:   │     皿  ▏ 05/28 02:41
→ bobw:凸  ＼    ︶／ 凸 05/28 02:41
→ bobw: ◥█￣￣￣￣█◤ 05/28 02:41
→ bobw:  　│  29  │ 05/28 02:41
→ bobw:    │      │ 05/28 02:41
→ bobw:     ◤￣￣◥ 05/28 02:41
推 momofly:29??!!  為什麼不是69??  推樓上太悠閒.....@@ 05/28 09:54
推 bobw:隨便抓個圖就貼了所以沒改 05/28 14:52
推 aphysh:那個圖很像包柏本人 05/28 15:37
噓 bobw:           ╭╮ 05/28 16:02
→ bobw:           /  \ 05/28 16:02
→ bobw:          /ˊˋ\     我還有點餓 05/28 16:02
→ bobw:         / □□ \ 05/28 16:02
→ bobw:  ～●─╯. ○. ╰─●～ 05/28 16:02
→ bobw:    ╰─╮  ︶ .╭─╯ 05/28 16:02
→ bobw:        ├───┤ 05/28 16:02
→ bobw:        ├┬─┬┤ 05/28 16:02
→ bobw:        ╰╯  ╰╯ 05/28 16:02
噓 P23:幹 我寄錯信箱 06/08 00:04











臺大課程地圖






















首頁
共同必修課程

國文
外文
體育
服務學習
進階英語


通識課程

文學與藝術領域
歷史思維領域
世界文明領域
哲學與道德思考領域
公民意識與社會分析領域
量化分析與數學素養領域
物質科學領域
生命科學領域


院系所課程

文學院
理學院
社會科學院
醫學院
工學院
生物資源暨農學院
管理學院
公共衛生學院
電機資訊學院
法律學院
生命科學院
牙醫專業學院
獸醫專業學院
其他教學單位


其他全校性課程

軍訓
共同選修
新生專題
寫作教學
基本能力課程


English．英文版



課程名稱：【高等作業系統】


當學期所開設課程



課號
班次
課名
學分數
全半年
授課教師
時間(教室)


CSIE7010

高等作業系統 
3.0
2
施吉昇
四789 (資105) 


CSIE7010

高等作業系統 
3.0
2
施吉昇
四789 (資105) 



往年所開設課程



開課年度
課號
班次
課名
學分數
全半年
授課教師
時間(教室)


99-2
CSIE7010

高等作業系統
3
2
蘇雅韻
三234 (資110) 


99-2
CSIE7010

高等作業系統
3
2
蘇雅韻
三234 (資110) 


99-1
CSIE7010

高等作業系統
3
2
施吉昇
四678 (資107) 


99-1
CSIE7010

高等作業系統
3
2
施吉昇
四678 (資107) 


98-1
CSIE7010

高等作業系統
3
2
施吉昇
二678 (資107) 


98-1
CSIE7010

高等作業系統
3
2
施吉昇
二678 (資107) 


97-1
CSIE7010

高等作業系統
3
2
施吉昇
二678 (資110) 


97-1
CSIE7010

高等作業系統
3
2
施吉昇
二678 (資110) 


96-1
CSIE7010

高等作業系統
3
2
施吉昇
二678


96-1
CSIE7010

高等作業系統
3
2
施吉昇
二678


95-1
CSIE7010

高等作業系統
3
2
施吉昇
二678


95-1
CSIE7010

高等作業系統
3
2
施吉昇
二678


94-1
CSIE7010

高等作業系統
3
2
施吉昇
二234


94-1
CSIE7010

高等作業系統
3
2
施吉昇
二234


93-1
CSIE7010

高等作業系統
3
2
施吉昇
三678


93-1
CSIE7010

高等作業系統
3
2
施吉昇
三678


104-2
CSIE7010

高等作業系統
3
2
施吉昇
一789 (資105) 


104-2
CSIE7010

高等作業系統
3
2
施吉昇
一789 (資105) 


103-2
CSIE7010

高等作業系統
3
2
施吉昇
一567 (資111) 


103-2
CSIE7010

高等作業系統
3
2
施吉昇
一567 (資111) 


102-2
CSIE7010

高等作業系統
3
2
施吉昇
四678 (資107) 


102-2
CSIE7010

高等作業系統
3
2
施吉昇
四678 (資107) 


101-2
CSIE7010

高等作業系統
3
2
施吉昇
一678 (資111) 


101-2
CSIE7010

高等作業系統
3
2
施吉昇
一678 (資111) 


101-1
CSIE7010

高等作業系統
3
2
蘇雅韻
三234 (資110) 


101-1
CSIE7010

高等作業系統
3
2
蘇雅韻
三234 (資110) 


100-2
CSIE7010

高等作業系統
3
2
施吉昇
三234 (資111) 


100-2
CSIE7010

高等作業系統
3
2
施吉昇
三234 (資111) 










Copyright 2008 臺灣大學 National Taiwan University
10617 臺北市羅斯福路四段一號　No. 1, Sec. 4, Roosevelt Road, Taipei, 10617 Taiwan(R.O.C)
電話 (Phone)：+886-2-3366-2388轉308,607　　傳真號碼 (Fax)：+886-2-2362-6282

























高等作業系統(2009 年春季課程) - Wei-Tsung Ellington Su (蘇維宗)




 








Wei-Tsung Ellington Su (蘇維宗)搜尋這個協作平臺












選單首頁(Home)研究工具指導教授工作行程學術研究資訊專題研究團隊研發設備開授課程線上服務UCAN電子報網路資源
MenuEnglish Vita Page研究成果 (Publication)
Sitemap協作平臺地圖



 

首頁(Home)‎ > ‎研究工具‎ > ‎開授課程‎ > ‎2009年春季課程‎ > ‎
  

高等作業系統(2009 年春季課程)



課程大綱 





課程名稱

高等作業系統(Advanced Operating System)


開課班級

資訊工程學系碩士班班     □必修    ■選修


學分數

3學分 3 小時      預備知識：作業系統、C語言程式設計


授課方式

■口頭講授   ■分組討論   □媒體教學   □上機實習   □其他（請詳述於後）


教學目標

中文

本課程將以作業系統概論為基礎透過檢視LINUX作業系統核心程式碼讓學生深入瞭解作業系統實務。


英文

Based on operating system concepts, this course is intended to provide students a practice of operating system by exposing the LINUX kernel.


教材課本

1.      Wolfgang Mauerer, Professional Linux Kernel Architecture, Wrox Press.


參考書籍

1.      Avi Silberschatz, Peter Baer Galvin, Greg Gagne, Operating System Concepts, 7/E, John Wiley & Sons.
2.      陳炳燁譯，UNIX系統剖析，松崗電腦圖書。


教學進度
及內容

1.      作業系統概論複習(1周)
2.      UNIX/LINUX作業系統介紹(2周)
3.      LINUX核心架構(2周)
4.      LINUX程序管理(2周)
5.      LINUX記憶體管理(2周)
6.      LINUX程序間通訊(2周)
7.      LINUX驅動程式(2周)
8.      LINUX檔案管理(2周)
9.      LINUX網路(2周)
10.  期末專案報告(1周)


成績考核方式

期中考：30%、期中報告：30%、期末報告：30%、學習態度：10%
 
課程說明
 


上課時間：禮拜二早上 9:05 ~ 11:50 (第 2, 3, ,4 堂)
上課地點：0565B
點名不到者不可超過 3 次；點名遲到者一次扣學期成績 1 分。
與本課程相關的討論，可進入課程討論區進行討論
重要日期


實務(期中)報告日期：
核心(期末)報告日期：

 
實務報告主題


介紹如何在 Windows 環境下架設 Linux 環境(至少包含 cygwim、VMware、Wubi) - 巫孟倫、林朝欽
介紹 Linux 指令(須根據程序管理、記憶體管理、檔案管理、網路管理、權限管理等分類說明) - 王姿琳、江鈺雯
Linux 程式設計(程式開發環境，如編輯器、編譯器、以及 makefile 的介紹) - 劉哲誌、洪清揚
介紹 AWK 程式設計與正則式(regular expression) (須搭配範例說明，例如 ns2 的 trace 檔) - 張弘裕、鄭永遠、彭聖喻
Linux 伺服器設定 (至少包含 DHCP 伺服器、FTP 伺服器、HTTP 伺服器) - 郭昭霆、鄒立安

 
核心報告主題

Linux Device Drivers - 巫孟倫、林朝欽
Linux Networking - 王姿琳、江鈺雯
Linux Physical Memory Management - 劉哲誌、洪清揚
Linux Modules - 張弘裕、鄭永遠、彭聖喻
Linux File Systems - 郭昭霆、鄒立安 



課程公告




                    期中考成績出爐
有問題請於 Office Hour 到辦公室找我。


      
    
  
  張貼者：2009年4月15日 下午7:14蘇維宗

                    



                
                    顯示 1 - 1 篇文章 (共 1 篇)。
                    檢視更多 »









課程檔案



考試資料
 
                        
  
  
  
      
      
    
  
  0k - 蘇維宗 在 2012年5月10日 上午10:45 建立 (版本1)

                      



作業資料
 
                        
  
  
  
  
  0k - 蘇維宗 在 2012年5月10日 上午10:45 建立 (版本1)

                      



參考資料
 
                        
  
  
  
  
  0k - 蘇維宗 在 2012年5月10日 上午10:44 建立 (版本1)

                      



課程講義
 
                        
  
  
  
  
  0k - 蘇維宗 在 2012年5月10日 上午9:44 建立 (版本1)

                      




                從頁面 高等作業系統(2009 年春季課程) - 課程檔案 顯示 4 檔案。
              






成績與出席狀況高等作業系統(2009春) 
註：O代表請假；X代表缺席；L代表遲到；數字代表加扣分





            子網頁 (2)：

高等作業系統(2009 年春季課程) - 課程公告


高等作業系統(2009 年春季課程) - 課程檔案






Comments
















Sign in|Recent Site Activity|Report Abuse|Print Page|Powered By Google Sites
























 





高等作業系統 | CrossLink 臺大、臺科大、臺師大選課模擬





CrossLink 臺大、臺科大、臺師大選課模擬高等作業系統Advanced Operating System課程資料學校臺灣大學學年1002代碼43455學分3上課時間週三 - 09:10-10:00週三 - 10:20-11:10週三 - 11:20-12:10上課地點資111教師施吉昇上課對象電機資訊學院 資訊網路與多媒體研究所修課人數0課程網站前往預覽課表








作業系統 筆記 (1) | Morris' Blog
































Morris' Blog















2014-04-16


學校課程►作業系統












      作業系統 筆記 (1)
    




contents
1. 讀物2. 可能遭遇的問題2.1. Round-Robin Scheduling3. 考古題(課本後習題)3.1. 95 期中考3.2. 96 期中考4. 課本習題快取區4.1. ch 55. Reference

讀物現在恐龍書不知道第幾版了，而且中文翻譯有點慘。看英文原文又太慢的情況，剛好查到聯合大學陳士傑教授寫的 ppt。繁體中文的說明，採用恐龍書第七版的內容。
下附章節簡報和課後習題解答。
稍微看過每一章的內容後，就可以著手看習題解答。
CH 1CH 2CH 3CH 4CH 5CH 6CH 7CH 8CH 9CH 10
恐龍書課後習題解答 感謝大大的提供
之前也有好幾次參照教授寫的中文簡報，相當有助益。
可能遭遇的問題 個人拙見，請自行過濾 
Round-Robin Scheduling
這個問題在寫考題的時候，略顯著的疑惑。
對於 Round-Robin Scheduling 的部分12345678910queue Qwhile(true) {    w = Q.front()    w = work(w)    if(hasProcess())        Q.push(nextPorcess())    if(w != null)        Q.push(w)    time++}
詳見代碼後，由於超過時限後，還要將變數存起來，所以丟入 queue 的時間會晚一點，也就是說在同一時刻會慢於新抵達的 process。之後的程序就按照 queue 的順序去運行。

考古題(課本後習題)(=ﾟωﾟ)=  下附解答僅個人拙見，請勿隨意採信，請發揮您的善心，救救笨蛋 
95 期中考
What is multiprogramming ? what is time-sharing ?(10%)

Multiprogramming(多重程式)：

定義：內存有多個 processs 同時執行，一般電腦的運行方式。透過 CPU scheduling 將發生中斷 (eg. wait for I/O complete, resource not available, etc.) 的行程切換給可執行的運作。
特色：可以避免 CPU idle，提高 CPU utilization(使用率)
其他：
Multiprogramming Degree：系統內存在執行的 process 數目
通常 Multiprogramming Degree 越高，則 CPU utilization 越高(p.s. ch7 Thrashing 除外)
多個 process 同時執行，mode 有兩種 Concurrent(並行)、Parallel(平行)




Time-sharing:

定義：Multiprogramming 的一種，在 CPU 排班法則方面，其使用 RR(Round-Robin) 法則。// RR 法則－CPU time quantum，若 process 在取得 CPU 後，未能於 quantum// 內完成工作，則必須被迫放棄 CPU，等待下一次輪迴。
特色：對每個 user 皆是公平的，適用在 user interactive 且 response time (反應時間)要求較短的系統環境，透過 resource sharing 技術(eg. CPU scheduling, memory sharing, spooling 達到 I/O Device 共享)，使得每個user皆認為有專屬的系統存在。




Describe the differences between symmetric and asymmetric multiprocessing. What are three advantages and one disadvantage of multiprocessor systems ?  In Distributed System - Multiprocessor - Tightly-Coupled System(different from Loosely-Coupled Distributed System)

Symmetric Multiprocessors (SMP) 對稱式多處理器 
定義：每個 processor 的能力皆相同，即可負責的功能完全一樣。萬一某個 processor 壞了，其上工作可由其他processor 接手，系統不會整個 crash，只是整體效能下降而已。
特色：Reliability (可靠性)大幅提升，強調 load balancing (負載平衡)(每個CPU的工作負擔相同)


Asymmetric Multiprocessors (ASMP) 非對稱式多處理器 
定義：不同(群)顆的 processor，其負擔的功能不盡相同，在此架構下，通常含有一個Master CPU，負責工作的分派與協調，其他 CPUs 稱為 Slave CPU (稱為 Master-Slave Architecture)
特色：效能通常較SMP高，但可靠度較差 




What are the differences between a trap and an interrupt? What is the use of each function ?
Trap:軟體產生 system callan exception in a user process.ex. system call (software divide-by-zero)
Interrupt:硬體產生 signalsomething generated by the hardware.ex. IO-complete interrupt (hardware generated)
兩者相同之處從 User Mode 切換到 Kernel Mode。兩者都算是 interrupt 中斷指令。


What is the purpose of system calls?  System calls allow user-level processes to request services of the operating system.  System calls 提供  使用者級別  的程序來請求作業系統給的服務。  // process control, file Management, device management, information maintenance, communication
Describe the differences among short-term, medium-term, and long-term scheduling.
short-term (CPU scheduler) —CPU 工作排程selects from jobs in memory those jobs that are ready to execute and allocates the CPU to them.
medium-term —常用於分時系統的排程器。當記憶體不夠的時候，需要暫時將部分的執行程序搬出，將新來的程序載入，置換機制被建置用來移除部份在記憶體執行中及恢復那些被暫時移除的程式。used especially with time-sharing systems as an intermediate scheduling level. A swapping scheme is implemented to remove partially run programs from memory and reinstate them later to continue where they left off.
long-term (job scheduler) —將 job 變成 process 的工作排程，將工作從硬碟載入到主記憶體中。determines which jobs are brought into memory for processing.


Can a multithreaded solution using multiple user-level threads achieve better performance on a multiprocessor system than on a single-processor system? Why?
A multithreaded system comprising of multiple user-level threads cannot make use of the different processors in a multiprocessor system simultaneously. The operating system sees only a single process and will not schedule the different threads of the process on separate processors. Consequently, there is no performance benefit associated with executing multiple user-level threads on a multiprocessor system.
以 user-level hreads 實現 multithread 的程式，在多處理器系統中不能比在單處理機系統中有更好的效率， 因在多處理機系統中之作業系統不會將多個 CPU 同時分配給該 user-level multithread 程式。


Consider the following set of processes, with the length of the CPU-burst time given in milliseconds:
Process           Burst Time         Priority
  P1                 10                  3
  P2                  1                  1
  P3                  2                  3
  P4                  1                  4
  P5                  5                  2
The processes are assumed to have arrived in the order P1,P2,P3,P4,P5, all at time 0.

(a) Draw four Gantt charts illustrating the execution of these processes using FCFS, SJF, a nonpreempitive priority(a small priority number implies a higher priority), and RR(quantum = 1) scheduling.(5%)
(b) What is the turnaround time of each process for each of the scheduling algorithms in part(a).(5%)
(c) What is the waiting time of each process for each of the scheduling algorithms in part(a).(5%)
(d) Which of the schedules in part (a) results in the minimal average waiting time(over all processes)? (5%)
請參照上附的習題解法。






96 期中考
FCFS, SJF, Priority, Round-Robin and Multilevel QueueWhich can be preemptive ? (5%)

preemptive 可搶先SRTF (剩餘最短優先)、Priority (優先權優先)、Multilevel Queue (多層佇列)、RR
non-preemptive 不可搶先FCFS (先到先服務)、SJF (最短工作優先)、Priority (優先權優先)
Priority (優先權優先) 屬於可搶先跟不可搶先。
可搶先的定義為非自願性被踢出 CPU。


What are the four main purposes of an operating system ? (10%)

Managing programs
Managing Memory
Handling input and output
User Interface


Please give a detail description on the differences among the terms multiprocessing, multitasking and multithreading. (15%)

multiprocessing具有多個處理器，在同一時間可以在各自處理器上運行程序。
multitasking執行單一使用者的多個行程，利用排程器讓每一個行程都在平均時間內解決。
multithreading可以將程序切成好幾個執行緒，若硬體可以同時執行多個執行緒，效率將會上升，如果不能，由於速度夠快看起來也很像多個執行緒同時運行。


What are the differences between a trap and an interrupt ? What is the use if each function ? (20%)

Trap:軟體產生 system callan exception in a user process.ex. system call (software divide-by-zero)
Interrupt:硬體產生 signalsomething generated by the hardware.ex. IO-complete interrupt (hardware generated)
兩者相同之處從 User Mode 切換到 Kernel Mode。兩者都算是 interrupt 中斷指令。


What is the purpose of system calls, Please describe three general methods that be used to pass parameters to the operating system. (10%).

System call 由作業系統提供 API interface 給 user program，可以藉由 system call 向作業系統請求服務，作業系統接收到請求後，執行完報告結果給 user program。
[方法1] Registers  利用Registers ( 暫存器 )儲存這些參數  優：速度快  (∵不用作記憶體的存取 )  缺：不適用於參數個數多的情況
[方法2] Memory  將參數利用 Table 或 Block 的方式儲存在 Memory 中，同時利用一個 Register 記錄此 Table 或 Block 的起始位址，並傳給O.S.  優：適用於參數個數較多的情況  缺：速度慢
[方法3] Stack  利用System Stack (堆疊 )。要存放參數時，將之Push 到Stack Stack， 再由O.S.從Stack中Pop 取出參數 。  Stack在系統中比Register多一些(可用Mem. 或其它硬體(如：Register)來實作此Stack)


What is a process ? Draw the diagram of Process State. And describe every state. (15%)

What are the differences between thread and process ? Why do threads have much shorter context switching times ? (10%)
|        Thread                   |      Process              |
|---------------------------------|---------------------------|
| Light Weight Process            | Heavy Weight Process      |
|                                 |                           |
| 同一個Task (或 Process ) 內的   |  不同的Process之間無共享的| 
| Threads可以共享 Code Section,   |  Address Space，互為獨立。|
| Data Section, 及O.S. Resources  |                           |
|                                 |
| Context Switching 負擔輕        |  負擔重
|                                 |
| Thread的管理(Management)成本低  |  成本高
| (管理項目： Creation,           |
| Scheduling, Context, Switching  |
| Switching…etc.)                 |
|                                 |
| 一個Task內有多條Threads存在     |  一個Task內只有一條Thread
|  Process (Task) 內的某 Thread   |
| 被 Block，則可切到其它Thread    |
| 執行。此時，若 Process 內只要還有
| Thread 在執行，則 Process 不會被 Block

What is Multilevel Feedback-Queue scheduling ? (5%)
定義：
與Multilevel Queue的定義相似，差別在於允許 Process 在各佇列之間移動 ，以避免Starvation 的情況。
* 採取類似 “Aging” 技術，毎隔一段時間就將 Process 往上提升到上一層 Queue 中。∴在經過有限時間後，在 Lower Priority Queue 中的 Process 會被置於 Highest Priority Queue 中。故無 Starvation。
* 亦可配合降級之動作。當上層 Queue 中的 Process 取得 CPU 後，若未能在 Quantum 內完成工作，則此 Process 在放棄 CPU 後，會被置於較下層的 Queue 中。

Please draw the Gantt charts for the following processes for the problems shown below.  (a) Round-Robinm time quantum = 1 (5%)  (b) Shortest-remaining-time-first (Preemptive SJF) (5%)
            Arrival Time    Brust Time

    P1      0               4
    P2      1               2
    P3      2               3
    P4      5               4
    P5      6               3

(a) Time : 0
    Queue: P1

    0   1
    +---+
      P1

    先丟入 P2, P1 因為超時丟入，此時執行 P2
    Time : 1
    Queue: P2, P1

    0   1   2
    +---+---+
     P1  P2

    丟入 P3, P2 因為超時丟入，此時執行 P1
    Time : 2
    Queue: P1, P3, P2

    0   1   2   3
    +---+---+---+
     P1  P2  P1

    P1 因為超時丟入，此時執行 P3
    Time : 3
    Queue: P3, P2, P1

    0   1   2   3   4
    +---+---+---+---+
     P1  P2  P1  P3

    P3 因為超時丟入，此時執行 P2
    Time : 4
    Queue: P2, P1, P3

    0   1   2   3   4   5
    +---+---+---+---+---+
     P1  P2  P1  P3  P2

    P2 完成，P4 抵達丟入，此時執行 P1
    Time : 5
    Queue: P1, P3, P4

    0   1   2   3   4   5   6
    +---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1

    P5 抵達丟入，P1 超時丟入，此時執行 P3
    Time : 6
    Queue: P3, P4, P5, P1

    0   1   2   3   4   5   6   7
    +---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3

    P3 超時丟入，此時執行 P4
    Time : 7
    Queue: P4, P5, P1, P3

    0   1   2   3   4   5   6   7   8
    +---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4

    P4 超時丟入，此時執行 P5
    Time : 8
    Queue: P5, P1, P3, P4

    0   1   2   3   4   5   6   7   8   9
    +---+---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4  P5

    P5 超時丟入，此時執行 P1
    Time : 6
    Queue: P1, P3, P4, P5

    0   1   2   3   4   5   6   7   8   9  10
    +---+---+---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4  P5  P1

    P1 完成，此時執行 P3
    Time : 10
    Queue: P3, P4, P5

    0   1   2   3   4   5   6   7   8   9  10  11
    +---+---+---+---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4  P5  P1  P3

    P3 完成，此時執行 P4
    Time : 11
    Queue: P4, P5

    0   1   2   3   4   5   6   7   8   9  10  11  12
    +---+---+---+---+---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4  P5  P1  P3  P4

    ...

    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
    +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     P1  P2  P1  P3  P2  P1  P3  P4  P5  P1  P3  P4  P5  P4  P5  P4



課本習題快取區ch 5
5.9 Why is it important for the scheduler to distinguish I/O-bound programsfrom CPU-bound programs?為什麼排程器需要需分  IO 密集程式  和  CPU 綁定程式  ?

Answer: I/O-bound programs have the property of performing only a small amount of computation before performing I/O. Such programs typically do not use up their entire CPU quantum. CPU-bound programs, on the other hand, use their entire quantum without performing any blocking I/O operations. Consequently, one could make better use of the computer’s resouces by giving higher priority to I/O-bound programs and allow them to execute ahead of the CPU-bound programs.IO 密集程式占用 CPU 的時間比較少，大部分時間等在等待 IO。相反地 CPU 綁定程式則會大幅度占用 CPU 的時候，因為沒有 IO 操作的堵塞。
而 CPU bound 的程序因此而得到了很多調度機會並且每次都能把CPU run完。故在這樣的系統裡要給 I/O bound 的程序更高的優先級使其能被調度得更多些。


5.10 Discuss how the following pairs of scheduling criteria conflict in certainsettings.a. CPU utilization and response time // CPU 使用率 和 回應時間 的比較b. Average turnaround time and maximum waiting time // 平均運轉時間 和 最大等待時間 的比較c. I/O device utilization and CPU utilization // IO 裝置使用率 和 CPU 使用率 的比較

Answer:a. CPU utilization and response time: CPU utilization is increased if the overheads associatedwith context switching isminimized. The context switching overheads could be lowered by performing context switches infrequently. This could, however, result in increasingthe response time for processes.CPU 的使用率(utilization)上升時，切換工作的次數(context-switches)就會少，由於切換次數少，則回應時間(response time)就會上升。
b. Average turnaround time and maximum waiting time: Average turnaround time is minimized by executing the shortest tasks first. Such a scheduling policy could, however, starve long-running tasks and thereby increase their waiting time.平均運作時間(average turnaround time) 的最小化可以藉由最短工作優先的方式，但是這將會使得長工作飢餓，如此會增加最大等待時間。
c. I/O device utilization and CPU utilization: CPU utilization is maximized by running long-running CPU-bound tasks without performing context switches. I/O device utilization is maximized by scheduling I/O-bound jobs as soon as they become ready to run, thereby incurring the overheads of context switches.CPU 使用率的上升盡可能讓 CPU 密集工作長時間運行 (減少 IO 或者其他的中斷所引發的上下文切換)，IO 裝置使用率的上升靠的是讓排入的 IO 密集工作立即地運行，但這會增加上下文切換的開銷。


5.11 Consider the exponential average formula used to predict the length of the next CPU burst.What are the implications of assigning the following values to the parameters used by the algorithm?使用指數平均公式去預測下一次的 CPU burst。 t0 預估時間。a. a = 0 and t0 = 100 millisecondsb. a = 0.99 and t0 = 10 milliseconds

Answer: When a = 0 and t0 = 100 milliseconds, the formula always makes a prediction of 100 milliseconds for the next CPU burst. When a = 0.99 and t0 = 10 milliseconds, themost recent behavior of the process is given much higher weight than the past history associated with the process. Consequently, the scheduling algorithm is almost memoryless, and simply predicts the length of the previous burst for the next quantum of CPU execution.當 a = 0 時，預測的時間總會是 100 milliseconds，而當 a = 0.99 時，將會高度依賴近期幾次的結果，而對於歷史關聯只有較輕的權重。// t(n+1) = a * 上一次實際時間 + (1 - a) * t(n)

ReferenceKernel Mode 與 User Mode 的概念恐龍書中文 ppt 介紹 聯合大學 陳士傑






Please enable JavaScript to view the comments powered by Disqus.






Categories

學校課程115介面設計5作業系統6即時系統3大學專題2巨量資料1平行程式43敏捷方法3數位影像生成4編譯器1自然語言5虛擬實境4計算型智慧3計算幾何6計算機圖學2資料庫系統4資訊安全9通識課程14手札日記36網頁設計15About This Blog7HTML51JQuery4Markdown1NodeJs2解題區625Latex1出題解題21解題區 - POJ3解題區 - UVa480解題區 - Zerojudge76解題區 - 其他題目43解題區 - 未解題目1雜言筆記4



Recents




 
              
            吶，還記得我們的「約定」嗎



 
              
            批改娘 20021. Dynamic Range Sum



 
              
            批改娘 20020. Dot Product



 
              
            批改娘 20018. Square Root of Vector Elements



 
              
            助教生涯－平行總結



 
              
            純粹 Part 2



 
              
            純粹 Part 1



 
              
            UVa 13154 - Extreme XOR Sum



 
              
            關於高效大數除法的那些事



 
              
            2017 Google Code Jam Round QR





Links


 Morris' Blog (pchome)
 flere's Blog
 dreamoon's Blog
 m80126colin's Blog
 Nico's Blog
 KuoE0's Dots
 Tyan Blog



























永久課程基本簡介

 




 
 





























Home 
課程種類查詢 
永久課程簡介 




永久課程簡介 STU Syllabus for Permanent Course






IEG041高等作業系統
 


課程基本資料


課程分類代碼(Category Code)
IEG041
課程層級(Course Level)

											G 研究所
										


課程分類名稱
高等作業系統
課程類別
資訊工程系研究所專業課程





中文課程簡介



										瞭解Linux作業系統的設計原理與架構.熟悉Linux的啟動流程與相關設定.學習將Linux植入embedded system的技術.學習Linux核心重組的流程與技術.崁入式系統的開發流程與實務.
										




Course Introduction



										Provide in-depth coverage of modern operating system issues, such as:    * microkernels and IPC,    * user-level OS servers,    * design and implementation of microkernel-based systems,    * performance,    * kernel design and implementation,    * device drivers,    * virtualisation and hypervisors,    * scheduling for real-time,    * symmetric multiprocessing and hardware multithreading,    * effects and control of hardware caches,    * alternative protection and security models,    * alternative OS designs and resulting issues,    * hot topics.
										







 






© 2011 Shu-Te University | 07-6158000#2401 | 
			Designed by afu


			For processing problems, please call 6158000-2401 or e-mail info@stu.edu.tw.
		




 
Google Groups













To use Google Groups Discussions, please enable JavaScript in your browser settings, and then refresh this page.


.
My AccountSearchMapsYouTubePlayNewsGmailDriveCalendarGoogle+TranslatePhotosMoreShoppingWalletFinanceDocsBooksBloggerContactsHangoutsKeepEven more from GoogleSign inHidden fieldsSearch for groups or messages
