


數值分析 - 維基百科，自由的百科全書































 






數值分析

維基百科，自由的百科全書


					前往：					導覽，					搜尋






本條目部分連結不符合格式手冊規範。跨語言連結及章節標題等處的連結可能需要清理。（2015年12月11日） 
請協助改善此條目。參見WP:LINKSTYLE、WP:MOSIW以瞭解細節。突出顯示跨語言連結可以便於檢查。 






巴比倫泥板 YBC 7289
(c. 1800–1600 BCE)，泥板下有根號2的六十進位近似值，精確值大約接近十進位的小數下第6位泥板，1 + 24/60 + 51/602 + 10/603 = 1.41421296...[1]


數值分析（英語：numerical analysis），是指在數學分析（區別於離散數學）問題中，對使用數值近似（相對於一般化的符號運算）算法的研究。
巴比倫泥板YBC 7289是關於數值分析的最早數學作品之一，它給出了 





2




{\displaystyle {\sqrt {2}}}

 在六十進位下的一個數值逼近，





2




{\displaystyle {\sqrt {2}}}

是一個邊長為1的正方形的對角線，在西元前1800年巴比倫人也已在巴比倫泥板上計算勾股數（畢氏三元數）（3, 4, 5），即直角三角形的三邊長比。
數值分析延續了實務上數學計算的傳統。巴比倫人利用巴比倫泥板計算





2




{\displaystyle {\sqrt {2}}}

的近似值，而不是精確值。在許多實務的問題中，精確值往往無法求得，或是無法用有理數表示（如





2




{\displaystyle {\sqrt {2}}}

）。數值分析的目的不在求出正確的答案，而是在其誤差在一合理範圍的條件下找到近似解。
在所有工程及科學的領域中都會用到數值分析。像天體力學研究中會用到常微分方程，最優化會用在資產組合管理中，數值線性代數是資料分析中重要的一部份，而隨機微分方程及馬可夫鏈是在醫藥或生物學中生物細胞模擬的基礎。
在電腦發明之前，數值分析主要是依靠大型的函數表及人工的內插法，但在二十世紀中被電腦的計算所取代。不過電腦的內插演算法仍然是數值分析軟體中重要的一部份。



目錄


1 簡介

1.1 直接法和疊代法
1.2 離散化


2 誤差的產生及傳播

2.1 捨入誤差
2.2 截尾及離散化誤差
2.3 數值穩定性及良置問題


3 領域研究

3.1 函數求值
3.2 內插法、外推法、曲線擬合及回歸
3.3 求解方程及方程組
3.4 求解特徵值或奇異值問題
3.5 最優化
3.6 積分計算
3.7 微分方程


4 軟體
5 註解
6 參考文獻
7 外部連結
8 參閱



簡介[編輯]
數值分析的目的是設計及分析一些計算的方式，可針對一些問題得到近似但夠精確的結果。以下是一些會用利用數值分析處理的問題：

數值天氣預報中會用到許多先進的數值分析方法。
計算太空船的軌跡需要求出常微分方程的數值解。
汽車公司會利用電腦模擬汽車撞擊來提昇汽車受到撞擊時的安全性。電腦的模擬會需要求出偏微分方程的數值解。
對沖基金會利用各種數值分析的工具來計算股票的市值及其變異程度。
航空公司會利用複雜的最佳化演算法決定票價、飛機、人員分配及用油量。此領域也稱為作業研究。
保險公司會利用數值軟體進行精算分析。

直接法和疊代法[編輯]



直接法和疊代法
考慮以下問題

3x3 + 4 = 28

要求解未知數x

直接法


3x3 + 4 = 28.


減 4
3x3 = 24.


除 3
x3 = 8.


開立方
x = 2.


若是用疊代法，可用疊代法求解f(x) = 3x3 − 24，初值為a = 0, b = 3, f(a) = −24, f(b) = 57。

疊代法

a
b
中點
f(中點)


0
3
1.5
−13.875


1.5
3
2.25
10.17...


1.5
2.25
1.875
−4.22...


1.875
2.25
2.0625
2.32...


計算到目前為止，問題的解是界於1.875及2.0625之間，若繼續往下算，可以得到更精確的答案。



直接法利用固定次數的步驟求出問題的解。這些方式包括求解線性方程組的高斯消去法及QR演算法（英語：QR algorithm），求解線性規劃的單純形法等。若利用無限精度算術的計算方式，有些問題可以得到其精確的解。不過有些問題不存在解析解（如五次方程），也就無法用直接法求解。在電腦中會使用浮點數進行運算，在假設運算方式穩定的前提下，所求得的結果可以視為是精確解的近似值。
疊代法是通過從一個初始估計出發尋找一系列近似解來解決問題的數學過程。和直接法不同，用疊代法求解問題時，其步驟沒有固定的次數，而且只能求得問題的近似解，所找到的一系列近似解會收斂到問題的精確解。會利用審斂法來判別所得到的近似解是否會收斂。一般而言，即使使用無限精度算術的計算方式，疊代法也無法在有限次數內得到問題的精確解。
在數值分析中用到疊代法的情形會比直接法要多。例如像牛頓法、二分法、雅可比法、廣義最小殘量方法（GMRES）及共軛梯度法等。在計算矩陣代數中，大型的問題一般會需要用疊代法來求解。
離散化[編輯]
許多時候需要將連續模型的問題轉換為一個離散形式的問題，而離散形式的解可以近似原來的連續模型的解，此轉換過程稱為離散化。例如求一個函數的積分是一個連續模型的問題，也就是求一曲線以下的面積若將其離散化變成數值積分，就變成將上述面積用許多較簡單的形狀（如長方形、梯形）近似，因此只要求出這些形狀的面積再相加即可。
例如在二小時的賽車比賽中，記錄了三個不同時間點的賽車速度，如下表


時間
0:20
1:00
1:40


km/h
140
150
180


利用離散化的方式，可以假設賽車在0:00到0:40之間的速度、0:40到1:20之間的速度及1:20到2:00之間的速度分別為三個定值，因此前40分鐘的總位移可近似為(2/3h × 140 km/h) = 93.3 公里。可依此方式近似二小時內的總位移為93.3 公里 + 100 公里 + 120 公里 = 313.3 公里。位移是速度的積分，而上述的作法是用黎曼和進行數值積分的一個例子。

誤差的產生及傳播[編輯]
誤差是數值分析的重要主題之一。誤差的形成可分為幾種不同的原因。
捨入誤差[編輯]
當進行數值分析的設備只能用有限位數來表示一個實數時，就會出現捨入誤差（Round-off error），例如用可顯示十位數字的計算器計算1/3，所得到的結果0.333333333，和實際數值的誤差就是捨入誤差。即使進行數值分析的設備用浮點數來表示實數，仍無法完全避免捨入誤差的問題。
截尾及離散化誤差[編輯]
若疊代法的數值分析算到某一程度就中止計算，或是使用一些近似的數學程序，程序所得結果和精準解不同，就會出現截尾（Truncation）誤差。將問題離散化後，由於離散化問題的解不會和原問題的解完全一様，因此會出現離散化誤差（英語：discretization error）。例如用疊代法計算



3

x

3


+
4
=
28


{\displaystyle 3x^{3}+4=28}

的解，在計算幾次後我們認為其解為1.99，就會有0.01的截尾誤差。
一旦有了誤差，誤差就會藉著計算繼續的擴散。例如一個計算機中的加法是不準的，則a+b+c+d+e的計算也一定不準。例如剛剛計算



3

x

3


+
4
=
28


{\displaystyle 3x^{3}+4=28}

的解為1.99，若後續的運算需要用到



3

x

3


+
4
=
28


{\displaystyle 3x^{3}+4=28}

的解，用1.99代入所得的結果也會不準。
當用近似的方式處理數學式時就會出現截尾誤差。以積分為例，完全精準的積分需要求出曲線下方無限個梯形的面積和，但用在數值分析中會用有限個梯形的面積和來近似無限個梯形的面積和，此時就會出現截尾誤差。若要對一個函數進行微分，其微分量需要趨近於0，但實務上只能選擇很小的微分量。
數值穩定性及良置問題[編輯]



非良置問題：考慮一函數f(x) = 1/(x − 1)，f(1.1) = 10，f(1.001) = 1000。當x只改變小於0.1的數值，f(x)的變化將近1000。因此在x = 1的附近計算f(x)是一個非良置的問題。
良置問題：相反的，函數



f
(
x
)
=


x




{\displaystyle f(x)={\sqrt {x}}}

在x不接近0時，其值的計算就是一個良置的問題。



數值穩定性是數值分析中一個重要的主題。若一演算法中不論什麼原因產生了誤差，此誤差不會在運算中明顯增加，此演算法為數值穩定的演算法。若問題為良置（well-conditioned）的，就會符合上述的特性，也就是問題數據微小的變化只會造成其解的微小變化。相反的，若問題數據微小的變化會造成其解的巨大變化，會稱問題為非良置或病態（ill-conditioned）。
原始問題及求解問題演算法都可以分為良置及非良置，任何的組合都是允許的。
一個求解良置問題的演算法可能是數值穩定的，也可能是數值不穩定的。數值分析的重點就是找到適定性問題的數值穩定演算法。例如，計算2的平方根（大約是1.41421）本身是一個適定性問題。許多求解的演算法都是從一個初始的近似值x1開始去求解，例如x1=1.4，再繼續計算x2、x3等。巴比倫法就是一個具有此特性的演算法。另一個方法，先稱之為X方法，演算法為xk + 1 = (xk2−2)2 + xk。[註解 1]以下分別用初始值 x1 = 1.4及x1 = 1.42，用二種方式進行幾次疊代。


巴比倫法
巴比倫法
X方法
X方法


x1 = 1.4
x1 = 1.42
x1 = 1.4
x1 = 1.42


x2 = 1.4142857...
x2 = 1.41422535...
x2 = 1.4016
x2 = 1.42026896


x3 = 1.414213564...
x3 = 1.41421356242...
x3 = 1.4028614...
x3 = 1.42056...




...
...




x1000000 = 1.41421...
x28 = 7280.2284...


可觀察到不論初始值多少，巴比倫法都可以快速的收斂，但X方法在初始值為1.4時收斂的很慢，在初始值為1.42時X方法會發散。因此巴比倫法是數值穩定的方法，而X方法是數值不穩定的方法。
領域研究[編輯]
數值分析依其待求解的問題不同，分為不同的領域。



內插法：假設一點鐘的氣溫為20度，三點鐘時為14度，可以用線性內插法推測一點半及二點鐘時的氣溫分別是18.5度及17度。
外推法：假設某國家國內生產總值平均每年成長百分之五，去年國內生產總值為一百萬元，可推測今年的國內生產總值為一百零五萬元。

回歸分析：給定幾個二維座標上的點，回歸分析就是設法找到一條最接近這些點的直線。

最佳化：有一個賣飲料的小販，若每杯飲料100元，每天可以賣197杯飲料，若飲料單價增加1元，每天就會少賣1杯飲料。飲料定價為148.5元時，其每天的收入為最大值。不過由於飲料單價需為正整數，因此飲料定價可定為149元，對應每天的收入為22,052元。

微分方程：假設在一房間中的不同位置放置一百個風扇，然後在房間中放置一根羽毛，羽毛會依房間中氣流而移動，而房間中的氣流可能相當複雜。不過每一秒量測一次羽毛附近空氣的速度，假設羽毛下一秒是等速的直線運動，即可求得下一秒時羽毛的位置，再量測當時羽毛附近空氣的速度，……。這種方法稱為歐拉方法，常使用在常微分方程的數值分析。



函數求值[編輯]
數值分析中最簡單的問題就是求出函數在某一特定數值下的值。最直覺的方法是將數值代入函數中計算，不過有時此方式的效率不佳。像針對多項式函數的求值，較有效率的方式是秦九韶算法，可以減少乘法及加法的次數。若是使用浮點數，很重要的是是估計及控制捨入誤差。
內插法、外推法、曲線擬合及回歸[編輯]
內插法求解以下的問題：有一未知函數在一些特定位置下的值，求未知函數在已知數值的點之間某一點的值。
外推法類似內插法，但需要知道數值的點是在其他已知數值點的範圍以外。一般而言外推法的誤差會大於內插法。
曲線擬合是在已知一些數據的條件下，找到一條曲線完全符合現有的數據，數據可能是一些特定位置及其對應的值，也可能是其他資料，例如角度或曲率等。
回歸分析類似曲線擬合，也是根據一些特定位置及其對應的值，要找到對應曲線。但回歸分析考慮到數據可能有誤差，因此所得的的曲線不需要和數據完全符合。一般會使用最小方差法來進行回歸分析。
求解方程及方程組[編輯]
另一種常見的問題是求特定方程式的解。首先會依方程式是否線性來區分，例如方程式 



2
x
+
5
=
3


{\displaystyle 2x+5=3}

是線性方程式，而



2

x

2


+
5
=
3


{\displaystyle 2x^{2}+5=3}

是非線性方程式。
此領域許多的研究都和求解線性方程組有關。直接法是線性方程組的係數以矩陣來表示，再利用矩陣分解的方式求解，這些方法包括高斯消去法、LU分解，對於對稱矩陣（或埃爾米特矩陣）及正定矩陣可以用喬萊斯基分解（英語：Cholesky decomposition），非方陣的矩陣則可以用QR分解。疊代法包括有雅可比法、高斯–塞德疊代法、逐次超松馳法（英語：successive over-relaxation）（SOR）及共軛梯度法，一般會用在大型的線性方程組中。
求根演算法是要解一非線性方程，其名稱是因為函數的根就是使其值為零的點。若函數本身可微且其導數是已知的，可以用牛頓法求解，其他的方法包括二分法、割線法等。線性化（英語：Linearization）則是另一種求解非線性方程的方法。
求解特徵值或奇異值問題[編輯]
許多重要的問題可以用奇異值分解或特徵分解來表示。例如有些圖像壓縮演算法[2]就是以奇異值分解為基礎。統計學中對應的工具稱為主成分分析。
最優化[編輯]
主條目：最優化
最優化問題的目的是要找到使特定目標函數有最大值（或最小值）的點，一般而言這個點需符合一些約束。
依目標函數及約束條件的不同，最佳化又可以再細分：例如線性規劃處理目標函數及約束條件均為線性的情形，常用單純形法來求解。若目標函數及約束條件其中有一項為非線性，就是非線性規劃的範圍。
有約束條件的問題可以利用拉格朗日乘數轉換為沒有約束條件的問題。
積分計算[編輯]
主條目：數值積分
數值積分的目的是在求一定積分的值。一般常用牛頓－寇次公式，包括辛普森積分法、高斯求積等。上述方式是利用分治法來處理積分問題，也就是將大範圍的積分切割成許多小範圍的積分，再進行計算。不過在高維度時，上述作法可能會因為要作許多的計算而變得不實用（也就是維數之咒所描述的情形），此時可以採用蒙地卡羅方法或半蒙地卡羅方法。（可參照蒙地卡羅積分（英語：Monte Carlo integration），或是適用於高維度的稀疏網格（英語：sparse grid）法。）
微分方程[編輯]
數值分析也會用近似的方式計算微分方程的解，包括常微分方程及偏微分方程。
常微分方程往往會使用疊代法，已知曲線的一點，設法算出其斜率，找到下一點，再推出下一點的資料。歐拉方法是其中最簡單的方式，較常使用的是龍格－庫塔法。
偏微分方程的數值分析解法一般都會先將問題離散化，轉換成有限元素的次空間。可以透過有限元素法、有限差分法及有限體積法（英語：finite volume method），這些方法可將偏微分方程轉換為代數方程，但其理論論證往往和泛函分析的定理有關。另一種偏微分方程的數值分析解法則是利用離散傅立葉變換或快速傅立葉變換。
軟體[編輯]
20世紀末，大部份數值分析的演算法都已用許多不同的程式語言實現。Netlib（英語：Netlib）軟體庫包含了許多數值分析演算法的程式，大部份是Fortran及C語言的程式。商業產品也實現了許多不同的數值分析演算法，包括國際數學及統計程序庫數字型檔及英商納格資訊（英語：Numerical Algorithms Group）軟體庫，GNU科學數值庫則是自由軟體的數值分析演算法軟體庫。
數值分析的商用應用程式包括MATLAB、S-PLUS（英語：S-PLUS）、LabVIEW及互動式數據語言（IDL）等，自由軟體或開源軟體的數值分析應用程式則包括FreeMat、Scilab、GNU Octave （類似Matlab）、IT++（C++函式庫連 library）、R語言 （類似S-PLUS）及一些Python的衍生版本。各應用程式的性能有很大的差異：一般而言向量及矩陣的運算都很快，而各應用程式純量運算的速度差異則可能會超過10倍以上[3][4]。
許多計算機代數系統的軟體（像Mathematica及Maple）由於使用無限精度算術的計算方式，可以得到比一般軟體更準確的結果。
電子試算表的軟體也可以處理一些簡單的數值分析問題。
註解[編輯]

^ 這是一個針對方程式



x
=
(

x

2


−
2

)

2


+
x
=
f
(
x
)


{\displaystyle x=(x^{2}-2)^{2}+x=f(x)}

的定點疊代法（英語：fixed point iteration），其解包括





2




{\displaystyle {\sqrt {2}}}

。由於



f
(
x
)
≥
x


{\displaystyle f(x)\geq x}

，每次疊代會使數值增加，因此




x

1


=
1.4
<


2




{\displaystyle x_{1}=1.4<{\sqrt {2}}}

會收斂，而




x

1


=
1.42
>


2




{\displaystyle x_{1}=1.42>{\sqrt {2}}}

會發散。

參考文獻[編輯]


^ Photograph, illustration, and description of the root(2) tablet from the Yale Babylonian Collection
^ The Singular Value Decomposition and Its Applications in Image Compression
^ Speed comparison of various number crunching packages
^ Comparison of mathematical programs for data analysis Stefan Steinhaus, ScientificWeb.com


外部連結[編輯]
參閱[編輯]


數學主題
信息技術主題



算法
計算科學
數值分析主題列表（英語：List of numerical analysis topics）
格拉姆－施密特正交化
數值微分
符號數值計算（英語：Symbolic-numeric computation）
算法分析
《Numerical Recipes》










閱
論
編


數學領域







註釋：數學的領域也可根據「MSC分類標準」或「中國學科分類國家標準」進行分類。






領域



數理邏輯
集合論
範疇論
代數

初等
線性
多重線性
抽象


數論
分析/微積分
微分方程/動態系統
數學物理
數理統計
幾何

離散（英語：Discrete geometry）
代數
解析
微分
有限


拓撲
動力系統
組合
泛函分析
博弈論
資訊理論
圖論
數學教育
數理邏輯
數學物理
數值分析
最優化
序理論
數學哲學
趣味數學
計算
機率
表示
統計
三角








分支



純粹數學
應用數學
離散數學
計算數學
元數學











分類
主題
共享資源
專題
















閱
論
編


數值分析軟體






開源軟體



ADMB
Euler
FreeFem++
FreeMat
Genius
Gmsh
GNU Octave
gretl
Julia
Maxima
OpenFOAM
R
Sage
SALOME
ScicosLab
Scilab
Spyder








零售軟體



Chapel
DADiSP
Fortress
GAUSS
LabVIEW
Maple
Mathcad
MATLAB
Mathematica
Speakeasy
VisSim
X10









列表（英語：List of numerical analysis software）  · 比較（英語：Comparison of numerical analysis software）














閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






算法和資料結構

算法分析 · 算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 解釋器 · 編程範型（過程化編程 · 物件導向程序編程 · 函數式編程 · 邏輯編程等）






並發、並行和分佈式系統

多處理器 · 網格計算 · 並發控制






軟體工程

需求分析 · 軟體設計 · 程序設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網絡

路由 · 網絡拓撲 · 密碼學






資料庫

資料庫管理系統 · 關係資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 數據挖掘






人工智慧

自動推理 · 計算語言學 · 計算機視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






計算機圖形學

可視化 · 計算機動畫 · 圖像處理






人機互動

計算機輔助功能 · 用戶界面 · 可穿戴計算機 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物信息學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值算法 · 符號計算







註：計算機科學領域也可根據ACM-2012分類系統進行分類。











權威控制



GND: 4042805-9












 
						取自 "https://zh.wikipedia.org/w/index.php?title=數值分析&oldid=43824063"					
2 個分類：數值分析軟體數值分析隱藏分類：自2015年12月連結格式不正確的條目包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansAlemannischAragonésالعربيةAsturianuБашҡортсаБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBosanskiCatalàČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiفارسیSuomiFrançaisGaeilgeGalegoעבריתहिन्दीFiji HindiHrvatskiMagyarՀայերենBahasa IndonesiaItaliano日本語ქართულიҚазақша한국어LatinaLëtzebuergeschLietuviųLatviešuМакедонскиമലയാളംМонголBahasa MelayuNederlandsNorsk nynorskNorsk bokmålOccitanਪੰਜਾਬੀPolskiپنجابیPortuguêsRomânăРусскийSarduSrpskohrvatski / српскохрватскиසිංහලSimple EnglishSlovenčinaSlovenščinaСрпски / srpskiBasa SundaSvenskaதமிழ்ไทยTagalogTürkçeТатарча/tatarçaУкраїнськаاردوOʻzbekcha/ўзбекчаTiếng ViệtWinarayייִדישBân-lâm-gú粵語 
編輯連結 





 本頁面最後修訂於2017年3月31日 (週五) 22:04。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 









數值積分 - 維基百科，自由的百科全書






























 






數值積分

維基百科，自由的百科全書


					前往：					導覽，					搜尋



系列條目


微積分學





函數
導數
微分
積分




基本定理




函數極限
連續函數




均值定理
羅爾定理







基礎概念



函數 · 數列 · 級數 · 極限
初等函數 · 無窮小量 · 收斂數列
收斂性 · 夾擠定理
連續 · 一致連續 · 間斷點









一元微分



導數 · 高階導數 · 介值定理 · 中值定理（羅爾定理 · 拉格朗日中值定理 · 柯西中值定理） · 泰勒公式 · 求導法則（乘法定則 · 除法定則 · 倒數定則 · 鏈式法則） · 洛必達法則 · 導數列表 · 導數的函數應用（單調性 · 極值 · 駐點 · 拐點 · 凹凸性 · 曲率）









一元積分



不定積分 · 定積分 · 積分的定義（黎曼積分 · 達布積分 · 勒貝格積分） · 積分表 · 求積分的技巧（吸納積分法 · 換元積分法 · 分部積分法 · 三角換元法 · 降次積分法 · 部分分式積分法） · 牛頓-萊布尼茨公式 · 廣義積分 · 主值 · 柯西主值 · Β函數 · Γ函數 · 數值積分 · 牛頓-寇次公式 · 近似積分法（矩形法 · 梯形法 · 辛普森積分法）









多元微積分



多元函數 · 偏導數 · 隱函數 · 全微分 · 方向導數 · 梯度 · 泰勒公式 · 拉格朗日乘數 · 多元函數積分 · 多重積分 · 廣義多重積分 · 曲線積分 · 曲面積分 · 格林公式 · 高斯公式 · 斯托克斯公式 · 散度 · 旋度









微分方程



常微分方程 · 分離變數法 · 積分因子 · 歐拉方法 · 柯西-歐拉方程 · 伯努利微分方程 · 克萊羅方程 · 全微分方程 · 線性微分方程 · 差分方程 · 拉普拉斯變換法 · 偏微分方程 · 拉普拉斯方程









相關數學家


牛頓 · 萊布尼茲 · 柯西 · 黎曼
拉格朗日 · 拉普拉斯 · 歐拉









閱
論
編





在數值分析中，數值積分是計算定積分數值的方法和理論。在數學分析中，給定函數的定積分的計算不總是可行的。許多定積分不能用已知的積分公式得到精確值。數值積分是利用黎曼積分等數學定義，用數值逼近的方法近似計算給定的定積分值。藉助於電子計算設備，數值積分可以快速而有效地計算複雜的積分。



目錄


1 必要性
2 矩形法

2.1 公式


3 插值法
4 牛頓-柯特斯公式
5 參見
6 參考來源



必要性[編輯]
數值積分的必要性源自計算函數的原函數的困難性。利用原函數計算定積分的方法建立在牛頓-萊布尼茲公式之上。然而，原函數可以用初等函數表示的函數為數不多，大部分的可積函數的積分無法用初等函數表示，甚至無法有解析表達式。例如常見的常態分佈函數：




f
(
x
)
=

e

−



x

2


2






{\displaystyle f(x)=e^{-{\frac {x^{2}}{2}}}}


的原函數就無法用初等函數表示。
不僅如此，在很多實際應用中，只能知道積分函數在某些特定點的取值，比如天氣測量中的氣溫、濕度、氣壓等，醫學測量中的血壓、濃度等等。另外，積分函數有可能是某個微分方程的解。由於很多微分方程只能數值求解，因此只能知道函數在某些點上的取值。這時是無法用求原函數的方法計算函數的積分的。
另外，當積分區域是曲面、三維形體以至於高維流形時，牛頓-萊布尼茲公式不再適用，只能使用更廣泛的格林公式或斯托克斯公式，以轉化為較低維數上的積分，但只能用於少數情況。因此，只能使用數值積分計算函數的近似值。
矩形法[編輯]




用一系列矩形的和來逼近積分的精確值。


矩形法是一種常見的數值積分方法，用來計算一維定積分的近似值。矩形法的主要思想是將積分區間



I
=
[
a
,
b
]


{\displaystyle I=[a,b]}

分割成許多足夠小的分區間的總和：



I
=
[

x

0


,

x

1


)
∪
[

x

1


,

x

2


)
∪
⋯
∪
[

x

n
−
1


,

x

n


]


{\displaystyle I=[x_{0},x_{1})\cup [x_{1},x_{2})\cup \cdots \cup [x_{n-1},x_{n}]}

，



a
=

x

0


<

x

1


<

x

2


<
⋯
<

x

n
−
1


<

x

n


=
b


{\displaystyle a=x_{0}<x_{1}<x_{2}<\cdots <x_{n-1}<x_{n}=b}

，使得能夠假設積分函數



f


{\displaystyle f}

在各個小區間



[

x

i


,

x

i
+
1


)


{\displaystyle [x_{i},x_{i+1})}

上的取值變化不大。這時，可以在每個分區間上取一個代表性的點




c

i


∈
[

x

i
−
1


,

x

i


)


{\displaystyle c_{i}\in [x_{i-1},x_{i})}

（稱為節點），並將分區間的長度乘以積分函數在這一點上的值，以近似得到函數在這一段小區間上的積分。直觀上來看，就是取一個矩形，用它的面積來代替積分函數的曲線在這一小段區間上圍出來的曲邊梯形的面積。總體上，將所有這樣的矩形面積加起來（這個和稱為黎曼和），就近似地等於函數在這個區間上的定積分。






∫

I


f
(
t
)
d
t
≈


I


appr


(

c

1


,

x

1


,

c

2


,

x

2


,
⋯
,

c

n


,

x

n


)
=

∑

i
=
0


n
−
1


(

x

i
+
1


−

x

i


)
f
(

c

i


)


{\displaystyle \int _{I}f(t)dt\approx \mathbf {I} _{\mbox{appr}}(c_{1},x_{1},c_{2},x_{2},\cdots ,c_{n},x_{n})=\sum _{i=0}^{n-1}(x_{i+1}-x_{i})f(c_{i})}



根據黎曼積分的定義，只要區間被分得足夠精細，那麼這樣的分割所得到的黎曼和會無限趨近於函數的積分。
公式[編輯]
根據每個小區間中節點的選取方式，可以得到不同的數值積分公式。

上矩形公式：取每個小區間中的「最高點」（



f


{\displaystyle f}

的最大值或上確界）作為節點。








I


appr


(

c

1


,

x

1


,

c

2


,

x

2


,
⋯
,

c

n


,

x

n


)
=

∑

i
=
0


n
−
1


(

x

i
+
1


−

x

i


)
sup
(

f

[

x

i
−
1


,

x

i


)


)


{\displaystyle \mathbf {I} _{\mbox{appr}}(c_{1},x_{1},c_{2},x_{2},\cdots ,c_{n},x_{n})=\sum _{i=0}^{n-1}(x_{i+1}-x_{i})\sup(f_{[x_{i-1},x_{i})})}




下矩形公式：取每個小區間中的「最低點」（



f


{\displaystyle f}

的最小值或下確界）作為節點。








I


appr


(

c

1


,

x

1


,

c

2


,

x

2


,
⋯
,

c

n


,

x

n


)
=

∑

i
=
0


n
−
1


(

x

i
+
1


−

x

i


)
inf
(

f

[

x

i
−
1


,

x

i


)


)


{\displaystyle \mathbf {I} _{\mbox{appr}}(c_{1},x_{1},c_{2},x_{2},\cdots ,c_{n},x_{n})=\sum _{i=0}^{n-1}(x_{i+1}-x_{i})\inf(f_{[x_{i-1},x_{i})})}




中矩形公式：取每個小區間中央的一點作為節點。








I


appr


(

c

1


,

x

1


,

c

2


,

x

2


,
⋯
,

c

n


,

x

n


)
=

∑

i
=
0


n
−
1


(

x

i
+
1


−

x

i


)
f
(




x

i
−
1


+

x

i



2


)


{\displaystyle \mathbf {I} _{\mbox{appr}}(c_{1},x_{1},c_{2},x_{2},\cdots ,c_{n},x_{n})=\sum _{i=0}^{n-1}(x_{i+1}-x_{i})f({\frac {x_{i-1}+x_{i}}{2}})}



插值法[編輯]
另一種數值積分的思路是用一個容易計算積分而又與原來的函數「相近」的函數來代替原來的函數。這裡的「相近」是指兩者在積分區間上定積分的值比較接近。最自然的想法是採用多項式函數。比如說，給定一個函數



f


{\displaystyle f}

後，在積分區間



I
=
[
a
,
b
]


{\displaystyle I=[a,b]}

中取



a
=

x

0


<

x

1


<

x

2


<
⋯
<

x

n
−
1


<

x

n


=
b


{\displaystyle a=x_{0}<x_{1}<x_{2}<\cdots <x_{n-1}<x_{n}=b}

，就可以對原來的函數進行拉格朗日插值。得到拉格朗日插值多項式以後，計算這個多項式的積分。






∫

I


f
(
t
)
d
t
≈


I


appr


(

x

1


,

x

2


,
⋯
,

x

n


)
=

∑

i
=
0


n


f
(

x

i


)

L

i




{\displaystyle \int _{I}f(t)dt\approx \mathbf {I} _{\mbox{appr}}(x_{1},x_{2},\cdots ,x_{n})=\sum _{i=0}^{n}f(x_{i})L_{i}}



其中




L

i




{\displaystyle L_{i}}

是拉格朗日插值的基本多項式。
牛頓-柯特斯公式[編輯]
牛頓-柯特斯公式是一種插值型公式。假設



I
=
[
a
,
b
]


{\displaystyle I=[a,b]}

中取




x

k


=
a
+
k



b
−
a

n




{\displaystyle x_{k}=a+k{\frac {b-a}{n}}}

 ,可以寫成：






∫

I


f
(
t
)
d
t
≈


I


appr


(

x

1


,

x

2


,
⋯
,

x

n


)
=
(
b
−
a
)

∑

k
=
0


n



C

k


(
n
)


f
(

x

k


)


{\displaystyle \int _{I}f(t)dt\approx \mathbf {I} _{\mbox{appr}}(x_{1},x_{2},\cdots ,x_{n})=(b-a)\sum _{k=0}^{n}C_{k}^{(n)}f(x_{k})}



其中的



 

C

k


(
n
)


=


1
n



∫

0


n



∏

k
≠
j





t
−
j


k
−
j



d
t
=



(
−
1

)

n
−
k




n
⋅
k
!
(
n
−
k
)
!




∫

0


n



∏

k
≠
j


(
t
−
j
)
d
t


{\displaystyle \ C_{k}^{(n)}={\frac {1}{n}}\int _{0}^{n}\prod _{k\neq j}{\frac {t-j}{k-j}}dt={\frac {(-1)^{n-k}}{n\cdot k!(n-k)!}}\int _{0}^{n}\prod _{k\neq j}(t-j)dt}


如果



n
=
1


{\displaystyle n=1}

，那麼牛頓-柯特斯公式就變成梯形公式（取每個小區間兩端點，做成梯形，梯形的值也和矩形一樣，趨於原來的函數的積分）。







I


appr


(

x

1


,

x

2


,
⋯
,

x

n


)
=

∑

i
=
0


n
−
1


(

x

i
+
1


−

x

i


)
(



f
(

x

i
+
1


)
+
f
(

x

i


)

2


)


{\displaystyle \mathbf {I} _{\mbox{appr}}(x_{1},x_{2},\cdots ,x_{n})=\sum _{i=0}^{n-1}(x_{i+1}-x_{i})({\frac {f(x_{i+1})+f(x_{i})}{2}})}



參見[編輯]

插值法
牛頓-柯特斯公式
數值微分

參考來源[編輯]

李慶揚. 《數值分析（第四版）》. 華中科技大學出版社. 2006. ISBN 7-560-93742-X. 






權威控制



NDL: 00571772












 
						取自 "https://zh.wikipedia.org/w/index.php?title=數值積分&oldid=42600676"					
分類：數值積分 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


العربيةBosanskiCatalàDeutschEnglishEspañolفارسیFrançaisעבריתहिन्दीMagyarItaliano日本語Қазақша한국어LatinaNederlandsPolskiPortuguêsРусскийSrpskohrvatski / српскохрватскиSimple EnglishСрпски / srpskiSvenskaУкраїнськаVèneto 
編輯連結 





 本頁面最後修訂於2016年12月29日 (週四) 11:17。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 








在工作表中計算數值的方法 - Excel






































































試用 Microsoft Edge
專為 Windows 10 設計、快速且安全的瀏覽器


不，謝謝
開始使用















Microsoft



Office









 無結果




0
 個項目在購物車中




登入








Office


購買 Office 365














支援







應用程式



Access
Excel
OneDrive
OneNote
Outlook
PowerPoint
SharePoint
商務用 Skype
Visio
Word



安裝


帳戶


訓練


系統管理










在工作表中計算數值的方法




適用對象: 
Excel 2010
Excel 2007
更多...
更少




 


 
無論是計算您組織中的部門人員編制或逐季銷售數量，計數為資料分析中的重要一環。Excel 提供多種技術，供您計算儲存格、列或欄間的資料數目。
為了協助您選擇最佳的選項，本文提供各種方法的綜合摘要及支援資訊，以協助您快速決定要使用的技術，並提供深入探討的文章連結。
計數不應與加總混為一談。如需有關加總儲存格、欄或列中的值的詳細資訊，請參閱在工作表中加總數值的方法。


本文內容
 



簡易計數




影片：使用 Excel 狀態列計算儲存格的數目




使用內建命令計算欄或列中的儲存格數目




使用 COUNT 函數計算範圍內的儲存格數目




使用大綱中的 [小計] 命令計算欄中的儲存格數目




使用 [樞紐分析表] 計算欄或列中的儲存格數目




使用 SUBTOTAL 函數計算清單或 Excel 表欄中的儲存格數目






根據一或多個條件計算數目




影片：使用 COUNT、COUNTIF 及 COUNTA 函數




使用 COUNTIF 函數根據單一條件計算範圍內的儲存格數目




使用 DCOUNT 函數根據單一或多個條件計算欄中的儲存格數目




使用 COUNTIFS 函數或 COUNT 和 IF 函數組合根據多個條件計算範圍內的儲存格數目






在資料包含空白值時計算數目




使用 COUNTA 函數計算範圍內的非空白儲存格數目




使用 DCOUNTA 函數計算清單中的非空白儲存格數目




使用 COUNTBLANK 函數計算連續範圍內的空白儲存格數目




使用 SUM 和 IF 函數組合計算非連續範圍內的空白儲存格數目






計算唯一值的出現次數




使用樞紐分析表計算範圍內的唯一值數目




使用 COUNTIF 函數根據單一條件計算範圍內的唯一值數目




在陣列公式中使用 SUM 和 IF 函數組合根據多個條件計算範圍內的唯一值數目




使用 [進階篩選] 計算清單欄中的唯一值數目




使用複合公式計算符合一或多個條件的範圍內的唯一值數目






特殊情況 (計算儲存格總數、計算字數)




使用 ROWS 和 COLUMNS 函數計算範圍內的儲存格總數




使用複合公式計算範圍內的字數






在狀態列上顯示計算及計數




 

簡易計數
您可以透過簡單的公式、按一下按鈕或使用工作表函數，來計算範圍內或表中的值之數目。
Excel 也可以將所選儲存格數字的總和顯示在 Excel 狀態列。請觀看以下影片範例，快速瞭解使用狀態列的相關資訊。另請參閱在狀態列上顯示計算及計數一節，以瞭解詳細資訊。如果您想要快速查看資料但沒有時間輸入公式，可參考狀態列上顯示的值。
 

影片：使用 Excel 狀態列計算儲存格的數目
請觀看以下影片，瞭解如何在狀態列上檢視計數。




頁面頂端


 

使用內建命令計算欄或列中的儲存格數目
您可透過選取包含至少一個數值的儲存格範圍，然後在 [常用] 索引標籤的 [編輯] 群組中，按一下 [自動加總] 旁的箭號，來使用 [自動加總] 命令的 [計數] 功能。然後按一下 [數字項個數]。Excel 會在您選取範圍的相鄰儲存格中，傳回範圍內的數值之計數。一般而言，此結果會顯示於右側的儲存格 (若是水平範圍) 或下方的儲存格 (若是垂直範圍)。




頁面頂端


 

使用 COUNT 函數計算範圍內的儲存格數目
在公式中使用 COUNT 函數計算範圍內的數值之數目在下列範例中，範圍 A2:A5 包含三個數字 (5、32 和 10) 以及一個文字值 ("hello")。您在公式中使用 COUNT 函數的方式如下：=COUNT(A2:A5)。結果為 3，也就是在此範圍內找到的數值之數目。














1






2






3






4






5






6












A








範例值





5




32




hello




10




=COUNT(A2:A5)








如需詳細資訊，請參閱 COUNT 函數一文中的「計算包含非連續列或欄中的數字之儲存格數目」一節。

頁面頂端


 

使用大綱中的 [小計] 命令計算欄中的儲存格數目
使用 [小計] 命令 (位於 [資料] 索引標籤中的 [大綱] 群組中)，以將某個資料欄進行群組和摘要。
如果您的資料以清單呈現，而且可用欄值以邏輯的方法加以群組，則您可以建立大綱來群組和摘要資料。



如圖所示，銷售總額依地區群組，且可輕鬆看出東部和西部各有四個每季的值。此外，皆有每個地區的值的加總，也會計算總計。
如需詳細資訊，請參閱下列文章：



在工作表中為資料建立大綱 (群組)




在工作表的資料清單中插入小計




頁面頂端


 

使用 [樞紐分析表] 計算欄或列中的儲存格數目
建立樞紐分析表，以針對您的資料進行摘要，並且讓您選擇要檢視的資料類別以協助您執行分析。
若要快速建立樞紐分析表，在某個資料範圍內或 Excel 表格中選取一個儲存格，然後在 [插入] 索引標籤的 [表格] 群組中按一下 [樞紐分析表]。
為了展現樞紐分析表的強大功能，請註意下列範例中的銷售資料包含許多列 (實際上有 40 列的資料，圖片中僅顯示其中一小部分)。此外，尚未摘要資料，並且沒有小計或總計。



樞紐分析表根據相同的資料顯示了小計、總計，並提供簡單明瞭的摘要。



建立和使用樞紐分析表之前可能需要進行一些初步的資料準備，並熟悉一些概念。
如需協助您開始使用的詳細資訊，請參閱下列文章：



在樞紐分析表中計算值




樞紐分析表中的小計和總計欄位




頁面頂端


 

使用 SUBTOTAL 函數計算清單或 Excel 表欄中的儲存格數目
您可以在公式中使用 SUBTOTAL 函數，計算 Excel 表中或儲存格範圍內的值之數目。
您可以使用 SUBTOTAL 函數，控制是否要在結果中包含隱藏列。此函數一律忽略已經篩選的列。
例如，針對下表的七個值使用此函數 (A2 至 A8 儲存格) 會傳回 7 的計數。














1






2






3






4






5






6






7






8






9












A








賣出數量





25




8




12




32




11




40




16




=SUBTOTAL(2,A2:A8)








在公式中，"2" 的部分指定函數應使用 SUM 函數，以傳回範圍 A2:A8 內的值之計數，並且應包含任何隱藏列。計數 (A9 儲存格中的結果) 為 7。
如果您隱藏 4、5 和 6 列，並且不希望計算這幾列，則須以不同的方式使用 SUBTOTAL 函數。您必須在公式中指定 "102," 而非 "2"，以要求 Excel 忽略隱藏列。您的工作表可能類似以下內容 (隱藏 4、5 和 6 列)：














1






2






3






7






8






9












A








賣出數量





25




8




40




16




=SUBTOTAL(102,A2:A8)








在此情況下，函數會傳回 4，也就是未隱藏且包含值的欄中的儲存格數目。
如需詳細資訊，請參閱 SUBTOTAL 函數一文。

頁面頂端



 

根據一或多個條件計算數目
您可透過使用多種工作表函數，計算範圍中符合您所指定條件 (又稱為準則) 的儲存格數目。
 

影片：使用 COUNT、COUNTIF 及 COUNTA 函數
請觀看以下影片，瞭解如何使用 COUNT 函數，以及如何使用 COUNTIF 和 COUNTA 函數計算只符合您指定條件的儲存格的數目。




頁面頂端


 

使用 COUNTIF 函數根據單一條件計算範圍內的儲存格數目
使用 COUNTIF 函數來計算符合一個條件 (又稱為準則) 的儲存格的數目。在下列範例中，函數會在範圍 A2:A8 內尋找大於 20 的值之計數，也就是 3。請註意 ">20" 這個條件，必須以引號括住。














1






2






3






4






5






6






7






8






9












A








賣出數量





25




8




12




32




11




40




16




= COUNTIF(A2:A8,">20")








如需詳細資訊，請參閱 COUNTIF 函數一文。

頁面頂端


 

使用 DCOUNT 函數根據單一或多個條件計算欄中的儲存格數目
若要符合您指定的條件，請使用 DCOUNT 資料庫函數。
當您有欄清單且覺得在分開的儲存格範圍中定義條件比使用巢狀函數還容易，則請使用 DCOUNT 函數。
在下列範例中，假設您要尋找包含或晚於 2008 年 3 月且賣出數量高於 400 的月份之計數。您可由此表格看出，有兩個月符合此要求：4 月 (442) 和 6 月 (405)。


附註: 接下來的程序可能並不直覺，但的確管用。請務必確實遵循指示，並如此處所示安排您工作表中的資料。您可以複製表格中的資料，將它貼到工作表中的 A1 儲存格。結果應該會顯示於 B13 儲存格。

您新增額外的儲存格範圍 (與位於 A1 至 B7 儲存格的銷售資料之排列方式類似)。額外的儲存格範圍包含 A10 至 B11 儲存格，並且含有相同的欄標籤 (「銷售單位」和「月末」)，以及直接在每個欄標籤下的列中的條件 (A11 和 B11 儲存格)。
接著，您在任何空白儲存格中輸入公式 (位置沒有分別，但在此範例中，是將公式輸入於 B13 儲存格)。此範例中的公式使用 DCOUNT 函數如下：=DCOUNT(A1:B7,,A10:B11)。














1






2






3






4






5






6






7






8






9






10






11






12






13












A




B








銷售單位




月末





339


1/31/2008




270


2/29/2008




314


3/31/2008




442


4/30/2008




336


5/31/2008




405


6/30/2008













銷售單位




月末





=">400"


=">=3/31/2008"









=DCOUNT(A1:B7,,A10:B11)









DCOUNT 函數會檢查 A2 至 A7 範圍內的資料，將它找到的條件套用在 A11 和 B11，並且傳回 2，也就是同時符合兩個條件的列數 (5 和 7 列)。
如需詳細資訊，請參閱 DCOUNT 函數一文。

頁面頂端


 

使用 COUNTIFS 函數或 COUNT 和 IF 函數組合根據多個條件計算範圍內的儲存格數目
使用 COUNTIFS 函數或 COUNT 和 IF 函數組合。



此圖顯示使用 COUNTIFS 函數尋找高速公路上產生大於 250 馬力，但平均超過 25 哩每加侖的車輛。此函數會傳回 2，也就是同時符合兩個條件的列數 (3 和 4 列)。


附註: 在 COUNTIFS 函數中，任何條件都必須以引號括住 ("") — 例如："<250"、">25" 或甚至是 "240"。

您可以使用 COUNTIF 函數，來計算單一值在範圍中出現的次數。例如，若要得知 70 這個值在範圍 A2 至 A40 中的出現頻率，您可以使用 =COUNTIF(A2:A40,70) 公式。
如需詳細資訊，請參閱計算值的出現頻率和 COUNTIFS 函數文章。

頁面頂端



 

在資料包含空白值時計算數目
您可以使用工作表函數，來計算包含資料或空白的儲存格數目。
 

使用 COUNTA 函數計算範圍內的非空白儲存格數目
使用 COUNTA 函數計算範圍內只包含值的儲存格數目。
當您計算儲存格數目時，有時可能想要略過所有的空白儲存格，因為只有含有值的儲存格才具有意義。例如，您想要計算至少在一個地區中達成交易的銷售人員總數。
在以下範例中，針對西部地區銷售欄中的值使用此函數會傳回 3 的計數。














1






2






3






4






5






6






7






8












A




B








銷售人員




西部地區銷售





Andrews


24000




Atlas





Chai





Gabrielle


31000




Hansen





Zeng


8000





=COUNTA(B2:B7)








因為 B3、B4 和 B6 儲存格是空白的，COUNTA 函數會略過這些儲存格。只會計算含有 24000、31000 及 8000 值的儲存格之數目。計數 (B8 儲存格中的結果) 為 3。
如需詳細資訊，請參閱 COUNTA 函數。

頁面頂端


 

使用 DCOUNTA 函數計算清單中的非空白儲存格數目
使用 DCOUNTA 函數，來計算清單或資料庫的記錄欄中，符合您所指定條件的非空白儲存格之數目。
下列範例使用 DCOUNTA 函數，來計算在準則範圍 A1:B2 中符合指定條件，即範圍 A4:B9 包含的資料庫中的記錄數目。這些條件是，[產品識別碼] 值必須大於或等於 4000，且 [評分] 值必須大於或等於 50。只有一個記錄 (列 7) 同時符合這兩個條件。














1






2






3






4






5






6






7






8






9












A




B








產品識別碼




評分





=">=4000"


=">=50"









產品識別碼




評分





2048


61




16384





35336


83




1024


113




512


47





=DCOUNTA(A4:B9,"評分",A1:B2)








如需詳細資訊，請參閱 DCOUNTA 函數一文。

頁面頂端


 

使用 COUNTBLANK 函數計算連續範圍內的空白儲存格數目
使用 COUNTBLANK 函數傳回連續範圍內的空白儲存格數目 (如果儲存格皆以未中斷的順序相連，則表示是連續的)。如果儲存格包含傳回空白文字 ("") 的公式，該儲存格則會計算在內。


附註: 當您計算儲存格數目時，有些時候您可能會想要包括空白儲存格，因為這對您來說是有意義的。例如，您想要計算某個地區中的銷售人員總數，無論他們是否達成交易。

如需詳細資訊，請參閱 COUNTBLANK 函數一文。

頁面頂端


 

使用 SUM 和 IF 函數組合計算非連續範圍內的空白儲存格數目
使用 SUM 函數和 IF 函數組合。一般的做法是，在陣列公式中使用 IF 函數，以判定每個參照的儲存格是否包含值，然後再加總由公式傳回的 FALSE 值之數目。
請參閱知識庫文章 XL：使用 SUM(IF()) 而不使用 CountBlank() 的時機以瞭解詳細資訊。

頁面頂端



 

計算唯一值的出現次數
您可以使用樞紐分析表、COUNTIF 函數、函數組合，或 [進階篩選] 對話方塊，來計算範圍內的唯一值的數目。
 

使用樞紐分析表計算範圍內的唯一值數目
您可以使用樞紐分析表顯示總計，並計算唯一值的出現次數。
如需詳細資訊，請參閱計算值出現頻率一文中的「使用樞紐分析表計算多個值的出現頻率」一節。

頁面頂端


 

使用 COUNTIF 函數根據單一條件計算範圍內的唯一值數目
使用 COUNTIF 函數計算範圍內一個值出現的次數。
在下列範例中，COUNTIF 函數傳回 2，也就是範圍 A2:A7 內 250 這個值出現的次數。














1






2






3






4






5






6






7






8












A








賣出數量





245







250







250




無




=COUNTIF(A2:A7,250)








如需詳細資訊，請參閱計算值的出現頻率一文中的「計算單一值在範圍內的出現頻率」一節。

頁面頂端


 

在陣列公式中使用 SUM 和 IF 函數組合根據多個條件計算範圍內的唯一值數目
使用 SUM 函數及 IF 函數。一般的做法是，在陣列公式中使用 IF函數，以判定是否符合多個條件所構成的準則，然後再加總由公式傳回的 TRUE 值之數目。
在下列範例中，IF 函數用來檢查範圍 A2:A10 內的每個儲存格，並判定儲存格是否包含 Andrews 或 Chai。傳回 TRUE 值的次數是透過 SUM 函數加總而成，結果為 7。您可以複製此範例，將它貼到工作表中的 A1 儲存格。在貼上此範例後，您將發現 A11 儲存格含有 #VALUE! 錯誤。若要讓公式正常運作，您必須先按 F2 再按 CTRL+SHIFT+ENTER，將它轉換為陣列公式。接著，A11 儲存格就會顯示數字 7。














1






2






3






4






5






6






7






8






9






10












A




B








銷售人員




發票





Andrews


15000




Chai


11000




Andrews


11000




Chai


4000




Hansen


8000




Chai


6000




Hansen


14000




Andrews


7000





12000





公式




說明 (結果)





=SUM(IF((A2:A10="Andrews")+(A2:A10="Chai"),1,0))


Andrews 或 Chai 的發票數目 (7)








如需詳細資訊，請參閱計算值的出現頻率一文的「使用函數計算多個文字值或數值的出現頻率」一節。
請參閱下列知識庫文章，以取得更多祕訣：



XL：使用 SUM(IF()) 做為陣列函數，而不使用 COUNTIF() 和 AND




XL：如何計算範圍內數字或文字的出現次數




頁面頂端


 

使用 [進階篩選] 計算清單欄中的唯一值數目
您可以使用 [進階篩選] 對話方塊，將某個資料欄中的唯一值篩選出來。您可以原地篩選值，或擷取值將它貼到新的位置。接著，您即可使用 ROWS 函數，計算新範圍中的項目數。


附註: 


如果您在原地篩選資料，不會刪除工作表中的值 — 可能會隱藏一或多個列。在 [資料] 索引標籤的 [排序與篩選] 群組中，按一下 [清除]，以再次顯示那些值。


如果您只想快速看一下唯一值的數目，請在使用 [進階篩選] 後選取資料 (無論是已篩選或已複製的資料)，然後查看狀態列。狀態列的 [項目個數] 值應等於唯一值的數目。



若要尋找唯一值，您可以使用 [進階] 命令 (位於 [資料] 索引標籤的 [排序與篩選] 群組中)。
下圖顯示如何使用 [進階篩選] 只將唯一記錄複製到工作表的新位置。



在下圖中，C 欄包含從 A 欄範圍複製的 5 個唯一值。



如需詳細資訊，請參閱計算重複值中的唯一值數目一文中的「使用篩選器計算唯一值數目」一節。

頁面頂端


 

使用複合公式計算符合一或多個條件的範圍內的唯一值數目
使用多種的 IF、SUM、FREQUENCY、MATCH 及 LEN 函數組合。
如需詳細資訊，請參閱計算重複值中的唯一值數目一文中的「使用函數計算唯一值數目」一節。
另請參閱 XL：如何判斷清單中的唯一項目數量一文。

頁面頂端



 

特殊情況 (計算儲存格總數、計算字數)
您可以使用多種的工作表函數組合，來計算範圍內的儲存格數目或字數。
 

使用 ROWS 和 COLUMNS 函數計算範圍內的儲存格總數
假設您想要判斷大型工作表的規模大小，以決定是否要在活頁簿中使用手動或自動計算。若要計算範圍內的所有儲存格數目，請使用將 ROWS 和 COLUMNS 函數的傳回值相乘的公式。
如果將範例複製到空白工作表上，就會更容易瞭解。

如何複製範例



建立空白的活頁簿或工作表。


選取 [說明] 主題中的範例。


附註: 請不要選取列或欄名。


選取 [說明] 中的範例


按 CTRL+C。


選取工作表中的儲存格 A1，然後按 CTRL+V。


若要在檢視結果與檢視傳回結果的公式之間切換，請按 CTRL+` (抑音符號)，或在 [公式] 索引標籤的 [公式稽核] 群組中，按一下 [顯示公式] 按鈕。
















1






2






3






4






5






6












A




B




C








地區




月份




銷售額





東部


1 月


$18,000




東部


2 月


$23,000




東部


3 月


$19,000





公式




說明 (結果)






=ROWS(A2:C4) * COLUMNS(A2:C4)


範圍內的儲存格總數 (9)










頁面頂端


 

使用複合公式計算範圍內的字數
在陣列公式中使用SUM、IFLEN 及 SUBSTITUTE 函數組合。下列範例顯示使用複合公式尋找 7 個儲存格範圍內的字數之結果 (其中 3 個儲存格是空白的)。某些儲存格包含前置或結尾空格 — TRIM 和 SUBSTITUTE函數在計算數目之前，會先移除這些多餘的空格。
請複製下表中由 A2 至 A11 的文字。將文字貼至工作表中的 A1 儲存格之前，請先將 A 欄寬度變更為大約 100。














1






2






3






4






5






6






7






8






9






10






11












A








文字字串





6 個字和 4 個結尾空格     







   6 個字和 3 個前置空格







8 個字、一些逗號及 2 個結尾空格  







已略過某些字元，如逗號或句號。








公式





=SUM(IF(LEN(TRIM(A2:A8))=0,0,LEN(TRIM(A2:A8))-LEN(SUBSTITUTE(A2:A8," ",""))+1))








將文字貼至工作表中的 A1 儲存格位置之後，請選取 A11 儲存格、按 F2，然後按 SHIFT+CTRL+ENTER 以陣列公式輸入此公式。A11 儲存格應顯示正確的結果 29。

頁面頂端



 

在狀態列上顯示計算及計數
選取一個或多個儲存格後，Excel 狀態列會顯示這些儲存格資料的相關資訊。比方說，如果選取工作表上的四個儲存格，其中包含值 2、3、文字字串 (例如「雲端」) 和 4，下列所有的值都會同時顯示在狀態列上：平均值、計數、數字計數、最小值、最大值及加總。以滑鼠右鍵按一下狀態列，可顯示或隱藏任一值或所有的值。這些值顯示在下圖中。





附註: 在舊版 Excel 中，這些相同的值可以顯示在狀態列上，但一次只能顯示一個值。


頁面頂端






























									擴展您的技能
								
探索訓練



									優先取得新功能
								
加入 Office 測試人員


















這項資訊有幫助嗎？


是
否




太好了! 還有其他意見反應嗎?
我們應該如何改進?



傳送​​
不，謝謝




感謝您的意見反應!


感謝您的意見反應! 我們將協助您與其中一位 Office 支援專員連絡以深入瞭解您的意見。

連絡客戶支援





×


















 

 









            數值方法 -華人百科                       數值方法  本書介紹了數值方法的理論及實用知識，並講述瞭如何利用MATLAB軟體實現各種數值演算法，以便為讀者今後的學習打下堅實的數值分析與科學計算基礎。教師可以根據不同的學習對象和學習目的選擇相應章節，形成理論與實踐相結合的學習策略。  ISBN 9787121104732 書名 數值方法 頁數 524頁 字數 870000字 作者 （美）馬修斯，（美）芬克 出版時間 2010年4月1日 定價 55元 出版社 電子工業出版社 譯者 周璐 裝幀 平裝 開本 16開      著作權信息​書 名: 數值方法(C++描述)作 者:(印度)(PALLABGHOSH)高希出版社: 清華大學出版社出版時間: 2008ISBN: 9787302176435開本: 16定價: 59.00 元 內容簡介《數值方法(C++描述)》主要介紹如何使用電腦程式語言C++求解數值問題，由三個主要內容組成:(1)數學基礎(包括一些定理和推論);(2)科學工程中的方法套用;(3)電腦實現。《數值方法(C++描述)》從套用的角度來描述數值方法。就像電腦手冊一樣，很多已解決的問題會在所有的章節出現，便於概念的理解。每章最後給出了練習題以便學生實踐。《數值方法(C++描述)》內容廣泛、資料翔實、深入淺出，便於教學和自學。高等院校電腦及相關專業的大學部生和教師，從事數值計算方面工作的人員。 前言譯 者 序數值方法原屬於數值計算的問題，現在又引入了電腦。本書從套用的角度來描述數值方法，又直接用電腦來實現這些方法，這不僅對於學生，而且對於廣大工程技術人員來說，是很有幫助的。有了本書，對數學不很精通的人也能解決工程中的數值計算問題，因為書中有了現成的程式;而對電腦不很熟悉的人來說，也能用電腦解決數值計算的問題，也是因為書中有了現成的程式。這就是本書的最顯著的特點。本書不僅可以作為高等院校理工科專業《數值方法》等課程的教材或參考書，也是廣大工程技術人員在進行數值計算時的一本很好的工具書。擔任本書主要翻譯工作的有徐士良、葛兵、徐艷，同時參加翻譯工作的還有馬爾呢、白小玲、徐娟、劉慶元、張蘋、彭明靜、盧謙、王瑄等。因水準有限，譯文中有錯誤或不妥之處，懇請讀者批評指正。譯者前 言本書是一本關於使用電腦程式語言C++求解數值問題的書籍，它展示了電腦在解決科學和工程問題中所扮演的重要角色。電腦除了速度優勢外，它們還具有準確性、靈巧性和多功能性。你可以找到很多相關的書籍，這些書可以讓你很好地認識數值方法和如何套用它們去解決問題。所以問題來了: 我們還需要另外一本這方面的書嗎?當我讓同項目中的同事去寫一本關於數值方法的書時，他們抱怨說: "什麽?另一本書?"我確信，一本能在提供電腦語言的同時，清晰示範出如何使用它們解決科學工程問題的數值方法的書是必要的。有很多理由來支持這一觀點，其中最重要的是，近些年，C++語言已經成為軟體開發者的首選，因為它有很多吸引人的特征，很多科學工程學科的學生畢業後都選擇了軟體開發的職業。市場上使用這一強大語言的數值方法的書籍並不多，本書在第一章對C++語言作了簡短的介紹。現在，學校裏會講授C程式語言。在很多的工科院校，工科新生都要學習高級C和C++語言。所以，程式設計語言不會成為電腦實現數值方法的障礙。目前，一門關於數值方法的課程通常會達到一周2~3小時的授課以及3~4小時的電腦實驗部分。上機時學生可以在電腦上實踐演算法。本書就是針對這樣的課程而寫的。它主要用於大學工科課程。不必將15章的內容在一個學期內全部講完，根據學生的需求，教師可以挑出部分章節進行講授。本書也適用於那些需要電腦數值方法實現的專業人士。本書由三個主要部分組成: (1)數學基礎(包括一些定理和推論); (2)科學工程中的方法套用; (3)電腦實現。這三部分涵蓋了大學部生的整個課程，很少有一本書能包括全部內容。在市場上能夠看到很多優秀的書籍，這些書籍都提供了數值方法的理論。本書從套用的角度來描述數值方法。那些簡單的問題可以通過手算得到結果，但重點是如何使用電腦來解決問題。就像電腦手冊一樣，很多已解決的問題會在所有的章節出現，便於概念的理解。學生需要對每章最後給出的問題進行實踐。並詳細參考在每章結尾處列出的參考書籍，對本章中的主題進行深入學習。在本書的最後給出了很多不錯的參考書籍，建議學生閱讀。在學習了一個程式如何工作以及如何開發這樣一個程式後，你足以理解一個數值演算法是如何工作的了。此時你可能還能開發出一個簡潔的程式。然後你就可以開始使用像MATLAB、Mathematica、 Polymath、 NAG和IMSL這些商業軟體了。我要感謝IIT Guwahati的主任和代理主任的支持，並出版了本書。我的學生們一直希望有一本這樣的電腦程式書，他們給出了有價值的反饋和建議，為此我表示感謝。準備本書期間，我得到了姐姐Kakali以及雙親一貫的支持。我的同事很熱情、親切友好並且很配合工作，我同樣要感謝他們。我要特別感謝我以前的同事--Anupam Shukla教授對我寫這本書的支持。最後，我想感謝出版者Prentice-Hall of India，特別是經理和編輯與發行組，感謝他們在出版本書過程中的緊密合作。如果本書能激發大家對數值方法及其電腦實現的興趣，我會感到很高興。歡迎廣大讀者對本書內容提出寶貴意見。Pallab GhoshIIT Guwahati 目錄第一章C++與面向對象的程式設計1.1引言1.2C++程式的組成1.3C++標識符與關鍵字1.4頭檔案1.5C++資料類型1.6常量聲明1.7運算符1.8迴圈結構1.9判斷語句1.10C++函式1.11C++檔案處理1.12數組1.13構造函式與析構函式總結關鍵字練習文獻第二章數值計算的準確性與穩定性2.1引言2.2有效數位2.3誤差定義2.4舍人誤差2.5數值運算的有效數位規則2.6級數的截斷誤差2.7誤差的傳播與計算不穩定性2.8病態系統總結關鍵字練習文獻第三章求解聯立線性代數方程3.1引言3.2幾個矩陣定義3.3解的唯一性3.4/頃序Gauss消去法3.5全選主元Gauss消去法3.6帶有正向與反向代入的LU分解3.7Cholesky分解3.8Gauss-Jordan消去法3.9Gauss-Jordan法求矩陣的逆3.10求解三對角線方程組3.11Gauss-Seidel迭代3.12Gauss-Seidel鬆弛迭代3.13病態系統總結關鍵字練習文獻第四章求解非線性方程4.1引言4.2圖解法4.3用反復試驗法求解4.4歸類與開放法4.5迭代法的收斂速度4.6對分法4.7試位法4.8逐次代人法4.9Newton-Raphson法4.10割線法4.11求解非線性方程組的方法4.12確定多項式方程的根總結關鍵字練習文獻第五章矩陣的特征值與特征向量5.1引言5.2Cayley-Hamilton定理5.3特征向量的正交性與規格化正交性5.4確定特征值與特征向量的方法5.5Faddeev-Leverrier法5.6乘冪法5.7對稱矩陣特征值的計算總結關鍵字附錄5A涉及向量和矩陣的一些普通運算練習文獻第六章資料統計分析6.1引言6.2初等概率論6.3資料抽樣6.4平均值與方差的計算6.5抽樣分佈的性質6.6置信區間6.7假設檢驗總結關鍵字附錄6A附錄6B附錄6C附錄6D練習文獻第七章曲線擬合7.1引言7.2線性回歸7.3曲線回歸7.4多元回歸7.5使用正交多項式的回歸.總結關鍵字練習文獻第八章資料排序8.1引言8.2冒泡排序8.3Shell排序8.4快速排序8.5冒泡排序.Shell排序和快速排序的比較研究總結關鍵字練習文獻第九章函式逼近9.1引言9.2Chebyshev逼近9.3Pade逼近9.4誤差函式9.5Beta和Gamma函式9.6Bessel函式總結關鍵字附錄9A某些公共函式的Maclaurin級數附錄9B附錄9C附錄9D第一類0階和1階Bessel函式附錄9E第二類0階和1階Bessel函式附錄9FJ0(x).J1(x).Y0(x)和Y1(x)的前10個零點練習文獻第十章插值法10.1引言10.2多項式插值10.3Newton向前差分公式10.4Newton向後差分公式10.5Gauss中心差分公式10.6Newton差商公式10.7Lagrange插值公式10.8樣條插值總結關鍵字附錄10A由式[36]計算二階導數的三對角演算法練習文獻第十一章數值積分11.1引言11.2Newton-Cotes閉合積分公式11.3Richardson外推法11.4Romberg求積法11.5Gauss求積法11.6資料的積分11.7開放積分公式總結關鍵字練習文獻第十二章數值微分12.1引言12.2向前.向後和中心差分公式12.3Richardson外推法12.4Lagrange微分公式總結關鍵字練習文獻第十三章求解常微分方程:初值問題13.1引言13.2Taylor級數展開法13.3Euler法13.4Runge-Kutta法13.5Runge-Kutta-Fehlberg法13.6用Runge-Kutta法求解常微分方程組13.7剛性微分方程13.8數值解法的穩定性13.9隱式Euler法和Crank-Nicolson法13.10多步法13.11向後微分公式(BDFs)13.12微分-代數方程組總結關鍵字練習文獻第十四章求解常微分方程:邊值問題14.1引言14.2邊界條件類型14.3試射法14.4有限差分法14.5正交配置法14.6特征值問題總結關鍵字附錄14A練習文獻第十五章偏微分方程數值解15.1引言15.2偏微分方程的類型15.3初始與邊界條件的詳細說明15.4有限差分法求解總結關鍵字練習文獻附錄常用的微分和積分公式參考文獻……   相關詞條     數值計算方法      SAS統計軟體      套用統計      初等數論      套用數學      數學模型      數學分析      代數學      數值分析      牛頓法      偏微分方程      概率論      有限元法             數值方法 @ 華人百科  勵志人生 國語字典辭典 詩詞大全 小語 腦筋急轉彎    


李明憲老師的數值方法課













CS3331: Numerical Methods




CS3331: Numerical Methods
數值方法
 Instructor: 張智星 (Roger Jang) 

Table of Contents:





最新消息


General Info


Text and References



Syllabus


Weekly Schedule


Homework/Scores



Internet Resources



		MATLAB 線上中文手冊


線上討論區



MATLAB Demos


Forms





Latest News:

 (June 16)
	Grades for the course is on line already.
 (June 3)
	Homework 5 is on line already.
 (June 3)
	下星期五（June 12）舉行第5次隨堂考，每人可準備一張A4
	的雙面小抄（但不可共用），考試時間為 1:10 ~ 2:00pm。
 (June 3)
	Evaluation statistics is
	here!
 (May 13)
	下星期五（May 22）舉行第四次隨堂考，每人可準備一張A4
	的雙面小抄（但不可共用），考試時間為 1:10 ~ 2:00pm。
 (March 20)
	下星期三（March 25）舉行第一次隨堂考，每人可準備一張A4
	的雙面小抄（但不可共用），考試時間為 2:10 ~ 3:00pm, 
	1:10 ~ 2:00 正常上課。
 (March 20)
	歷屆隨堂考考題
 (March 20)
	三月18日投票決議，作業抄襲他人者以零分計，提供抄襲者以八折計。




General Info:

 Course number: CS3331
	 Credits: 3
	 Course title: 數值方法
		(Numerical Methods)
	 Instructor: 張智星
		(Tel: 5742796, 資電館444室,
		
		jang@cs.nthu.edu.tw)
	
 TA:  許靜芳 
 Prerequisites: Calculus, Linear Algegra, Probability 
	 Required computer skills: DOS/UNIX/MS-Windows, MATLAB
	 Grading policy:
	
 5 assignments: 40%
		 5 quiz: 60%
	



Text and Reference:

 Textbook:
	
Numerical Methods with MATLAB
		by G. J. Borse
	
 Reference books:
	
Numerical Analysis and Graphic Visualization
		with MATLAB by Shoichiro Nakamura.


		MATLAB 線上中文手冊 by Jang
MATLAB Primer by Sigmon
	Old version (for MATLAB 3.5) of this book is available on-line:
	
	tex or
	
	postscript file.
	



Syllabus:





 Introduction 
	 MATLAB
	 Linear Algebra: A Quick Review
	 Polynomials and Interpolation 
	 Numerical Integration and Differentiation
	


 Roots of Nonlinear Equations
	 Curve Fitting to Measured Data
	 Spline Functions and Nonlinear Interpolation
	 Approximating Eigenvalues and Eigenvectors
	 Selected Topics
	




Weekly Schedule:




Time \ Day
Wed.
Thu.
Fri.

13:10~14:00
Lecture at 128

Lecture at 128

14:10~15:00
Lecture at 128



15:10~16:00




16:10~18:00
TA hours at 230



Office hours: any time you can catch me.


 Homework/Scores:

 Homework:
	
 HW0: Feb. 27 due
 HW1: Mar. 6 due
    HW2: Mar. 25 due
 HW3: April 15 due
 HW4: May 19 due
 HW5: June 10 due






Internet Resources:

 
		Programs used in the textbook



Others:

Student information form
Midtern evaluation form
Evaluation statistics
Midtern evaluation form


Roger's Home








天瓏網路書店-應用數值方法 : 使用MATLAB, 3/e (Chapra: 3/e)



































天瓏網路書店
全台最齊全
中英文電腦書專賣店







天瓏資訊圖書粉絲專頁




搜尋


資料科學
簡體書
Packt
微服務
工程師必讀經典
英文書新到貨
Python
Tensorflow
無瑕程式碼








        應用數值方法 : 使用MATLAB, 3/e (Chapra: 3/e)
        


        吳俊諆
        
      




 


出版商:
美商麥格羅希爾


出版日期:
2015-10-31


定價:
$660


售價:

$660



貴賓價:

9.7 折
            $640

語言:
繁體中文


頁數:
592


ISBN:
9861579125

ISBN-13:
9789861579122





      立即出貨
        (庫存=1)













買這商品的人也買了...







 
$620
              貴賓價: $558
          
MATLAB 通訊工程模擬





 
$1,200
              貴賓價: $1,080
          
Radio Frequency Integrated Circuits and Systems (Hardcover)





 
$580
              貴賓價: $522
          
MATLAB 機率與數理統計





 
$250
              貴賓價: $225
          
Matlab/Simulink 在 CDMA 上的應用





 
$420
              貴賓價: $378
          
投資分析 + MATLAB 應用





 
$490
              貴賓價: $372
          
數位影像處理技術手冊, 2/e





 
$520
              貴賓價: $504
          
WCDMA 基頻訊號處理與系統設計實務





 
$700
              貴賓價: $665
          
工具機切削技術研究





 
$580
              售價: $458
          
演算法技術手冊, 2/e (Algorithms in a Nutshell: A Practical Guide, 2/e)





 
$300
              貴賓價: $270
          
圖解統計與大數據





 
              貴賓價: $393
          
低功耗藍牙開發權威指南(Bluetooth Low Energy: The Developer's Handbook)





 
$520
              貴賓價: $468
          
MATLAB 數值分析





 
$600
              貴賓價: $540
          
控制系統設計與模擬－使用Matlab/Simulink, 8/e





 
$320
              貴賓價: $288
          
圖解電磁學, 2/e





 
$550
              貴賓價: $495
          
無線區域網路, 3/e





 
$450
              貴賓價: $428
          
通訊系統－4G基礎通訊





 
$290
              貴賓價: $261
          
行動通訊－無線寬頻網路





 
$480
              貴賓價: $432
          
第四代行動通訊系統 3GPP LTE-Advanced：原理與實務, 2/e





 
$350
              售價: $277
          
圖解！大數據下必學的統計基礎





 
              貴賓價: $507
          
4G移動通信技術權威指南(LTE與LTE-Advanced)(第2版)




產品描述

<內容簡介>
學習「數值分析」的目的是學習不同的數值方法，並透過電腦模擬分析，解決形形色色的工程和科學問題。好的數值分析教科書可以讓學習者事半功倍，這本書做到了！《應用數值方法：使用MATLAB R》（Applied Numerical Methods with MATLAB R, 3e）以解決工程和科學問題為出發點，讓學生透過解決不同案例的問題來瞭解其中的相關數值方法，是相當實用的介紹方式。本書的文字敘述淺顯易懂，而採用直譯語法的MATLAB，可利用簡易語法來呈現不同的數值計算結果（甚至繪圖），讓初學者領會簡潔求解過程和答案的意義。這些優點正是這本書不同於其他數值分析書籍之處。
<作者簡介>
吳俊諆現職：國立中央大學機械工學院航空及太空工程博士學歷：美國喬治亞理工學院航空及太空工程博士
專長領域計算流體力學與熱傳、太陽能工程、風力渦輪機葉片氣動力分析、風場模擬、能源技術評估
<目錄>
第一篇　模式化、計算機與誤差分析第1章　數學模型化與工程問題求解第2章　程式化與軟體第3章　近似與捨入誤差第4章　截尾誤差和泰勒級數
第二篇　方程式的根第5章　界定法第6章　開放式方法第7章　多項式的根第8章　個案探討：方程式的根
第三篇　線性代數方程式第9章　高斯消去法第10章　LU分解法與逆矩陣第11章　特殊矩陣及高斯-賽德法第12章　案例探討：線性代數方程
第四篇　最佳化第13章　無條件限制的一維最佳化問題(書附光碟)第14章　多維無條件限制的最佳化問題第15章　有條件限制的一維最佳化問題第16章　案例探討：最佳化問題(書附光碟)
第五篇　曲線擬合第17章　最小平方迴歸第18章　內插法第19章　傅利葉近似第20章　案例探討：曲線擬合
第六篇　數值微分與積分第21章　牛頓-寇特斯積分公式第22章　方程式的積分第23章　數值微分第24章　案例探討：數值積分與微分









中文書籍分類

最新新書
2016 年度暢銷排行
暢銷排行 (2017/06)
暢銷排行 (2017/05)
暢銷排行 (2017/04)



活動主題列表

資料科學
CRC好書上架
簡體中文書最新到貨
PACKT 最新到貨
Effective 系列書
微服務系列書
Ruddy老師的敏捷教室
程式設計必讀經典系列
Springer好書上架
英文書最新到貨
資料視覺化系列書
Python 系列書籍
深度學習系列書籍
無瑕的程式碼 超值合購
Maker小天地



特價書籍

Bootstrap系列76折起
松崗暢銷書展5折起







