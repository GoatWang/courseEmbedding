

�Ʀ챱��t�γ]�p




5.�@�Ʀ챱��t�γ]�p
	�]�p�@�ӱ���t�Υi�����U�C�X�Ӷ��q

�w�q�t�Ϊ��W��
�إߨ����骺�ƾǼҫ��P�S�ʤ��R
��������R�P�]�p
�q������
�n���w��]�p
�t�ξ�X�B�����P�ʯ����


��5.1������t�γ]�p���y�{�ϡA�H�U�N�v�@�����C

5.1�@�w�q�t�Ϊ��W��
 �p��w�q�@�ӱ���t�Ϊ��W��b����t�γ]�p�L�{���O�@�ӫD�`���n�o�`���쩿�������ءC
	�w�q�A�����W�椣�Ȳo�A��\��B����B�����Ϥ������D�A�]�P�ұĥΪ��]�p��k�B��{���i��ʡB
	�s�y�����������۱K�������Y�C�b�w�q�@�Өt�Ϊ��W��ɡA�]�����]���Ҽ{�o�Ǧ]�������H�M�w�A
	��ɵ{����������Ӭ�o�T�����@���ɶ��C
 �@�ӱ���t�Ϊ��W��i�����T���G�ʯ�W��(performance specifications)�B�j���׳W��(robustness specifications)�P
	����߳W��(control law specifications)�C
�ʯ�W��
 �ʯ�W��y�z�@�ӳ�������t�Ω��������T���A�p�ɰ��T�����W�ɮɶ��B�W�V(overshoot)�ʤ��񵥡A
	�άO�W���T�����W�e�B�W�q��ɻP�ۦ���ɵ��C�@�ӱ���t�Ϊ��ʯ�W�����㦳�U�C�S�ʡG

	(1) ��z�Z�㦳�}�n����m��O�C
	(2) ���J�R�O�঳�w���������C
	(3) ����T�����P��Ӥj�C
�j���׳W��
 �j���׬O������������ܩάO�t�Τ��ҫ��ƻ~�t�ӾɭP��������t�Τ��ʯ�Ҩ��v�T���{�סC
	������Ҩ��줧�Z�ʥ]�A�G

 �����骺�Y�ǯS�ʷ|���ܡA�p����Ȫ��}���B�ѤƩηū׫Y�ƪ����ܵ��C
	�Ҧp�b�ƾǤu�~�{�Ǳ���̩ҨϥΪ������A�]���ϥΦ~�����W���ӥi�୰�C�ܭ즳�Ĳv��70%
	�C
 ������i�ण��T�����H�ҫ��ƩάO�P�O�A�ɭP�����G����]�i��O�L�N�y�����εL�k�קK���A
	�p�Ѽƪ��~�t�B�q�����~�t�����A�]�i��O���N���A�]���t���ܤƪ��T�פj�A�ӵL�k�H��@��T���ҫ��ơC
	�Ҧp�b�������ʺA�ҫ��̡A�Y�ǵ��c�Ҧ��ΫD�u�ʧY���H�����A�H²�ƨt�Ϊ��ҫ��A���]�]���y���F�ҫ��ƪ��~�t�C

	�j���׳W�檺�w�q�i�঳�X�ث����G


	�C�L���F�ӫסG�۹��t�ΰѼƪ��Y�ǰj�����L���q�ܤp�C�Ҧp�q���������]����ȧ��ܦӳy������X�q���ܤ����ܤp�C
	�O���ʯ�G����t�ΧY�Ϧb����z�Z�i�ʮɤ����O�����@�w�{�ת��ʯ���{�C�Ҧp�@�Ӧ��A�t�ΧY�ϾD��~�O�z�Z��
	�t���ܤƨ�����ɶ������p��30 mesc�C

����߳W��
 �b�]�p�@�ӱ���t�ήɡA���ɩұĨ�������]�p��k�]�|����Y�ǭ���A
	�o�ǭ���q�`�P�������{��k�����A�Ҧp�G

���������ƬY�ǯS�w�����A�pPID�C
	��������O�u�ʥB�D���ܪ�(LTI)�A�p�Q�ιB���j���ӹ�{����C
	�b�Y�Ǳ���t�Υi��ݭn�ܦh�ӷP�����P��ʾ��A�C�Ө�ʾ��u�ݭn�@�Ӧ^�«H���A���������W�ߩʡA���S�ݭn�ǥѳq�T�ǻ��T���A�ӧΦ��@�Ӥ��v��������t�ΡC
	����]�\�ݭn�ίS�w���B�z���ӹ�{�ӭ���F������סC

 �b�]�p�@�ӱ���t�ήɡA�ѩ�o�ǳ]�p�W��P����A�]���N�������X�������Ҽ{�P��J�C
5.2�@�ҫ��ƻP���R
 �b�]�p�@�ӱ���t�Ϊ��L�{���A�������骺�A�ѬO�۷����n���C
	�إߨ����骺�ҫ��q�`�ǥѨ�س~�|�F���A�@�O�g�Ѫ��z�w�߱��ɱ���q�P��X�q�����Y�A�إ߰ʺA��{���F
	�t�@�ؤ�k�h�O�g�ѹ�ڶq���U���z�q�A�A�g�Ѩt�ΧP�O(system identification)����k�A�إ߼ƾǼҫ��C
	�b�@�뱡�p�U�A�ѩ�ﱱ���H�w���۷����{�ѡA�]���j�h�ĥΫe�̡A��Y�ǽ������t�ΡA�p�Ƥu�{�Ǳ���A
	�ѩ�t�Ϊ����ư��B�D�u�ʡB�Ѽƶq���������]���A�]�������Ѫ��z���Y�إߨt�Ϊ��ƾǼҫ��A
	�b�o�˪����p�q�`�ĥΨt�ΧP�O����k�A�B�ѩ�t�Ϊ����ư��A�����x���t�Ϊ��S�ʻP�]�p����A
	�]���`�ĥμҫ�²��(model reduction)���覡�o��@�Ө��H�N���t�έ��n�S�ʪ�²�Ƽҫ��A�A�i��]�p�C
	�b�q�O�q�l�P���F�X�ʪ�������̡A�إߨt�Ϊ��ʺA�ƾǼҫ��O�۷����n���@���C�Ҧp�bPWM DC-DC
	�ഫ�����ҫ��Ƥ�k�A�N�����A�Ŷ������ƪk(state-space averaging method)�ε��Ĺq���ҫ�����k�A
	�Ǧ��i�إ��ഫ�����p�H���ҫ��A�H�i��ɰ�P�W���T�������R�P�]�p�C
	�ھکҫإߪ��ҫ��A�A�Ѩ����骺���ơB���I�P�s�I���ӼơA�O�_���k�b���������I�P�s�I�H���O�D�`���n���C
	�ӰѼ��ܤƹ�t��í�w�שάO���I�ܤƪ��v�T�A�i�ǥ��F�ӫפ��R���۶i�@�B���{�ѡC�b�q�O�q�l�ഫ�t�Υѩ�
	�q�P�q�y�O�_�B��s��ɳq���A�A�`�|�y���t�ζ��ƪ��ܤơA�o�b�]�p����ɤ]�O�ȱo�`�N���C

��������R�P�]�p
 �b�إߨ����骺�ҫ�����A�N�ھڨ�S�ʻP�t�Ϊ��W��n�D�A�M�w����t�Ϊ��[�c(configuration)
	�P����]�p����k�C�b�j�山���k�̩ұĥΪ��ڭy����R�B�W�v�T�����R���O�`�Ϊ���k�C
	�b�@�ӹ�ڪ�����t�ΡA����Ұ��檺�\�ण�u�O�j�����v����A��L�p�^�«H����Ū���P�����B�T���ʵ��B
	�ǦV����B�O�@�\��B�ۧ��˴��P�����B�ާ@�ɭ����\�ৡ�O����Ҷ��������u�@�C
	�p��b�t�γW���]�p�ɡA�Y�A�ѳo�ǥ\��ݭn���u���v�P�B�z�t�׬O�۷����n���A
	�ھڳo�ǻݭn�~��A�����M�w�w��P�n�骺�[�c�H�O�_�ݭn�Y�ɦh�u�ާ@�t�Ϊ��t�X�H��Φ�ؾާ@�t��
	(real-time multi-tasking operating system)�H�ĥΦ�ص{���y���H...�����A���ݭn�Ѩt�Τ��R���ѳ]�p�W�Ҽ{����ơC
	����������t�γ]�p�`�ݭn�ǥѹq���������U�����A�H�U�N�ͽ͹q�����U�]�p�P�����b����t�γ]�p�ҧ�t������C






��5.1 ����t�γ]�p���y�{��
�q�����U�]�p�P���� [22]
 �q�����U�]�p(CAD)�b����t�Ϊ��]�p�L�{�̧�t�F���n������C
	��������μƦ챱��t�Ϊ��]�p�A�q�`�����ǥѹq�����������C
	�������w�q�A²��ӻ��Y�O�H�ҫ��������窺��H(experimentation with models)�C
	�C�Ӽ����{���q�`�]�t�F��ӥD�n�����G�@�ӬO������H���ƾǼҫ��A�t�@�h�O���窺�����C
	�����ۦW������t�μ����{���Y�O�b1960�~�N��IBM�ҵo�i��CSMP(Continuous System Modeling Program)�C
	����������t�μ����h�ǥ�����p��������A�H�ۼƦ�p������o�i�A�Ӳ��ͤF�V�X��(hybrid)����@�Ʀ�p��������A
	����ѩ�Ʀ�p����������i�B�A�p��������w�j���ѼƦ�p��覡�����C
	����t�μ����n��pSIMNON(Lund Institute of Technology, Sweden), ACSL(System Control Technology),
	MATLAB(New Mexico University), CTRL-C(Systems Control Technology)�������i�b�ӤH�q���W���������ʺA�t�Ϊ������C
	

 �@�ӹq�O�q�l�t�Ϊ������h�󬰽����A�q�`�i�N������T�Ӽh���G
	(�@)����h��(device level)�G�Ҧp�����\�v���󪺶}���欰�B�ū׫Y�ơB�q�y�W�q�����󵥩ʻP�䤸��]�p�Ѽƶ������Y�A
		�o�������q�`���b����s�{�B����]�p�u�{�v�Ψӵ����P��}�b���餸�󪺯S�ʡC
	(�G)�q���h��(circuit level)�G�����q�����ʺA�T���欰�A�Ҧp�\�v�����X�ʹq���P�w���q��(snubber circuit)���]�p�A
		�o���n��pSPICE�i���U�u�{�v�A�ѹq�����@�ǼȺA�Pí�A�欰�C
	(�T)�t�μh��(system level)�G�����q���b����t�μh���A�q�`�۹��}���W�v(switching frequency)���ҿת��C�W�T��
		(low frequency)�ʺA�欰�A�ӳo�]�O�^�±���t�Ωұ���}���A�q���h���P�t�μh�����Ȧb�����һݭn��
		�ɶ��P�ʺA�欰�W������۪��t���A�b�ұĥΪ������ҫ��W�]�j���ۦP�A��5.2�O�@��DC-DC�ഫ����X
		�q�����������G�C



��5.2 ���W�D�u�ʶ}���ҫ��P�u�ʤƪ��C�W�ҫ��ұo�쪺�������G
 �b�q�O�q�l�^�±���t�Ϊ��q�������A�q�`�N�}���q�������H�@�ӵ��Ī��u�ʹq�����N�A
	�p���i�N�t�Ϊ����W�D�u�ʳ����h���ӱo��@�ӧC�W���B�����ƪ��u�ʼҫ��A
	�A��SPICE���q�����R�����n����R��C�W�S�ʦp�W�v�T�����C
 ��~�ӱ���t�Ϊ��]�p��k�]���F�������i�i�A�H��N����z�׬���¦��H���z�סB
	Q-�ѼƳ]�p�k�A��MIMO�u�ʱ���t�γ��o�i�X�F�Ϲꪺ�z�װ�¦�P�t�Τƪ��]�p��k�C
	�bMATLAB�PMATRIX�t�Χ��إߤF�������u��c(toolbox)�{���w�A�H�K�]�p�̯൲�X�o�ǵ{���w�Ӷi��]�p�C
	�@�Ƿs��o�i�äw���۷����\���ι�Ҫ����z�������k�p�ҽk����(fuzzy control)�B���g��������(neural-net control)
	�P�M�a����(expert control)�������ǥѭp��������A�ӹq�����U�]�p�P�����b�o�]�p�o����������t�Τ���O���i�ίʪ��C
	
�w��]�p
 �H�L�B�z������¦���Ʀ챱��w��]�p�q�`�]�t��ӳ����G�@���H�L�B�z�����D�������q���]�p�A
	�p���_�ɭ��B�O����PI/O���w�}���F�t�@���S�w������/�Ʀ�q���]�p�A�p�H���վ�(signal conditioning)�B
	����/�Ʀ�H���ഫ�B�\�v��Ĳ�o�q���B�O�@�q�����C�o�ǯS�w�q���]�p���d��D�n�M�w��ұĥ�
	�L�B�z�����p��t�׻P�\��A�Y�Ǩ㦳�ɶ��򭢩ʥB�����H�n�駹��������\��]�u�n�g�ѯS���]�p���w�駹���C
	�g�ѱ���t�Ϊ��\��ݨD���R��A�Y�i�M�w�A�����L�B�z��(DSP�i�����@�㦳�S���\�઺�L�B�z��)�A
	��ηL�B�z���Ҽ{���ǫh�]�A�G


�r��������(8-bit CPU ��16-bit CPU)
	����t��(instruction cycle time)
	��/���k���p���O
	��ƩίB�I�p��
	�\���X����O(�O����PI/O�ɭ���)
	���_�B�z����O
	�i�{���ƭp�ɾ����ӼƻP�\��
	�O�_���Ѥu�~�š��x�ƯŪ��]��
	�o�i�t�Ϊ��䴩��O
	�q������(in-circuit emulation)����O
	�O�_�㦳�h���ѳf���ӷ�
	�ӤH�q���W�n��o�i�u�㪺�䴩��O


 �b�]�p�L�B�z���t�ήɡA�O����PI/O���t�m(memory and I/O map)�O�ݭn�f�V�Ҽ{���A
	ROM�PRAM���j�p�ݭn�ھڵ{���P��ƪ��j�p�ӨM�w�C�b�@�몺�u�~�������Τ��A
	�H�զX�y���ҳ]�p���{���j����k�줸�N�����F�A�@��q�Ϋ����L����(microcontroller)�N�����ΤF�C
	���p�HC-�y���]�p����{���A�h�N�ݭn�i��󬰼f�V�ӫO�u�����p�A�]���{���������g�A�Ө㦳���Ϊ��X�R��O�A
	�i��ɭP���ӥ\���X�R�ɰO���餣��������C�b�j�h�ƪ����Τ��A�h�HEPROM���NROM�A���M����i����Q�ǡA
	��������ק諸�u�I�A�P�ɶq�֮ɻ���󬰫K�y�CI/O�ɭ����w�}�b�t�γW���ɤ]�O�۷����n���A
	I/O�������P�w�}��P�w����n��]�p�����A�A����I/O�W���P�X�ʵ{���]�p�A
	�N�i�Ϩt�Ϊ��n��]�p��㦳�ҲդƳ]�p���S��C
	�p�ɾ��P���_�B�z�b�@�ӥH�Y��(real-time)�h�u(multi-tasking)���e�D���Ʀ챱��t�άO�۷����n���C
	�i�{���ƭp�ɾ��i�ѷL�B�z���������ѡA��i�Ѩ�g��˸m���ѡC�b��ܷL�B�z���ɨ�i�{���ƭp�ɾ���
	�ӼƻP�ާ@�Ҧ��Ҵ��Ѫ��\��O�۷����n���Ҽ{�]���C�i�{���p�ɾ��i�ΨӲ��ͩw�ɪ��n�餤�_(software interrupt)
	�H�K����{������S�w���\��p�^���H���ΰ���PID�p�ⵥ�C
	���_�H�����ӼƻP�u���v�]�O�����ƥ��q�w���A�n�餤�_�P�w�餤�_�����������A
	�i�B�����P���i�B�������_(non-maskable interrupt)���B�z�b�t�γ]�p�ɧY�������w�ơA
	�]���b�Y�ɦh�u������t�Τ���������n��]�p�O�t�ί�_���`�B�@���֤߳����C
	���@�ǰ��t��I/O�H���A�p�p�ƾ��BPWMĲ�o�H�����ݦҼ{�ѯS�w���w�駹���C���F�p���O���Ҷq�A
	�b�Ŷq�h�B�z�޳N��"�D�w�D"��"�D�w�q"���h�B�z���c�]�O�ݭn�ھڹ�ڪ��ݭn�ӨM�w�C
	�b�h�B�z���t�Τ��A�B�z���������q�T�覡�O�������n���A�Ѩ佢�X��K���{�סA
	��Y�ݭn�����洫�T�����h��ӨM�w�n�w�骺�q�T�覡�A�b�h�B�z���t�Φ��U�C�q�T�޳N�G

���p�ɭ�(�pRS-232)
	����I/O�ɭ��P�����w(�pCentronics)
	DMA(Direct Memory Access)�ǿ�
FIFO(First In First Out)�ǿ�
����O����
	�h�׬y�ưt�X����޿�q��


 �ѩ�n��q�����ֳt�i�i�P�q�����U�]�p���t�X�o�i�A�ϱo�Ѧ������[���H�n����N�w��v���t��
	���N�n��H�w��覡��{�A�]�ӵo�i�X�����w��y�z�y��(High-level Hardware Description Language)�A
	�o�ر��p�o�i�����P�A�N�i���ͥi�{���ƪ��w��A�A�g�Ѥj���n��q�����s�{�޳N���ͨ㦳�S�w�\�઺�w��A
	�o�صo�i�ͶաA�b�o�i���ʯ഼�z������t�ήɬO�ȱo�`�N���C
�n��]�p
 �����w�@�ӱ���t�Ϊ�����\�ध��A��{�o�ǥ\�઺����k�h(control algorithm)
	�N�����ԲӴy�z�X�ӡA�A�ǥѵ{���y�����H��{�C�o�Ǳ���k�h���y�z�D�n�ǥѬy�{�ϨӪ��ܡA�A�t�X�������ɵ{��
	(timing diagram)�P���_����(interrupt mechanism)�C����k�h(algorithm)���y�z�D�n�]�t�T�ӭn���G

�y�{��(flowchart)
	�ɵ{��(timing diagram)
	���_����(interrupt mechanism)


 �L�q������n��Ѥ@��"�{���Ҳ�"(program module)�Ҳզ��A
	�A�H�Y�ɪ��覡�̧ǰ���A�ҿ�"�̧�"�Y�̷Ӥ��_�ұƩw�����ǡA�̨��u���v�P�o�ͪ�����ӨM�w�C
	�ѩ󥲶��H"�Y��"���覡����A�]���������{���Ҳե����n�b�]�w���ɵ{�����槹���A
	�ҥH����ɶ��P�ɵ{�Ϥ��R�O�۷����n���C�H�U�v�B��������n�骺�]�p�B�J�G

1. ��ܵ{���y��

 �b�q�O�q�l�P�X�ʨt�Ϊ�����A�j������p��t�׬O�۷����n���A
	�䤤�]�A�^�«H�����B�z�B����w�ߪ��p��PĲ�o�H�������͡C�ѩ�b�p��W���ɶ��������ʡA
	�]���q�`�H�զX�y�������C�ĥβզX�y���㦳����ֳt�B�{��������²�B����o���w�骺�\��B
	�{�����g����������u�I�A���O�o���{�����H���g�O�ɯӤO�B���������B���H�\Ū�B���������B�X�R��O���ε����I�A
	�ר�b���g�j������{���ɡA���H�x���Өϳn��o�i�����C

	�����y���pC�BPLM�BPASCAL�h�i�P�C���զX�y�����ͤ��ɪ��ĪG�C
	�b�ɶ��򭢪������p���_�A�ȵ{���i�ѲզX�y�����g�A�b�ɶ������e�P�������p�H���ɭ��{���h�i�Ѱ����y�����g�C
	�b�{�����g�ɼҲդƪ��]�p�O�D�`���n���A�ھڸg��b�]�p�@�ӷL�q������t�ήɡA
	�b�n��}�o�ҧ�ꪺ�H�O�P�ɶ��q�`�����w�����j�A�]����w��}�o�������A
	�ѩ�u�~�Ͳ��]�ƪ��ͩR�g�������A�n����׻P��s���ݨD�ʤ]�N�U�j�A���n"software documentation"�b��Ӷ}�o�L�{���O�̭��n���C

2. �{�����g��h

 �b�L�q�������o�L�{���A�o�i�X"�i�a��"����n��O�Ĥ@�ӭn�إߪ��[���A
	�n�p��o�i�X�i�a���n�馳�ǭ�h�i�����ѦҡG

�ĥμҲդƪ��]�p�覡�C
�q�w�y�{�ϡB�ɵ{�ϻP���_����зǴy�z�榡�A�åH�����̾ڶi��t�γ]�p�A�åB�W�w�b�����u�@�������ɡA���o�i��ӳ��{�������g�C
�w�q�t�Ϊ���Ƶ��c�P�ѼơB�ܼƦW�١A�b�W�٪���ΤW�����w�q�X�@�Ө̴`����h�C�@���ܼ�(global
	variable)���w�q�������T�C
	�q�w�{�����g���榡�A�p�{���W�١B�@�̡B����B�����B��X�J�ܼơB�I�s�覡�B�p��[���ѵ������̴`����h�P�d�ҥi�ѰѦҡC
	�b�{���o�i����A�Y�����t�@�դu�@�H���i��{�����դ��u�@�A�T�w���ն��ػP��k�A�n�骺�i�a�״��լO�����ԥ[�W�����A�ӫD�ȥѹ�ڤ��ާ@�����C


3. ��ܦr��������

 �b�Ʀ�H���B�z�P����̡A�H���ѪR�ת��n�D�M�w�F�򥻦r�������סA
	�ӳo�]�N�����v�T��L�B�z�������ܡC�ثe�@�몺�q�Ϋ��L�B�z���h��8-�줸��16-�줸�C
	�b�Ʀ챱��̡A�Q����ܼƦb��1�Ӧ줸�����ʡA�Y�ҿת��q�����T(quantization noise)�A
	��Ҭ۹諸��ڪ��z�q�ܤƬO�M�w�r�����ץD�n���̾ڡC�Ҧp�b�@�ӡ�6000rpm���j���t���t�Τ��A
	16�줸���ѪR�ױN�y��6000/(1215-1)= 0.183rpm����t�q�ƻ~�t�A
	�B��T�ת��j�p�i��W�L1�줸�A�̾ھ�Ӱj�����̮t���ѪR�צөw�C�P�z�A�b�h�j������t�Τ��A
	�~�j�����q�Ƨݰʷ|�Q���j����j�A�]�����T�w�~�j�����ѪR�פ���A���j�����ѪR�ץ����P���۷��A
	�H�K����j�������͡C

4. �M�w�����W�v

 �L�q������t�ήھڮɧǥh����ҵ{�����\��A�]�������W�v�����]�w�C
	�b�@�ӼƦ챱��t�ΡA�����W�v����ܤ��ȼv�T�챱��t�Ϊ��ʯ�A�]�|��t�Ϊ�í�w�׳y���v�T�C
	�@��Ө������W�v�U���A�h�b���ɶ����t�θg�Ѧ^�­ץ������Ƥ]�N�U�h�A�]�ӯ�o����Ϊ�����~��C
	�������W�v�U���A�h�b�@�Ө��˶g�����ү���檺����\��]�N�U�֡A�P�ɤ]�|����L�B�z���p���O������A
	�]���p���J����ܾA���������W�v�b�]�p�Ʀ챱��t�ήɬO�ӭ��n������C
	�q�u�{���[�I�Ө��A�p��b�ŦX�]�p�W�檺�n�D�U�A�H�̧C�������W�v��������t�Ϊ��]�p�A�O�̨Ϊ���ܡC

	�@�ӼƦ챱��t�Φp�G���ˮɶ��ܵu�B�ѪR�פS�ܰ��h�N�ͪ��䵥�Ī�����t�ΡA
	�ѪR��(�r������)����ˮɶ�����ȥi�����@���u�H�����СC

	�b�@�ӷL�q���h�u(multi-tasking)����t�Φ]�����ƭ�task�̾کҳ]�w���W�v�P�u���v�������A
	�]���u���v�̰��B���W�c�����j������N���h�j�������p��ɶ��A�b�]�p�ɥ����Ҽ{�d�ɶ��H�ѥ~�j���p�⤧�ΡC
	��θ��������ˮɶ��A�h�����h���ɶ��l��i��p��A��i�Ҽ{�ΰ����y���i��{���]�p�A
	����|�y������P�T�������u�A�Ʀܳy���t�Ϊ���í�w�C
	���ˮɶ�����ܳq�`�Ѱj���������ɶ�(response time)�өw�A�q�`��1/10�Ϊ̧�p�C
	�@��Ө����j�����~�j������e���W�e�A�]�N�O��������ɶ���u�A�]�����ˮɶ��]�N��u�C
 �b���ǹq�O�q�l�ഫ�t�ΡA���ˮɶ�����ܦ��ɷ|����t�Ϊ�����A
	�Ҧp�b�@��3�۬ۦ챱��(phase control)AC-DC�ഫ���A�]���}���W�v��360 Hz�A
	�]���q�y�ιq������j�������ˮɶ��]�N�]���өw��2.77 msec (1/360sec)�C
5. �سW��(scaling)[8],[36]

 �b�ثe�@��q�Ϋ����L�B�z�����S���B�I�B��B�z���A�]���p�ĥίB�I�p��N�����H�n��覡�����A
	���p���@�ӭp��ɶ��N�j�T�W�[�]�Ӥ��i��C�]������k�h����{�b�j�h�ƪ����α��p�������H��ƭp��覡�����C
	���F�����ƭp��ɲ��ͪ�����(overflow)�N������Ҧ��������ܼƤ��H�A������ҽվ�A�]�N�O�سW��(scaling)�C
	�Ʀ챱��t�Τ���ƭp�⪺�سW���N���p���񱱨�t�Τ@��A��ت��b��O���H�����ѪR�צӨ���over-flow�Punderflow�C
	�b�Ʀ챱��t�Τ��O��������overflow��underflow�o�ͪ��A�]���|�y���p�⪺���æӾɭP�t�Ϊ���í�w�C
	�H�U�H�@��²�檺�Ҥl�ӻ����Ʀ챱��t�Ϊ��سW����k[3]�C
 �b�@�Ӫ��y���F����t�ΡA���F�Ҳ��ͪ���x�P�q�Ϲq���B�q�y�P��l��t�������Y�i�w�q���G



�䤤Te�����F���ͤ���x()�AVa���q�Ϲq��(volts)�AIa���q�Ϲq�y(amps)�A�s����l�����ਤ�W�v(rad/sec)�A�b���Ĳv(%)�C�W���i���ܬ�



�䤤N��rpm�C�o���ܼƻP�{�������n���ܼƪ����Y�i�w�q��









�䤤V_Va, V_Ia,
V_N,�PV_Te
�����n���ܼ�(software variable)�A��k
1,k2, k3,k
4�h���۹諸�سW�]�l(scaling factor)
�C�N�o�ǳn���ܼƥN�J�������x��{���h�o


���]Va , Ia�P
	N�������ʫH��(�����t��)�B��10�줸��A/D�ഫ�����ˡA�ð��]Va(max)
= 200V, Ia(max)
= 500A, N(max) = 500rpm�A�h



���]�b��0.85�ATe(max)
= 162.42Nm�A���k4
= 8 bits/Nm�]�]�N�O0.125 Nm/bit�^�A�hV_Te(max)
= 1299 bits�A��Y12�줸�������ʫH���A�N�o�ǤسW�]�l�N�J�A�h�o


�䤤k=2.9847�A�W���b�p��ɡAk���@�`�ơC�ѤW�z�������i���o�ؤسW����k�A�D�n�O�Ҽ{�U�ܼƤ��̤j�ȡA
�A�ھکұĥΤ��줸�ơA���@�ӤسW�]�l�A�ϳo�ǳn���ܼƦb�����������P��overflow��underflow�C

�n�鵲�c�P�ɵ{
 �b�n��{���]�p�ɡA�������T�w�U�n��\��ҲեH�Ψ�P��ڪ��z�t�ζ������Y�A
	�U�\��ҲջPI/O���������Y�i�Ѧҹ�5.3�C�U�\��Ҳէ����������u���v���C�����A����ˮɶ���i�M�w�A
	�]���o�ǳn��\��Ҳեi�k�����X��"�u�@�Ҳ�"(task module)�A²�٤u�@(task)�C
	�ҿ�"�u�@"�i�w�q���@�ӧ����S�w���Ȫ�����{���A
	�]���ҿת�"�h�u�t��"(multi-tasking system)�N�O�����ƭӥi�P�ɰ��檺"�u�@"�b�B�@���t�ΡC
	�o�̩ҿת��P�ɬO�[���W���A�Ϊ̥i�H���O�Pı�W���A��ڤW�o�b��B�z���t�άO���ɧ������A�餣�L�ѩ�ɶ��D�`�u�ȡA
	�b�Pı�W�L�k�Ϥ��}�F�C�b����t�Ωξާ@�t��(operating system)�`���ҿת�"�Y�ɨt��"(real-time system)�A
	"�Y��"�i�w�q���b�ҳ]�w���ɶ���������I�����ȡA²��ӻ��N�O�Ӫ��ΡC
	�@�ӹ�ڪ�����t�Χ��i�٤���"�Y�ɱ���t��"(real-time control system)�A�]���b��ڱ���L�{���A
	�p�G�t�έn������`�B�@�A����t�δN�����ھڦb�u��ɶ��U�Ҩ��o���R�O�P�^�«H���A
	�A�g�L����k�h���p���"�Y�ɪ�"�e�X�ץ����R�O�C



��5.3�@�L�q������t�γn��\��Ҳն������Y
 ��5.4�O�@�ӱ���t�Τu�@�Ҳժ����c�ϡA�U�u�@�Ҳժ����ˮɶ�����ܦb�ϤW�C
	�@��Ө��A�\��ۦ��B�㦳�P�����u���v���\��Ҳէ��N���s�C�b�P�@�Ӥu�@�ҲաA�]���@��b�w�q�W�A
	���P���u�@�Ҳճq�`����ˮɶ��P�u���v�����ۦP�C�o�Ǥu�@�Ҳէ��b�@�Ӻ٤���"�Y�ɱƵ{"
	(real-time scheduler, RTS)������U�A�䬰�@����ާ@�t�γn��A���ھڦU"�u�@"���u���v�ӱƩw���檺���ǡC
	RTS�ѵw�����T1���X�ʡA
	��g�����u���v�̰���Task-1�����˶g���C�ѹ�5.4�i�ݥX�t�Ϊ��}�����m(reset)�B����(shutdown)�P���m�ɶ���
	�u�@��Ʃw�b�u�@���c(task structure)�ϤW�C
	�U�u�@���Ұʧ��Ѥ��_���X�ʡA�o�Ǥ��_�H���i��O�Ѥ����������Ҳ��͡A�]�i��ѥ~�����w�鰹�͡C
	�]����Өt�Υi�H�٤����O�@�ӥH���_���X�ʫH�����Y�ɦh�u����t�ΡC�U�u�@���ɵ{��(timing diagram)�p��5.5�ҥܡC
	�䤤Task-1�����bT1���ɬq�����槹���A
	�p�G�@���u���v���C���u�@�w�b�i��A�h��FT1���ɨ�A
	���|�Q�Ȱ�(suspend)�A������Task-1�A����Task-1��A�A�N����Ȱ����u�@�~��(resume)����C
	�q��5.5�i�ݥXTask-2���Q�Ȱ��L�@���A�p�аO�ҥܡATask-4�Q�Ȱ�3���A�p�аO�B�B�ҥܡA���u�@Task-4������A
	�t�Χ����F�@�Ӵ`���C�b�@�Ӵ`�����A�U�u�@�Ұ��檺�n��\���C��u�@�ɵ{�ϤW�A�o�b�t�Τ��R�]�p�ɬO�D�`���n���C
	


��5.4�@�u�@�Ҳժ����c��

�p��t���]��(computation loading factor)�w�q��CPU���S�ɬq�P�̪������ˮɬq����ȡA�H��5.5�Ө��G

�p��t���]�ơףU�p��ɶ�/T4



��5.5�@�u�@�ɵ{��



��5.6�@RTS������y�{��

�U�u�@�Ҳժ����ˮɶ��q�`�w�q����ƭ��A�]��������R�P��{�A�Ҧp







�䤤nj����ơA�p�G�o�|�Ӥu�@������ɶ����O��t1,
t2, t3�Pt4
�h

 = �p��t���]��

�W���i��g��

���p��1�A�]�N�O��

�U�u�@�Ҳհ���ɶ������




 ��5.6��RTS����U�u�@�Ҳծɵ{���y�{�ϡA�ɬq�H��
	T2,T
	3�PT4
	�Ѯ����H��T1�A�g�ѭp�ɾ����͡C
	Task-1�Ѯ����H��T1���X�ʡA
	��L�U�u�@�Ҳիh�Ѭ������X�ʮ����H���Ψ�L���_�H�����X�ʡA�A�Ѩƥ��ҳ]�w���u���v�M�w���檺���ᶶ�ǡC
	�Y�Ǥ��O�g�`�o�ͪ����_�A�i��㦳�󰪪������u���v�A�p��氱���ΫO�@�}���QĲ�o�ɡC
6. �{���o�i�P��������
�o�i�t��

 �b�}�o�L�q������t�ήɡA�إߨ�������o�i�u��O���i�ίʪ��A��t�m�p��5.7�ҥܡA�q�`�]�t�F�G

�E�L�q���t��(
�q�`��PC)
�EEPROM
�N����
�E
ICE��������
ROMEmulator
�E�L����
�E�n��䴩
�E�޿���R��

��5.7�@�L�q���o�i�t�λP�g��]��
�{���o�i�y�{
 �{���o�i�y�{�p��5.8�ҥܡC���ѵ{���s�邊(Editor)���͵{����l�ɮ�(program source file)�A
	�A�g�Lassembler��compiler���ͥؼнX(object code)�A�A�g�Llinker�Plocator�N�{���P�{���w�s����A�w��A
	����absolute object module�A����Y�i�N���bEPROM��down load��ICE�W�i����ջP�����C



��5.8�@�{���o�i���y�{��








系統分析與設計


系統分析與設計
This document is copyrighted and provided as is. You are welcomed 
to use it for non-commercial purpose.

為什麼要系統分析與設計?
從一個人可以完成的數百行至數萬行的程式以至於到數十人才能完成的
專案, 想想看它的複雜性.

系統分析與設計的進行方式有哪些?

 結構化系統分析與設計 (本文的主題)
 物件導向式系統分析與設計

系統的種類?

 Operational Systems (操作性系統)
 Management Information Systems (管理資訊系統; MIS)
 Decision Support Systems (決策支援系統; DSS)
 Executive Information Systems (高階主管資訊系統; EIS)
 Expert Systems (專家系統)
 Office Automation Systems (辦公室自動化系統; OA)

系統分析與設計的目標

 使得錯誤降低
 完成使用者所需要的系統
 使得專案人員的合作更容易
 使系統的完成更有效率
 使系統能重複使用
 使系統易於維護

參考書籍

 Gary G. Shelly, Thomas J. Cashman, Judy Adamski,
and Joseph J. Adamski, "Systems Analysis and
Design", 2nd Edition, Boyd & Fraser, 1995. (新月代理)
 Edward Yourdon, "Modern Structured Analysis", Yourdon Press, 1989.
 Jefferey A. Hoffer, Joey F. George, and Joseph S. Valacich,
"Modern Systems Analysis and Design", Benjamin/Cummings, 1996. (智勝代理)
 Kenneth E. Kendall and Julie E. Kendall, "Systems Analysis and
Design", 3rd Edition, Prentice Hall, 1995. (新月代理)
 季延平 and 郭鴻志, "系統分析與設計", 華泰書局, 1995.

何謂系統發展生命週期?
系統發展生命週期 (System Development Life Cycle; SDLC) 是一有組織的方式用來
開發一個企業的資訊系統。 SDLC 又稱為瀑布模式 (Waterfall Model)， 它將系統發展
的流程分為幾個階段來進行。 雖然每本書的作法大同小異， 本文以 
(Shelly 1995) 為主。

 初步調查 (Preliminary Investigation)
 系統分析 (System Analysis)
 系統設計 (System Design)
 系統開發 (System Development)
 系統實施與評估 (System Implementation and Evaluation)

系統分析師的基本條件

 具有資訊管理， 資訊科學， 或管理相關領域。
 合群。
 溝通能力強。
 瞭解商業資訊系統。
 有二至三年的程式寫作經驗。

初步調查
一個 SDLC 是由使用者提出 System Request 開始。 系統分析師於接收到
System Request 後， 進行：

 可行性評估
 排定優先順序
 進一步調查
 口頭與書面報告

可行性評估

 技術性的可行性評估
 操作性的可行性評估
 經濟性的可行性評估

進一步調查的目的

 瞭解問題的真正原因
 定義專案的範圍與限制
 確認可帶來的利益
 估計專案的成本

進一步調查的進行步驟

 授權
 確認所需的資訊
 完成組織圖
 進行面談
 閱讀現有的系統文件與觀察現行的操作方式
 分析收集到的資料
 將結果向管理者與使用者報告

系統分析
系統分析的工作大概分為下列幾個步驟：

 需求確認 (Requirement Determination)
 需求分析 (Requirement Analysis)
 評估各項可行方案 (Evaluation of Alternatives)
 完成系統需求規格書 (System Requirement Specifications)

進行時， 可不斷尋求下列的解答來完成。



需求確認需求分析


What is done?Why is it done?What should be done?


Where is it done?Why is it done there?Where should it be done?


When is it done?Why is it done at this time?When should it be done?


How is it done?Why is it done this way?How should it be done?


Who does it?Why does this person it do it?Who should do it?



需求的五個種類

 Outputs (輸出)
 Inputs (輸入)
 Processes (處理程序)
 Timings (時機)
 Controls (控制)

收集資料的方法

 面談：
  
 決定面談對象
   決定面談的目的
   面談前的準備
   面談的進行
   面談中的記錄
   面談的事後評估
  
 資料收集：
  
 系統文件
   表單與報表
   現有程式
  
 觀察現行的作業流程
 問捲調查
 研究：
  
 報章雜誌
   專業書籍與期刊
   與其他專家討論
   廠商拜訪
  
 Joint Application Design (JAD)
 雛形方法

需求分析
目前最普及的需求分析方法為資料流圖 (Data Flow Diagram; DFD)。
DFD is a structured analysis technique that shows how data
moves and changes through an information system in a graphical,
top-down fashion. (Shelly 1995)
Data Flow Diagram
DFD 有兩種主要的表示方法。 一種是 DeMarco/Yourdon 提出的， 而另一種是
Gane/Sarson 提出的。 不論哪一種方法， 其 DFD 的組成元件有四種：

 處理程序 (Process)
 資料檔 (Data Store)
 外在個體 (External Entity)
 資料流 (Data Flow)

個案討論

 成績系統
 請假系統 （練習）

Data Dictionary
Data Dictionary 記錄了處理程序， 資料檔， 外在個體， 與資料流
的內容與彼此之間的關係。 Data Dcitionary 的最小組成單位稱
data element (資料元素)。

如何記錄資料元素?

 名稱
 其他名稱
 型態與長度
 輸出格式
 預設值
 標題
 資料來源
 安全性
 負責人
 可接受的值與其他驗證的方式
 計算公式
 描述與註解


     範例：

     名稱: name
     其他名稱: s_name
     型態與長度: Char(20)
     輸出格式: 
     預設值:
     標題: 學生姓名
     資料來源: 學生基本資料
     安全性: update: 人事室
             query:  每一個人
     負責人: 人事室
     可接受的值與其他驗證的方式: 不能含有阿拉伯數字
     計算公式:
     描述與註解: 學生的姓名

如何記錄資料流?

 名稱
 其他名稱
 縮寫
 記錄
 描述
 數量與頻率


     範例：
          
     名稱: COMMISION
     其他名稱: COMMISION EARNED
     縮寫:
     記錄: COMMISION
     描述: 一個業務員應得之佣金
     數量與頻率: 約每天 20 筆

如何記錄記錄?

 名稱
 其他名稱
 定義
 所包含的資料元素


     範例：
          
     名稱: CREDIT STATUS
     其他名稱: 
     定義: 顧客之信用情形
     所包含的資料元素:
           CUSTOMER NUMBER PK
           CUSTOMER STATUS CODE
           REMAINING CREDIT LIMIT

如何記錄處理程序?

 名稱
 目的
 輸入的資料流
 輸出的資料流


     範例：

     名稱: 登錄學生資料
     目的: 將學生名冊上的學生資料登錄到資料庫
     輸入的資料流: 學生名冊
     輸出的資料流: 學生資料
     處理程序的描述：
       for each STUDENT on the 學生名冊
         get STUDENT_NAME
         get STUDENT_ID
         get STUDENT_ADDR
         get STUDENT_PHONE
         write STUDENT_NAME, STUDENT_ID, STUDENT_ADDR, 
               STUDENT_PHONE to 學生資料檔

如何記錄外在實體?

 名稱
 其他名稱
 輸入的資料流
 輸出的資料流
 描述


     範例：
     
      名稱: 學生
      其他名稱:
      輸入的資料流: 改過的作業
      輸出的資料流: 作業
      描述


程序描述
常用的程序描述的方法有：

 Structured English: 結構化英文的三個基本組成結構為： 
（1） Sequence， （2） Selection， 與 （3） Iteration。

     範例：

     for each COMMISION EARNED
       if EXTRA BONUS equals Y
         if PAYMENT TOTAL is greater than $50,000
            add 2% to COMISSIOSN PERCENT
            output SPECIAL LETTER
            output AWARD LIST
         else
            add 1% to COMISSIOSN PERCENT
            output AWARD LIST
       else
         if PAYMENT TOTAL is greater than $50,000
            add 1% to COMISSIOSN PERCENT
            output SPECIAL LETTER
       calculate COMMISION = COMMISION PERCENT times PAYMENT TOTAL

 Decision Table
 Decision Tree

其他系統分析的工具

 System Flowchart
 Nasi-Shneiderman Diagram

狀態轉換圖 (State-Transition Diagram; STD)
DFD， STD， 與 ERD (Entity-Relationship Diagram) 合稱系統分析與設計
的三大工具。 STD is a graphical tool for showing events, states,
and time-dependent behavior of a real-time or on-line system.
(Shelly 1995)。 此類即時系統的特性為：

 高速的外來資料輸入。
 必須提供足夠快的反應。
 系統一般來說是屬事件驅動式的。

STD 的組成元件有：

 狀態 (state)
 轉換 (transition)
 事件 (event)

什麼是 CASE?
CASE 即 Computer-Aided Software 
Engineering 是一種電腦工具， 是用以將資訊系統的開發與維護
的流程自動化的利器。 其優點包括：

 提昇生產力
 將無聊的行政工作自動化
 提供一個標準化與一致性的環境給所有開發者
 改進系統品質

但是它也有缺點：

 成本增加
 因為並無國際標準， 會受限於某一特定產品
 有可能需更改你目前系統的開發與維護方式
 有取代系統分析師的危機

評估解決方案
完成一個資訊系統有四個方向：

 自製 (developemtn of in-house software)
 外購 (purchase of a software package)
 外包 (contracting other company)
 使用者自行開發 (end user computing)

系統設計
系統設計分為邏輯設計 (logical design) 和實體設計 (physical design)。

 一個資訊系統的邏輯設計需定義出這個系統的所有輸入， 由這個系統
所產生的輸出， 以及為達成此系統的需求所必須執行的處理程序， 而此定義
卻與完成這系統的方式與工具毫不相干。
 一個資訊系統的實體設計是依照邏輯設計而進行設計， 它是用來敘述
所有系統元件是如何被完成的。

邏輯設計， 實體設計， 與開發程式的差別
舉例來說：

 邏輯設計： 需要排序功能 
 實體設計： 敘述排序的方法
 開發程式： 選擇開發工具並完成排序程式

系統設計究竟做些什麼?

 依照 (Shelly, 1995)，  邏輯設計以在系統分析階段完成，
在此階段僅需完成實體設計， 而其工作則包含資料庫設計， 表單與報表的設計，
所有 I/O 介面的設計等。
 依照 (Hoffer, 1996)， 邏輯設計的工作包含
資料庫設計， 表單與報表的設計，所有 I/O 介面的設計等。 而
實體設計的工作包含實際檔案與資料庫的設計與程式與處理程序的設計。

系統設計的進行步驟
一般來說， 建議的進行方式為先複習系統需求規格書， 然後依照下列步驟進行
後， 將結果報告給管理者與使用者。

 設計系統輸出
 設計系統輸入
 設計系統檔案與資料庫
 設計系統的處理程序
 設計軟體

系統設計的準則
一般的準則是以下列三個方向來考量：

 使用者的方面
  
 系統與使用者互相交談的地方
   預估未來使用者的需求
  
 資料的方面
  
 資料在產生的時候， 便在產生的地點輸入系統。
   資料輸入後馬上檢查。
   盡可能使用自動的方法作資料輸入。
   控制資料的存取， 並記錄每一重大資料的改變。
   資料避免重複輸入。
   避免重複的資料儲存在檔案或資料庫中。
  
 處理程序方面
  
 處理程序愈簡單愈好 （？？）
   使用獨立的模組， 且此模組只執行單一功能
  


模組的內聚力與聯結力
一般來說，一個系統設計的好壞很難直接判斷，於是內聚力
與聯結力就常被用來判斷系統設計好壞的基礎。

 內聚力 (cohesion): 如果一個模組內的組成元件之間的相關性很高， 
而且都是為了完成同一目標而組成的， 那我們說這個模組的內聚力很高。
在系統設計時， 我們要求模組的內聚力愈高愈好。 Constantine 與
Yourdon 認為內聚力有七個層次， 其由低而高的次序為：
  
 偶然的內聚力 (coincidental cohesion)
   邏輯的內聚力 (logical cohesion)
   時間性的內聚力 (temporal cohesion)
   程序的內聚力 (procedual cohesion)
   聯絡的內聚力 (communication cohesion)
   依序的內聚力 (sequential cohesion)
   功能的內聚力 (functional cohesion)
  
 聯結力 (coupling)： 如果一個模組內的組成元件之間緊密的結合在一起，
而且彼此的相依性很高， 那我們說這個模組的聯結力很高。
在系統設計時， 我們要求模組的聯結力愈低愈好。 Constantine 與
Yourdon 認為聯結力有七個層次， 其由低而高的次序為：
  
 無直接聯結 (no direct coupling)
   資料聯結 (data coupling)
   郵戳聯結 (stamp coupling)
   控制聯結 (control coupling)
   外部聯結 (external coupling)
   共同聯結 (common coupling)
   內容聯結 (content coupling)
  


Last Updated:  
Written by: Eric Jui-Lin Lu










電氣控制系統設計、PLC 設計 | AutoCAD Electrical | Autodesk








































































  搜尋 








登入


  我的帳戶 
  Autodesk 帳戶
(包括所有 Subscription)

  A360



教育社群



教育社群


需要協助？請造訪我們的登入常見問題

登出選單




























































 
   
 




 免費試用版
 學生與教師
 全球網站









 














首頁


產品


AutoCAD Electrical


                    
                        
                        
                            功能
                        
                        
                    
                
























     









功能



    用於電氣控制設計的 AutoCAD


觀看 AutoCAD® Electrical 電氣控制設計與 PLC 設計功能的視訊和示範。AutoCAD Electrical 提供許多功能和優勢，有助於提高設計效率，並整合了熟悉的 AutoCAD 環境。透過自動執行與建立和編輯精確控制圖相關的複雜工作，可將電氣控制系統最佳化。



依此瀏覽:


                    全部 (20)
                 


                    新 (6)
                 


                    電氣文件 (5)
                 


                    配電盤配置 (4)
                 


                    電氣線路圖設計 (5)
                 


                    電氣控制設計 (6)
                 



頁面檢視:圖庫清單


電氣控制設計





           新
       





目錄瀏覽器預覽和插入零件
增強的預覽和直接元件插入。
(視訊：2:02 分鐘) (英文)








           新
       





在目錄瀏覽器中編輯零件
編輯零件並將符號指定到目錄。
(視訊：57 秒) (英文)








           新
       





Inventor 零件整合
與 Inventor 中的 3D 電子零件整合。
(視訊：1:19 分鐘) (英文)











即時線圈和接點交互參考
持續追蹤父/子接點。










工作表中的 PLC I/O 圖面
在工作表中定義專案的 I/O 指定。
(視訊：1:12 分鐘) (英文)










標準資源庫
與製造商內容資源庫相容。
(視訊：1:35 分鐘) (英文)
















關註 AUTODESK 的最新動態



Facebook
Twitter
YouTube
LinkedIn (英文)


所有社群媒體 (英文)



產品

產品免費試用版
3D CAD 軟體
3D 列印
土木工程
營造業
製圖
製造業
繪製與彩繪
學生下載
依產業尋找



支持與學習


產品支援
安裝、註冊和授權
隨選課程
活動
更新與服務包
系統需求
支援論壇



購買

Subscription 選項
Autodesk 商店
尋找經銷商
支援服務



關於 AUTODESK

Autodesk 是 3D 設計、工程和娛樂軟體的領導者。
關於我們
人才招募
聯絡我們
投資者關係
信任中心
新聞發佈中心











隱私權聲明 |  法律通知與商標  |  檢舉違規事項  |  網站地圖  |  © 2017 Autodesk, Inc. 保留所有權利。






































天瓏網路書店-控制系統設計與模擬－使用Matlab/Simulink, 8/e



































天瓏網路書店
全台最齊全
中英文電腦書專賣店







天瓏資訊圖書粉絲專頁




搜尋


資料科學
簡體書
Packt
微服務
工程師必讀經典
英文書新到貨
Python
Tensorflow
無瑕程式碼








        控制系統設計與模擬－使用Matlab/Simulink, 8/e
        


        李宜達
        
      




 


出版商:
全華


出版日期:
2011-10-03


定價:
$600


售價:

9.5 折
          $570



貴賓價:

9.0 折
            $540

語言:
繁體中文


ISBN:
9572182714

ISBN-13:
9789572182710





      限量商品
        (庫存=2)













買這商品的人也買了...







 
$520
              貴賓價: $468
          
MATLAB 數值分析





 
              貴賓價: $393
          
低功耗藍牙開發權威指南(Bluetooth Low Energy: The Developer's Handbook)





 
$320
              貴賓價: $288
          
圖解電磁學, 2/e





 
$550
              貴賓價: $495
          
無線區域網路, 3/e





 
$450
              貴賓價: $428
          
通訊系統－4G基礎通訊





 
$290
              貴賓價: $261
          
行動通訊－無線寬頻網路





 
$480
              貴賓價: $432
          
第四代行動通訊系統 3GPP LTE-Advanced：原理與實務, 2/e





 
$650
              售價: $514
          
Visual C# 2010 程式設計經典





 
$540
              貴賓價: $486
          
機電整合控制－多軸運動設計與應用, 2/e





 
$550
              貴賓價: $495
          
遺傳演算法原理與應用－活用Matlab, 4/e





 
$460
              貴賓價: $414
          
自動控制－使用 MATLAB/SIMULINK





 
$640
              貴賓價: $621
          
數位控制工程─分析與設計 (Digital Control Engineering: Analysis and Design)





 
$640
              售價: $544
          
C++ 教學手冊, 3/e





 
$560
              售價: $442
          
MATLAB 程式設計入門篇, 3/e





 
$250
              貴賓價: $225
          
Matlab/Simulink 在 CDMA 上的應用





 
$420
              貴賓價: $378
          
投資分析 + MATLAB 應用





 
$620
              貴賓價: $558
          
MATLAB 通訊工程模擬





 
$1,200
              貴賓價: $1,080
          
Radio Frequency Integrated Circuits and Systems (Hardcover)





 
$520
              貴賓價: $504
          
WCDMA 基頻訊號處理與系統設計實務





 
$660
              貴賓價: $640
          
應用數值方法 : 使用MATLAB, 3/e (Chapra: 3/e)




產品描述

<內容簡介>
本書跳脫嚴謹的控制理論，改以應用MATLAB/SIMULINK來瞭解控制工程的問題，內容包含兩大部份，第一部份介紹SIMULINK的使用法，從基本到進階皆有詳細介紹，並對每一個方塊函數做解析，第二部份介紹控制系統的設計、分析與模擬如時域響應分析、頻域響應分析、根軌跡法、狀態空間設計法及離散控制系統等。本書適合科大電機系「控制系統」課程使用。 
<章節目錄>
第一章 概論 1-11-1 控制系統簡介 1-21-2 MATLAB/SIMULINK簡介 1-31-3 系統需求 1-91-4 本書說明與使用 1-101-5 MATLAB的基本使用法 1-13第一篇 SIMULINK 2-1第二章 快速開始 2-22-1 如何開始 2-22-2 一個簡單的模型 2-42-3 快速上手 2-112-4 另一個簡單的模型 2-122-5 PID控制器模型 2-20第三章 建構模型 3-13-1 建構新模型 3-23-2 編輯已存在的模型 3-23-3 選取物件 3-43-4 在不同視窗間複製或移動blocks 3-63-5 在模型視窗中移動blocks 3-73-6 在模型視窗中複製blocks 3-83-7 設定block的參數 3-93-8 刪除blocks 3-93-9 改變blocks的置放方向 3-93-10 改變blocks圖示的形狀大小 3-103-11 修改blocks的名稱 3-113-12 輸入值與參數值的純量展開 3-123-13 在blocks間連接線段 3-133-14 刪除線段 3-153-15 移動線段 3-163-16 移動頂點 3-173-17 分割直線段 3-173-18 產生次系統 3-18第四章 模擬與分析 4-14-1 簡介 4-24-2 模擬 4-54-3 離散時間系統 4-254-4 線性化 4-294-5 平衡點之決定 4-32第五章 自訂方塊函數 5-15-1 簡介 5-25-2 Masking 程序的概觀 5-25-3 產生一個 Masked Block 5-35-4 另一個例子 5-155-5 S-函式 5-205-6 一個完整的例子 5-26第六章 方塊函數解析 6-16-1 Sources方塊函數庫 6-26-2 Sinks方塊函數庫 6-296-3 Continuous方塊函數庫 6-446-4 Discrete方塊函數庫 6-596-5 Math方塊函數庫 6-756-6 Funcctions & Tables方塊函數庫 6-996-7 Nonlinear方塊函數庫 6-1176-8 Signals & Systems方塊函數庫 6-1386-9 Subsystems方塊函數庫 6-166第二篇 控制系統 7-1第七章 動態系統模型之建立 7-27-1 引言 7-27-2 機械系統 7-177-3 電路系統 7-337-4 電機械系統 7-35第八章 時域響應分析法 8-18-1 引言 8-28-2 時域響應 8-28-3 根軌跡分析 8-21第九章 頻域響應分析法 9-19-1 引言 9-29-2 波德圖 9-29-3 奈氏圖 9-89-4 相對穩定度 9-189-5 標準二階系統頻率響應 9-259-6 尼可士圖 9-32第十章 控制器設計 10-110-1 引言 10-210-2 PID控制器 10-210-3 PID控制器之積分終結 10-1010-4 相位領先補償器 10-1910-5 相位落後補償器 10-3010-6 相位落後-領先補償器 10-39第十一章 狀態空間設計法 11-111-1 引言 11-211-2 可控制性與可觀測性 11-211-3 極點安置設計 11-711-4 觀測器設計 11-1511-5 線性二次最佳控制器設計 11-23第十二章 離散時間控制系統 12-112-1 引言 11-212-2 連續系統的離散化 12-312-3 時域分析 12-1112-4 頻域分析 12-2112-5 自動導引車系統 12-25第十三章 LTI Viewer 13-113-1 簡介 13-213-2 直流伺服馬達模型 13-213-3 顯示多個模型的響應圖形 13-1213-4 多輸入多輸出模型響應 13-1413-5 Simulink LTI Viewer 13-17第十四章 SISO Design Tool 14-114-1 簡介 14-214-2 直流伺服馬達模型 14-214-3 增加積分器 14-814-4 增加領先 (超前) 網路 14-1014-5 凹陷濾波器 14-1514-6 附註 14-17A1 方塊函數索引 A1-1A2 參考資料 A2-1








中文書籍分類

最新新書
2016 年度暢銷排行
暢銷排行 (2017/06)
暢銷排行 (2017/05)
暢銷排行 (2017/04)



活動主題列表

資料科學
CRC好書上架
簡體中文書最新到貨
PACKT 最新到貨
Effective 系列書
微服務系列書
Ruddy老師的敏捷教室
程式設計必讀經典系列
Springer好書上架
英文書最新到貨
資料視覺化系列書
Python 系列書籍
深度學習系列書籍
無瑕的程式碼 超值合購
Maker小天地



特價書籍

Bootstrap系列76折起
松崗暢銷書展5折起









國立交通大學機構典藏：解耦控制系統設計

























































Please click here if you are not redirected within a few seconds.
Skip navigation
















目前位置：國立交通大學機構典藏
學術出版
畢業論文






















標題: 解耦控制系統設計
作者: 陳君武CHEN, JUN-WU李福進LI, FU-JIN電控工程研究所
關鍵字: 配對;解耦;控制器;參數;耦連程度指標;維納渥夫;LQG/LTR
公開日期: 1988
摘要: 本論文主要在探討多輸入多輸出控制系統中，配對（paring）及解耦控制器設計等問
題。
文中我們基於最小能量（minimum energy）的觀點，發展了一種新的配對方法和定義
一個耦連程度指標（Interaction Index ）；其中配對的結果在於提供我們如何能更
恰當地選擇輸入輸出對的資訊，而耦連程度指標的大小則告訴我們此系統耦連的程度
及是否可把一個多輸入多輸出控制系統簡化成許多個單迴路控制系統來設計。
但古系統的耦連程度嚴重時，解耦控制系統的設計就顯的重要，這裡我們提供了一種
解耦控制器的設計法則，此法則適用範圍包括穩定，不穩定或╱及非極小相之受控體
（plant ），並且用於飛彈的自動駕駛設計而有不錯的解耦特性，此外我們亦證明當
系統被要求完全解耦時，多輸入多輸出的設計程序能用單輸入單輸出的設計技巧來完
成，這裡我們分別用Q 參數法（Q-paramertization ）及維納渥夫（Wiener-Hopf ）
解耦設計法則來加以說明。
最後，為了比較在非線性系統之解耦程度，我們尚採用了一種目前廣為流行的設計法
則（LQG/LTR ）於飛彈的自動駕駛設計上，這種方法在線性系統設計時並未完全解耦
，但經由在非線性系統之模擬結果，則和前述幾個法則一樣，均有令人滿意的解耦特
性。
URI: http://140.113.39.130/cdrfb3/record/nctu/#NT772327029http://hdl.handle.net/11536/53743
顯示於類別：畢業論文




















IR@NCTUTAIRCrossRef具有參數變化之控制系統設計 / 曾駿盛;ZENG, JUN-SHENG;王德勝;WANG, DE-SHENG飛彈解耦控制器設計 / 黃清河;HUANG, GING-HE;林清安;LIN, GING-AN利用LTR 之觀念進行強韌多變數控制器設計 / 危敬文;WEI, JING-WEN;鄧清政;DENG, GING-ZHENG以LQG/LTR為基礎之伺服馬達之電流迴路穩健PI控制器設計 / 蘇信銘;Hsing-Ming Su;徐保羅;Pau -Lo Hsu利用LQG/LTR方法控制具有內建DGSR-CMG的衛星的姿態 / 胡明勇;HU, MING-YONG;林育平;LIN, YU-PING以LQG/LTR方法設計降壓型直流穩壓器之迴路補償器 / 郭清泉;鄒應嶼脈寬調變式交換式電源供應器之模型化分析與設計 / 黎育冠;LI, YU-GUAN;鄒應嶼;ZOU, YING-YU超音速風洞之穩健控制系統及錯誤診斷系統之設計 / 黃道祥;Hwang, Daw-Shang;徐保羅;Hsu Pau-Lo高軌道密度光碟機LQG/LTR伺服控制器之設計 / 陳星光;鄒應嶼元智大學 - 適應性智慧型解耦合模糊滑動控制系統設計 / 秦維良; Wei-Liang Chin 國立彰化師範大學 - 虛擬欲得系統之方法應用於近似解耦控制器設計 / 林佑澤 國立高雄第一科技大學 - 三軸長行程微奈米定位平臺之最佳化設計、系統鑑別與解耦合控制 / 馮榮豐 國立高雄第一科技大學 - 三軸長行程微奈米定位平臺之最佳化設計、系統鑑別與解耦合控制 / 馮榮豐 國立成功大學 - 具機構耦合之雙平行螺桿平臺控制系統設計 / 江嘉榮; Chiang, Chia-Rong 元智大學 - 倒單擺之適應性解耦合控制器設計 / 葉晉榮; Chin-Jung Yeh Loading...












國立交通大學機構典藏：學術出版































Please click here if you are not redirected within a few seconds.
Skip navigation
















目前位置：國立交通大學機構典藏






學術出版
: [108112]




























類別


專利資料

技術報告

教師專書

會議論文

期刊論文

畢業論文

研究計畫




探索


作者
570 
楊千495 
Kuo, Hao-Chung446 
陳光華374 
張翼349 
林進燈327 
Lin, Chin-Teng322 
陳安斌320 
吳重雨318 
李榮貴317 
孫春在.
下一步 >

關鍵字
449 
類神經網路424 
GaN423 
INFORMATION422 
電子工程419 
ELECTRONIC-ENGINEERING408 
 329 
氮化鎵301 
薄膜電晶體293 
OFDM275 
電腦.
下一步 >

公開日期
83654 
2000 - 201724454 
1911 - 1999









國立交通大學機構典藏：畢業論文































Please click here if you are not redirected within a few seconds.
Skip navigation
















目前位置：國立交通大學機構典藏
學術出版






畢業論文
: [47103]


























類別內的文件 (依公開日期由降冪排序排序)： 從 1 到 20 筆，總共 47103 筆


 下一頁 >




公開日期標題作者2016基於位置感知非侵入式負載監測之建築能源管理系統簡子陽; Chien, Tzu-Yang; 曹孝櫟; Tsao, Shiao-Li; 資訊科學與工程研究所
2016以網格為基礎的鄰近密集區域查詢之研究蘇庭昱; Su,Ting-Yu; 黃俊龍; 資訊科學與工程研究所
2016標記有根樹的計數問題楊凱帆; Yang, Kai-Fan; 傅恆霖; 劉樹忠; Fu, Hung-Lin; Liu, Shu-Chung; 應用數學系所
2015元件佈局相關之寄生效應和參數萃取方法應用於奈米射頻CMOS模擬及雜訊分析羅毅人; Lou, Yi-Jen; 郭治群; Guo, Jyh-Chyurn; 電子工程學系 電子研究所
2015整合Kinect與加速規量化臨床Tinetti量表參數黃巖閔; Huang, Yan-Min; 楊秉祥; Yang, Bing-Shiang; 機械工程系所
2015錶面氧化層對鍺化鎳奈米線錶面形貌的影響陳佩玟; Chen, Pei-Wen; 周苡嘉; Chou, Yi-Chia; 電子物理系所
2015高效率平面式微光學聚光器李勝儀; 潘瑞文; 光電科技學程
2015兩岸服務貿易協議對台灣電影產業影響-以文化例外出發討論洪灝淩; Hung, Hao-Ling; 陳在方; Chen, Tsai-Fang; 科技法律研究所
2015漢語「人家」的語意解釋李靜汶; Li, Ching-Wen; 林若望; Lin, Jo-Wang; 外國語文學系外國文學與語言學碩士班
2015浴缸內外高低差對進出浴缸動作跌倒風險的影響黃健祐; 楊秉祥; 機械工程系所
2015耗散奈米線中接近量子相變點的非平衡電子傳輸行為林照蘊; Lin, Chao-Yun; 仲崇厚; Chung, Hou-Chung; 電子物理系所
2015新竹市水源里地方守護的形成與轉化（1980-2014）林威廷; Lin, Wei-Ting; 莊雅仲; Chuang,Ya-Chung; 人文社會學系族群與文化碩士班
2015氧化鋅奈米柱陣列長度與液晶預傾角關係之研究陳睦哲; Chen, Mu-Zhe; 鄭協昌; Jeng, Shie-Chang; 影像與生醫光電研究所
2015藉由解剖學治療學及化學分類系統與同源藥理揭露非癌症藥物於癌症治療曾仁琥; Tseng, Jen-Hu; 楊進木; Yang, Jinn-Moon; 生物資訊及系統生物研究所
2015整合薄膜電晶體及非揮發性浮動閘極記憶體的記憶體電晶體製備研究彭子瑄; Peng, Tzu-Hsuan; 謝宗雍; Hsieh,Tsung-Eong; 材料科學與工程學系所
2015標準制定組織之專利集管型態與授權爭議分析葉家齊; Yeh, Chia-Chi; 劉尚志; Liu, Shang-Jyh; 科技法律研究所
2015設計專利侵權判斷之研究—以美國法為中心陳盈如; Chen, Ying-Ju; 劉尚志; Liu, Shang-Jyh; 科技法律研究所
2015台灣北部三個空品測站大氣超細微粒的特性李國瑞; Lee, Guo-Rui; 蔡春進; Tsai,Chuen-Jinn; 環境工程系所
2015美國後eBay時代專利侵權案件永久禁制令之研究李玄; 王立達; 科技法律研究所
2015拉普拉斯變換及其應用江培華; Chiang, Pei-Hua; 林琦焜; Lin, C. K.; 應用數學系所


類別內的文件 (依公開日期由降冪排序排序)： 從 1 到 20 筆，總共 47103 筆


 下一頁 >




探索


作者
547 
楊千443 
陳光華298 
李榮貴297 
唐瓔璋294 
黃仁宏292 
陳安斌267 
鍾惠民260 
虞孝成249 
朱博湧248 
孫春在.
下一步 >

關鍵字
423 
INFORMATION419 
ELECTRONIC-ENGINEERING419 
電子工程335 
類神經網路282 
氮化鎵272 
電腦270 
MANAGEMENT268 
GaN265 
管理260 
薄膜電晶體.
下一步 >

公開日期
33253 
2000 - 201613850 
1911 - 1999














系統設計(System Design；SD)


































































    


									■
									中文簡體版
				 
				■ English		
				 	
			星期五 
			,7月 21日, 2017 (臺北)
									
			

■ 登入 ■ 申請試用 ■ MY DIGITIMES





 








  科技網  8/10帶您掌握最夯的高功率智慧化電源趨勢  









系統設計(System Design；SD)

明雲青
2009-03-02




所謂系統設計(System Design；SD)，算是系統發展生命週期(System Development Life Cycle；SDLC)的一環，處在介於系統分析(System Analysis)、系統開發(System Development)之間的階段，而其之中又可分為「邏輯設計(Logical Design)」、「實體設計(Physical Design)」等2大主要任務。在邏輯設計部分，其重點在於，需要為資訊系統定義出與之相關的所有輸入，以及藉由這一系統所產生的所有輸出，除此之外，亦須涵蓋基於達成此系統的需求，所必須執行的處理程序，然值得一提的是，此定義卻與完成這系統的方式、工具之間，並無任何關聯；至於實體設計，則是按照邏輯設計的架構而進行設計，係用以敘述所有的系統元件，究竟是如何被完成的。前述不管是邏輯設計、實體設計，其實都與後續程式開發的本質大相逕庭；以邏輯設計而論，其所需要的是排序功能，而實體設計則是需要敘述排序的方法，論及程式開發，重點係選擇開發工具，然後完成程式排序。此外，另有人將邏輯設計一事，歸類為系統分析階段即需完成的項目，箇中所牽涉的工作任務包括資料庫設計、表單設計以及所有I/O介面的設計，故從這層定義解讀，系統設計的實務重點，便在於實體設計，其主要內容包括了實際檔案與資料庫的設計、程式與處理程序的設計。要如何推動系統設計步驟？一般而言，專家建議應先熟稔系統需求規格書，然後依序進行設計系統輸出、設計系統輸入、設計系統檔案與資料庫、設計系統的處理程序、設計軟體等任務，最終將相關結果報告予管理者、使用者。
					  
									








儲存 ｜ 
										列印 ｜ 
									
										轉寄 ｜ 
										意見反應










相關報導






邁向Business IT轉型目標　為資訊經理人必經歷程  台達電子工業資訊處處長朱漢安








關鍵字











系統設計(SD)








加入已選取到「關鍵字追蹤」




什麼是「關鍵字追蹤」































科技商情


精選專輯











































關於我們
							·
							著作權
							·
							隱私權
							·
							常見問題
							·
							發布新聞稿( 中文 、 English )							
							·
							人才招募


							■
							中文簡體版
							 
							■ English   
						


							下載新聞App



							下載活動+App

本網站內之全部圖文，係屬於大椽股份有限公司所有，非經本公司同意不得將全部或部分內容轉載於任何形式之媒體 © DIGITIMES Inc. 版權所有






 
關於我們  | 
										服務說明  | 
										著作權  | 
										隱私權  | 
										常見問題  | 
										發布新聞稿( 中文 、 English )  | 
										



建議使用Chrome、Firefox、或IE 9.0以上版本


									■
									中文簡體版
									 
									■ English        
								





科技網
物聯網
椽經閣
活動＋
DIGITIMES






產業





● 半導體/零組件


● 光電/顯示


● 物聯科技/智慧製造


● CarTech/綠能


● 行動/通訊


● 網路/電商


● IT/醫電


● 數位家庭/VR


● 圖表






區域





● 東南亞/紐澳


● 南亞


● 東亞


● 國際


● 宏觀/商業


● 圖表






Research





● 電腦運算


● 數位家庭


● 可攜式CE


● 行動通訊


● 寬頻與無線


● 大尺寸FPD


● 中小尺寸FPD


● IC設計


● IC製造


● LED/節能


● 物聯網


● CarTech






議題




觀點




電子時報




報導總覽




科技商情




企業IT




雲端




工控自動




展會專區







工業4.0


車聯網


智慧醫療


智慧城市


系統開發設計


產品應用服務







同窗、同學


 椽家之言



科技行腳


 作者群


 關於專欄








所有活動


D Forum


研討會

 
												 


												下載活動+App









關於我們


會員服務


商情電子報訂閱


訂閱電子時報


整合行銷服務


人才招募


聯絡我們 



												 


												下載新聞App










本網站內之全部圖文，係屬於大椽股份有限公司所有，非經本公司同意不得將全部或部分內容轉載於任何形式之媒體 © DIGITIMES Inc. 版權所有 
























MATLAB,Simulink於控制/自動化設計之應用
























 















 ／產品應用／MATLAB,Simulink／控制設計










控制設計
MATLAB,Simulink 在嵌入式控制系統設計領域之相關產品，可廣泛運用在航太、國防、汽車、工業設備、流程控制及其他許多應用上。利用 MATLAB,Simulink 之設計工具，可大幅降低研發成本，縮短產品上市時程並提昇產品品質。


使用者應用案例


德爾發 (Delphi) 利用 Simulink® 、SimDriveline™ 減少 50% 變速箱模型開發時間 





“採用 Simulink 及 SimDriveline，我們 減少 變速箱建立機械模型的時間需求高達 6 個星期，並且擁有優勢更快地建立其他模型。結果，我們更容易能夠支援更多不同的客戶，因為 我們能更快速地進入狀況瞭解客戶的需求” 
Andrew Herman
                                  Delphi Powertrain Systems






- 技術挑戰
各式車輛變速箱系統之設計與測試控制系統 

- 解決方案
採用 MathWorks 工具發展控制演算法、模擬變速器技術、執行硬體迴路測試 

- 驚人成果
•變速器模擬時間縮短50%
                            •提早驗證演算法 
                            •統一開發環境


技術文章


模型基礎設計可縮短馬達控制應用程式的研發時間


精密馬達控制器的應用範圍日益廣泛，不僅可提供更複雜、更精確的動作控制與減少耗能，並具備其他多項優點。這類控制器通常是以16及32位元的數位訊號控制器（DSC, digital signal controller）為主，可提供某些應用函式庫（application library），但仍需發展與完成進階級馬達及動作控制演算法，並整合各種控制功能與周邊設備等各種工具及方法。此外，由於設計與整合錯誤通常直到於實際硬體上執行代碼時才被發現，因此往往導致研發時間與成本的增加。
                            而模型基礎設計可有效解決這些問題—藉由啟動階層式設計過程，於最初的概念等級即可限定整體設計，加入必要的細節，進而發揮所需的功能性。此模型是用以限定規格、評估設計與系統性能、自動產生代碼、執行硬體迴路測試（hardware-in-the-loop testing），並可建立軟體基礎測試控管機制以測試生產軟體。此方法不僅可大幅減少研發時間，迅速形成完全與功能性概念驗證設計，還可經由統一的設計、模擬與測試環境，獲得快速的設計重複與參數最佳化。





 













﻿

磊登自動控制
















磊登自動控制有限公司  版權所有@ 2014  All Rights Reserved  .Best View：1024x768  Designed By 協聯資訊  


  1989年2月成立至今，即將屆滿三十周年。專註於各產業非標準型(客製化)自動化機器設備的設計製造，以及控制監控系統的整合。

  1.生技、醫療及各種產業	　標準設備研發製造。
    2.整廠規劃與設備整合。
    3.機器設備修改及功能提
     　升。

控制盤、動力盤及儀錶箱製造
SCADA中央監控系統整合
各類機器設備控制系統設計規劃、改造






