








































物件導向程式設計 (C#) | Microsoft Docs



















物件導向程式設計 (C#)


2017/4/3
2 分鐘可讀完
參與者








C# 為包括封裝、繼承和多型在內的物件導向程式設計提供完整支援。  
 「封裝」**指的是將一組相關的屬性、方法和其他成員，視為單一單位或物件。  
 「繼承」**則是描述依據現有類別來建立新類別的能力。  
 「多型」**指的是您可以有多個交替使用的類別，即使每個類別是以不同的方式來實作相同的屬性或方法。  
 本節將說明下列概念：  

類別與物件 

類別成員 
 屬性與欄位 
 方法 
 建構函式 
 解構函式 
 事件 
 巢狀類別 

存取修飾詞與存取層級 

具現化類別 

靜態類別與成員 

匿名類型 



繼承 

覆寫成員 


介面 

泛型 

委派 


類別與物件
 「類別」和「物件」有時會交換使用，但事實上，類別說的是物件的「型別」，而物件則是類別之可使用的「執行個體」。 因此，建立物件的動作稱為「具現化」**。 再以藍圖作比喻，若類別是藍圖，物件就是根據藍圖所蓋的建築物。  
 若要定義類別：  
class SampleClass  
{  
}  
 C# 也會提供輕量版的類別，稱為「結構」**，當您必須建立龐大物件陣列而不想要使用太多記憶體時，這個結構會很有用。  
 若要定義結構：  
struct SampleStruct  
{  
}  
 如需詳細資訊，請參閱:  

class 

struct 


 類別成員
 每個類別都有不同的「類別成員」**，包括描述類別資料的屬性、定義類別行為的方法，以及提供不同類別與物件之間通訊的事件。  
 屬性與欄位
 欄位和屬性表示物件包含的資訊。 欄位就像是變數，可直接讀取或設定。  
 若要定義欄位：  
Class SampleClass  
{  
    public string sampleField;  
}  
 屬性具有取得和設定程序，讓您更容易控制設定與傳回數值的方式。  
 C# 允許您建立私用欄位來儲存屬性值，或是使用所謂的自動實作屬性，自動在幕後建立此欄位並提供屬性程序的基本邏輯。  
 若要定義自動實作屬性：  
class SampleClass  
{  
    public int SampleProperty { get; set; }  
}  
 如果您需要執行某些額外作業來讀取和寫入屬性值，請定義用來儲存屬性值的欄位，並提供儲存和擷取這個欄位的基本邏輯：  
class SampleClass  
{  
    private int _sample;  
    public int Sample  
    {  
        // Return the value stored in a field.  
        get { return _sample; }  
        // Store the value in the field.  
        set { _sample = value; }  
    }  
}  
 大部分屬性都具有方法或程序，可以設定及取得屬性值。 但是您可以建立唯讀或唯寫屬性來限制不得修改或讀取。 在 C# 中，則可以省略 get 或 set 屬性方法。 不過，自動實作的屬性不可以是唯讀或唯寫。  
 如需詳細資訊，請參閱:  

get 

set 


 方法
 「方法」**是物件可執行的動作。  
 若要定義類別的方法：  
class SampleClass  
{  
    public int sampleMethod(string sampleParam)  
    {  
        // Insert code here  
    }  
}  
 類別可以有同一個方法的多個實作或「多載」**，但是這些實作的參數個數和參數類型並不相同。  
 若要多載方法：  
public int sampleMethod(string sampleParam) {};  
public int sampleMethod(int sampleParam) {}  
 在多數情況下，您是在類別定義中宣告方法。 不過， C# 也支援「擴充方法」**，允許您在現有類別的實際定義之外將方法新增至類別。  
 如需詳細資訊，請參閱:  

方法 

擴充方法 


 建構函式
 建構函式是類別方法，會在建立指定類型的物件時自動執行。 建構函式通常用來初始化新物件的資料成員， 而且只能在建立類別時執行一次。 此外，建構函式中的程式碼永遠會在類別中的任何其他程式碼執行之前執行。 不過，就和其他任何方法一樣，您可以建立多個建構函式多載。  
 若要定義類別的建構函式：  
public class SampleClass  
{  
    public SampleClass()  
    {  
        // Add code here  
    }  
}  
 如需詳細資訊，請參閱:  
 建構函式。  
 解構函式
 解構函式是用來解構類別的執行個體。 在 .NET Framework 中，記憶體回收行程會自動管理應用程式中 Managed 物件的記憶體配置及釋放。 不過，您可能仍然需要解構函式來清除應用程式建立的任何 Unmanaged 資源。 一個類別只能有一個解構函式。  
 如需 .NET Framework 中之解構函式和記憶體回收的詳細資訊，請參閱記憶體回收。  
 事件
 事件可讓類別或物件在某些相關的事情發生時，告知其他類別或物件。 傳送 (或引發) 事件的類別稱為「發行者」，而接收 (或處理) 事件的類別則稱為「訂閱者」。 如需事件的詳細資訊以及如何引發和處理事件，請參閱處理和引發事件。  

若要宣告類別中的事件，請使用 event 關鍵字。  

要引發事件，請叫用事件委派。  

若要訂閱事件，請使用 += 運算子；若要取消訂閱事件，則使用 -= 運算子。  


巢狀類別
 在類別中定義的另一個類別即稱為「巢狀」**類別。 巢狀類別預設為私用。  
class Container  
{  
    class Nested  
    {  
        // Add code here.  
    }  
}  
 若要建立巢狀類別的執行個體，請使用容器類別名稱，後面加上點號，再接著巢狀類別名稱，如下所示：  
Container.Nested nestedInstance = new Container.Nested()  
 存取修飾詞與存取層級
 所有類別及類別成員都可以使用「存取修飾詞」**，指定要提供給其他類別的存取層級。  
 下列為可用的存取修飾詞：  



C# 修飾詞
定義




public
類型或成員可由相同組件或參考該組件的另一個組件中的任何其他程式碼存取。


private
類型或成員只能由相同類別中的程式碼存取。


protected
類型或成員只能由相同類別中，或是衍生類別中的程式碼存取。


internal
類型或成員可由相同組件中的任何程式碼存取，但是不包括其他組件中的程式碼。


protected internal
類型或成員可由相同組件中的任何程式碼，或是其他組件中的任何衍生類別存取。



 如需詳細資訊，請參閱存取修飾詞。  
 具現化類別
 若要建立物件，您必須將類別執行個體化，或是建立類別執行個體。  
SampleClass sampleObject = new SampleClass();  
 將類別執行個體化之後，您就可以將值指派給執行個體的屬性和欄位，並叫用類別方法。  
// Set a property value.  
sampleObject.sampleProperty = "Sample String";  
// Call a method.  
sampleObject.sampleMethod();  
 若要在類別執行個體化期間將值指派給屬性，請使用物件初始設定式：  
// Set a property value.  
SampleClass sampleObject = new SampleClass   
    { FirstProperty = "A", SecondProperty = "B" };  
 如需詳細資訊，請參閱:  

new 運算子 

物件和集合初始設定式 


 靜態類別與成員
 類別的靜態成員是類別所有執行個體共用的屬性、程序或欄位。  
 定義靜態成員：  
static class SampleClass  
{  
    public static string SampleString = "Sample String";  
}  
 若要存取靜態成員，請使用類別的名稱，但不要建立這個類別的物件：  
Console.WriteLine(SampleClass.SampleString);  
 C# 中的靜態類別只有靜態成員，且無法具現化。 靜態成員也無法存取非靜態屬性、欄位或方法  
 如需詳細資訊，請參閱靜態。  
 匿名型別
 使用匿名類型建立物件時，您不需要撰寫資料類型的類別定義， 編譯器 (Compiler) 會自動幫您建立類別 (Class)。 這個類別沒有可使用的名稱，但是包含您在宣告物件時指定的屬性。  
 若要建立匿名類型的執行個體：  
// sampleObject is an instance of a simple anonymous type.  
var sampleObject =   
    new { FirstProperty = "A", SecondProperty = "B" };  
 如需詳細資訊，請參閱匿名型別。  
 繼承
 繼承可讓您建立新類別以重複使用、擴充和修改其他類別中定義的行為。 成員被繼承的類別稱為「基底類別」，而繼承這種成員的類別即稱為「衍生類別」。 不過，C# 中的所有類別都隱含繼承自 Object 類別，這個類別支援 .NET 類別階層架構，並為所有類別提供低階服務。  
註意 C# 不支援多重繼承。 也就是說，您只能為衍生類別指定一個基底類別。  

 若要繼承基底類別：  
class DerivedClass:BaseClass{}  
 所有類別預設都可以被繼承。 不過，您可以指定類別是否不得當做基底類別，或是建立只能當做基底類別的類別。  
 若要指定類別不得當做基底類別使用：  
public sealed class A { }  
 若要指定類別只能當做基底類別且無法執行個體化：  
public abstract class B { }  
 如需詳細資訊，請參閱:  

sealed 

abstract 


 覆寫成員
 衍生類別預設會從其基底類別繼承所有成員。 如果想要變更所繼承成員的行為，您必須覆寫這個成員。 也就是說，您可以定義衍生類別中方法、屬性或事件的新實作。  
 下列修飾詞是用來控制如何覆寫屬性及方法：  



C# 修飾詞
定義




virtual
允許在衍生類別中覆寫類別成員。


override
覆寫在基底類別中定義的虛擬 (可覆寫) 成員。


abstract
要求在衍生類別中覆寫類別成員。


new 修飾詞
隱藏繼承自基底類別的成員。



 介面
 介面就像類別，可定義屬性、方法和事件集。 但與類別不同的是，介面並不提供實作。 介面是由類別實作，並定義為與類別不同的實體。 介面就代表著一種合約，因為實作介面的類別必須完全依介面的定義來實作這個介面的各個方面。  
 若要定義介面：  
interface ISampleInterface  
{  
    void doSomething();  
}  
 若要在類別中實作介面：  
class SampleClass : ISampleInterface  
{  
    void ISampleInterface.doSomething()  
    {  
        // Method implementation.  
    }  
}  
 如需詳細資訊，請參閱:  
 介面 
 interface 
 泛型
 .NET Framework 中的類別、結構、介面和方法可以包括「型別參數」**，這些參數會定義可儲存或使用之物件的類型。 泛型最常見的範例是集合，您可以在其中指定要儲存於集合之物件的類型。  
 若要定義泛型類別：  
Public class SampleGeneric<T>   
{  
    public T Field;  
}  
 若要建立泛型類別的執行個體：  
SampleGeneric<string> sampleObject = new SampleGeneric<string>();  
sampleObject.Field = "Sample string";  
 如需詳細資訊，請參閱:  

泛型 

泛型 


 委派
 「委派」**是定義方法簽章的類型，可以提供任何具有相容簽章之方法的參考。 您可以透過委派叫用 (Invoke) 或呼叫方法。 委派可以用來將方法當做引數傳遞給其他方法。  
註意 事件處理常式就是透過委派叫用的方法。 如需使用委派處理事件的詳細資訊，請參閱處理和引發事件。  

 若要建立委派：  
public delegate void SampleDelegate(string str);  
 若要建立與委派所指定簽章相符之方法的參考：  
class SampleClass  
{  
    // Method that matches the SampleDelegate signature.  
    public static void sampleMethod(string message)  
    {  
        // Add code here.  
    }  
    // Method that instantiates the delegate.  
    void SampleDelegate()  
    {  
        SampleDelegate sd = sampleMethod;  
        sd("Sample string");  
    }  
}  
 如需詳細資訊，請參閱:  

委派 

delegate 


另請參閱
 C# 程式設計指南










編輯										


共用

Twitter
Facebook


|

佈景主題


淺色
深色






























﻿






物件導向程式設計A組



物件導向程式設計A組

助教資訊
 
黃羿綺
 
電話分機：2813
 
Email：lucy@csim.scu.edu.tw





首頁
物件導向程式設計A組
作業系統 A班
作業系統 B班
深耕程式設計




[課程異動] 資料結構
Jun 13, 2012 by 羿綺
 
原為郭育政老師上課，改為柯淑津老師
 
「資料結構」異動時間如下：
資二A ：
星期五 34節 (教室5417)
星期一 56節 (雙週) (教室5616)
 
資二B ：
星期二 56節 (教室5616)
星期一 56節 (單週) (教室5616)
 
[公告] 期末考
Jun 13, 2012 by 羿綺
 
時間：6/15 (五) 3、4節 (10:10~12:00)
教室：5216、5416
。 考試時請攜帶學生證，作為查證。
。 書包等請放在講台前面，請勿放置資料或筆記在座位上。
。 考試時，請將手機調成靜音或震動，若發現手機鈴響視同作弊。
考試教室
 
[公告] DEMO
Jun 13, 2012 by 羿綺
 
由於停班停課的關係，所以禮拜一的DEMO時間順延到禮拜二！
DEMO單
 
[公告] 期末報告(紙本)(DEMO算小考成績) 
Jun 7, 2012 by 羿綺
 
期末DEMO時，需要繳交完整的報告
報告內容須含：
。封面
。腳本說明(說明你的遊戲情境與玩法)
。角色說明(用UML圖說明你的遊戲角色物件)
。完整的程式碼+"註解" (一定要有註解)
 
DEMO結束後，需繳交程式
 
範例檔案：期末報告範本
 
[公告] 週五正課，重點提示
Jun 6, 2012 by 羿綺
 
本週五： 
10~11點，會講解部分考試重點，請同學一定要準時到
10:50 課堂反映問捲
 
[公告] 實習不上課，中午考試
Jun 6, 2012 by 羿綺
 
期末上機考：詳細情況請看下麵
 
[公告] 期末上機考(重要)
Jun 4, 2012 by 羿綺
 
時間： 6/7 (四) 12：30 ~ 15:20 (E56)
地點：2208、2219
座位表：考試前會貼在教室外面
 
。 根據東吳大學考試規第三條：學生考試遲到逾十五分鐘者不准入場考試。
。 ==> 12點45分後不得入場。
。  請將背包、手機、任何3C商品放在前面講台。
。 考試時，請將手機調成靜音或震動並且不要放在身上，若發現手機鈴響視同作弊。
。  可以帶筆記，但是不可交換閱讀，課本也不可互借，請使用"自己"的課本
 
[公告] 本週不上實習課
May 29, 2012 by 羿綺
 
另：
若對物件期末專題有疑問的同學
例如：不知道該如何寫， 想知道是否有更完善的寫法， 或是有哪部分看不懂需要再講解的
可在實習課的時間至4208找助教詢問
 
提醒：期末專題，也是作業的一部分，不要因不懂題目的要求，而導致於成績不理想
若能夠做的越完善，成績則會越高
DEMO單，下週會貼在系辦前
DEMO時請準備好環境可以直接開始DEMO，並且繳交完整的報告
請準時DEMO，(若提前做完，可以提早DEMO)，但不接受延後
 
[成績公佈] 第四次上機小考 
May 29, 2012 by 羿綺
 
第四次上機小考已經改好了
請至右下角點選，[考試成績]
 
第一題部分同學沒註意到邊界值。例如： 1 2 3 (也就是等號)，這部分扣10分
第三題部分給分，部份給分，若有對"樣本一" 或 "樣本三" 則給20分
 
PS 若對成績有問題，請至系辦4208找助教詢問
 
[公告]  繳交第一次紙本[6/1(五)] (new)
May 29, 2012 by 羿綺
 
1. 腳本說明：說明你的遊戲情境與玩法。
2. 角色說明：用UML圖說明你的遊戲角色物件，用word 書寫出來交。
本週五(6/1) 繳交，並且請用word書寫
[公告]  期末專題
May 29, 2012 by 羿綺
 
物件期末專題: 遊戲設計
    1. 腳本說明：說明你的遊戲情境與玩法。
    2. 角色說明：用UML圖說明你的遊戲角色物件
       (1) 一定要封裝屬性
       (2) 要用到static 屬性 或 方法
    3.  請用條列方式說明你的遊戲玩法，可以嘗試設計要用那個CLASS   的method來處理這個，舉例：
      。如何產生角色的物件?
      。角色間如何互動，假如是攻擊，要如何攻擊你的程式邏輯為何?
      。遊戲中會有一共同資源是static 屬性，要怎樣去取得這份資源?
      。遊戲如何結束?
  4. 要用word 書寫，期末DEMO時裝訂成冊
會貼DEMO單在系辦外，請記得填寫，並且準時DEMO
DEMO時，請先將環境都準備好，只能在4大一樓機房DEMO
 
[成績公佈] 第三次上機小考
May 14, 2012 by 羿綺
 
第三次上機小考已經改好了
請至右下角點選，[考試成績]
 
PS 若對成績有問題，請至系辦4208找助教詢問
 
[公告] 程設期中考(筆試)
Apr 20, 20102 by 羿綺
 
時間： 4/26 (四) 8：10 ~ 10:00 (12)
地點：5216
座位表：考試前會貼在教室外面
 
。 考試時請攜帶學生證，作為查證。
。 書包等請放在講台前面，請勿放置資料或筆記在座位上。
。 考試時，請將手機調成靜音或震動，若發現手機鈴響視同作弊。
。 這次考試時間較早，不要因為睡過頭而錯過了考試！！！。
 
[公告] 程設期中考
Apr 11, 20102 by 羿綺
 
4/12 (四) 實習課不用上課， 若有問題想問的同學，可以在此時間至4208找助教詢問
 
期中上機考時間：4/13 (五) 10:00~13:00 (34E)
地點：2208、2219
座位表：考試前會貼在教室外面
。可以攜帶資料，但不可交換傳閱，違者以作弊論
。不可攜帶任何儲存設備，違者以作弊論
。請同學準時進入考場
 
期中筆試時間(暫定)：4/26 (四) 08:00~10:00 (12)
 
[成績公佈] 第二次上機小考
Mar 23, 20102 by 羿綺
 
第二次上機小考已經改好了
請至右下角點選，[考試成績]
 
PS 若對成績有問題，請至系辦4208找助教詢問
 
[3/22] 實習課：上機小考
Mar 20, 20102 by 羿綺
 
本週四實習課有上機小考，請同學準時考試！
 
p.s. 另外關於考試，要提醒各位同學
根據東吳大學考試規第三條：學生考試遲到逾十五分鐘者不准入場考試。
所以請同學養成準時進入考場的習慣！
 
[成績公佈]
Mar 19, 20102 by 羿綺
 
成績公佈：
3/8 上機考1
3/16 課堂小考1
 考試成績
有問題請下週五(3/23) 前過來詢問
[3/16] 課堂小考
Mar 13, 20102 by 羿綺
 
本週五10點10分，請準時進入教室，有課堂小考 open book
範圍：陣列、method
請同學好好準備！
 
[3/15] 實習課
Mar 13, 20102 by 羿綺
 
上課內容：
   1. ＊講解 作業六程式講解＊   下載 
   2. 課堂習題 (1題) ： 練習讀檔 & 寫檔 & 二維陣列 (讀取、加總)   下載 
 
[3/1] 實習課
Feb 29, 20102 by 羿綺
 
上課內容：
   1. ＊講解 程式碼排版＊ 
   2. ＊講解 編碼問題＊ 
   3. 課堂習題 (1題) ： 練習讀檔 & 寫檔 & 排序   下載 
 
[2/23] 實習課
Feb 21, 20102 by 羿綺
 
上課內容：
 ＊講解 作業繳交規定＆配分＊ 下載
   1. 複習讀檔  下載 
   2. 寫檔 PrintWriter
   3. 例題講解
   4. 課堂習題 (1題) ： 練習讀檔 & 寫檔 下載 
 
[2/16] 實習課暫停一次
Feb 12, 20102 by 羿綺
 
as title
 
上課用書
Feb 12, 2011 by 羿綺
 
指定教科書：
Introduction to Java Programing Brief Version, Y.Daniel Liang 8/E, Prentice Hall
與上學期使用的課本是相同的
 


公告

[課程異動] 資料結構(new)
[公告] 期末考 (new)
[公告] DEMO (new)
[公告] 期末報告(紙本)(DEMO算小考成績)
[公告] 週五正課，重點提示
[公告] 實習不上課，中午考試
[公告] 期末上機考(6/7) E56
[公告] 本週不上實習課
[公告] 第四次上機小考
[公告] 繳交第一次紙本
[公告] 期末專題
[成績公佈] 第三次上機小考
[公告] 程設期中考(筆試)
[公告] 程設期中考
[成績公佈] 第二次上機小考
[3/22] 實習課：上機小考
[成績公佈]
[3/16] 課堂小考
[3/15] 實習課
[3/1] 實習課
[2/23] 實習課
[2/16] 實習課暫停一次
上課用書
授課計劃表

作業

無

下載區

無

Eclipse
Win7_JDK
XP_JDK
作業繳交規定!!!
考試成績
DEMO單 (填寫狀況)



© 2006 Website.com. Valid CSS & XHTML. Template design by Arcsin








天瓏網路書店-Python 3 物件導向程式設計, 2/e



































天瓏網路書店
全台最齊全
中英文電腦書專賣店







天瓏資訊圖書粉絲專頁




搜尋


資料科學
簡體書
Packt
微服務
工程師必讀經典
英文書新到貨
Python
Tensorflow
無瑕程式碼








        Python 3 物件導向程式設計, 2/e
        


        Dusty Phillips 著、楊尊一 譯
        
      




 


出版商:
碁峰


出版日期:
2016-05-25


定價:
$480


售價:

7.9 折
          $379



語言:
繁體中文


頁數:
408


ISBN:
9863479810

ISBN-13:
9789863479819


相關標籤:

Python






      立即出貨
        (庫存 > 10)













買這商品的人也買了...







 
$560
              售價: $437
          
Python 程式設計實務－從初學到活用 Python 開發技巧的16堂課





 
$680
              售價: $537
          
精通 Python 3 程式設計 (Programming in Python 3: A Complete Introduction to the Python Language, 2/e)





 
$360
              售價: $284
          
完整學會 Git, GitHub, Git Server 的24堂課





 
$980
              售價: $774
          
流暢的 Python｜清晰、簡潔、有效的程式設計 (Fluent Python)





 
$780
              售價: $616
          
精通 Python｜運用簡單的套件進行現代運算 (Introducing Python: Modern Computing in Simple Packages)





 
$580
              售價: $452
          
Python 機器學習 (Python Machine Learning)





 
$520
              售價: $411
          
Python 程式設計入門指南





 
$680
              售價: $537
          
高效能 Python 程式設計 (High Performance Python: Practical Performant Programming for Humans)





 
$350
              售價: $277
          
啊哈！圖解演算法必學基礎





 
$360
              售價: $281
          
Python 設計模式深入解析 (Mastering Python Design Patterns)





 
$500
              售價: $395
          
Python 自動化的樂趣｜搞定重複瑣碎 &單調無聊的工作 (中文版) (Automate the Boring Stuff with Python: Practical Programming for Total Beginners)





 
$940
              售價: $700
          
無瑕的程式碼－敏捷軟體開發技巧守則 + 番外篇－專業程式設計師的生存之道 (雙書合購)





 
$880
              售價: $695
          
深入淺出物件導向分析與設計 (Head First Object-Oriented Analysis and Design)





 
              貴賓價: $450
          
Python絕技：運用Python成為頂級駭客 (Violent Python : A Cookbook for Hacker, Forensic Analysis, Penetration Testers and Security Engineers)





 
$450
              售價: $383
          
Python 函式庫語法範例字典





 
$620
              售價: $484
          
職業駭客的告白 : 軟體反組譯、木馬病毒與入侵翻牆竊密





 
$590
              售價: $502
          
今天不學機器學習，明天就被機器取代：從 Python入手+演算法





 
$880
              售價: $695
          
Python 錦囊妙計, 3/e (Python Cookbook, 3/e)





 
$480
              售價: $379
          
演算法的樂趣｜23個程式設計必學主題與應用實例





 
$680
              售價: $530
          
Essential Scrum中文版：敏捷開發經典 (Essential Scrum: A Practical Guide to the Most Popular Agile Process)




產品描述

<內容簡介> 
發揮Python 3物件的力量
《Python 3物件導向程式設計 第二版》說明何時可利用類別、資料封裝、繼承、多形、抽象與例外等基本原則來開發設計良好的軟體。本書指引讀者透過學習高階設計模式以建構可維護的應用程式，掌握複雜的字串與檔案處理，Python如何區分二進位與文字資料，以及單元測試與並行程式設計。
第二版內容新增了Python核心函式庫最新的變化，並重新編排以提升學習流程與閱讀體驗。
本書適用對象
如果你是物件導向程式設計技術的新人，或者你具有基本Python知識並想要深入學習Python物件導向程式設計的正確應用時機，這本書正是你所需要的。
本書內容包含
＊建構類別與定義模型以實作Python物件
＊細分物件類別並透過類別介面描述物件的屬性與行為
＊以繼承擴展類別功能
＊認識物件導向功能使用時機，以及更重要的是何時不要使用
＊解釋設計模式與Python中有所不同的原因
＊說明簡單化的單元測試與其在Python中的重要性
＊掌握Python 3的常用同時性技巧與陷阱
＊探索開發同時性網路系統的新AsyncIO模組

<作者簡介>
Dusty Phillips 是一名加拿大軟體開發者與作者，現居於西雅圖。他活躍於開源社群十多年，大多使用Python進行程式設計。他是Puget Sound Programming Python聚會的共同創辦人；若你正巧在附近，歡迎來打招呼。Packet Publishing出版的《Python 3 物件導向程式設計》是他的第一本書，他的著作還包括歐萊禮出版的《Creating Apps In Kivy》，以及自行出版的《Hacking Happy》。他在本書第一版出版後不久因自殺傾向而就醫保護，此後一直是心理健康的支持者。

<目錄>
  
Chapter 01 物件導向設計
物件導向簡介
物件與類別
指派屬性與行為
隱藏細節與建構公開介面
組合
繼承
案例研究
練習
總結
Chapter 02 Python 的物件
建構Python 類別
模組與套件
組織模組內容
誰可以存取我的資料
第三方函式庫
案例研究
練習
總結
Chapter 03 相像的物件
基本繼承
多重繼承
多形
抽象基底類別
案例研究
練習
總結
Chapter 04 預期中的未預期
發出例外
案例研究
練習
總結
Chapter 05 物件導向程式設計使用時機
視物件為物件
對類別資料加上行為屬性
管理員物件
案例研究
練習
總結
Chapter 06 Python 資料結構
空物件
資料組與具名資料組
字典
清單
集合
擴充內建
佇列
案例研究
練習
總結
Chapter 07 Python 物件導向捷徑
Python 內建函式
方法過載替代方案
函式也是物件
案例研究
練習
總結
Chapter 08 字串與序列化
字串
正規表示式
物件序列化
案例研究
練習
總結
Chapter 09 Iterator 模式
設計模式簡介
Iterator
操作式
產生器
協程
案例研究
練習
總結
Chapter 10 Python 設計模式一
decorator 模式
observer 模式
strategy 模式
state 模式
singleton 模式
template 模式
練習
總結
Chapter 11 Python 設計模式二
adapter 模式
facade 模式
flyweight 模式
command 模式
abstract factory 模式
composite 模式
練習
總結
Chapter 12 測試物件導向程式
為何要測試？
單元測試
以py.test 測試
模擬高成本物件
多少測試才夠？
案例研究
練習
總結
Chapter 13 同時性
執行緒
多行程
未來
AsyncIO
案例研究
練習
總結








中文書籍分類

最新新書
2016 年度暢銷排行
暢銷排行 (2017/06)
暢銷排行 (2017/05)
暢銷排行 (2017/04)



活動主題列表

資料科學
CRC好書上架
簡體中文書最新到貨
PACKT 最新到貨
Effective 系列書
微服務系列書
Ruddy老師的敏捷教室
程式設計必讀經典系列
Springer好書上架
英文書最新到貨
資料視覺化系列書
Python 系列書籍
深度學習系列書籍
無瑕的程式碼 超值合購
Maker小天地



特價書籍

Bootstrap系列76折起
松崗暢銷書展5折起



















物件導向程式設計 - Crsintro























物件導向程式設計

出自Crsintro

跳轉到: 導航, 搜尋 



 物件導向程式設計


 OBJECT-ORIENTED SOFTWARE DESIGN


 課程編號
 902 10730


 學分數
 3


 必選修
 必帶


 修課年級
 學士班 1 年級


 修課學期
 下學期


 課程長度
 半年


 目前授課教授
 林軒田


 擋修課程



 建議先修
 計算機程式設計


 上課時間
 [Mon: 234 (單班)]
[Tue: 678 (雙班)]



在物件導向程式設計這門課當中，我們將學習以物件的角度來設計一個程式、組織我們的程式碼。我們會學到類別(class)、物件(object)、方法(method)、封裝(encapsulation)、繼承(inheritance)等重要的「物件導向程式設計」的概念。除此之外，課程還會提到一些和 Java 程式語言有關的語法。

目錄

1 課程內容
2 指定教科書
3 額外參考書
4 歷年課程網頁


  課程內容 
在上學期的計算機程式設計當中，我們學到瞭如何寫一個程式與如何告訴電腦該怎麼去工作。在該課程當中，我們的想法都會是「該怎麼去做一件事情」，所以我們的程式的組識方式十之八九就是會有數個函式，每一個函式就負責一些工作。我們稱這種程式設計典範(Programming Paradigm)為程序導向程式設計(Procedural-oriented Programming)，遵從這個設計典範的程序員，在撰寫程式或者資訊系統的時候，會把大工作分解成數個小工作，直到工作變得夠簡單，就直接寫一個函式去處理它。
然而在實際情況中，程序導向程式設計在一個很大的資訊系統當中是不敷使用的。過去的經驗告訴我們，若只採用程序導向程式設計，即便每一個函式都設計得很好（功能明確簡單），我們的程式碼的重複利用率(Code reuse)還是很有限。更不用說程序導向程式設計本身帶有一些藝術的成份。不是每個人都寫得出容易閱讀、容易維護的程式碼。
經過數十年的演進，有一套方法在激烈的競爭中脫穎而出，那就是「物件導向程式設計」。他主張我們應該要從「物件」的角度去設計一個系統、去寫我們的程式。而「物件導向程式設計」這門課就是要教我們從物件的角度去設計程式，教我們一些物件導向程式設計背後的想法。
本課程將會教授 Java 程式語言。做為一個物件導向的程式語言，Java 提供了一些語法構件，如 class, extends, implements, public, private 等等，讓我們可以更容易地處理物件。
以下是本課程的相關主題：

 如何撰寫 Java 程式 這一部分通常會介紹 Javac (Java 的編譯器)、Javadoc (Java 特有的文件生成器)、Java (JVM，Java 的執行環境) 等 Java 環境的工具鏈(Toolchain)。
 Class、Object 介紹「類別」的概念。告訴我們如何把現實中的物件分門別類、如何從現實的物件中提取有用的性質、如何把一個具體的物件變成一個抽象的類別。例如：我手上有一臺 MP3 Player，你也有一臺，我想要寫一個程式模擬這二個 MP3 Player 的行為我們該怎麼做？
 Method 介紹物件的「方法」。和我們在 C 程式語言中學到的函式很像，都是一大堆表達式、述句、指令的集合，用以實作某個「功能」。不過和 C 程式語言中的函式不同，Method 是以物件為中心，我們設計 Method 的時候考量的是一個物件可以做什麼事，例如像是 MP3 Player 可以有一個 "Play" Method，用來撥放音樂。
 Encapsulation 介紹類別的「封裝」。也就是每一個類別對外只提供必要的介面、隱藏內部的實作。一個封裝完善的類別，可以讓我們隨意地修改其內部實作，而且不必更新類別的使用者(其他的類別)。例如我們的 MP3 Player 只會提供播放、暫停、關機等介面，我們不會也不需要知道它內部的電路是長什麼樣子。
 Inheritance介紹類別與類別之間的「繼承」。在物件導向程式設計當中，我們有「繼承」語意可以幫助我們重覆利用我們現有的程式碼。例如：我們如果要寫一個新的 MP3 Player Touched 類別，為我的 MP3 Player 加上觸控的功能，我們的新類別 MP3 Player Touched 可以繼承 MP3 Player，然後再加上自己的 touch method。
 Polymorphism介紹「多型」的概念。當我們同時有二個子類別繼承同一個父類別時，二個子類別的 Method 的實作可能有所不同，但是我們可以用同樣的函式名稱去呼叫他們，我們稱之為多型。例如：我們可能有 MP3 Player Touched、MP3 Player Cellphone 二個子類別皆繼承自 MP3 Player。我們只要知道它是一個 MP3 Player 的物件，我們就可以用 Play 來播放音樂，而且當我們呼叫 Play 的時候，透過 Virtual Method Invocation 機制，程式會自動找出正確的子類別的 Play Method。
 Interface介紹「介面」的概念。當我們傳遞物件的時候，通常我們儘可能使用父類別的 Reference 來接收物件，可是有時候我們沒有辦法同時滿足繼承的要求（例如：有時候我們可能必需使用 Java 禁止的多重繼承），在這樣的情況下，我們可以使用 Interface。例如：Home Theatre 與 MP3 Player 都有 Play 功能，可是他們沒有共同的父類別，我們可以寫一個函式同時接收二種物件嗎？我們可以讓這二個類別同時實作 Playable Interface，然後函式就可以使用 Playable 的 Reference 來接收二者的物件。
 Exception例外處理機制。在物件導向程式設計當中，因為例外處理遠較過去程序導向程式設計複雜，所以我們有截然不同的例外處理機制。我們改用 try-catch 敘句來攔截例外，而使用 throw 敘句來拋出例外。
 Generic泛型，讓我們的容器(Container)可以裝載不同型別的資料，而不必重寫我們的容器。
 SynchronizeJava 在多執行緒之下，用以管控資料完整性的機制。

  指定教科書 
 W. Savitch, Absolute Java, 4th Ed., Pearson, 2009.

  額外參考書 
 Ken Arnold, James Gosling, David Holmes, The Java Programming Language, 4th edition, Addison-Wesley, 2006.
 Kathy Sierra, Bert Bates, Sierra Kathy, Bates Bert, Head First Java, 2nd edition, O'Reilly, 2005.

  歷年課程網頁 


 年度  季節  班別  教授  網址


 2010  春季  單雙  林軒田  http://ceiba.ntu.edu.tw/982oop http://www.csie.ntu.edu.tw/~htlin/course/oop10spring/


 2009  春季  單  陳俊良  http://ceiba.ntu.edu.tw/972oop


 2009  春季  雙  林軒田  http://ceiba.ntu.edu.tw/972oop_even http://www.csie.ntu.edu.tw/~htlin/course/oop09spring/





取自"https://council.csie.ntu.edu.tw/crsintro/index.php/%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88"
3個分類: 學士班 1 年級課程 | 必修課程 | 學士班 1 年級必修課程 






檢視


頁面
討論
原始碼
歷史 



個人工具


登入








搜尋




 
				




導航


首頁
現行課綱
必修課程分類
選修課程分類
課程列表
近期變動




工具箱


鏈入頁面
相關頁面修訂記錄
特殊頁面
可列印版 永久連結 








 本頁最後更動時間在 2010年4月27日 (星期二) 12:43。
本頁面已經被瀏覽11,394次。
本站的文字內容除另有聲明外，全部以 Attribution-Noncommercial 3.0 Unported 條款授權使用。
隱私政策
關於Crsintro
免責聲明














物件導向程式設計





物件導向程式設計
 




 


第六章、設計Java Applet 

 




 





授課教師：陳慶瀚
WWW
 : http://www.miat.ee.isu.edu.tw/java
E-mail : pierre@isu.edu.tw  　


 



     
   

 6.6版面管理員：LayoutManager
當我們將一個元件加到Applet(或是任何Container)上, 
            該Applet會使用它的layout 
            manager 決定要將元件放置的位置。 
java.awt.LayoutManager是一個界面元件. 下列5個版面配置物件類別都安裝(繼承)這個界面元件: 

FlowLayout 
BorderLayout 
CardLayout 
GridLayout 
GridBagLayout 

FlowLayout是最基本的版面配置元件，Applet和Panel內定的版面配置就是FlowLayout。它將元件由左到右依序(依加入的先後順序)排列，單行放不下的元件會移到下一行。 
BorderLayout可將元件放置在Applet的North, South, East, West和Center等五個位置。 
CardLayout將一個Applet是為一組重疊的版面，每個版面擁有自己的LayoutManager，但一次只能顯示一個版面。 
GridLayout的元件擺置方式是將 Applet切割成grids table,每一個grid都具有相同的寬度和高度。元件由左到右、由上到下依序(依加入的先後順序)排列。 
GridBagLayout類似GridLayout,但多出兩項功能：

1. 每一個grid可以擁有自己的寬度和高度。 
            
2. 元件擺放的位置可以由設計者指定，而不一定依鍵入先後順序由左到右、由上到下排列。 
　 
FlowLayout版面
 
使用範例：
FlowLayout fl;
fl = new FlowLayout();
或 
FlowLayout fl 
                = new FlowLayout(); 
在Applet程式中，直接將FlowLayout元件傳入Applet的成員函式setLayout()中: 
this.setLayout(fl); 
最精簡的寫法： 
this.setLayout(new 
                FlowLayout()); 
FlowLayout的切齊功能
    this.setLayout(new FlowLayout(FlowLayout.LEFT));   //向左切齊
    this.setLayout(new FlowLayout(FlowLayout.RIGHT));  //向右切齊
    this.setLayout(new FlowLayout(FlowLayout.CENTER)); //中間切齊
 


中間切齊範例 
設定元件在FlowLayout上彼此間的間隔  
public FlowLayout(int 
                alignment, int hspace, int vspace);

例： 
FlowLayout fl =  new FlowLayout(FlowLayout.LEFT, 20, 10);//單位：pixel

 範例6.6.1： 
　
import java.applet.*;    
import java.awt.*;
 
public class SpaceTapeDeck extends Applet 
{
  public void init() 
  {
    this.setLayout( new FlowLayout(FlowLayout.LEFT, 20, 10));
    this.add( new Button("Play"));
    this.add( new Button("Rewind"));
    this.add( new Button("Fast Forward"));
    this.add( new Button("Pause"));
    this.add( new Button("Stop"));  
  }
}
 
結果瀏覽：


  BorderLayout
BorderLayout可將元件放置在Applet的North, South, East, West和Center等五個位置。 
BorderLayout的使用模式如同FlowLayout，如
this.setLayout(new BorderLayout());
BorderLayout沒有切齊的功能，但可以設定水平和垂直間隔，如
this.setLayout(new BorderLayout(5, 10));
將元件加入 BorderLayout的特定位置 如下： 
this.add("South", new Button("Start"));
  範例6.6.2：
import java.applet.*;    
            import java.awt.*;
public class BorderLayout1 extends Applet 
            {
              public void init() 
              {
                setLayout( new BorderLayout(10, 5));
                add("South", new Button("南1"));
                add("South", new Button("南2"));
                add("North", new Button("北"));
                add("East", new Button("東"));
                add("West", new Button("西")); 
             
              }
            }
結果瀏覽：


  CardLayout
CardLayout將一個Applet是為一組重疊的版面，每個版面擁有自己的LayoutManager，但一次只能顯示一個版面。
CardLayouts使用模式
　
    this.setLayout(new CardLayout());//建構一個CardLayout並植入Applet
或 
    this.setLayout(new CardLayout(3, 4));//設定水平和垂直的間隙寬度
每一個card都有一個名稱.當一個GUI元件被加(使用add成員函式)到一個新的card名稱，此一card會自動產生 
            。如下例將產生3個card： 
this.setLayout(new CardLayout());
this.add("Pizza", new Label("How do you like your pizza?"));
this.add("Pizza", new Button("OK"));
this.add("Payment", new Label("How would you like to pay?"));
this.add("Payment", new Button("OK"));
this.add("Address", new Label("Delivery Instructions"));
this.add("Address", new Button("Order"));
下例則產生5個card ： 
this.setLayout(new CardLayout());
this.add("1", new Label("First Card"));
this.add("2", new Label("Second Card"));
this.add("3", new Label("Third Card"));
this.add("4", new Label("Fourth Card"));
this.add("5", new Label("Fifth Card"));
this.add("6", new Label("Sixth Card"));
切換不同的Card
 public void first(Container parent)
 public void next(Container parent)
 public void previous(Container parent)
 public void last(Container parent)
 public void show(Container parent, String name)
  範例6.6.3：
import java.awt.*;
            import java.applet.*; 
            import java.awt.event.*;   
            public class CardLayoutApplet extends Applet implements ActionListener
            {
                    Panel myPanel;
                    Button myButton[]= 
            new Button[5];
                    CardLayout Card=new 
            CardLayout(); 
                    public void init() 
            
                    {
                            myPanel 
            = new Panel();
                            myPanel.setLayout(Card);
                            this.add(myPanel);
                            for 
            (int i=0;i<5;i++)
                            {
                                    myButton[i] 
            = new Button("這是第" + String.valueOf(i)+"層版面");
                                    myPanel.add(String.valueOf(i), 
            myButton[i]);
                                    myButton[i].addActionListener(this);            
                            }               
                    }
                    public void actionPerformed(ActionEvent 
            theEv)
                    {
                    if (theEv.getSource()==myButton[0]||theEv.getSource()==myButton[1]
                           ||theEv.getSource()==myButton[2]||theEv.getSource()==myButton[3]
                       ||theEv.getSource()==myButton[4])
                            {
                        Card.next(myPanel);
                            }
                    }
            }
結果瀏覽：


  GridLayout
GridLayout的元件擺置方式是將 Applet切割成grids table,每一個grid都具有相同的寬度和高度。元件由左到右、由上到下依序(依加入的先後順序)排列。 
 範例6.6.4： 
import java.awt.*;
            import java.applet.*;
            public class GridLayoutApplet extends Applet
            {
                Panel myPanel;
                Button myButton[]= new Button[9];
             
                    public void init() 
            
                    {
                    myPanel = new Panel();
                    myPanel.setLayout(new 
            GridLayout(3,3,5,5));
                    this.add(myPanel);
                    for (int i=0;i<9;i++)
                    {
                        myButton[i] 
            = new Button("GridLayout "+ String.valueOf(i));
                        myPanel.add(myButton[i]);
                    }               
                    }
            } 


  GridBagLayout 
GridBagLayout類似GridLayout,但多出兩項功能：

1. 每一個grid可以擁有自己的寬度和高度。 
            
2. 元件擺放的位置可以由設計者指定，而不一定依鍵入先後順序由左到右、由上到下排列。








　
物件導向程式設計
義守大學電機系 陳慶瀚
2001.11.15






 





物件導向程式設計 (C# 與 Visual Basic)









































Developer Network
Developer Network
Developer




登入




MSDN 訂閱




取得工具





















































很抱歉。您所要求的內容已遭移除。將會在 1 秒內自動重新導向。





Visual Studio 語言
Visual Basic 和 C#

程式設計概念





程式設計概念
物件導向程式設計 (C# 與 Visual Basic)




物件導向程式設計 (C# 與 Visual Basic)




物件導向程式設計 (C# 與 Visual Basic)

















新的逐步解說 (C# 和 Visual Basic) 

應用程式定義域 (C# 和 Visual Basic) 

組件和全域組件快取 (C# 和 Visual Basic) 

屬性 (C# 和 Visual Basic) 

共變數和反變數 (C# 和 Visual Basic) 

運算式樹狀架構 (C# 和 Visual Basic) 

LINQ (Language-Integrated Query) 

物件導向程式設計 (C# 與 Visual Basic) 

效能 (C# 和 Visual Basic) 

反映 (C# 和 Visual Basic) 

序列化 (C# 和 Visual Basic) 

執行緒 (C# 和 Visual Basic) 



TOC

 
摺疊目錄
展開目錄




本文件已封存並已停止維護。







若要檢視英文版的文章，請選取 [原文] 核取方塊。您也可以將滑鼠指標移到文字上，即可在快顯視窗顯示英文原文。



譯文


原文





本文件已封存並已停止維護。

物件導向程式設計 (C# 與 Visual Basic)



                Visual Studio 2010
            






                        其他版本
                    







Visual Studio 2015 


Visual Studio 2013 


Visual Studio 2012








 .NET Framework 中的所有 Managed 語言 (如 Visual Basic 和 C#) 都提供完整的物件導向程式設計支援，包括封裝、繼承和多型。「封裝」指的是將一組相關的屬性、方法和其他成員，視為單一單位或物件。「繼承」則是描述依據現有類別來建立新類別的能力。「多型」指的是您可以有多個交替使用的類別，即使每個類別是以不同的方式來實作相同的屬性或方法。本節將說明下列概念：類別與物件類別成員屬性與欄位方法建構函式解構函式事件巢狀類別存取修飾詞與存取層級執行個體化類別靜態 (共用) 類別與成員匿名型別繼承覆寫成員介面泛型委派類別與物件「類別」(Class) 和「物件」(Object) 一詞有時會交換使用，但事實上，類別說的是物件的「型別」(Type)，而物件則是類別之可使用的「執行個體」(Instance)。 因此，建立物件的動作稱為「執行個體化」(Instantiation)。 再以藍圖作比喻，若類別是藍圖，物件就是根據藍圖所蓋的建築物。 若要定義類別：


C#VB




複製




class SampleClass
{
}




Visual Basic 和 C# 都會提供輕量版的類別，稱為「結構」(Structure)，當您必須建立龐大物件陣列而不想要使用太多記憶體時，這個結構會很有用。若要定義結構：


C#VB




複製




struct SampleStruct
{
}




如需詳細資訊，請參閱：Visual BasicClass 陳述式 (Visual Basic)Structure 陳述式C#類別 (C# 參考)struct (C# 參考)類別成員每個類別都有不同的「類別成員」(Class Member)，包括描述類別資料的屬性、定義類別行為的方法，以及提供不同類別與物件之間通訊的事件。屬性與欄位欄位和屬性表示物件包含的資訊。 欄位就像是變數，可直接讀取或設定。 若要定義欄位：


C#VB




複製




Class SampleClass
{
    public string sampleField;
}




屬性具有取得和設定程序，讓您更容易控制設定與傳回數值的方式。C# 和 Visual Basic 都允許您建立私用欄位來儲存屬性值，或是使用所謂的自動實作屬性，自動在幕後建立此欄位並提供屬性程序的基本邏輯。若要定義自動實作屬性：


C#VB




複製




class SampleClass
{
    public int SampleProperty { get; set; }
}




如果您需要執行某些額外作業來讀取和寫入屬性值，請定義用來儲存屬性值的欄位，並提供儲存和擷取這個欄位的基本邏輯：


C#VB




複製




class SampleClass
{
    private int _sample;
    public int Sample
    {
        // Return the value stored in a field.
        get { return _sample; }
        // Store the value in the field.
        set { _sample = value; }
    }
}




大部分屬性都具有方法或程序，可以設定及取得屬性值。 但是您可以建立唯讀或唯寫屬性來限制不得修改或讀取。 在 Visual Basic 中，您可以使用 ReadOnly 和 WriteOnly 關鍵字。 在 C# 中，則可以省略 get 或 set 屬性方法。 不過，在 Visual Basic 和 C# 中，自動實作的屬性都不可以是唯讀或唯寫。 如需詳細資訊，請參閱：Visual BasicProperty 陳述式Get 陳述式Set 陳述式 (Visual Basic)ReadOnly (Visual Basic)WriteOnly (Visual Basic)C#get (C# 參考)set (C# 參考)方法「方法」(Method) 是物件可執行的動作。註意事項在 Visual Basic 中，有兩個建立方法的方式：如果方法沒有傳回值，即使用 Sub 陳述式；如果有傳回值，則使用 Function 陳述式。若要定義類別的方法：


C#VB




複製




class SampleClass
{
    public int sampleMethod(string sampleParam)
    {
        // Insert code here
    }
}




類別可以有同一個方法的多個實作或「多載」(Overload)，但是這些實作的參數個數和參數型別並不相同。若要多載方法：


C#VB




複製




public int sampleMethod(string sampleParam) {};
public int sampleMethod(int sampleParam) {}




在多數情況下，您是在類別定義中宣告方法。 不過，Visual Basic 和 C# 也都支援「擴充方法」(Extension Method)，允許您在現有類別的實際定義之外將方法加入至類別。 如需詳細資訊，請參閱：Visual BasicFunction 陳述式 (Visual Basic)Sub 陳述式 (Visual Basic)Overloads (Visual Basic)擴充方法 (Visual Basic)C#方法 (C# 程式設計手冊)擴充方法 (C# 程式設計手冊)建構函式建構函式是類別方法，會在建立指定型別的物件時自動執行。 建構函式通常用來初始化新物件的資料成員， 而且只能在建立類別時執行一次。 此外，建構函式中的程式碼永遠會在類別中的任何其他程式碼執行之前執行。 不過，就和其他任何方法一樣，您可以建立多個建構函式多載。 若要定義類別的建構函式：


C#VB




複製




public class SampleClass
{
    public SampleClass()
    {
        // Add code here
    }
}




如需詳細資訊，請參閱：Visual BasicSub New物件存留期：物件的建立和終結 (Visual Basic)C#建構函式 (C# 程式設計手冊)解構函式解構函式是用來解構類別的執行個體。 在 .NET Framework 中，記憶體回收行程會自動管理應用程式中 Managed 物件的記憶體配置及釋放。 不過，您可能仍然需要解構函式來清除應用程式建立的任何 Unmanaged 資源。 一個類別只能有一個解構函式。 如需 .NET Framework 中有關解構函式和記憶體回收行程的詳細資訊，請參閱記憶體回收。事件事件可讓類別或物件在某些相關的事情發生時，告知其他類別或物件。 傳送 (或引發) 事件的類別稱為「發行者」(Publisher)，而接收 (或處理) 事件的類別則稱為「訂閱者」(Subscriber)。 如需事件以及如何引發和處理事件的詳細資訊，請參閱處理和引發事件。 Visual Basic若要宣告事件，請使用 Event 陳述式。若要引發事件，請使用 RaiseEvent 陳述式。若要以宣告的方式指定事件處理常式，請使用 WithEvents (Visual Basic) 陳述式和 Handles 子句 (Visual Basic) 子句。若要能夠動態地加入、移除及變更與事件相關聯的事件處理常式，請將 AddHandler 陳述式和 RemoveHandler 陳述式與 AddressOf 運算子 (Visual Basic)搭配使用。C#若要宣告類別中的事件，請使用 event (C# 參考) 關鍵字。要引發事件，請叫用事件委派。若要訂閱事件，請使用 += 運算子；若要取消訂閱事件，則使用 -= 運算子。巢狀類別在類別中定義的另一個類別即稱為「巢狀」(Nested) 類別。 巢狀類別預設為私用。 


C#VB




複製




class Container
{
    class Nested
    {
        // Add code here.
    }
}




若要建立巢狀類別的執行個體，請使用容器類別名稱，後面加上點號，再接著巢狀類別名稱，如下所示：


C#VB




複製




Container.Nested nestedInstance = new Container.Nested()




存取修飾詞與存取層級所有類別及類別成員都可以使用「存取修飾詞」(Access Modifier)，指定要提供給其他類別的存取層級。下列為可用的存取修飾詞：Visual Basic 修飾詞C# 修飾詞定義Public (Visual Basic)public型別或成員可由相同組件或參考該組件的另一個組件中的任何其他程式碼存取。Private (Visual Basic)private型別或成員只能由相同類別中的程式碼存取。Protected (Visual Basic)protected型別或成員只能由相同類別中，或是衍生類別中的程式碼存取。Friend (Visual Basic)internal型別或成員可由相同組件中的任何程式碼存取，但是不包括其他組件中的程式碼。Protected Friendprotected internal型別或成員可由相同組件中的任何程式碼，或是其他組件中的任何衍生類別存取。如需詳細資訊，請參閱 Visual Basic 中的存取層級和存取修飾詞 (C# 程式設計手冊)。執行個體化類別若要建立物件，您必須將類別執行個體化，或是建立類別執行個體。


C#VB




複製




SampleClass sampleObject = new SampleClass();




將類別執行個體化之後，您就可以將值指派給執行個體的屬性和欄位，並叫用類別方法。


C#VB




複製




// Set a property value.
sampleObject.sampleProperty = "Sample String";
// Call a method.
sampleObject.sampleMethod();




若要在類別執行個體化期間將值指派給屬性，請使用物件初始設定式：


C#VB




複製




// Set a property value.
SampleClass sampleObject = new SampleClass 
    { FirstProperty = "A", SecondProperty = "B" };




如需詳細資訊，請參閱：Visual BasicNew 運算子 (Visual Basic)物件初始設定式：具名和匿名型別 (Visual Basic)C#new 運算子 (C# 參考)物件和集合初始設定式 (C# 程式設計手冊)靜態 (共用) 類別與成員類別的靜態成員 (在 Visual Basic 中為共用成員) 是類別所有執行個體共用的屬性、程序或欄位。若要定義靜態 (共用) 成員：


C#VB




複製




static class SampleClass
{
    public static string SampleString = "Sample String";
}




若要存取靜態 (共用) 成員，請使用類別的名稱，但不要建立這個類別的物件：


C#VB




複製




Console.WriteLine(SampleClass.SampleString);




C# 中的靜態 (共用) 類別及 Visual Basic 中的模組只有靜態 (共用) 成員，而且無法執行個體化。 靜態 (共用) 成員也無法存取非靜態 (非共用) 屬性、欄位或方法 如需詳細資訊，請參閱：Visual BasicShared (Visual Basic)Module 陳述式C#static (C# 參考)匿名型別使用匿名型別建立物件時，您不需要撰寫資料型別的類別定義， 編譯器 (Compiler) 會自動幫您建立類別 (Class)。 這個類別沒有可使用的名稱，但是包含您在宣告物件時指定的屬性。 若要建立匿名型別的執行個體：


C#VB




複製




// sampleObject is an instance of a simple anonymous type.
var sampleObject = 
    new { FirstProperty = "A", SecondProperty = "B" };




如需詳細資訊，請參閱：Visual Basic：匿名型別 (Visual Basic)C#: 匿名型別 (C# 程式設計手冊)繼承繼承可讓您建立新類別以重複使用、擴充和修改其他類別中定義的行為。 成員被繼承的類別稱為「基底類別」(Base Class)，而繼承這種成員的類別即稱為「衍生類別」(Derived Class)。 不過，C# 及 Visual Basic 中的所有類別都隱含繼承自 Object 類別，這個類別支援 .NET 類別階層架構，並為所有類別提供低階服務。 註意事項.NET Framework 中的 Managed 語言不支援多重繼承，也就是說， 您只能為衍生類別指定一個基底類別。 若要繼承基底類別：


C#VB




複製




class DerivedClass:BaseClass{}




所有類別預設都可以被繼承。 不過，您可以指定類別是否不得當做基底類別，或是建立只能當做基底類別的類別。 若要指定類別不得當做基底類別使用：


C#VB




複製




public sealed class A { }




若要指定類別只能當做基底類別且無法執行個體化：


C#VB




複製




public abstract class B { }




如需詳細資訊，請參閱：Visual BasicInherits 陳述式NotInheritable (Visual Basic)MustInherit (Visual Basic)C#sealed (C# 參考)abstract (C# 參考)覆寫成員衍生類別預設會從其基底類別繼承所有成員。 如果想要變更所繼承成員的行為，您必須覆寫這個成員。 也就是說，您可以定義衍生類別中方法、屬性或事件的新實作。 下列修飾詞是用來控制如何覆寫屬性及方法：Visual Basic 修飾詞C# 修飾詞定義Overridable (Visual Basic)virtual (C# 參考)允許在衍生類別中覆寫類別成員。Overrides (Visual Basic)override (C# 參考)覆寫在基底類別中定義的虛擬 (可覆寫) 成員。NotOverridable (Visual Basic)不支援防止在繼承的類別中覆寫成員。MustOverride (Visual Basic)abstract (C# 參考)要求在衍生類別中覆寫類別成員。Shadows (Visual Basic)new 修飾詞 (C# 參考)隱藏繼承自基底類別的成員。介面介面就像類別，可定義屬性、方法和事件集。 但與類別不同的是，介面並不提供實作。 介面是由類別實作，並定義為與類別不同的實體。 介面就代表著一種合約，因為實作介面的類別必須完全依介面的定義來實作這個介面的各個方面。 若要定義介面：


C#VB




複製




interface ISampleInterface
{
    void doSomething();
}




若要在類別中實作介面：


C#VB




複製




class SampleClass : ISampleInterface
{
    void ISampleInterface.SampleMethod()
    {
        // Method implementation.
    }
}




如需詳細資訊，請參閱：Visual Basic介面 (Visual Basic)Interface 陳述式 (Visual Basic)Implements 陳述式C#介面 (C# 程式設計手冊)interface (C# 參考)泛型.NET Framework 中的類別、結構、介面和方法可以具有「型別參數」(Type Parameter)，這些參數會定義可儲存或使用之物件的型別。 泛型最常見的範例是集合，您可以在其中指定要儲存於集合之物件的型別。 若要定義泛型類別：


C#VB




複製




Public class SampleGeneric<T> 
{
    public T Field;
}




若要建立泛型類別的執行個體：


C#VB




複製




SampleGeneric<string> sampleObject = new SampleGeneric<string>();
sampleObject.Field = "Sample string";




如需詳細資訊，請參閱：.NET Framework 中的泛型Visual Basic 中的泛型型別 (Visual Basic)泛型 (C# 程式設計手冊)委派「委派」(Delegate) 是定義方法簽章的型別，可以提供任何具有相容簽章之方法的參考。 您可以透過委派叫用 (Invoke) 或呼叫方法。 委派可以用來將方法當做引數傳遞給其他方法。 註意事項事件處理常式就是透過委派叫用的方法。 如需將委派用於事件處理的詳細資訊，請參閱事件和委派。 若要建立委派：


C#VB




複製




public delegate void SampleDelegate(string str);




若要建立與委派所指定簽章相符之方法的參考：


C#VB




複製




class SampleClass
{
    // Method that matches the SampleDelegate signature.
    public static void sampleMethod(string message)
    {
        // Add code here.
    }
    // Method that instantiates the delegate.
    void SampleDelegate()
    {
        SampleDelegate sd = sampleMethod;
        sd("Sample string");
    }
}




如需詳細資訊，請參閱：Visual Basic委派 (Visual Basic)Delegate 陳述式AddressOf 運算子 (Visual Basic)C#委派 (C# 程式設計手冊)delegate (C# 參考)請參閱概念C# 程式設計手冊其他資源Visual Basic 程式設計手冊






社群新增項目


                        新增
                    








顯示:

受繼承
        

受保護
        







列印

匯出 (0)
            







列印

分享
            













本文內容




















本頁對您有幫助嗎？
是
否





其他意見反應？


剩餘 1500 個字元

提交
略過此項







謝謝！
我們非常感謝您提供的意見反應。










© 2017 Microsoft









物件導向程式設計第二組 by Cheng Xiang Yang on PreziCreateExploreLearn & supportGet startedLog inPricingGet startedLog inMy PrezisExploreLearn & supportProductCompanyCareersSupportCommunityContactAppsEnglishEspañol한국어日本語DeutschPortuguêsFrançaisMagyarItaliano×Houston, we have a problem!Oops. A firewall is blocking access to Prezi content. Check out this article to learn more or contact your system administrator.
            Stand out and be remembered with Prezi,  
            the secret weapon of great presenters.
        
                    Get started today
                
                    Get started
                
            What is Prezi?
            
                Learn more
            
                Loading presentation...
            
        You’re using the new, improved player. You can always go back to the old viewer.
    Switch back
            
                
                    Public
                
            
            
                & reusable
            
        
            Create your own
        
                    Make a copy
                
    Share

        Embed
    
                Liked
            
                Like
            Present Remotely Send the link below via email or IMCopy Present to your audienceStart remote presentationInvited audience members will follow you as you navigate and presentPeople invited to a presentation do not need a Prezi accountThis link expires 10 minutes after you close the presentationA maximum of 30 users can follow your presentationLearn more about this feature in our knowledge base article
    Do you really want to delete this prezi?

    Neither you, nor the coeditors you shared it with will be able to recover it again.
DeleteCancelMake your likes visible on Facebook?
        Connect your Facebook account to Prezi and let your likes appear on your timeline.
        You can change this under Settings & Account at any time.
    No, thanksConnect with Facebook物件導向程式設計第二組
                            
                                No description
                            
                        
        
            by Cheng Xiang Yang
        
        on 15 December 2013
    TweetComments (0)
                                    Please log in to add your comment.
                                Report abuseTranscript of 物件導向程式設計第二組物件導向程式設計工作分配時間表遊戲設計黃威-資料蒐集陳明傑-程式核心演算法方傑-核心開發郭恩豪-DOC報告撰寫戴銘伸-程式Debug張偉宏-簡報撰寫楊承翔-專案記錄生活記事許維倫-圖表製作l.拉霸2.賽馬3.五子棋組員名單400420050黃威400420026陳明傑400420038方傑400420060許維倫400420020楊承翔400420036戴銘伸400420008張偉宏400510051郭恩豪目的這個程式能夠幫我們統整許多的遊戲方便我們搜尋，學習如何運用c++寫小遊戲，激起我們對程式的熱情，使我們在學習的過程中能夠邊學習邊成長，對我們往後學習程式更能得心應手。第二組我們需要一個介面去統整許多的小遊戲，在寫這個程式的過程中我們會運用到OPEN GL製作按鈕，使每個按鈕能夠連結到各款遊戲，讓我們的程式具有完整性。前言動機小時候有很多GAME BOY的卡帶，裡面有各式各樣的小遊戲，讓我們愛不釋手，但是往往想玩某款遊戲的時候卻發現找不到該款遊戲的檔案在哪?浪費許多的時間去找尋，因此我們想到將每個人喜愛的遊戲統整在一起，形成一個最愛的遊戲室就如同電腦裡的遊樂場。End~Full transcriptMore presentations by
    
        
            Cheng Xiang Yang
        Final Project ofObject-Oriented Progra...Untitled PreziUntitled Prezi
            More prezis by author
        Popular presentationsSee more popular or the latest prezisPreziProductGalleryThe ScienceConversational PresentingFor BusinessTestimonialsCompanyAboutTeamCareersOur ValuesPressOur CustomersContact UsLanguages
                    English
                
                    Español
                
                    한국어
                
                    日本語
                
                    Deutsch
                
                    Português
                
                    Français
                
                    Magyar
                
                    Italiano
                InfogramChartsInfographicsSupportPrezi Next SupportPrezi Classic SupportBlog18 July 2017The Presentation Remote That’s Always in Your Pocket17 July 2017On-Demand Webinar: How to Design Conversational Presentations Like an Expert11 July 2017Free Download: How to Create a Sales Presentation That Closes DealsSee all© 2017 Prezi Inc. TermsPreziProductGalleryThe ScienceConversational PresentingFor BusinessTestimonialsInfogramInfogramChartsInfographicsCompanyAboutTeamCareersOur ValuesPressOur CustomersContact UsSupportPrezi Next SupportPrezi Classic SupportLanguages
                                English
                            
                                Español
                            
                                한국어
                            
                                日本語
                            
                                Deutsch
                            
                                Português
                            
                                Français
                            
                                Magyar
                            
                                Italiano
                            © 2017 Prezi Inc. TermsConnect your Facebook account to Prezi and publish your likes in the future. OkNo, thanks
物件導向程式設計 - DcardDcard全部分類看板新生季健身BL感情女孩美妝穿搭追星運動有趣汽機車彩虹靈異星座美食寵物手作時事閒聊心情電影戲劇綜藝音樂動漫遊戲男孩寶可夢攝影3C工作旅遊書籍語言留學詩文考試課程西斯Dcard廢文校園看板臺灣大學政治大學交通大學淡江大學東華大學成功大學北科大輔仁大學師範大學高雄師範大學彰化師範大學中央大學逢甲大學清華大學暨南大學東海大學高雄第一科大台科大中興大學元智大學聯合大學海洋大學中山大學臺北大學中央警察大學中正大學實踐大學陽明大學臺灣藝術大學世新大學臺北教育大學臺北藝術大學臺北市立大學文化大學東吳大學嘉義大學高雄大學中科大國北護義守大學長庚大學臺北醫學大學中原大學中山醫學大學文藻外語大學高應大長庚科大勤益科大銘傳大學宜蘭大學虎尾科大新竹教育大學大同大學臺北商業大學臺中教育大學屏東大學靜宜大學高雄海洋科大朝陽科大國防大學南臺科大高雄餐旅大學中國醫藥大學長榮大學屏科大明志科大亞洲大學健行科大樹德科技大學真理大學嘉南藥理大學高雄醫學大學明新科技大學臺東大學臺南應用科大金門大學大葉大學南華大學嶺東科大輔英科技大學中國科大慈濟科技大學慈濟大學致理科技大學開南大學弘光科技大學臺南大學中華大學德明財經科大景文科大龍華科技大學國立雲林科技大學正修科大遠東科大吳鳳科大中臺科大國立澎湖科技大學崑山科大中華醫事科技大學臺灣體育運動大學僑光科技大學醒吾科技大學環球科技大學華梵大學佛光大學萬能科大亞東技術學院經國管理暨健康學院建國科大東南科大南開科大聖約翰科大明道大學美和科大臺南藝術大學康寧大學育達科大高苑科大中華科大元培醫事科大國立體育大學大仁科大台灣首府大學玄奘大學南榮科大中州科大華夏科大修平科大大華科大臺北城市科大馬偕醫學院德霖技術學院臺北海洋技術學院南亞技術學院臺灣戲曲學院黎明技術學院稻江科技暨管理學院和春技術學院法鼓文理學院亞太創意技術學院臺灣觀光學院大漢技術學院蘭陽技術學院崇右技術學院東方設計學院大同技術學院聖母醫護管理專科學校康寧醫護暨管理專科學校耕莘健康管理專科學校國立臺南護理專科學校新生醫護管理專科學校高美醫護管理專科學校仁德醫護管理專科學校崇仁醫護管理專科學校馬偕醫護管理專科學校敏惠醫護管理專科學校樹人醫護管理專科學校育英醫護管理專科學校慈惠醫護管理專科學校國防醫學院中華民國陸軍專科學校臺灣警察專科學校高雄第一科大物件導向程式設計閒聊2014年9月14日 13:04關於各校開的"物件導向程式設計"大約是怎麼樣的內容呢?感覺上都是學習JAVA.....不過沒學過C就去學JAVA能聽得懂??共 26 則回應高雄第一科大B12014年9月14日 13:070能聽得懂，上課好好聽就對了!!  哈哈加油吧~世新大學B22014年9月14日 13:090我這學期也剛開始碰JAVA我們一起加油吧!:))原PO - 高雄第一科大 B32014年9月14日 13:120B1 我轉學到世新了，然後懶得換帳號用這個B2 你是資管系資管組的嗎?國立交通大學 電控工程研究所B42014年9月14日 13:151JAVA是以物件導向的架構來寫程式沒錯(class)但是語法上又和C++的物件導向有些不同像我們學校電機系大學部,物件導向程式設計和JAVA程式設計是不同的兩門課基本上要先學C++的物件導向,瞭解class的寫法,繼承,polymorphism(多型)等等觀念再來學JAVA 會比較輕鬆原PO - 高雄第一科大 B52014年9月14日 13:180B4 感謝你詳細的說明不過我以前只學過VB而已 = =世新大學 資訊管理學系B62014年9月14日 13:210哈哈，修金玲姐的課？她還算教的可以的老師～國立臺灣大學 電機工程學系B72014年9月14日 13:212物件導向就是一堆extend(繼承)沒學過C沒差，其實還有人說C比JAVA還難原PO - 高雄第一科大 B82014年9月14日 13:220B6 好像是喔世新大學 資訊管理學系B92014年9月14日 13:241真的假的!?物件導向......猜你二年級?0 0可惜我不是資管組的喔~但我也是修金玲的xD話說我都匿名了還被發現真是......原PO - 高雄第一科大 B102014年9月14日 13:340B9 明天上課會碰到嗎??世新大學 資訊管理學系B112014年9月14日 13:430哈哈說不定會喔而且還坐旁邊?:)PS. 98?  206?世新大學 資訊管理學系B122014年9月14日 13:470感覺B１１應該不是二年級吧？最近也在寫java的說～原PO - 高雄第一科大 B132014年9月14日 13:510B11 我學號結尾剛好206~世新大學 資訊管理學系B142014年9月14日 13:540B12 這我就不能說了繫上蠻少人用Dcard再說就要露餡囉~B13 哼哼(得意臺灣藝術大學B152014年9月14日 14:080覺得物導還好耶因為我一開始就是從物件導向程式入手C++  C#  JAVA但寫一寫之後就會覺得自己沒有從C開始學 反而基礎不好因為JAVA那些很多都包好了 反而不知道內部是怎麼一回事國立政治大學 資訊科學系B162014年9月14日 14:472物件導向不難學，但是出社會後，很多人寫的程式根本就沒有物件導向概念。真正有物件導向的程式碼，讀起來相當精簡俐落的~然而，學物件導向的核心並不在完全瞭解繼承、多型那些功能，這些都是錶面的，而是在於所運算的資料，程式的子功能，用物件的想法來思考時，會很好寫，很容易維護，更容易擴充，這個是書上比較不會告訴你的經驗~逢甲大學 通訊工程學系B172014年9月14日 15:241說到C  它最重要的部分就是指標啦JAVA 說真的使用上會超級感覺不到指標的概念XD所以我覺得學C再碰JAVA 感覺比較全面一點世新大學 資訊管理學系B182014年9月15日 00:410那我只好默默點開網頁原始碼和wireshark?XDD好啦~開玩笑的ˊ_>ˋ那就等抽到卡嚕~我都老屁股了,露餡也沒差ㄅ~世新大學 資訊管理學系B192014年9月15日 05:110B18 「剛開始碰JAVA」—>很明顯耶～世新大學 資訊管理學系B202014年9月15日 05:420恩齁~學妹安安!!原PO - 高雄第一科大 B212014年9月15日 06:530我現在在世新的S404~這則回應已被本人刪除B222014年9月15日 07:03已經刪除的內容就像 Dcard 一樣，錯過是無法再相見的！世新大學 資訊管理學系B232014年9月15日 11:350B20 學長哪一組的？@@B21 我剛剛也在啊可惜知道學號不知道人～你是今天挑戰的那個嗎？世新大學 資訊管理學系B242014年9月15日 12:140跟你不同組，我資管組！原PO - 高雄第一科大 B252014年9月17日 13:120b24 我也資管組....世新大學 資訊管理學系B262014年9月17日 13:230嗯哼～看的出來～好好學杯～馬上回應搶第 27 樓...0260服務條款常見問題問題回報徵才商業合作閒聊板 - DcardDcard全部分類看板新生季健身BL感情女孩美妝穿搭追星運動有趣汽機車彩虹靈異星座美食寵物手作時事閒聊心情電影戲劇綜藝音樂動漫遊戲男孩寶可夢攝影3C工作旅遊書籍語言留學詩文考試課程西斯Dcard廢文校園看板臺灣大學政治大學交通大學淡江大學東華大學成功大學北科大輔仁大學師範大學高雄師範大學彰化師範大學中央大學逢甲大學清華大學暨南大學東海大學高雄第一科大台科大中興大學元智大學聯合大學海洋大學中山大學臺北大學中央警察大學中正大學實踐大學陽明大學臺灣藝術大學世新大學臺北教育大學臺北藝術大學臺北市立大學文化大學東吳大學嘉義大學高雄大學中科大國北護義守大學長庚大學臺北醫學大學中原大學中山醫學大學文藻外語大學高應大長庚科大勤益科大銘傳大學宜蘭大學虎尾科大新竹教育大學大同大學臺北商業大學臺中教育大學屏東大學靜宜大學高雄海洋科大朝陽科大國防大學南臺科大高雄餐旅大學中國醫藥大學長榮大學屏科大明志科大亞洲大學健行科大樹德科技大學真理大學嘉南藥理大學高雄醫學大學明新科技大學臺東大學臺南應用科大金門大學大葉大學南華大學嶺東科大輔英科技大學中國科大慈濟科技大學慈濟大學致理科技大學開南大學弘光科技大學臺南大學中華大學德明財經科大景文科大龍華科技大學國立雲林科技大學正修科大遠東科大吳鳳科大中臺科大國立澎湖科技大學崑山科大中華醫事科技大學臺灣體育運動大學僑光科技大學醒吾科技大學環球科技大學華梵大學佛光大學萬能科大亞東技術學院經國管理暨健康學院建國科大東南科大南開科大聖約翰科大明道大學美和科大臺南藝術大學康寧大學育達科大高苑科大中華科大元培醫事科大國立體育大學大仁科大台灣首府大學玄奘大學南榮科大中州科大華夏科大修平科大大華科大臺北城市科大馬偕醫學院德霖技術學院臺北海洋技術學院南亞技術學院臺灣戲曲學院黎明技術學院稻江科技暨管理學院和春技術學院法鼓文理學院亞太創意技術學院臺灣觀光學院大漢技術學院蘭陽技術學院崇右技術學院東方設計學院大同技術學院聖母醫護管理專科學校康寧醫護暨管理專科學校耕莘健康管理專科學校國立臺南護理專科學校新生醫護管理專科學校高美醫護管理專科學校仁德醫護管理專科學校崇仁醫護管理專科學校馬偕醫護管理專科學校敏惠醫護管理專科學校樹人醫護管理專科學校育英醫護管理專科學校慈惠醫護管理專科學校國防醫學院中華民國陸軍專科學校臺灣警察專科學校閒聊發文理財醫療法律狄卡  置頂[公告]閒聊版請勿當成你的FB！！！閒聊版請勿當成你的FB！
閒聊版請勿當成你的FB！
閒聊版請勿當成你的FB！

為什麼就是有人看不懂...
閒聊版已經置頂說明瞭
供閒聊、討論、分享、詢問各種有內容(包含創作)的話題、人、事、物
標題







853收藏96 則回應A水晶寶寶關於風度這件事＃難得認真一下嗨 大家好 我是水晶寶寶，不過今天這篇文可能會比較不一樣，稍微在這篇文改一下風格，不過放心下一篇又會恢復了，所以不習慣正經風格的朋友們可以忽視這則貼文，，我不久前發了一篇純屬靠北的Q&A，說真的，我真的沒有想到會有那麼多愛心跟回復







1305收藏117 則回應帕森斯藝術學院#長文「美國，我待不下去了」：外國的月亮比較圓，那月亮的陰暗面呢？「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







45收藏19 則回應國立成功大學 材料科學及工程學系沒進取 哪裡都可能待不下去「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







35收藏4 則回應國立中正大學鬼島好不好不重要「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







31收藏14 則回應AFish🐳LINE新圖案之男友好創意今天才發現LINE可以這樣用，今天男友說我可以賴床久一點，然後⋯⋯，無聊情侶檔







29收藏4 則回應P🐼gary#圖  勵志的小故事匪夷所思的黑白豬與髮線與不對稱雙馬尾🤷️，（我那時候到底誰給的勇氣用這個造型去拍畢冊啊？靜茹4ni嗎？🤔），我是不是出生的時候臉不小心先著地🤷️？？？那個長*寬不太科學吧？以上，是我國小的時候。







28收藏4 則回應中臺科技大學 應用外語系Line的內建新符號不知道有沒有人發現，賴的內建表情符號多了四組超～～可愛的英文字母跟符號，第一種 黑框正楷款，第二種 有點像word裡面c開頭的那種字體 最喜歡這個，第三種 有點像果凍 看起來好像很好吃？第四種 黑框果凍款







23收藏13 則回應高雄第一科大 應用日語學系好大的一圓以前家裡面總喜歡亂翻東西，當時發現了一個好大的一圓，不過礙於小時候完全沒註意看這個是什麼，就被封存起來，直到昨天爸爸不知道為什麼又拿了出來，於是乎發現了他的正面有寫他的生世（？是日本明治時期的硬幣！！！







21收藏5 則回應中正大學某網紅強勢回歸不多說 直接上圖，翻譯：不管拉再多封鎖線我還是要進去禁區拍照。希望不要創禁區拍照發生意外 被說網路霸凌想不開 wwwww，請對自己的作品負責 也對你的粉絲負責，不要闖禁區 不要破壞別人的藝術品，想紅還有別的方式紅







19收藏6 則回應正修科技大學 建築與室內設計系路上遇到精神病患者被攻擊到底可以怎麼辦?今天下午大概3點多時在小七爽快的吃著一根冰棒，在滑手機的時候瞄到旁邊有一位阿婆好像在找座位的樣子，當下是感覺她只是個收回收的阿婆，（無貶義，就是身上髒髒的，然後步履蹣跚，不一定所有這樣的人都是收回收的，請原諒我的成見，以及拙劣的形容能力）







19收藏8 則回應英屬哥倫比亞理工學院「台灣, 我待得很舒服啊」相信許多人都看到了 ［台灣， 我待不下去了］ 的這篇文，而對於該文的見解和經歷對於一個也是在海外念書成長的我來說確實如此，沒什麼好反駁的餘地.，只是， 凡事都有著兩面， 對於如此潦倒的台灣來說在我的眼裡看到的卻是無限的機會， 而機會不但是給準備好的人， 也是給懂得使用的人.







17收藏7 則回應國立嘉義大學木曜4超玩是我目前最喜歡看的台灣綜藝了之前在youtube熱門看到木曜4超玩的一日7-11員工系列就點進去看，沒想到一看就一去不復返（？）（阿我只想的到這個怪怪的形容詞啦），尤其是他們的一日系列，整個就超好看的啦！而且拍攝手法很新穎不輸其他台灣youtuber，後製也很用心，製作團隊也很厲害，主持人的互動也很好笑，真心希望這樣優質的節目可以被更多人知道（或許也很多人知道了哈哈）







17收藏5 則回應台灣首府大學一個飯店餐飲經理有必要這麼大的官威嗎我們只是實習生而已 薪水也就21009，做的卻是比薪水高的多 工作量跟薪水是成反比，外場人手非常不足 開餐忙成怎樣也沒看到 打電話來沒有人發現 就說不接電話是怎樣 要外場人員全部加班一小時 那就算了 還說不准報加班 當我們免費勞工給妳糟蹋的嗎？？







17收藏6 則回應臺南應用科大（文長）希望能改變風氣「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







15收藏6 則回應國立臺灣大學 化學研究所Re:台灣從來不缺批評 只缺願意改變的年輕人「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







14收藏3 則回應環球科技大學 財務金融系如果臺灣環境好  誰願意離開自己家?（文長慎入）「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







13收藏3 則回應國立臺灣大學遇到醜男的反應我天生就長得一副癡獃醜男樣，我國中有一次在圖書館裡走動的時候，迎面碰到年紀跟我相當的兩個女生，那時候不小心和其中一個對到眼，只聽見她對另一個女生小小聲地笑著說：欸他長好醜喔，他們就這樣笑著從我旁邊走過







12收藏7 則回應DThe A TeamGoogle翻譯的妓女？剛剛有個應該是盜帳號的加我fb，看她大頭貼描述，幹你是用google翻譯吧？







12收藏5 則回應美和科大 護理系國考最後倒數階段發國考，他不給我發考試版，因為要什麼轉學考等等我看不懂，所以發在閒聊，若發錯的話就多多包含，以下正文開始-----------------------------，關於我正在準備的護理師國考，今天邁入倒數9天







12收藏18 則回應S許小新#圖 按正妹粉絲團就膚淺🤔半夜閒來無事只好上woo玩玩，剛好遇到這麼樣一個問題，如圖，好吧其實我不覺得男生按正妹粉絲團就會怎樣，畢竟女生也會看帥哥啊哈哈，美的事物是大家都喜歡欣賞的哈哈，不過剛剛遇到的妹子好像很care素質問題🤔







11收藏8 則回應弘光科技大學菜瑞雪讓我看到台灣人的健忘看到很多人在黑菜瑞雪，然後就會有一堆人跳出來護航，但……他為什麼會被討厭？很多人說他沒實力沒目標 沒在努力，但……我最印象深刻是這篇，最近黑他的留言好像沒什麼人提到這件事，這才是我討厭他的原因啊！！







11收藏6 則回應樹德科技大學大家暑假會每天洗澡嗎？我：唉痾你頭好油哦，沒洗頭，髒鬼，妹：閉嘴，沒洗澡的，還敢講我，暑假最開心的事，就是不用每天洗澡，最高記錄是兩天不洗澡，洗澡完的隔天一定不會踏出家門，這樣才可以撐到兩天再洗澡，外面的世界太熱太可怕了，有時候朋友突然臨時約要喝下午茶







11收藏13 則回應E嗚夫哇哇哇歐薩斯小朋友  要請警察來還是我告你?暑假接了個籃球營   四天的行程順順的過去，除了小朋友幾個比較皮  其它都超乖的，但回家前發生一件傻眼的事，一個家長突然對著我們暴怒（當下只有我 康輔姐跟另一個教練），原來是她的孩子來告狀說有人揍他（因為事情發生在活動結束要回去的時候  然後被揍的又沒來跟我們講自己被欺負  我們根本不知道有這回事）







11收藏8 則回應元智大學網路紅人被酸..只要是網路紅人被酸，採用封鎖、刪留言的方式就會被罵「想當公眾人物就會被批評」、「怎麼這麼玻璃心」、「只喜歡看好的留言，不好的批評都不能接受」但用在蔡依林身上，變成了「霸氣」，換個人，待遇就不同了，（來源：line today）







10收藏3 則回應淡江大學抽煙的人進來看一下我沒有要講抽煙不好，你抽你的我沒差，但是！！！，你們到底多沒常識煙蒂不能亂丟？？！，我隨便走在路上統計過，平均10個在路邊抽煙的大概就有9個，抽完就往地上丟跟水溝扔，真的看不下去，難道抽煙的人都是沒有常識跟sense的嗎







10收藏9 則回應國立臺北護理健康大學公主病？？？嗯因爲我在新光三越上班，所以下班都要算錢然後繳帳，剛剛在等繳帳的時候聽到前面的人在聊天，一個其他店的店員跟他的朋友 （一對情侶），然後他們好像在聊一個女生吧，說那個女生沒有分手就亂搞，還有公主病之類的







9收藏3 則回應龍華科技大學女孩們都該註意月經後的分泌物~ 男孩快告訴女友們吧！各位卡友們安，因為第一次發文，不知道要發哪版，就選擇了閒聊，我是用閃的帳號發文的~，接下來的內容希望各位女性與男性能多加註意！，前幾個月子宮會不時的抽痛，行房後也會痛，但是不會是每次都有這樣，所以忽視掉，也沒跟閃說。







8收藏1 則回應世新大學Re: 台灣，我待不下去了「台灣，我待不下去了」：這是個讓年輕人看不見希望的社會 文長慎入…







8收藏10 則回應實踐大學乾乾的？濕濕的？我   男友，（買宵夜中），要不要吃炸薯條？嗯⋯不要好了，（驚訝）你不是最愛炸薯條？我現在很渴，等等去711買熱狗跟飲料就好，渴跟薯條有什麼關係？薯條很乾，熱狗比較濕，熱狗比較濕？熱狗比較濕？熱狗比較濕？







8收藏4 則回應服務條款常見問題問題回報徵才商業合作物件導向程式設計 - DcardDcard全部分類看板新生季健身BL感情女孩美妝穿搭追星運動有趣汽機車彩虹靈異星座美食寵物手作時事閒聊心情電影戲劇綜藝音樂動漫遊戲男孩寶可夢攝影3C工作旅遊書籍語言留學詩文考試課程西斯Dcard廢文校園看板臺灣大學政治大學交通大學淡江大學東華大學成功大學北科大輔仁大學師範大學高雄師範大學彰化師範大學中央大學逢甲大學清華大學暨南大學東海大學高雄第一科大台科大中興大學元智大學聯合大學海洋大學中山大學臺北大學中央警察大學中正大學實踐大學陽明大學臺灣藝術大學世新大學臺北教育大學臺北藝術大學臺北市立大學文化大學東吳大學嘉義大學高雄大學中科大國北護義守大學長庚大學臺北醫學大學中原大學中山醫學大學文藻外語大學高應大長庚科大勤益科大銘傳大學宜蘭大學虎尾科大新竹教育大學大同大學臺北商業大學臺中教育大學屏東大學靜宜大學高雄海洋科大朝陽科大國防大學南臺科大高雄餐旅大學中國醫藥大學長榮大學屏科大明志科大亞洲大學健行科大樹德科技大學真理大學嘉南藥理大學高雄醫學大學明新科技大學臺東大學臺南應用科大金門大學大葉大學南華大學嶺東科大輔英科技大學中國科大慈濟科技大學慈濟大學致理科技大學開南大學弘光科技大學臺南大學中華大學德明財經科大景文科大龍華科技大學國立雲林科技大學正修科大遠東科大吳鳳科大中臺科大國立澎湖科技大學崑山科大中華醫事科技大學臺灣體育運動大學僑光科技大學醒吾科技大學環球科技大學華梵大學佛光大學萬能科大亞東技術學院經國管理暨健康學院建國科大東南科大南開科大聖約翰科大明道大學美和科大臺南藝術大學康寧大學育達科大高苑科大中華科大元培醫事科大國立體育大學大仁科大台灣首府大學玄奘大學南榮科大中州科大華夏科大修平科大大華科大臺北城市科大馬偕醫學院德霖技術學院臺北海洋技術學院南亞技術學院臺灣戲曲學院黎明技術學院稻江科技暨管理學院和春技術學院法鼓文理學院亞太創意技術學院臺灣觀光學院大漢技術學院蘭陽技術學院崇右技術學院東方設計學院大同技術學院聖母醫護管理專科學校康寧醫護暨管理專科學校耕莘健康管理專科學校國立臺南護理專科學校新生醫護管理專科學校高美醫護管理專科學校仁德醫護管理專科學校崇仁醫護管理專科學校馬偕醫護管理專科學校敏惠醫護管理專科學校樹人醫護管理專科學校育英醫護管理專科學校慈惠醫護管理專科學校國防醫學院中華民國陸軍專科學校臺灣警察專科學校高雄第一科大物件導向程式設計閒聊2014年9月14日 13:04關於各校開的"物件導向程式設計"大約是怎麼樣的內容呢?感覺上都是學習JAVA.....不過沒學過C就去學JAVA能聽得懂??共 26 則回應高雄第一科大B12014年9月14日 13:070能聽得懂，上課好好聽就對了!!  哈哈加油吧~世新大學B22014年9月14日 13:090我這學期也剛開始碰JAVA我們一起加油吧!:))原PO - 高雄第一科大 B32014年9月14日 13:120B1 我轉學到世新了，然後懶得換帳號用這個B2 你是資管系資管組的嗎?國立交通大學 電控工程研究所B42014年9月14日 13:151JAVA是以物件導向的架構來寫程式沒錯(class)但是語法上又和C++的物件導向有些不同像我們學校電機系大學部,物件導向程式設計和JAVA程式設計是不同的兩門課基本上要先學C++的物件導向,瞭解class的寫法,繼承,polymorphism(多型)等等觀念再來學JAVA 會比較輕鬆原PO - 高雄第一科大 B52014年9月14日 13:180B4 感謝你詳細的說明不過我以前只學過VB而已 = =世新大學 資訊管理學系B62014年9月14日 13:210哈哈，修金玲姐的課？她還算教的可以的老師～國立臺灣大學 電機工程學系B72014年9月14日 13:212物件導向就是一堆extend(繼承)沒學過C沒差，其實還有人說C比JAVA還難原PO - 高雄第一科大 B82014年9月14日 13:220B6 好像是喔世新大學 資訊管理學系B92014年9月14日 13:241真的假的!?物件導向......猜你二年級?0 0可惜我不是資管組的喔~但我也是修金玲的xD話說我都匿名了還被發現真是......原PO - 高雄第一科大 B102014年9月14日 13:340B9 明天上課會碰到嗎??世新大學 資訊管理學系B112014年9月14日 13:430哈哈說不定會喔而且還坐旁邊?:)PS. 98?  206?世新大學 資訊管理學系B122014年9月14日 13:470感覺B１１應該不是二年級吧？最近也在寫java的說～原PO - 高雄第一科大 B132014年9月14日 13:510B11 我學號結尾剛好206~世新大學 資訊管理學系B142014年9月14日 13:540B12 這我就不能說了繫上蠻少人用Dcard再說就要露餡囉~B13 哼哼(得意臺灣藝術大學B152014年9月14日 14:080覺得物導還好耶因為我一開始就是從物件導向程式入手C++  C#  JAVA但寫一寫之後就會覺得自己沒有從C開始學 反而基礎不好因為JAVA那些很多都包好了 反而不知道內部是怎麼一回事國立政治大學 資訊科學系B162014年9月14日 14:472物件導向不難學，但是出社會後，很多人寫的程式根本就沒有物件導向概念。真正有物件導向的程式碼，讀起來相當精簡俐落的~然而，學物件導向的核心並不在完全瞭解繼承、多型那些功能，這些都是錶面的，而是在於所運算的資料，程式的子功能，用物件的想法來思考時，會很好寫，很容易維護，更容易擴充，這個是書上比較不會告訴你的經驗~逢甲大學 通訊工程學系B172014年9月14日 15:241說到C  它最重要的部分就是指標啦JAVA 說真的使用上會超級感覺不到指標的概念XD所以我覺得學C再碰JAVA 感覺比較全面一點世新大學 資訊管理學系B182014年9月15日 00:410那我只好默默點開網頁原始碼和wireshark?XDD好啦~開玩笑的ˊ_>ˋ那就等抽到卡嚕~我都老屁股了,露餡也沒差ㄅ~世新大學 資訊管理學系B192014年9月15日 05:110B18 「剛開始碰JAVA」—>很明顯耶～世新大學 資訊管理學系B202014年9月15日 05:420恩齁~學妹安安!!原PO - 高雄第一科大 B212014年9月15日 06:530我現在在世新的S404~這則回應已被本人刪除B222014年9月15日 07:03已經刪除的內容就像 Dcard 一樣，錯過是無法再相見的！世新大學 資訊管理學系B232014年9月15日 11:350B20 學長哪一組的？@@B21 我剛剛也在啊可惜知道學號不知道人～你是今天挑戰的那個嗎？世新大學 資訊管理學系B242014年9月15日 12:140跟你不同組，我資管組！原PO - 高雄第一科大 B252014年9月17日 13:120b24 我也資管組....世新大學 資訊管理學系B262014年9月17日 13:230嗯哼～看的出來～好好學杯～馬上回應搶第 27 樓...0260服務條款常見問題問題回報徵才商業合作

物件導向程式設計Ａ組 - Jessie's office
































Jessie's office
首頁作業系統物件導向程式設計Ａ組Android app 範例講義ANDROID SDK 安裝教學顧客關係管理課程與作業公告上課投影片授課計畫表OCPJP國際程式設計能力證照 上課程式碼範例下載OCPJP 講師研習課程報名登記購買考試捲








相關課程資訊請至東吳資管BBS物件導向程式設計課程討論版


前往












Create a free website

			Powered by 




















✕



