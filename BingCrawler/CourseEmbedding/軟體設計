


軟體設計 - 維基百科，自由的百科全書






























 







軟體設計

維基百科，自由的百科全書


					前往：					導覽，					搜尋








軟體開發過程


核心行動




需求分析
軟體設計
軟體構造（英語：Software construction）
軟體測試
偵錯
軟體部署（英語：Software deployment）
軟體維護




軟體開發模式




軟體工程
瀑布模型
淨室（英語：Cleanroom software engineering）
疊代建模（英語：Incremental build model）
螺旋模型
V模型（英語：V-Model (software development)）
敏捷軟體開發




方法和框架




軟體原型（英語：Software prototyping）
快速應用程式開發（RAD）
統一流程（英語：Unified Process）
極限編程
團隊軟體流程（英語：Team software process）
個人軟體程式
動態系統開發方法（英語：Dynamic systems development method）
MSF（英語：Microsoft Solutions Framework）
Scrum
看板 (軟體開發)
Dual Vee Model（英語：Dual Vee Model）
測試驅動開發
ATDD（英語：Acceptance test–driven development）
行為驅動開發
FDD（英語：Feature-driven development）
DDD（英語：Domain-driven design）
MDD（英語：Model-driven_development）
疊代式開發
精益軟體開發
DevOps




軟體開發輔助領域




軟體配置管理
基礎設施作為代碼（英語：Infrastructure as Code）
軟體文件
軟體品質保證
軟體專案管理（英語：Software project management）
使用者經驗
WinOps（英語：WinOps）




軟體開發工具




編譯器
偵錯工具
效能分析
GUI設計器（英語：Graphical user interface builder）
建模（英語：UML tools）
整合式開發環境（IDE）
組建自動化
發布自動化（英語：Application release automation）
測試




標準和BOK




能力成熟度模型整合
IEEE標準（英語：IEEE_Standards_Association）
ISO 9000
ISO/IEC標準（英語：ISO/IEC JTC 1/SC 7）
SWEBOK（英語：SWEBOK）
專案管理知識體系
BABOK（英語：BABOK）







閱
論
編











本條目存在以下問題，請協助改善本條目或在討論頁針對議題發表看法。


需要校對，以確保文法、用詞、語氣、格式、標點等使用恰當。自2012年6月起標示本模板。
沒有列出任何參考或來源。自2012年6月起標示本模板。







軟體設計是一個解決問題和規劃軟體解決方案的過程。
在確定軟體目的和規格後，軟體開發者進行設計，或是請軟體設計師提出一個解決方案的計劃，其中包括軟體架構、演算法及底層的軟體組成。
考慮要素[編輯]
軟體設計需要考慮的各種要素，舉例說明：

擴充功能性 - 考慮未來系統追加新功能是否方便，便宜
健壯性 - 系統的容錯能力
可用性 - 系統平均無障礙工作時長
安全性 - 防止系統功能和資料的非授權存取以及抗攻擊的能力
模組化 - 系統功能模組之間的解耦設計以及可被其它系統整合的能力

關聯項目[編輯]

軟體開發
軟體架構
使用者經驗
模型驅動架構
設計模式 (電腦)









閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類系統進行分類。






參考資料[編輯]
軟體設計參考資源[1]









閱
論
編


設計









設計綱要（英語：Outline of design）
設計主題
設計師












 
學科










傳媒設計



廣告
裝影格
企業形象設計
展會設計
電影標題設計（英語：Film title design）
平面設計

運動圖形設計（英語：Motion graphic design）
郵票設計（英語：Postage stamp design）
列印設計（英語：Print design）


插畫
資訊設計
教學設計
新聞設計（英語：News design）
攝影
零售設計（英語：Retail design）
標示 / 交通標誌設計（英語：交通標誌設計）
字型排印學 / 字形設計（英語：Type design）
影片設計（英語：Video design）
商品展示設計








環境設計



建築
建築光學
建築設計

被動太陽能建築設計（英語：Passive solar building design）


環境設計
環境影響設計（英語：Environmental impact design）
園林設計

電腦輔助園林設計（英語：Computer-aided garden design）


健康社群設計（英語：Healthy community design）
旅店設計（英語：Hotel design）
室內建築（英語：Interior architecture）
室內設計

體驗室內設計（英語：Experiential interior design）


Keyline設計（英語：Keyline design）
景觀建築

可持續景觀建築（英語：Sustainable landscape architecture）


景觀設計（英語：Landscape design）
空間設計（英語：Spatial design）
城市設計








工業設計



汽車設計
汽車懸架設計（英語：Automotive suspension design）
CMF設計（英語：CMF design）
瓦楞紙箱設計（英語：Corrugated box design）
電吉他設計（英語：Electric guitar design）
傢具設計

可持續傢具設計（英語：Sustainable furniture design）


硬體介面設計（英語：Hardware interface design）
摩托車設計（英語：Motorcycle design）
包裝
攝影鏡頭設計（英語：Photographic lens design）
產品設計（英語：Product design）
美術指導
感官設計
服務設計








互動設計



體驗設計

員工體驗設計（英語：Employee experience design）


遊戲設計

關卡設計（英語：Level design）
電子遊戲設計


硬體介面設計（英語：Hardware interface design）
圖標設計
沉浸式設計（英語：Immersive design）
資訊設計
聲音互動設計
用戶體驗設計
使用者介面設計
網頁設計








其他應用藝術



公共藝術
陶藝 / 玻璃設計（英語：Glass art）
時尚設計

劇裝設計
珠寶設計


花卉設計（英語：Floral design）
遊戲藝術設計（英語：Game art design）
道具設計師（英語：Property designer）
風景設計（英語：Scenic design）
音效設計（英語：Sound design）
舞臺/照明設計（英語：Lighting designer）
紡織設計（英語：Textile design）








其他設計和工程學



演算法設計
鍋爐設計（英語：Boiler design）
概念設計（英語：Conceptual design）
資料庫設計（英語：Database design）
藥物設計
電動系統設計（英語：Electrical system design）
試驗設計
濾波器設計
任務設計（英語：Job design）
積體電路設計

電路設計
物理設計
電力網路設計（英語：Power network design (IC)）


核武器設計方案
核酸設計（英語：核酸設計）
組織設計（英語：組織設計）
程式設計 (化工)
CPU設計
蛋白質設計（英語：蛋白質設計）
研究設計（英語：研究設計）
社會設計（英語：社會設計）
軟體設計
宇宙飛船設計（英語：宇宙飛船設計）
戰略設計（英語：戰略設計）
系統設計（英語：系統設計）


















 
途徑









以活動為中心設計（英語：Activity-centered design）
自適應網頁設計（英語：Adaptive web design）
情感設計（英語：Affective design）
腦力激盪法
按委員會設計（英語：Design by committee）
契約式設計
概念知識理論（英語：C-K theory）
設計收斂
參與式設計（英語：Participatory design）
面向概念設計（英語：Concept-oriented design）
配置設計（英語：Configuration design）
語境設計（英語：Contextual design）
持續設計（英語：Continuous design）
搖籃到搖籃設計（英語：Cradle-to-cradle design）
創造性解決問題（英語：Creative problem-solving）
創意技術（英語：Creativity techniques）
關鍵設計（英語：Critical design）

設計小說（英語：Design fiction）


防守設計（英語：Defensive design）
設計-招標-建造（英語：Design–bid–build）
設計－建造

建築師主導設計（英語：Architect-led design–build）


域驅動設計（英語：Domain-driven design）
生態設計
能源中性設計（英語：Energy neutral design）
工程設計流程（英語：Engineering design process）

機率設計（英語：Probabilistic design）


容錯設計（英語：Error-tolerant design）
容許故障設計（英語：Fault-tolerant design）
面向框架設計（英語：Framework-oriented design）
為裝配設計（英語：Design for assembly）
為改變行為設計（英語：Design for behaviour change）
為製造設計（英語：Design for manufacturability）
為六西格瑪設計（英語：Design for Six Sigma）
可測試性設計
為X設計（英語：Design for X）
實用設計（英語：Functional design）
生成設計（英語：Generative Design）
地理設計（英語：Geodesign）
頂層設計（英語：High-level design）
整合設計（英語：Integrated design）
整合頂層設計（英語：Integrated topside design）
基於智慧型設計（英語：Intelligence-based design）
疊代設計（英語：Iterative design）
KISS原則
底層設計（英語：Low-level design）
元設計（英語：Metadesign）
心智圖
模組化設計（英語：Modular design）
新浪潮（英語：New Wave (design)）
物件導向設計
開放設計（英語：Open design）
參數設計（英語：Parametric design）
參與設計（英語：Participatory design）
基於平臺設計（英語：Platform-based design）
基於原則設計
流程為中心設計（英語：Process-centered design）
公共利益設計（英語：Public interest design）
理性設計（英語：Rational design）
可再生設計（英語：Regenerative design）
可靠度
基於研究設計（英語：Research-based design）
責任驅動設計（英語：Responsibility-driven design）
回應式網頁設計
安全壽命設計
永續設計
系統設計（英語：Systemic Design）

面向系統設計（英語：Systems Oriented Design）


無表格網頁設計
限制理論
自上而下和自下而上設計（英語：Top-down and bottom-up design）
轉型設計（英語：Transformation design）
隔代設計（英語：Transgenerational design）
TRIZ
通用設計

為所有人設計（英語：Design for All (in ICT)）


以使用率為中心設計（英語：Usage-centered design）
以使用為中心設計（英語：Use-centered design）
以用戶為中心的設計

感情植入設計（英語：Empathic design）


用戶創新
價值驅動設計（英語：Value-driven design）
價值敏感設計（英語：Value sensitive design）

為隱私設計（英語：Privacy by Design）




設計選擇（英語：Design choice）
設計計算（英語：Design computing）
設計控制（英語：Design controls）
設計流程（英語：Design flow (EDA)）
設計領導（英語：Design leadership）
設計管理（英語：Design management）
設計標記（英語：Design marker）
設計方法（英語：Design methods）
設計模式
設計研究
設計科學（英語：Design science）
設計戰略（英語：Design strategy）
設計理論（英語：Design theory）
設計思考















 



工具
智慧財產權
組織
獎項













設計工具（英語：Design tool）



演算法輔助設計（英語：Algorithms-Aided Design (AAD)）（AAD）
建築模型（英語：Architectural model）
藍圖
綜合佈局（英語：Comprehensive layout）
電腦輔助設計（CAD）

電腦輔助工業設計（英語：Computer-aided industrial design）（CAID）
虛擬家居設計軟體（英語：Virtual home design software）


電腦自動設計（CAutoD）
設計品質指標（英語：Design quality indicator）
電子設計自動化
流程圖
Mockup
產品設計規格
原型 (工程)
寫生
分鏡
工程製圖
HTML編輯器
網站線框（英語：Website wireframe）








智慧財產權



社群設計（英語：Community design）
圍繞設計（英語：Design around）
設計專利（英語：Design patent）
Geschmacksmuster（英語：Geschmacksmuster）
工業設計權（英語：Industrial design right）

歐盟工業設計權（英語：Industrial design rights in the European Union）










組織



美國平面設計協會
特許設計師協會（英語：Chartered Society of Designers）
設計與工業協會（英語：Design and Industries Association）
設計委員會（英語：Design Council）
國際論壇設計
設計學會（英語：The Design Society）
設計研究學會（英語：Design Research Society）








獎項



歐洲設計獎（英語：European Design Award）
德國設計獎（英語：German Design Award）
好設計獎 (芝加哥)（英語：Good Design Award (Chicago)）
好設計獎
Graphex（英語：Graphex）
IF產品設計獎
詹姆斯·戴森獎（英語：James Dyson Award）
菲利浦親王設計獎
普利茲克獎
iF產品設計獎
紅點設計大獎
菲爾·卡夫曼獎
東京ADC賞
日本文化廳媒體藝術祭
時報廣告獎
台灣精品獎


















 
相關主題









美學
概念藝術
創意產業
文化圖示（英語：Cultural icon）
.設計（英語：.design）
企業架構
未來學
智慧型設計
新產品開發
設計哲學
過程模擬（英語：Process simulation）
慢設計（英語：Slow design）
STEAM fields（英語：STEAM fields）
非智慧型設計（英語：Unintelligent design）
視覺化
惡性問題（英語：Wicked problem）


設計簡介（英語：Design brief）
設計改變（英語：Design change）
經典設計（英語：Design classic）
設計總監（英語：Design director）
設計教育
設計元素和原則（英語：Design elements and principles）
設計工程師（英語：Design engineer）
設計公司
設計史
設計知識（英語：Design knowledge）
設計語言（英語：Design language）
設計壽命（英語：Design life）
設計負載（英語：Design load）
設計博物館
設計範例（英語：Design paradigm）
設計導向（英語：Design rationale）
設計審查（英語：Design review）
設計規格
設計工作室（英語：Design studio）
設計技術（英語：Design technology）














維基共享資源
維基教科書
維基新聞
維基語錄
維基文庫
維基詞典









^ 連結文字，附加文字。





 
						取自 "https://zh.wikipedia.org/w/index.php?title=軟件設計&oldid=44253462"					
3 個分類：專案管理軟體開發軟體設計隱藏分類：需要校對的頁面自2012年6月缺少來源的條目含有多個問題的條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


العربيةDeutschZazakiEnglishEestiفارسیFrançaisעבריתÍslenskaItaliano日本語Basa Jawa한국어МакедонскиBahasa MelayuNorsk bokmålPortuguêsRomânăРусскийShqipСрпски / srpskiTürkçeУкраїнськаTiếng Việt 
編輯連結 





 本頁面最後修訂於2017年5月6日 (週六) 03:42。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 






















普大軟體-專案設計















普大專案設計

 最頂尖的專案軟體設計團隊
 最豐富的實務經驗
 提供最專業的資訊管理與整合規劃
 協助您在數位時代
 輕鬆接軌世界自動化的趨勢








普大軟體-專案設計


專案開發軟體為普大團隊的專長，本公司系統部工程師團隊能依客戶的個別需求，量身定做。
現階段的軟體系統有：健康檢查與報告列印管理系統、檢驗室檢驗與結果管理分析系統、空氣品質監測品保實驗室電子化管理系統、
客戶CRM管理系統、教育學程管理系統、進銷存貨、圖書管理、自動監控等各式管理軟體等，本公司與其他國家程式設計公司交流合作程式撰寫及研發設計技術。
普大所有套裝軟體皆為普大團隊所開發設計，若套裝軟體無法符合需求，亦可針對客戶需求，個別修正。






專案流程說明


專案設計是沒有辦法在一夜之間完成的，軟體的開發需要一定的時間，如果您急著想要一個月內看到成果，專案系統就能夠上線，
      可能會有溝通與討論不夠成熟，所做出來的軟體也是急就章，中間還會產生很多不可預期的錯誤。
依照正常的程序，業主與普大團隊的互動流程如下：
Step 1. 提出專案內容

依照需求，您提出紙本或口頭的專案描述
依照資訊的流程，想要看到的結果報表
提出希望由管理流程所得到的成效

Step 2. 雙方評估

普大程式的介入，是否能改善重複性的工作，節省人力與工時 
是否能協助管理，讓企業更具有競爭力 
普大工程師認為這是一個挑戰 (工程師也是人，有時候也會選擇有興趣的工作做) 

您的需求尚未成形，組織尚未定型、或者還有可能會變動 
您的需求並非普大團隊的專長 
所設計的程式也無法對企業有所助益 

Step 3. 雙方溝通，確定規格與簽約
確定規格→普大報價並製作專案規格書
Step 4. 雙方啟動專案流程與交付程式驗收
簽約金→普大啟動專案；專案設計期間約 3個月，依專案大小調整所需的時間。→普大交付專案程式→業主提出內容與規格書不符合之處→普大收到後馬上調整→驗收
延伸閱讀：專案設計有感










專案設計案例












專案設計案例






























購買 Adobe Illustrator CC | 下載圖形設計軟體免費試用版
















































建立精美的向量圖。

此業界標準的向量圖形應用程式可讓您建立標誌、圖示、素描、印刷樣式和複雜插圖，以用於印刷、網頁、互動、視訊和行動等媒體。



Raincity 的影像。使用 Adobe Stock 創作 ›








 以 Adobe Creative Cloud 附屬內容的方式取得 Illustrator，只要


 Loading.../月



選擇計劃










 



就像您從未見過的全新 Illustrator。

瞭解最新版產品如何協助您製作像素精確的完美圖稿、更流暢地運用字體和字符，以及利用範本快速開始您的設計。

瞭解 Creative Suite 之後的新增功能 ›  瞭解 Creative Cloud ›









透過繪製緊密對齊像素格點的路徑和形狀，建立像素精確的完美畫面設計圖稿。
瞭解它的運作方式 ›







選取整個工作畫板，或從一個或多個工作畫板選取個別資產，然後按一下即可將所選內容匯出成多種尺寸、解析度和格式。
瞭解它的運作方式 ›











使用可從檔案選單存取的手冊、名片等預設集與範本，加快設計速度。


















將空白頁面變成精彩絕倫的作品。

Illustrator 是 Creative Cloud 的一部分，這表示您可以直接在應用程式中存取自己的所有資產 ，並且快速將一個空白頁面變成美麗的藝術作品。此外，Adobe CreativeSync 還能讓您跨桌面和行動應用程式將所有的一切都連接在一起。
進一步瞭解 Creative Cloud ›
















您的所有資產。皆隨手可得。
Creative Cloud Libraries 儲存您的所有筆刷、形狀、顏色、字元樣式、Adobe Typekit 字體及其他創意資產，讓您可以立即跨桌上型電腦和行動裝置使用這些項目。
瞭解它的運作方式 ›
























立即創作。
透過平面設計、行動與網頁設計等最新的教學課程，充分運用 Illustrator 和 Creative Cloud。

























在行動裝置上開始創作插圖，然後在桌上型電腦上完成作品 ›























設計標誌 ›









使用形狀建立插圖 ›





















Illustrator，生日快樂！
30 年來，Illustrator 為我們的世界繪製形狀、渲染色彩及增添紋裡。現在，這個創新的向量圖形應用程式將持續引領產業。從標誌和圖示一直到汽水罐和公車上的圖形，每天有超過 6 百萬張影像都是使用 Illustrator 所創作。
更多資訊 ›










為何要線上購買？
 









您的資料更安全
所有的線上信用卡交易，都已透過SSL技術，以及電子交易領域目前最安全的加密技術，進行嚴密的保全。











沒有其他隱藏費用
最真實的產品價格。Creative Cloud產品以數位方式下載提供，完全不需要運費。同時所有定價，皆已包含相關稅金。
  











14天內保證退費
改變心意嗎？在購買14天內取消您的訂單，將可以取得全額退費。無需承諾任何條件。











24小時都能便利取得
端坐家中或隨時隨地，就能輕鬆研究、比較及購買所需要的產品。不用等待商店開門，同時也無需承受銷售人員的壓力。

































取得所有應用程式
Creative Cloud 完整
包含 Illustrator、Photoshop、InDesign、Adobe Muse 和其他更多軟體。

 Loading.../月


立即購買


                        瞭解所有計劃  ›
                    





單一應用程式
Illustrator CC
向量圖形設計和插圖。


 Loading.../月


立即購買


                        瞭解所有計劃 ›
                    






 歡迎教師與學生加入。
各位同學，Creative Cloud 下殺四折。每月只要 NT$640。



                        立即購買 ›
                    





適用於商業客戶的 Creative Cloud
攜手合作效率更勝以往。計劃起價為每位用戶每月 NT$914 (不含稅)。



                        更多資訊 ›
                    





















電話購買：
0800-666-536






































TQC+ 考生服務網
































































 
















































TQC＋認證領域


 
                  「軟體設計領域」專註的是依照規格需求，開發能解決特定問題的程式。軟體設計通常以某種程式語言為工具，並與各種資料庫進行搭配。軟體設計過程有分析、設計、編碼、測試、除錯等階段，開發的過程中也需要註意程式的結構性、可維護性等因素。常見的軟體設計包含作業系統設計、應用程式設計、資料庫系統設計、使用者介面設計與系統配置等。



類別名稱
類別 
認證項目


軟體設計領域
知識體系(學科)
軟體開發知識 


專業技能(術科)

基礎物件導向程式語言 (Java)
基礎物件導向程式語言 (C#)
物件導向程式語言 (Java)
物件導向程式語言 (C#)

行動裝置應用程式設計 (Windows  Phone 8)
基礎行動裝置應用程式設計 (Android)
行動裝置應用程式設計 (Android)
行動裝置進階應用程式設計 (Android)
程式語言 (C)
基礎物件導向視窗及資料庫程式設計 (Visual Basic)
物件導向視窗及資料庫程式設計 (Visual Basic)
物件導向視窗及資料庫程式設計 (Visual C# 2013)
物件導向視窗及資料庫程式設計 (Java)
網頁程式設計 (HTML 5)
網站程式設計 (ASP.NET C#)






TQC＋人員別認證領域


 
TQC＋認證依各領域設計人才之專業謀生技能為出發點，根據國內各產業專業設計人才需求，依其工作職能及核心職能，規劃出各項認證測驗。 
在軟體設計領域中，本會經過調查分析最普遍的工作職稱，根據各專業人員之職務不同，彙整齣相對應之工作職務(Task)，以及執行這些工作職務所需具備之核心職能(Core Competency)與專業職能(Functional Competency)，規劃出幾項專業設計人員，分別為：「Android行動裝置程式設計專業人員」、「Android行動裝置進階程式設計專業人員」、「Windows Mobile行動裝置程式設計專業人員」、「Windows Phone行動裝置程式設計專業人員」、「Java程式設計專業人員」、「C#程式設計專業人員」、「VB程式設計專業人員」等。
現就這些專業人員必需具備的技能說明如下，各項技能需求之括號內為測驗代號，詳細測驗內容可參考本會測驗簡章：


專業人員別
工作職務
專業職能
認證項目


Android行動裝置程式設計專業人員

                            1.Java程式語言基礎 
                            2.開發環境及核心觀念 
                            3.應用框架運作原理及知識 
                            4.資料儲存及相關應用 
                            5.服務運用
                        
1.物件導向程式語言(Java)
                          2.行動裝置應用程式設計

                            1.軟體開發知識 (PSK)
                          2.物件導向程式語言(PJP)
                            3.行動裝置應用程式設計(PGD)
                        


Android行動裝置進階程式設計專業人員

                            1.Java程式語言基礎 
                            2.開發環境及核心觀念 
                            3.應用框架運作原理及知識 
                            4.資料儲存及相關應用 
                            5.進階服務運用 
                            6.多媒體應用 
                            7.各項API運用 
                            8.框架進階應用及擴充
                        
1.物件導向程式語言(Java)
                          2.行動裝置應用程式設計
                          3.行動裝置進階應用程式設計
                        

                            1.軟體開發知識 (PSK)
                        2.物件導向程式語言(PJP)
                        3.行動裝置應用程式設計(PGD) 
                        4.行動裝置進階應用程式設計(PGA)
                        



Windows Phone行動裝置程式設計專業人員

                            1. 使用者介面設計
                            2. 應用程式及套件設計
                            3. 行動裝置應用程式設計
                            4. 雲端服務相關設計
                            5. 資料儲存及相關應用設計
                            6. 行動裝置應用程式部署
                        

                            1.物件導向程式語言(C#)
                            2.行動裝置應用程式設計(Windows Phone 8)
                       

                            1.軟體開發知識 (PSK)
                            2.物件導向程式語言(PSP)
                            3.行動裝置應用程式設計(PMD)                      
                        


Java程式設計專業人員

                            1.建構Java基礎能力 
                            2.物件導向設計 
                            3.應用視窗程式設計 
                            4.資料庫處理
                        
1.物件導向程式語言
                          2.物件導向視窗及資料庫程式設計
                          3.結構化查詢資料庫
                        

                            1.軟體開發知識 (PSK)
                            2.物件導向程式語言(PJP)
                            3.物件導向視窗及資料庫程式設計(PJD)



C#程式設計專業人員

                            1. 程式流程控制
                            2. 使用者介面設計
                            3. 檔案資料處理
                            4. 應用程式設計
                            5. 資料庫處理
                            6. 視窗應用程式部署
                        

                            1.物件導向程式語言(C#)
                            2.物件導向視窗及資料庫程式設計(C#)
                      	

                            1.軟體開發知識 (PSK)
                            2.物件導向程式語言 (PSP)
                            3.物件導向視窗及資料庫程式設計 (PSD)

                        


VB.NET程式設計專業人員

                            1.程式流程控制
                            2.使用者介面設計 
                            3.檔案資料處理 
                            4.資料庫處理 
                            5.針對目標及功能開發系統 
                            6.視窗應用程式部署
                        
1.物件導向程式語言
                          2.物件導向視窗及資料庫程式設計

                            1.軟體開發知識 (PSK)
                        2.物件導向程式語言(開發中)
						3.物件導向視窗及資料庫程式設計 (PVD)
					  


ASP.NET網站程式開發專業人員

                            1.網站介面設計
                            2.網頁流程控制 
                            3.頁面資料傳遞 
                            4.資料儲存及相關應用
                       
1.網頁程式設計
                          2.網站程式設計
                          

                            1.軟體開發知識 (PSK)
                        2.網頁程式設計 (PSK)
						3.網站程式設計 (PVD)
					  








 








瀏覽人數:3151962人 客服信箱：master@mail.csf.org.tw   copyright © 2010-2012 財團法人電腦技能基金會all right reserved.



CSF主網 ∣ 
                TQC考生網 ∣ 
                TQC師友網 ∣ 
                TATC專區 ∣ 
                
ITE鑑定網 ∣ 
                企業電子化鑑定網 ∣
                CSF企業服務網 ∣ 
CWT全民中檢 ∣ 
                作文易學堂 ∣ 
                WDA即測即評服務網 ∣ 
                資訊月競賽 ∣ 
                展覽服務網 ∣
                各區推廣中心 ∣ 

              












軟體工程 - 維基百科，自由的百科全書































 







軟體工程

維基百科，自由的百科全書


					前往：					導覽，					搜尋


















商用軟體工程範例




軟體開發過程


核心行動




需求分析
軟體設計
軟體構造（英語：Software construction）
軟體測試
偵錯
軟體部署（英語：Software deployment）
軟體維護




軟體開發模式




軟體工程
瀑布模型
淨室（英語：Cleanroom software engineering）
疊代建模（英語：Incremental build model）
螺旋模型
V模型（英語：V-Model (software development)）
敏捷軟體開發




方法和框架




軟體原型（英語：Software prototyping）
快速應用程式開發（RAD）
統一流程（英語：Unified Process）
極限編程
團隊軟體流程（英語：Team software process）
個人軟體程式
動態系統開發方法（英語：Dynamic systems development method）
MSF（英語：Microsoft Solutions Framework）
Scrum
看板 (軟體開發)
Dual Vee Model（英語：Dual Vee Model）
測試驅動開發
ATDD（英語：Acceptance test–driven development）
行為驅動開發
FDD（英語：Feature-driven development）
DDD（英語：Domain-driven design）
MDD（英語：Model-driven_development）
疊代式開發
精益軟體開發
DevOps




軟體開發輔助領域




軟體配置管理
基礎設施作為代碼（英語：Infrastructure as Code）
軟體文件
軟體品質保證
軟體專案管理（英語：Software project management）
使用者經驗
WinOps（英語：WinOps）




軟體開發工具




編譯器
偵錯工具
效能分析
GUI設計器（英語：Graphical user interface builder）
建模（英語：UML tools）
整合式開發環境（IDE）
組建自動化
發布自動化（英語：Application release automation）
測試




標準和BOK




能力成熟度模型整合
IEEE標準（英語：IEEE_Standards_Association）
ISO 9000
ISO/IEC標準（英語：ISO/IEC JTC 1/SC 7）
SWEBOK（英語：SWEBOK）
專案管理知識體系
BABOK（英語：BABOK）







閱
論
編





軟體工程（英語：Software Engineering[1]）1968年秋季，NATO（北約）的科技委員會召集了近50名一流的編程人員、計算機科學家和工業界巨頭，討論和制定擺脫「軟體危機」的對策。在那次會議上第一次提出了軟體工程（software engineering）這個概念，研究和應用如何以系統性的、規範化的、可定量的程序化方法去開發和維護軟體，以及如何把經過時間考驗而證明正確的管理技術和當前能夠得到的最好的技術方法結合起來的學科。它涉及到程式設計語言、資料庫、軟體開發工具、系統平臺、標準、設計模式等方面。
在現代社會中，軟體應用於多個方面。典型的軟體比如有電子郵件、嵌入式系統、人機介面、辦公套件、作業系統、編譯器、資料庫、遊戲等。同時，各個行業幾乎都有電腦軟體的應用，比如工業、農業、銀行、航空、政府部門等。這些應用促進了經濟和社會的發展，提高人們的工作效率，同時提升了生活品質。
軟體工程師是對應用軟體創造軟體的人們的統稱，軟體工程師按照所處的領域不同可以分為系統分析師、系統架構師、軟體設計師、程式設計師、測試工程師、介面與互動設計師等等。人們也常常用程式設計師來泛指各種軟體工程師。



目錄


1 名稱由來與定義

1.1 軟體危機
1.2 由來
1.3 定義


2 軟體工程的核心知識（SWEBOK）
3 軟體工程與電腦科學
4 軟體工程的現況
5 沒有銀彈與人月神話
6 軟體工程與電腦程式設計
7 軟體開發過程
8 方法學
9 軟體工程的發展方向
10 分支學科
11 相關學科

11.1 系統工程
11.2 電腦軟體工程師


12 參考文獻
13 外部連結
14 參見



名稱由來與定義[編輯]
軟體工程包括兩種構面：軟體開發技術和軟體專案管理。[1]

軟體開發技術：軟體開發方法學、軟體工具和軟體工程環境。[1]
軟體專案管理：軟體度量、項目估算、進度控制、人員組織、配置管理、項目計畫等。[1]

軟體危機[編輯]
主條目：軟體危機
1970年代和1980年代的軟體危機。在那個時代，許多軟體最後都得到了一個悲慘的結局，軟體專案開發時間大大超出了規劃的時間表。一些專案導致了財產的流失，甚至某些軟體導致了人員傷亡。同時軟體開發人員也發現軟體開發的難度越來越大。在軟體工程界被大量參照的案例是Therac-25的意外：在1985年六月到1987年一月之間，六個已知的醫療事故來自於Therac-25錯誤地超過劑量，導致患者死亡或嚴重輻射灼傷[2]。
由來[編輯]
鑒於軟體開發時所遭遇困境，北大西洋公約組織（NATO）在1968年舉辦了首次軟體工程學術會議[3]，並於會中提出「軟體工程」來界定軟體開發所需相關知識，並建議「軟體開發應該是類似工程的活動」。軟體工程自1968年正式提出至今，這段時間累積了大量的研究成果，廣泛地進行大量的技術實踐，藉由學術界和產業界的共同努力，軟體工程正逐漸發展成為一門專業學科。
定義[編輯]

創立與使用健全的工程原則，以便經濟地獲得可靠且高效率的軟體。[4]
應用系統化，遵從原則，可被計量的方法來發展、操作及維護軟體；也就是把工程應用到軟體上。[5]
與開發、管理及更新軟體產品有關的理論、方法及工具。[6]
一種知識或學科，目標是生產品質良好、準時交貨、符合預算，並滿足用戶所需的軟體。[7]
實際應用科學知識在設計、建構電腦程式，與相伴而來所產生的檔案，以及後續的操作和維護上。[8]
使用與系統化生產和維護軟體產品有關之技術與管理的知識，使軟體開發與修改可在有限的時間與費用下進行。[9]
建造由工程師團隊所開發之大型軟體系統有關的知識學科。[10]
對軟體分析、設計、實施及維護的一種系統化方法。[11]
系統化地應用工具和技術於開發以電腦為主的應用。[12]
軟體工程是關於設計和開發優質軟體。[13]

軟體工程的核心知識（SWEBOK）[編輯]
　ACM與IEEE Computer Society聯合修定的SWEBOK[14]（Software Engineering Body of Knowledge）提到，軟體工程領域中的核心知識包括：

軟體需求（Software requirements）
軟體設計（Software design）
軟體建構（Software construction）
軟體測試（Software test）
軟體維護與更新（Software maintenance）
軟體構型管理（Software Configuration Management, SCM）
軟體工程管理（Software Engineering Management）
軟體開發過程（Software Development Process）
軟體工程工具與方法（Software Engineering Tools and methods）
軟體品質（Software Quality）

軟體工程與電腦科學[編輯]
參見：軟體工程主題列表
軟體的開發到底是一門科學還是一門工程，這是一個被爭論了很久的問題。實際上，軟體開發兼有兩者的特點。但是這並不意味著它們可以被互相混淆。很多人認為軟體工程基於電腦科學和資訊科學就如傳統意義上的工程學之於物理和化學一樣。在美國，大約40%的軟體工程師具有電腦科學的學位。在世界其他地方，這個比例也差不多。他們並不一定會每天使用電腦科學方面的知識，但是他們每天都會使用軟體工程方面的知識。

軟體工程與電腦科學的差別[15]


軟體工程
電腦科學


目標
在時間、資源、人員這3個主要限制條件下構建滿足用戶需求的軟體系統。
探索正確的計算和建模方法，從而改進計算方法本身。


產品
軟體（比如辦公套件和編譯器）。
演算法（比如希爾排序法）和抽象的問題（比如哲學家進餐問題）。


進度與時間表
軟體專案都有特定的進度與時間表
研究專案一般不具有設定的進度與時間表


關註點
軟體工程關註如何為用戶實現價值。
軟體理論關註的是軟體本身運行的原理，比如時間複雜度，空間複雜度，和演算法的正確性。


變化程度
隨著技術和用戶需求的不斷變化，軟體開發人員必須時刻調整自己的開發以適應當前的需求。同時軟體工程本身也處於不斷的發展中。
對於某一種特定問題的正確解決方法將永遠不會改變。


需要的其他知識
相關領域的知識。
數學。


著名的探索者和教育家
Barry Boehm，David Parnas，佛瑞德·布魯克斯。
Edsger Dijkstra，高德納，Robert Tarjan，Peter Slater，艾倫·圖靈，姚期智。


著名的實踐者
John Backus，Dan Bricklin，提姆·柏內茲-李，林納斯·托瓦茲，理察·馬修·斯托曼。
無。


例如Peter McBreen認為，軟體工程意味著更高程度的嚴謹性與經過驗證的流程，並不適合現階段各類型的軟體開發。Peter McBreen在著作《Software Craftsmanship: The New Imperative》提出了所謂「craftsmanship」的說法，認為現階段軟體開發成功的關鍵因素，是開發者的技能，而不是「manufacturing」軟體的流程。
軟體工程的現況[編輯]
Capers Jones曾對美國軟體組織的績效做過評估，所得到結論是：軟體工程的專業分工不足，是造成品質低落、時程延誤、預算超支的最關鍵因素。[16]
2003年，The Standish Group年度報告指出，在他們調查的13522個專案中，有66％的軟體專案失敗、82％超出時程、48％推出時缺乏必需的功能，總計約550億美元浪費在不良的計畫、預算或軟體估算上。[17]
沒有銀彈與人月神話[編輯]
主條目：沒有銀彈和人月神話
在1986年，IBM大型電腦之父佛瑞德·布魯克斯發表了他的著名論文《沒有銀彈》，在這篇著名的論文中他斷言：「在10年內無法找到解決軟體危機的銀彈」[18]。從軟體危機被提出以來。人們一直在尋找解決它的方法。於是一系列的方法被提出並且加以應用。比如結構化程式設計，物件導向的開發，CMM，UML等等。佛瑞德·布魯克斯著名作品還有《人月神話》。
布魯克斯在《人月神話：軟體專案管理之道（The Mythical Man-Month）》提到，將沒有銀子彈（silver bullet）可解決，開發軟體的困難是內生的，只能漸進式的改善。整體環境沒有改變以前，唯一可能的解，是依靠人的素質，培養優秀的工程師。[19]
軟體工程與電腦程式設計[編輯]
軟體工程存在於各種應用中，存在於軟體開發的各個方面。而程式設計通常包含了程式設計和編碼的反覆疊代的過程，它是軟體開發的一個階段。
軟體工程力圖對軟體專案的各個方面作出指導，從軟體的可行性分析直到軟體完成以後的維護工作。軟體工程認為軟體開發與各種市場活動密切相關。比如軟體的銷售，用戶培訓，與之相關的軟體和硬體安裝等。軟體工程的方法學認為一個獨立的程式設計師不應當脫離團隊而進行開發，同時程式的編寫不能夠脫離軟體的需求，設計，以及客戶的利益。
軟體工程的發展是電腦程式設計工業化的體現。
軟體開發過程[編輯]
主條目：軟體開發過程
軟體開發過程是隨著開發技術的演化而隨之改進的。從早期的瀑布式（Waterfall）的開發模型到後來出現的螺旋式的疊代（Spiral）開發，以致最近開始興起的敏捷軟體開發（Agile），他們展示出了在不同的時代軟體產業對於開發過程的不同的認識，以及對於不同類型專案的理解方法。
註意區分軟體開發過程和軟體流程改進之間的重要區別。諸如像ISO 15504, ISO 9000, CMM, CMMI這樣的名詞闡述的是一些軟體流程改進框架，他們提供了一系列的標準和策略來指導軟體組織如何提升軟體開發過程的品質、軟體組織的能力，而不是給出具體的開發過程的定義。
方法學[編輯]
軟體工程的方法有很多方面的意義。包括專案管理，分析，設計，程式的編寫，測試和品質控制。
軟體設計方法可以區別為重量級的方法和輕量級的方法。重量級的方法中產生大量的正式文件。
著名的重量級開發方法包括ISO 9000，CMM，和統一軟體開發過程（RUP）。
輕量級的開發過程沒有對大量正式文件的要求。著名的輕量級開發方法包括極限編程（XP）和敏捷過程（Agile Processes）。
根據《新方法學》這篇文章的說法，重量級方法呈現的是一種「防禦型」的姿態。在應用「重量級方法」的軟體組織中，由於軟體專案經理不參與或者很少參與程式設計，無法從細節上把握專案進度，因而會對專案產生「恐懼感」，不得不要求程式設計師不斷撰寫很多「軟體開發文件」。而輕量級方法則呈現「進攻型」的姿態，這一點從XP方法特別強調的四個準則—「溝通、簡單、反饋和勇氣」上有所體現。目前有一些人認為，「重量級方法」適合於大型的軟體團隊（數十人以上）使用，而「輕量級方法」適合小型的軟體團隊（幾人、十幾人）使用。當然，關於重量級方法和輕量級方法的優劣存在很多爭論，而各種方法也在不斷進化中。
一些方法論者認為人們在開發中應當嚴格遵循並且實施這些方法。但是一些人並不具有實施這些方法的條件。實際上，採用何種方法開發軟體取決於很多因素，同時受到環境的制約。
軟體工程的發展方向[編輯]
「敏捷開發」（Agile Development）被認為是軟體工程的一個重要的發展。它強調軟體開發應當是能夠對未來可能出現的變化和不確定性作出全面反應的。
敏捷開發被認為是一種「輕量級」的方法。在輕量級方法中最負盛名的應該是「極限編程」（Extreme Programming，簡稱為XP）。而與輕量級方法相對應的是「重量級方法」的存在。重量級方法強調以開發過程為中心，而不是以人為中心。重量級方法的例子比如CMM/PSP/TSP。
面向方面的程式設計（Aspect Oriented Programming，簡稱AOP）被認為是近年來軟體工程的另外一個重要發展。這裡的方面指的是完成一個功能的物件和函式的集合。在這一方面相關的內容有泛型編程（Generic Programming）和模板。
分支學科[編輯]
相關學科[編輯]
系統工程[編輯]
系統工程師主要處理系統的整體需求和設計，包括硬體與人力問題。
電腦軟體工程師[編輯]
參考文獻[編輯]


^ 1.0 1.1 1.2 1.3 軟體工程(Software Engineering;SE). 勤益科技大學. [2015-02-24] （中文（台灣）‎）. 寫程式的難度愈來愈低，因為程式語言越來越高階，API 越來越多，開發工具越來越好用，寫程式的門檻自然就大大地降低了。想要開發出有價值的中大型系統，軟體工程就很重要了，以蓋房子來說，你可以隨便找一兩個工人用磚或木材來蓋一棟矮房，但是如果想蓋一百多層樓的101大樓，你非得有良好的工程規劃不可，軟體不也是如此？程式設計師名片上的頭銜都是工程師，雖然和建築工程師、機械工程師... 一樣都被稱為工程師，但比較起來，軟體產業的工程師卻是最不工程導向的。 
^ An Investigation of the Therac-25 Accidents
^ http://www.ntut.edu.tw/~jykuo/se.html
^ F. L. Bauer, NATO Software Engineering Conference, 1968.
^ IEEE標準電腦字典，610.12，1990
^ I. Sommerville, Software Engineering, 7th ed.:Addison-Wesley Longman Publishing Co., Inc. Boston, MA, USA, 2004.
^ S. R. Schach, Software Engineering: Asken Associates Pacific Palisades, CA, USA, 1990.
^ B. W. Boehm, Software Engineering Economics: Prentice Hall PTR Upper Saddle River, NJ, USA, 1981.
^ R. Fairley, Software Engineering Concepts: McGraw-Hill, Inc. New York, NY, USA, 1985.
^ C. Ghezzi, M. Jazayeri, and D. Mandrioli, Fundamentals of Software Engineering, 2nd ed.: Prentice Hall, 2002.
^ The Free On-Line Dictionary of Computing, http://foldoc.org/
^ S. A. Conger, The New Software Engineering: Course Technology Press United States, 1993.
^ S. L. Pfleeger, Software Engineering: the Production of Quality , 2nd.: Macmillan Publishing Co., Inc. Indianapolis, IN, USA, 1991.
^ index • IEEE Computer Society. Computer.org. 2004-02-06 [2016-04-28]. 
^ P. McBreen, Software Craftmanship: The New Imperative: Addsion-Wesley Professional, 2001.
^ C. Jones Programmer Productivity: McGraw-Hill, Inc. New York, NY, USA, 1985
^ Chaos Report, The Standish Group, 2003.
^ 原文：There will be no silver bullet within ten years
^ Brooks原文：「我認為軟體困難的部份是在建立規格、設計，並驗證其構思，而不是在表達和測試其實作」


外部連結[編輯]
（中文）

SEAT社團法人台灣軟體工程學會
沒人在乎軟體工程
軟體工程的弔詭

（英文）

http://www.computer.org/portal/web/swebok
http://www.abet.org/
http://www.computer.org/certification/
http://systemsguide.com/GuildSite/TDM/certification.html

參見[編輯]


軟體主題
工程主題
軟體測試主題
電腦科學主題
資訊科技主題



軟體
軟體開發
軟體測試
專案管理
系統工程










閱
論
編


軟體工程






領域



需求分析
系統分析
軟體設計
電腦編程
形式化方法
軟體測試
軟體部署（英語：Software deployment）
軟體維護








概念



資料建模
企業架構
功能規格（英語：Functional specification）
建模語言（英語：Modeling language）
編程典範
軟體
軟體架構
程式設計方法學
軟體開發過程
專案生命周期
軟體品質
軟體品質保證
軟體考古學
軟體驗證及確認
結構化分析








導向



敏捷
觀點導向
物件導向
本體論
面向服務
SDLC








模型




開發模型



敏捷
疊代模式
RUP
Scrum
螺旋模型
瀑布模型
XP
V模型
混沌模型








其他模型



Automotive SPICE
CMMI
資料模型
ER模型
Function model
資訊模型
元建模
物件模型（英語：Object model）
系統模型（英語：Systems modeling）
視圖模型（英語：View model）








建模語言



IDEF
UML
SysML











軟體
工程師



肯特·貝克
葛來迪·布區
佛瑞德·布魯克斯
Barry Boehm
沃德·坎寧安
奧利-約翰·達爾
Tom DeMarco
艾茲格·迪傑斯特拉
馬丁·福勒
東尼·霍爾
Watts Humphrey
Michael A. Jackson
伊瓦爾·雅各布森
Craig Larman
James Martin
伯特蘭·邁耶
David Parnas
Winston W. Royce
詹姆士·蘭寶
尼克勞斯·維爾特
愛德華·尤登
Victor Basili








相關領域



電腦科學
電腦工程
企業工程
軟體工程史
管理學
數學
專案管理
品質管理
風險管理
人因工程學
系統工程











分類
維基共享
















閱
論
編


技術






領域




農業



農業工程
水產養殖
水產學
食品化學
食品工程
營養學
食品技術
食品微生物學（英語：Food microbiology）
遺傳利用限制技術（英語：Genetic use restriction technology）








生物醫學（英語：Biomedical technology）



生物資訊學
生物醫學工程
生物工程學
生物技術
健康科學
生化檢驗
藥理學
神經科學
組織工程學
基因工程
奈米醫學
化學資訊學








水利/土木建築



水利工程
土木工程
建築工程
建築裝置
消防工程
安全工程
結構工程








教育技術



線上學習
教育技術學
教育軟體（英語：Educational software）
虛擬校園（英語：Virtual campus）








能源



核工程
核技術
儲能技術
石油工程（英語：Petroleum engineering）








軍事



彈藥
炸彈
軍事技術
電子作戰
低可偵測性技術
工兵
軍事通訊（英語：Military communications）








資訊



人工智慧
計算機工程
電腦科學
音樂工藝
通訊工程
通訊
圖形
資訊科技
軟體工程
音樂
語音識別
視覺化技術
系統分類學
本體工程
資訊學








工業（英語：Industrial technology）



奈米科技
音訊工程
生物工程
生化工程
陶瓷工程
化學工程
控制工程
低溫學
電氣工程
電子工程
工程技術
工程學
工業工程學
企業工程
水力學
機械工程
機械電子學
冶金工程
海洋工程
光學工程
系統工程
運輸工程
電機工程學
金融工程學
製造
機械
採礦業
自動化技術
冶金學








交通



航空航天
航空航天工程
空間技術
機動車
車輛工程
交通工程
流量工程








環境科技



綠色建築
可再生能源
永續設計
環境工程
生態工程
潔淨科技（英語：Clean technology）
生態技術（英語：Ecotechnology）
環境工程科學（英語：Environmental engineering science）








應用科學



考古
電子學
光學
半導體物理學
環境科學
材料科學
微系統
微技術
奈米技術








其他領域



機器人學
機械電子學
蛋白質工程
系統工程
聚合物工程（英語：Polymer engineering）











組件



基礎設施
發明
發明年表
知識
機器
技能
工藝
工具








技術史



新石器革命
工業革命
第二次工業革命
數字化革命
第三次工業革命
資訊時代
史前技術（英語：Outline of prehistoric technology）
古代技術（英語：Ancient technology）
中世紀技術（英語：Medieval technology）
文藝復興技術（英語：Renaissance technology）
噴氣時代（英語：Jet Age）








理論（英語：Theories of technology）
和概念



適用技術
破壞性創新
高科技
技術成熟度曲線
專家統治
技術決定論
技術官僚
技術奇異點
技術接受模型
超人類主義
軍民兩用技術（英語：Dual-use technology）
技術倫理（英語：Ethics of technology）








其他



新興技術列表
卡爾達肖夫指數
Category:各國科技
Category:科技公司
Category:技術大學和學院
技術傳播者
技術新聞學











Category:技術
commons:Category:技術
Portal:技術
















閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類系統進行分類。











權威控制



LCCN: sh87007398
GND: 4116521-4
BNF: cb11966616k（資料）
NDL: 01014113
BNE: XX541523












 
						取自 "https://zh.wikipedia.org/w/index.php?title=軟件工程&oldid=45113292"					
3 個分類：軟體開發軟體工程系統工程隱藏分類：包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源維基教科書 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansአማርኛالعربيةAsturianuAzərbaycancaБългарскиবাংলাBosanskiCatalàکوردیČeštinaCymraegDanskDeutschΕλληνικάEnglishEsperantoEspañolEuskaraفارسیSuomiFrançaisGaeilgeGalegoGaelgעבריתहिन्दीHrvatskiՀայերենBahasa IndonesiaÍslenskaItaliano日本語ភាសាខ្មែរ한국어KurdîລາວLietuviųLatviešuМакедонскиമലയാളംМонголBahasa MelayuMirandésNederlandsNorsk nynorskNorsk bokmålଓଡ଼ିଆPolskiPortuguêsRomânăРусскийScotsSrpskohrvatski / српскохрватскиසිංහලSimple EnglishSlovenčinaShqipСрпски / srpskiBasa SundaKiswahiliதமிழ்ไทยትግርኛTagalogTürkçeУкраїнськаTiếng ViệtWinarayייִדיש粵語 
編輯連結 





 本頁面最後修訂於2017年7月8日 (週六) 13:28。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 






﻿



進銷存,軟體設計::凌雲資訊::POS系統























新紀元經營整合系統
整合進銷存、會計帳、票據、製造業加工流程、門市...

企業ｅ化購物網站商店
前後台整合線上購物及後台進銷存管理,訂單自動接收

傳銷獎金計算系統
傳銷獎金計算,組織表列印,獎金發放,獎金查詢網站

ERP系統程式設計
各行業專業軟體系統開發程式設計及規劃/ERP生管流程軟體設計





凌雲資訊稟持專業精神，推動各行業電腦化
擁有堅強的系統、網站開發團隊


凌雲資訊業務
程式專案設計 / 套裝軟體開發 / 系統分析整合
系統整合的優異方案





POS進銷存軟體設計 凌雲資訊  版權所有 © All Rights Reserved. 未經同意請勿任意轉載本網站內容
　　　　　迴首頁 │ 公司簡介 │ 服務項目 │ 產品介紹 │ 下載專區 │ 連絡我們






IKEA 規劃設計軟體和選購指南 - IKEA































































  












IKEA分店









購物清單


宜家卡優惠






我的購物袋



常見問題


English info














所有商品







新品






線上型錄






再創低價






客廳






臥室






廚房






餐廳






書房






兒童天地






收納






瑞典美食






IDEAS







 所有居家空間















            View this page at its best. Get a new version of Adobe Flash Player.
            
Get Flash Player



 



我們的服務






常見問題






分店資訊






店內服務






+
購物指南






給全家充滿樂趣的購物之旅








線上型錄和專刊






手機應用程式下載與功能介紹






IKEA BUSINESS






聯繫我們




 
  


IKEA規劃設計軟體和選購指南









IKEA廚房3D規劃軟體

使用廚房設計軟體，規劃設計出符合你需求的廚房。儲存你的設計在IKEA網站系統，再到IKEA店內洽詢服務人員，你的夢想廚房設計就會成真！ 

系統需求
- IKEA規劃軟體適用於PC：Windows XP SP2或以上- 1G或以上的處理器- 32MB  以上的影像記憶體- 視窗顯示設定1024 x 768 。
- Windows瀏覽器：Internet Explorer 7.0 / Firefox Firefox 3.5.7 或以上；MacOS X 10.5 或以上(適用於Intel處理器)- Mac 瀏覽器：Firefox 3.5.7或以上 / Safari 4.0.3 或以上





打造你的夢想廚房
登入網站帳戶
 


















免費規劃軟體，讓你的專屬完美空間，不再是夢想!









    PAX 系統衣櫃規劃設計軟體 
PAX系統衣櫃規劃設計軟體包含所有你需要的門板和內裝配件，只要動動手指，讓你設計的衣櫃完美收納你的所有衣物。 馬上動手設計
    BESTA 系統電視櫃規劃設計軟體 
多種尺寸、風格的門片及櫥櫃搭配內裝配件，創造專屬組合，輕鬆打造外型和功能兼具的電視櫃!  馬上動手設計
    STUVA 兒童儲物櫃規劃設計軟體 
將孩子的衣服、用品和玩具通通收進色彩繽紛的STUVA 兒童儲物系列! 馬上動手設計
   















選購指南和你分享各項祕訣，聰明挑選，居家更舒適!









    床墊選購指南 
人生有三分之一的時光在睡眠中度過，舒適的睡眠讓醒著的時間更有活力，SULTAN系列床墊還有90天試睡保證！ 尋找你的最佳床墊
    BESTÅ系統電視櫃購物指南 
BESTÅ系列提供多款產品，滿足不同的收納需求。不只可以從現有組合中挑選，還可以自行打造專屬的收納組合，符合居家空間和生活方式。 瞭解更多
    鍋具選購指南 
挑選鍋具很簡單，三個步驟挑選專業鍋具，讓你隨心所欲烹調各國料理!  快來看看
    餐具混搭秘訣 
餐具搭的好，天天都是大節日；和我們一起混搭餐具，創造餐桌上的絕佳組合! 選擇你的完美搭配
   












 
                                IKEA型錄和專刊
                            


                                        線上瀏覽電子型錄
                                    

                                        免費訂閱電子報
                                    

                                        宜家人雜誌數位版
                                    

                                        下載iOS IKEA STORE App
                                    

                                        下載Android IKEA STORE  App
                                    

我們的服務常見問題聯繫我們分期付款品質保證關於IKEA大眾化設計公司訊息IKEA的歷史關懷人與環境IKEA FoundationIKEA新聞IKEA分店分店資訊宜家卡IKEA BUSINESS加入IKEA人才招募IKEA網路社群IKEA facebook粉絲團IKEA YouTube影音頻道IKEA 居家生活部落格IKEA 生活家IKEA LINE官方帳號
 


                © Inter IKEA Systems B.V. 2010 - 2016
                
                        
                            |

                                隱私權保護及網站使用政策
                            
|

                                宜家卡
                            

















有關平面設計的軟體程式? | Yahoo奇摩知識+




















 









   ⌂首頁信箱新聞股市名人娛樂氣象運動App下載購物中心商城拍賣更多⋁知識+汽車機車電影字典遊戲旅遊理財房地產時尚美妝折扣城   Yahoo 奇摩知識+                        👤 登入    ✉ 信箱     ⚙ 服務說明    帳號資料 服務說明 意見回報        
















Yahoo奇摩知識+ 首頁











所有分類
 
健康
 
商業與財經
 
娛樂與音樂
 
家居與園藝
 
家庭與人際關係
 
寵物
 
懷孕與育兒
 
政治與政府
 
教育與參考
 
新聞與活動
 
旅遊
 
汽車與交通
 
消費電子產品
 
環境
 
社會科學
 
社會與文化
 
科學
 
美容與造型
 
藝術與人文
 
遊戲與休閒活動
 
運動
 
電腦與網際網路
 
食品與飲料
 
餐廳與小吃
 





世界Yahoo 








阿根廷





澳洲





巴西





加拿大





法國





德國





印度





印尼





義大利





馬來西亞





墨西哥







紐西蘭





菲律賓





魁北克





新加坡





香港





西班牙





泰國





英國與愛爾蘭





美國





越南





西班牙文







關於





關於 Yahoo奇摩知識+
社群指南
排行榜
點數與等級
部落格
如何安全地使用 Yahoo奇摩

 








 電腦與網際網路

 軟體


 看另一則問題 










            有關平面設計的軟體程式?
        


恩....我不是學這個出身的... 
可是我想走這個方面的... 
我有上巨匠電腦看了一下相關課程... 
Photoshop .CorelDraw .我形我速 .PhotoImpact .Illustrator .Indesign 
可是我對此領域不太熟...,想知道綱入門的人該從哪個軟體開始學起? 
另外我想問關於Auto CAD這個軟體? 

還有我想知道,若不是學這個出身的人,會有進入這個工作的進入障礙嗎?@@"

更新: 
這些軟體自學ok嗎?還是最好要經過專業學習? 
還有阿?它們有需要認證嗎?





 
追蹤 


 
 14 個解答 
14


檢舉不當使用









您確定要刪除此解答嗎？
是
否












 









抱歉，似乎發生一些問題。



Trending Now





 

解答


評分


最新
最舊














最佳解答: 
             您好： 

看您提到的這些軟體，您想朝美工影像方向發展囉 
在這個領域裡，是沒有說要先學哪種課會比較好 
不過我會建議您，可以簡單分析一下自己 
因為平面類別可以區分美工繪圖跟影像處理 
所以看你想先學哪種 
是喜歡畫畫呢，還是喜歡照片處理合成 
不過大部份會建議您學Photoshop、Illustrator、CorelDRAW這三套 
目前平面製圖影像處理大多是用這三套 
相關資源也比較多 

而AutoCAD這套本身不是很好學 
畢竟它是專業的製圖軟體 
可以繪製零件圖或建築圖之類的 
一般非相關科系，學這套也是OK 
只是您只能照別人給以的尺寸畫圖 
要自己設計，就只能在私自在進修相關知識囉 

證照考試的話會建議您去考CAD的考試 
至於平面類的話，不建議您考證照 
相反的會建議您多做作品的產出 
畢竟主觀類的東西，還是要讓人看的到、看的喜歡為主 

當然，你可以去巨匠或其他補習班問問看 
反正問問不用錢，順便比較看看各家的不同 
自己本身是在巨匠學，師資、設備、課程都很棒 
當然這是我的感受 
您可以親自去體驗看看 
雖然說這些軟體自學是ok 
不過除非你有很多的時間可以慢慢學 
不然去上課的好處是，可以用最短的時間學到 
加油吧！ 




 參考資料： 
 


浮浮
 · 10 年前 





0
真讚



0
真遜





檢舉不當使用


意見





 




新增意見











送出












 · 剛才不久













                  發問者的評分
                













 如果有一份事業  
可以讓你每個月多增加1-10萬 
且靠著團購商品 又可以讓你省錢 
這樣的方法 是不是很吸引你呢 
通路雲介紹: 
http://makemoney68.weebly.com 
http://a4hbpo.pixnet.net/blog/post/314710958 
信箱:maddux3939@gmail.com





 匿名使用者 
 · 4 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久























 基本上~只要有心學~什麼都不是問題..^^~只有每個軟體都有它的難易程度，所以吸收的程度，也會有限，多上課，多聽別的老師的教法，一定會對你有所幫助，就算不是本科系的你，一定也能得心應手的..^^..加油嚕





 參考資料： 
 自己 


舞川拉麵
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 剛入門,或不太熟的朋友,如以電腦美工軟體來說,建議可以先以目前業界的主流軟體學起,如你說的Photoshop .CorelDraw.Illustrator .因軟體只是工具,還是要有自己的想法和創意,因你不是科班的,我也會建議去學素描和色彩相關的實務課程,因你光會使用美工軟體的操作,而沒有美術素養,那是沒辦法發揮自己的創意,教授美工軟體是專業的,建議還是要經過專業補習班學習,會比較快入門巨匠電腦就不錯





水母
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 如果想走平面設計方面 
建議學Photoshop .CorelDraw .Illustrator .Indesign 
前三者上面有人說過ㄌ 
Indesign屬於排版的軟體 
這是走美工必須要會的另一個軟體 
如果公司須要出版書籍~~一定會用的到 
或者是要做menu~~也會用到 
當然會軟體還不夠ㄛ 
必須要會配合應用 
甚至還要加強自己ㄉ色彩學能力 
自學可能會花更長ㄉ時間 
而且可能無法去得到別人多年來的經驗 
巨匠電腦有開這方面的課程ㄛ 
您可以去詢問看看 
應該會有您要的東西 

至於cad 
是屬於工業製圖軟體 
可能跟您要的平面設計不一樣 
autocad軟體 
可以走室內設計或是工業設計方向 
就看個人的興趣囉 
當然不能只學這套 
可能要各另外學3dmax或是pro/e的軟體 

那您不是本科系畢業ㄉ 
證照部份就顯得更重要 
不然找工作~~老闆要怎知道您有這方面的能力 
不過這是autocad啦 
至於平面 
最重要的還是作品 
加油 

 2007-10-12 15:54:32 補充： 
illustrator跟coreldraw雖然都是向量軟體 
不過兩個軟體會都存在一定要它的原因 
裡面會有一些功能分別都比另一ㄍ軟體要強 
所以才會最好兩個都學會 
又或者是您找的公司只用其中一種 
那您剛好只會另一種 
那不就少了一個機會 
既然會了一種 
學另外一種比較不吃力ㄌ 
何不一起學ㄋ~~





 參考資料： 
 自己,   自己 


無聊
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 如果您對這些軟體完全沒有接觸過， 
那會建議您，還是去補習班學會比較好～ 
因為這些軟體，可以用的很廣泛哦！ 

假若您是在家想要自己玩玩這些軟體算了， 
要會用這些軟體，還是要用來找工作的話， 
那您可要用些時間、心思去學習囉！ 
加油囉！！ 

您可以到補習班問看看～ 
我朋友也是在進修相關的電腦課程， 
他是在巨匠學的，學的還不錯哦！





為夢前進
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 上述的幾個軟體中大概指需要學 
PhotoShop、CorelDRAW、Illustrator這三個軟體就好了 
我形我速..可以自己摸索，算是簡單易上手的軟體 
如果會photoshop的話，photoimpact大概也沒啥問題 
Indesign一般外面比較少用到，除非有在做印刷出版.. 

CAD的話，又跟上面的軟體不一樣了，上面的是屬於美工軟體， 
CAD則是機械繪圖、建築繪圖類的軟體 

如果你只是想要學興趣的話，可以自己買書回來慢慢摸索，當然有預算的話，去補習班學習也不錯! 

若是要走工作的話，還是建議直接去補習班做學習會比較好 
一來所節省的時間會相當的多，有人問總比自己摸不著頭緒學習還來的好 
二來若是老師也是業界的人，剛好可以詢問業界的趨勢，替自己的未來做更深入的打算 

認證的話，除了CAD有認證之外，另外的美工軟體比較在乎的是作品，有證照不一定代表會熟用這套軟體，但是可以拿的出好作品一定要熟用該軟體。 

以上 ! 給你當參考，每家補習班在網路上面都會有人說他好說他不好，所以若你真的想要去補習班的話，可以親自去看看那邊上課的環境，再來做決定喔 !





 參考資料： 
 自己 


 匿名使用者 
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 其實你自己想要學軟體以前，應該要先瞭解自己想要發展的領域在哪個方向~~~~ 
如果比較喜歡偏向塗鴉、設計、創意的話，那接觸平面美工軟體就算是不錯的囉! 
(像是你知道的Photoshop .CorelDraw .Illustrator .Indesign.....) 
其中我形我速算是很簡單操作的軟體，比較適合初級者快速運用軟體本身預設的功能做創意的編輯(也就是說~~很簡單啦!根本不算是專業美工軟體) 
至於PhotoImpact的話，因為他算是國人針對使用習慣，開發出來很類似Photoshop的影像編輯軟體，如果是自己在做簡單的影像合成、網頁製作~~~那這套軟體算是還OK的啦!可是在平面設計的業界部份，就不會用這套軟體喔...... 
Photoshop、Illustrator、Indesign這三套都是屬於Adobe的原廠軟體，本身還可以互相支援運用，是比較多專業人士使用的軟體啦! 



**可是我對此領域不太熟...,想知道綱入門的人該從哪個軟體開始學起?** 
要學平面美工的軟體，只要你自己本身有電腦操作基礎能力就可以啦(就是那種..存取檔案的觀念、鍵盤快速鍵的概念.....)。像我是在臺中的巨匠電腦上課，老師一開始就有先說了!每個軟體上課都是實際範例作品的上課方式，不會再針對很基礎的功能做解說，有範例的上課~~~比較活潑生動ㄟ!!才不會聽工具解說聽到睡著=_="就算前面工具不熟析，後面的範例作品還是會不斷的再重複使用到。這樣就學的起來啦^^" 
軟體的話，恩~~~我個人是先從影像處理(就是PhotoShop)開始學的，因為自己喜歡拍照片，就想先學學影像的編輯啦!!後來再接觸Illustrator(畫插畫的~~)，上課也有用到繪圖板畫。(雖然畫的很醜~可是挺好玩的) 
至於你的話，真的很擔心學不好，那就先從PhotoImpact入手吧! 



**還有我想知道,若不是學這個出身的人,會有進入這個工作的進入障礙嗎?@@" **** 
其實，最大的障礙~~~應該是自己相不相信自己可以好好學，認真做吧!!! 
我就有朋友自己是念電機系的，後來還不是跑去印刷公司當設計師了!!!(也是他介紹我學的ㄟ....看他學的這樣有心得，害我也踩進設計不歸路了^^")





 參考資料： 
 巨匠網站&自己學習經驗..... 


可樂
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 Photoshop，Illustrator（或CorelDraw），Indesign，學這三種出去大部份都是做平面設計或是排版編輯比較多。 

Auto CAD學出去大部份是做建築製圖或機械製圖。 

我形我速 .PhotoImpact 學這兩種大多是做網頁設計的，但很少有公司會要求會這兩種，因為軟體是針對家庭用而設計的。 

所以看你以後想做什麼，就去學什麼囉～





碧勒絲 Plus+ Beauty
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 我絕得你專這三個就ok了Photoshop ,CorelDraw ,Illustrator 

CorelDraw/Illustrator-平面設計佳(比較著名) 
Photoshop-強大的影像製作軟體(可以改圖﹐玩合成﹐上色等技巧) 

Photoshop+CorelDraw+Illustrator=熟練的話全部軟體配合可以做出很好的效果的(單單玩Photoshop也可以弄到出色的效果啦) 




#還有我想知道,若不是學這個出身的人,會有進入這個工作的進入障礙嗎?@@"  

那你是否真的有興趣﹐加上最好你能去找課程去學﹐有教師講解概念會比較好﹐自學也可以﹐只是要比別人付出更多努力去學咯﹐設計這個行業我覺得只要你有創意﹐一定能夠立足的 

加油﹗~





 參考資料： 
 小小經驗 


ten k
 · 10 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久













 
分頁
 1
 2
 下一頁



檢舉不當使用

 我認為此問題違反社群指南 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此問題違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此解答違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此解答違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此意見違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此意見違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消



 

你可能對以下搜尋感興趣：


防毒軟體為您抵擋病毒攻擊

海外代購超輕鬆

日本旅遊讓你天天上網超方便

好背好搭的後背包












發問問題
通常可在幾分鐘內獲得解答！







展開»






詳細資料



詳細資料






現有問題




更多





請多詳述您的問題
上傳處理中




上傳失敗。 請上傳大於 100x100 像素的檔案
目前發生問題，請再試一次。
您只能上傳 PNG、JPG 或 JPEG 等類型的檔案。
您只能上傳 3GP、3GPP、MP4、MOV、AVI、MPG、MPEG 或 RM 等類型的檔案。
您只能上傳不超過 5 MB 的相片。
您只能上傳不超過 600 MB 的影片。
您只能上傳相片 (png, jpg, jpeg) 或影片 (3gp, 3gpp, mp4, mov, avi, mpg, mpeg, rm)。
您只能上傳相片或影片。
影片不應超過 <b>600mb/5 分鐘</b>
相片不應超過 <b>5mb</b>
影片不應超過 <b>600mb/5 分鐘</b>相片不應超過 <b>5mb</b>
  







解答問題


Cdr轉ai png圖檔問題?



 

明明有下載程式，想要解除安裝，但控制台卻找不到，怎麼會這樣?



 

請問能不能給我科普特文全部的字母（大小寫都需要），不是圖片哦，要那種可以直接複製貼在Word上面的文字，感激不盡?



 

我剛剛不小心把line很重要的訊息刪掉了！！！！！！我們都是使用iphone，我有請對方把按傳送訊息記錄給我不知道這樣可以復原嗎？？？？求解QQQQQQQQQQQ?



 


發燒問題




男人陽虛怎麼辦???

                  4 個解答
              

 

電腦看影片為何會斷斷續續的?

                  5 個解答
              

 

WELCOME色情視窗關不掉 求解QQ?

                  4 個解答
              

 
更多問題





我的電腦一直跳出新視窗?

             4 個解答
         

 

電腦桌面東西完全不見 工作管理員也無法開啟 但右鍵可以使用 求好心人幫忙解決?

             4 個解答
         

 

20170606
求line禮品小舖金頭腦送禮達人第2彈解答~~😀😀?

             8 個解答
         

 

  








服務條款


隱私權


RSS































程式設計不等同於軟體開發 | iThome





















移至主內容















































 










程式人｜王建興


 

程式設計不等同於軟體開發
 對於「軟體開發」，很多人都會把它跟「程式設計」看做同一件事，但是實際上兩者是有區別的，還需要有完善的專案規畫、人力部署、品質測試與確保，程式寫完了，並不意味著軟體就開發完成

 






 
按讚加入iThome粉絲團









 




 
文/王建興
|
2014-08-07發表
  

 









 在我從事軟體開發行業以來，有一個體會，是有些人對於這個行業有個誤解，包括我自己也曾經如此。究竟是什麼誤解呢？也就是以為寫程式就是開發軟體的全部或絕大多數。
不只我曾經這麼認為，我也相信有不少人也和我一樣有過類似的誤解，以為只要找了一些知道如何寫程式、或是很擅長寫程式的人，就可以順利地，把軟體開發出來。即使軟體開發的環節需要其他的角色，也不過只是配套，真正的主角還是撰寫程式，其他環節其實並不重要，搞定程式撰寫，就大概可以搞定整個軟體的開發了。
不過，在過去的經驗裡，也有過整個團隊都是程式設計高手，在開發軟體時卻屢遭失敗的經驗。這樣的情況給我一些反思，也就是程式設計其實並不等同於軟體開發，程式設計只是軟體開發的一個階段，是重要的階段，但重要程度不像大多數人所想像的那樣，支配著整個軟體開發的結果。在今天，相信還是不少人認為，只要找到了一群很會寫程式的傢夥，把他們湊在一塊，開發軟體就能無往不利，事實上卻不一定如此。
程式設計與軟體開發的區別
程式設計像是個人的作戰技巧，而軟體開發像是團隊行軍作戰，需要的不只是個人的戰技，諸如整體的戰略、陣勢、分工、武器……等等，也都相當的重要。軟體開發只講程式設計，就像兩軍交戰，我軍空有個人戰技，卻不談如何設定戰略、也不談該如何擺陣一樣。
在多年前我還是菜鳥時參加了一個專案，那時聽到了前輩和客戶的一句話，讓我心裡很震憾。我記得，他大概是這麼說的：「我現在已經不太懂得如何寫程式，但是我懂得怎麼做軟體，這個專案在我的協助下，會順利完成的」。這句話完全顛覆了我那時對軟體開發的看法。
我那時仍舊以為，能夠把程式寫好，軟體就能做得好。因為，不懂得如何寫程式，怎麼把軟體做好呢？然而，之後的一些經驗，讓我慢慢體會到這句話的意思。
開發軟體本身就是一個獨立的學問，和程式設計可以是分離的。程式設計是開發軟體中幾乎不可或缺的一環，但是並不是全部、也不是唯一。
這就好比測試工作也是一個專門的領域，也是開發軟體中無法省略的環節，但不會有人認為測試等同於開發軟體一樣。
之所以會有程式設計等同於開發軟體的想法，可能是源自於程式設計是產出實際程式碼的直接手段，因此，才會有類似的迷思產生。
據我觀察，不少人都有這樣的迷思，而這樣的迷思，會使得我們在開發軟體時，太側重在程式設計部份，而忽略了其他在軟體開發中，也必須關註的重要的事情。
就像前段中所說的，軟體開發是一個獨立的學問，它探討的是相關的觀念和方法，使得人們可以更好的開發出軟體。
如果拿打棒球來比喻，球員的打擊技巧像是程式設計，總要把球打出去，才可以發動真正的攻勢，但是，若是要得分，要有選球的觀念、跑壘的觀念，球員間需要合作才能在一個個的壘包間向前推進，而教練也會有各種的戰術運用，像是打帶跑、盜壘、牲打、等等……，綜合搭配起來，才能在一局局的球賽中嘗試得分。
守備方也一樣，面對不同的打者，會有不同的守備陣形，而投手的配球策略也會做因應調整。當攻擊方擊出球時，不同位置的守備球員該怎麼移動、補位、甚至如何進行封殺、……等等，這些觀念也都會深深影響最後的結果，而不單單取決於投手的球速、變化球的種類或變化幅度。
想打好一場棒球賽，固然個別球員的球技扮演重要的角色，但是像是作戰策略的擬定、或是融入於比賽之中的各種觀念，默契搭配方式，其重要性也不亞於球技，甚至更在那之上。
棒球比賽的例子，我們可以拿來類比軟體開發的觀念及方法。若想好好地設計出軟體，光能設計程式還不夠，你得懂得如何開發軟體，而且不是懂得程式設計就懂得開發軟體，兩者可以說是獨立的領域。
因此，我們應該要把軟體開發當做是一個獨立的學問來看待，而不是把它和程式設計給混在一起，才能夠把軟體開發做的更好。
軟體開發的要件
在軟體開發裡，你要懂得開發軟體的流程、步驟、跟步調。軟體開發中有很多基本的觀念，就像棒球比賽中跑壘、選球那樣的基本，也那樣的重要，但還是很多人是在不瞭解或不貫徹這些基本觀念的情況下開發軟體。在這種情況下，即使很會撰寫程式，軟體開發的過程，也有可能發生諸般的問題及不順利。
就像有個基礎的小觀念就是，在開發時你應該畫分階段，不論究竟分為多少階段、也不管每個階段究竟有多長或多短，每一個階段都有一個明確的開始和結束。在每個階段裡都應該要有明確的需求、有個明確的目標，才能開始進行之後的開發動作。
但是，我們還是很常看到一些人開發軟體時沒有明確的階段畫分，把所有想做的事都混在一起，也沒有明確的需求就開始寫程式，也放任需求不時地改變、調整，沒有任何管控需求變更的程序或手段。這麼一來，就容易導致無法收斂的需求、或是持續變化的需求，影響到整個開發。
控管品質也是軟體開發的一環
又好比對軟體品質穩定的看法，事實上，在程式碼寫完之後，還需要一段測試及修改的時間，而這段時間通常不少於撰寫程式所花的時間，甚至倍數於撰寫程式所花的時間。
其實，這是一個很基本的觀念，但也總有人不知道、或是不相信這個觀念，最後錯估了軟體實際需要完成的時程，或是在時間截止時，只能交付品質不夠穩定的軟體。
再者，又像是軟體開發中的瑕疵（defect）或議題（issue），經提出後，都需要被透過某種方式來追蹤，並且促使其完成。每個需求不論描述方式多嚴謹或多簡略，都應該有一個明確的描述方式，以便在團隊成員間溝通確認。
採用不同的軟體開發方法論，都有不同的信仰、價值、和所衍生出來的觀念，而絕大多數的開發方法，也都有其共通的基礎觀念。不論如何，我們都應該學習這些觀念並且把它們落實在實務的開發生活中。
軟體開發，除了大體的精神之外，就是由這個精神之下再展開的諸般觀念。這些方法和觀念的重要性並不遜於程式設計的技巧，甚至影響的層面更深遠。
有些人偏重程式設計而忽略軟體開發，或是誤以為程式設計就是軟體開發，都有可能使得他們不多下功夫在軟體開發之上。
然而，軟體開發本身就是一個獨立的學問，它關心的是如何用更好的方式打造出品質好的軟體，和程式設計有相關，但不能畫上等號，或認為它們很接近。
很多時候，我們不見得需要複雜的方法，我們只需要把一些基礎的觀念落實，如此就能得到不錯的成效。
因為，跑壘的速度固然重要，但跑壘的策略和觀念也同樣不可忽視呀。
 



作者簡介



 
 
 

王建興
目前在一家網路應用軟體公司擔任技術長的工作，專長是物件導向設計以及Internet應用系統的開發。他過去的研究興趣包括：點對點網路、分散式網路管理、行動式代理人、感知網路。從企業應用軟體系統，到個人行動裝置上的應用，他都有一些開發的經驗。並且對於網路創業及網路應用的發展趨勢，持續保持高度的關心。

  

 
































 







 Advertisement


 




 

 

更多 iThome相關內容


  
 探索真正的需要，避免過度工程化 

 軟體開發中常有的低估 

 iOS神人應徵工作之滑鐵盧事件 

 程式設計的品味 

 減少軟體開發中的會議 

 在家工作 
 
 






 







 

熱門新聞






 


英國Wi-Fi業者使壞，讓2.2萬名用戶無意中同意去掃流動廁所

2017-07-18
 
 






 


Google 兩步驟驗證將以手機提示取代簡訊

2017-07-17
 
 






 


【AI關鍵技術】三大熱門深度學習框架新進展

2017-07-19
 
 






 


硬體不相容，部份英特爾Atom裝置無法升級Windows 10 Creators Update

2017-07-18
 
 






 


災難！CoinDash首度發行貨幣當天就被駭，損失近700萬美元

2017-07-18
 
 






 


微軟亞洲研究院院長洪小文：越複雜越不管用，AI最適合封閉型的高重複性任務

2017-07-17
 
 






 


安撫使用者不滿情緒，Skype聯絡人狀態顯示功能回來了!

2017-07-17
 
 






 


南韓代管業者Nayana遭勒索軟體攻擊，與駭客達成協議將支付110萬美元贖金

2017-06-21
 
 






 


2017年AI開始普及化，技術競賽白熱化

2017-07-15
 
 






 


國際警方聯手關閉暗網市集AlphaBay

2017-07-17
 
 



 

專題報導




企業行動化管理解決方案採購大特輯 


AI 100（上） 


公有雲儲存服務大盤點 


富士通AI新戰略 


企業身分驗證雲端服務採購特輯 

更多專題報導
 

 










FreeSerifSoftware 3D設計、圖片編輯、網頁設計等8款免費軟體任你載


















































































返回頂端 跳到主選單 跳到內容 跳到主側邊欄免費資源網路社群免費資源指南，每日免費資訊與網路新知 


你在這裡：首頁 / 免費軟體 / FreeSerifSoftware 3D設計、圖片編輯、網頁設計等8款免費軟體任你載FreeSerifSoftware 3D設計、圖片編輯、網頁設計等8款免費軟體任你載





FreeSerifSoftware 提供的這8款體涵蓋了圖片編修、文件編輯、網頁製作、3D設計等各種我們在使用電腦上不同方面的需求。說倒圖片編修、網頁製作軟體，大家一定立刻想到Adobe的Photoshop和Dreamweaver這兩套付費軟體，但他們的價格實在令人難以親近。看過本文後不妨試著用FreeSerifSoftware的PhotoPlus、DrawPlus和WebPlus來取代他們吧，功能雖比不上Adobe的軟體，但使用上卻相對容易一些。






軟體資訊

軟體名稱：PhotoPlus、PagePlus、DrawPlus、3DPlus、PanoramaPlus、Rotate my Pics、Scrapbook Artist、WebPlus
軟體語言：多國語言（無中文）
軟體網站：http://www.freeserifsoftware.com/

軟體安裝
進入FreeSerifSoftware下載所需的軟體。下載頁面會有兩個按鈕，請選擇 Download XXX SE。
▼開啟所下載的檔案，並讓其運行。

▼過了數十秒後會看到如下畫面，點擊Next進入下一步。

▼填寫使用者名稱、組織機構名稱，可保留預設直接進入下一步。

▼閱讀條款，並選擇 I accept the terms …… 。

▼選擇語言，裡面沒有中文選項，可保留預設（英文）。

▼是否安裝Ask Toolbar，沒有安裝不會影響軟體功能，建議將選項都取消並進入下一步。

▼是否在桌面建立捷徑（Create Desktop shortcut）、加入快速啟動捷徑（Creat Quick Launch ……）。

▼選擇安裝目錄並點擊Install開始安裝。

▼正在安裝，請等待數分鐘。

▼安裝成功，點擊Finish結束安裝程式。

註冊用戶
FreeSerifSoftware的軟體都必須註冊後才可使用，每個軟體都要註冊一次。
▼當第一次啟動軟體時會出現以下畫面，請點擊Start Registration進行註冊。

▼填寫一些基本資料，Email需如實填寫，因為必須使用Email取得序號。

▼請檢查Email取得序號，並將他填入。


▼直接點擊Next進入下一步。

▼輸入更多信息（不輸入也可以）。

▼註冊完成了！點擊Finish結束，並開始使用軟體。

分享本文：按一下以分享至 Facebook(在新視窗中開啟)分享到 Twitter(在新視窗中開啟)按一下以分享到 Google+(在新視窗中開啟)分享到 Pinterest(在新視窗中開啟)
 





關於 魏風Hi! 我是魏風，這個暱稱的由來一直是個迷。在空閒的時候喜歡上網逛逛，因為在瀏覽不同網站的過程中能瞭解、學習一些從未接觸過得事物，進而讓生活更有趣、更充實。



使用電子郵件訂閱網站

輸入你的電子郵件地址訂閱網站的新文章，使用電子郵件接收新通知。
 


電子郵件位址 












贊助商連結




追蹤更新


站內搜尋






贊助商連結




 近期文章


HelloFax 免費線上傳真服務整合 Google 文件更好用，立即獲取 25 頁配額


Dimmy.club 將螢幕擷圖或程式畫面放入圖庫裝置顯示，打造專業模型圖片


FreePD 免費公眾領域音效配樂 Mp3 下載，可使用於個人或商業用途


Airtape 將 YouTube、SoundCloud 連結轉 Mp3，更聰明的線上音樂下載器


Backup and Sync from Google 同步處理工具免費下載，讓 Google 幫你備份重要資料


GetRate 在 Mac 快速查看各國貨幣匯率、預測及計算機，支援 130 種貨幣


Spotify.Me 為你的 Spotify 聆聽習慣建立漂亮分析統計圖，客製化播放清單


PngImg 世界最大 PNG 透明背景圖庫推薦，兩萬張免費插圖下載


註冊網址必備！DomainHack.Me 幫你找出各種網域名稱 Hack 拼法組合


Eternal Blues 免費掃描 Windows 有無勒索病毒漏洞，趁入侵前防堵修復



網路時事

思源宋體 Noto Serif CJK 字型免費下載！Google、Adobe 再次攜手推出開放原始碼字體
Apple Music 登陸台灣！免費三個月試用音樂串流服務，不聽音樂要幹嘛？
Netflix 台灣正式推出！HD、4K 高畫質電影影集節目首月免費看！
從 Microsoft 官方網站免費下載 Windows 7、8.1 及 10 中文光碟映像檔
巴哈姆特「動畫瘋」線上看日本動畫新番，免費免下載註冊即可看！
Vivaldi 兼具快速和個性化網頁瀏覽器，相容 Chrome 擴充功能
Firefox 64 位元官方版本正式推出，現已開放免費下載
Dropbox 學生空間大滿貫過期，回收 25GB 容量後六個替代方案選擇
10 個強化Facebook帳號安全秘技，降低帳號被盜用的風險
8 個線上服務「兩步驟驗證」設定說明，確保帳戶免於威脅
6 招防止手機簡訊「小額付費」詐騙秘技，新型態病毒不可不知
思源黑體：Adobe 與 Google 合作開發開放原始碼中文字型
[下載] WinRAR 解壓縮軟體正式推出中文免費版，別再用盜版破解版了！
WinZip 推出中文版免費下載！曾是最多人使用的老牌解壓縮軟體…
8 個免費增加 Dropbox 容量教學總整理
Mipony 白馬下載器：網路下載必裝！支援數百免空可突破下載限制


精選主題

一鍵移除 Ask Toolbar、Hao123、Snap.do 等首頁綁架惡意程式
Google 用戶都該知道的10個重要連結
46個免費圖庫網站總彙整
15個免費下載高解析度圖片最佳圖庫
下載高畫質相片素材的13個免費圖庫資源精選
Google 閒置帳戶管理員，幫你處理身後的數位遺產繼承
適合程式設計師編寫程式的免費等寬字型（Monospaced Font）整理
12個你應該知道的中英文假字、文章產生器（Lorem Ipsum）
20個免費下載創用 CC 授權音樂的網站彙整
Android 限定！15個幫你準備 IELTS、TOEFL、GRE 英文檢定的應用程式
40個設計師必備免費資源超推懶人包


WordPress 架站

在網站搬家前，你應該先註冊一個自己的網址！四個推薦的網域名稱註冊商
如何註冊網址並對應到你的部落格？適用於 WordPress、Blogger
搬家自架 WordPress，我推薦的五個虛擬主機服務
架站更上一層樓，我推薦的五個虛擬專屬主機（VPS）服務
WordPress Hosting 架站空間精選，最多人推薦的五個國外虛擬主機方案
自架 WordPress 虛擬主機租用教學，將網誌備份匯出、匯入到新家
9 個提升 WordPress 網站安全性的方法
安裝 WordPress 後你應該做的 25 件事
11 個強化 WordPress 網站安全的 .Htaccess 設定技巧
如何挑選一個適合你的虛擬主機服務？我參考的七個比較項目
從 Blogger 自訂網址搬家到自架 WordPress，六步驟不求人教學
8 個實用的 WordPress 程式碼
7 個 WordPress 初學者常犯的錯誤
為 WordPress 網站加入討論區教學
在 WordPress 設定 HTTPS，強制使用 SSL 安全加密協定教學
殺手級 WordPress 體檢項目：101 個建立新網站的超簡易捷徑！
CloudFlare 架站者必備免費 CDN、DNS 託管服務設定教學
台灣用戶也能在 Google Domains 註冊購買網域名稱，詳細申請設定教學
16 個免費網站速度測試工具推薦！網頁效能評比，搜尋引擎最佳化必備
亞馬遜 VPS 服務 Amazon Lightsail 搭配 ServerPilot 快速架設 WordPress 教學


贊助商連結




授權方式
免費資源網路社群由 Pseric 製作，以創用CC 姓名標示-非商業性-禁止改作 4.0 國際授權條款釋出。





















