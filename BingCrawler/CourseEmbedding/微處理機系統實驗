



微處理機系統實驗 | 交資夢想 – moved to http://shaform.com/csdream/




























































交資夢想 – moved to http://shaform.com/csdream/


交大資工，交織夢想。





Skip to content

主頁文章彙整
關於








← 大學裡的實用搜尋技巧
程式語言 →


微處理機系統實驗

Posted on 三月 10, 2012 by Shaform  

前言
微處理機系統實驗是交大資工大三上的課程，在這門課中，學生將會撰寫在 microcontroller 上執行的程式，利用實驗版或甚至麵包版，實際使單晶片和環境互動。所謂的 microcontroller，指的是把中央處理器、記憶體、各種輸入出介面等等都整合在一起的小型計算機。雖然計算能力沒有一般電腦的 CPU 好，但體積小而便宜，被運用在簡單的嵌入式系統中。這堂課使用的微處理機為 8051，使用的語言主要為 8051 的組合語言，但有些班也可能使用 8051 C 來做更複雜的操作。
在課程中將會操作許多的輸出入，包含按鍵、開關、數字鍵盤、透過光敏電阻與熱感電阻配合 ADC 讀取環境的值。或者是 LED 燈、七段顯示器、點矩陣顯示器的輸出，控制馬達、蜂鳴器，甚至是利用 RS-232 和電腦溝通等等。
筆者的期末專題是一個搶答遊戲，利用 RS-232 從電腦終端機顯示題目，兩個玩家透過按鍵搶答，答對時玩家的四驅車會前進，誰先到達終點即獲勝，題目中也有利用蜂鳴器來實做的猜歌題。也有同學是做打地鼠遊戲。
學習資源
這堂課為重實做的課程，練習絕不可少。而讀者若有學過「組合語言與程式程式」，8051 的環境細節與組語的內容其實不深，很快就能進入狀況。讀者可以參考《The 8051/8052 Microcontroller》裡 8051 與組語的基本介紹。或者另外一本《The 8051 Microcontroller》有更全面的教學及練習題。對於 8051 C 的部份，和原始 C 的差別其實不大。讀者可參考：《Embedded C》。而市面上也可找到不少以實做為導向的單晶片中文書籍。
網路上也有不少教學資源：

Architecture and Programming of 8051 Microcontrollers
89S52 microcontroller quick tutorial
8051 教材資源

環境
開發環境可以使用 Keil C51 µVision IDE，不管是組語或者 C 都可以組/編譯。如果你使用 Linux 系的作業系統，也可以使用 MCU 8051 IDE，不過需註意兩者語法稍有不同。另外一個和 MCU 8051 IDE 語法類似且在 Windows 上使用的是 MIDE-51。其中，Keil C 是多數書籍主要使用的開發環境，但免費版對程式大小有些許限制，另外兩個 IDE 則無。
由於有很多學校皆有 8051 的課程，開發板取得非常容易。搜尋「8051 開發板」、「8051 實驗板」皆可找到不少商家販賣。開發時，可以使用 ICE 和電腦連結，即時模擬程式在 8051 上執行的結果，也可以利用燒錄器實際燒到 8051 上再執行。前者較為方便，也較容易除錯，所以通常在開發早期皆透過 ICE 執行程式，事實上在課程中你幾乎不會需要把程式實際燒錄到 8051 上。燒錄器和模擬器皆可在網路上購買。和 8051 相容的單晶片非常多，基本款的十分便宜，在一般的電子材料行皆可購買。其他一些週邊材料也多半可在電子材料行購買到。或者你也可到 iCshop 等網路商店找找看。
參考練習題

用七段顯示器製作配合按鍵製作可設定的時鐘。
用七段顯示器和數字鍵盤實做計算機。
用蜂鳴器播放一段音樂。

延伸閱讀
筆者想在這裡介紹另一個平臺：：Arduino。他具有很低的入門門檻，且近年在各國學校裡愈來愈流行。他是一個開放的硬體開發平臺，不僅軟體原始碼是開放的，連硬體電路設計圖都是開放的，玩家甚至可以自行組裝出 Arduino。可參考：Arduino 簡介。而由於具有豐富的函式庫，玩家可以輕易的寫出複雜的功能。種種因素讓 Arduino 深受業餘玩家的喜愛。在台灣，玩 Arduino 的人也漸漸增加，慢慢形成一個社群。
這也是筆者在此介紹他的原因，若讀者對自己動手作專題很有興趣，但對組語或其他硬體知識並不熟悉，則 Arduino 非常值得一試。他的開發工具從硬體、模擬器、IDE、燒錄器，通通都有官方套件，台灣也有代理商可購買。
相關連結

8051/8052 Instruction Set
8051 相關文章
Arduino 筆記 – 認識 Arduino 
Arduino.TW 樂園

Share this:點擊分享到 Google+(在新視窗中開啟)分享到 Facebook(在新視窗中開啟)分享到 Twitter(在新視窗中開啟)Click to email(在新視窗中開啟)請按讚：喜歡 載入中...

相關
 

												本篇發表於 交大課程 並標籤為 8051, Arduino, 程式設計, 組合語言, microcontroller, 交大課程, 交大資工。將永久鏈結加入書籤。											


← 大學裡的實用搜尋技巧
程式語言 →



發表迴響 取消回覆 



在此輸入你的回應…




在下方填入你的資料或按右方圖示以社群網站登入：





























 
 


電子郵件 (必) （電子郵件地址不會被公開）



名稱 (必)



個人網站














 您的留言將使用 WordPress.com 帳號。 ( 登出 / 變更 )












 您的留言將使用 Twitter 帳號。 ( 登出 / 變更 )












 您的留言將使用 Facebook 帳號。 ( 登出 / 變更 )












 您的留言將使用 Google+ 帳號。 ( 登出 / 變更 )




取消
連結到 %s




 透過電子郵件通知我後續回應。
 



 









搜尋：



  最近文章 

資夢


Timus Online Judge 教學


資訊工程專題


交大資工相關獎學金、競賽、工讀與實習機會


程式語言


 熱門文章 

						資工系開放式課程資源					



						正規語言概論					



						組合語言與系統程式					



						計算機概論與程式設計					



						基礎程式設計					



						微處理機系統實驗					



						數位電路實驗					



						交大資工相關獎學金、競賽、工讀與實習機會					



						文章彙整					



						資夢					

文章存檔 
2014 年 五月
2013 年 六月
2012 年 十月
2012 年 七月
2012 年 六月
2012 年 三月
2012 年 二月
2011 年 十二月
2011 年 十一月
2011 年 十月
2011 年 八月
2011 年 七月
2011 年 四月

分類 
學習資源

實用技能

教學

交大生活

交大課程


8051
ACM
Arduino
C
Google
Haskell
HDL
Java
microcontroller
MIT
OCW
online judge
problem solving
Prolog
Python
RSA
Timus
Verilog
交大
交大課程
交大資工
交資夢想
大學
學習資源
密碼學
實習
專題
打工
搜尋
教科書
數學
正規語言
獎學金
程式設計
競賽
組合語言
英語
計算理論
資工
開放式課程其它 
註冊 登入
文章 RSS 訂閱
迴響 RSS 訂閱
WordPress.com 
 






					交資夢想 – moved to http://shaform.com/csdream/				


在WordPress.com寫網誌.



















傳送到電子郵件地址

你的姓名

你的Email






取消

				文章沒有送出-請確認你的Email位置			

				Email確認失敗,請稍後再試.			

				抱歉，你的網誌無法透過電子郵件分享			





 
 
%d 位部落客按了讚：














































































































































微處理機系統實驗 – 交大修課心得 – 一座島







































































一座島
一座島，一個人，一個世界。














一月 2, 2013 by Shaform 
微處理機系統實驗 – 交大修課心得 



課程資料
微處理機系統實驗
開課：陳添福老師
修課年度：100資工系
撰寫在 microcontroller 上執行的程式，利用實驗版或甚至麵包版，實際使單晶片和環境互動。所謂的 microcontroller，指的是把中央處理器、記憶體、各種輸入出介面等等都整合在一起的小型計算機。
這堂課使用的微處理機為 8051，使用的語言一開始為 8051 的組合語言，但到後來多半用 8051 C 來做更複雜的操作。其他一些跟這門課相關的議題：〈微處理機系統實驗〉。
上課方式
使用投影片上課。雖然官方上有分上課和晚上的上機時間，不過老師比較喜歡連在一起上，所以在開學時就把上課改成上機前的晚飯時間。上機課兩人一組，在工三二樓的電腦教室上課。
評分方式
沒有期末考和小考。由於學生要求，所以沒有期中考，所有評分就由 10 次 lab 和最後的期末 project 決定。Lab 做不出來都可以補 demo，不會扣分，不過每次的實驗報告要準時交。
評分比例和每次實驗的成績一直都沒有公佈，建議如果往後有機會修習的話可以向老師要求公佈所有原始成績。
考試作業
Lab 主題如下:

Lab 1 – LED：控制 LED 燈，使其輪流閃爍。
Lab 2：讀取按鍵輸入，在矩陣顯示器上顯示數字
Lab 3 – 七段顯示器 + 麵包版：操作 7 段顯示器，顯示特定數字。一開始先是實驗版上的顯示器，接下來要自己接麵包版。
Lab 4 – Keyboard I/O：用 4×4 數字鍵盤配合七段顯示器製作計算機。
Lab 5 – Timer/ Counter：透過計時器製作時鐘，透過計數器計算按鈕按下次數。
Lab 6 – 8051 Interrupt：透過外部按鈕中斷控制LED。透過計時器中斷控制七段顯示器，達成倒數時鐘。跟上次 Lab 很像，只是透過中斷，可以達成更精準控制。
Lab 7 – LCD：用 LCD 顯示數字，製作可調整的鬧鐘等等，這裡常會遇到硬體問題，值得註意。
Lab 8 – 8051 RS232 序列傳輸：透過 RS-232 接頭和電腦通訊，可以在終端機上顯示文字，也可以接收鍵盤輸入終端機的內容。在這 Lab 裡，使用的是 Windows 內建的「超級終端機」，不過其實用 PuTTY 也可以連，而且還可以用控碼等等來達成特殊效果，在期末專題時或可一試。近年的電腦，慢慢沒有 RS-232 接頭了…
Lab 9 – External Memory & ADC：將程式燒錄到外部記憶體，再讓 8051 從記憶體中開始執行。另外還有讀取光敏電阻/熱敏電阻的訊號。
Lab 10 – 8051 周邊 I/O：玩玩磁簧開關、蜂鳴器、繼電器等等元件，為專題準備。

最後幾個星期就是做期末專題，大家點子都不太一樣。這期間要上臺報告兩次，一次是專題構想，一次則是最後講解專題。大家可以觀摩彼此的專題，最後還有觀眾投票，前幾名有神秘小禮物。
筆者這組的期末專題是一個搶答遊戲，利用 RS-232 從電腦終端機顯示題目，兩個玩家透過按鍵搶答，答對時玩家的四驅車會前進，誰先到達終點即獲勝，題目中也有利用蜂鳴器來實做的猜歌題。也有同學是做打地鼠遊戲。
結語
這堂課重要的就是實驗啊，所以都不點名，也沒有考試。註意到作業投影片和上課投影片常常當天才放上去，所以對我而言想提早準備也有點辛苦。
這門課感覺最花心力的其實是硬體問題，組語和 C 的語法其實不多。記得最後做期末專題時我們還用了烙鐵之類的，記得我烙了半天弄不好，還有熱心的朋友跑來幫我。
然後就是，買材料還滿花錢的，本來想用紅外線模組，不過失敗了，似乎限制頗多，不見得能達到想要的效果。
延伸閱讀

《The 8051/8052 Microcontroller》
《The 8051 Microcontroller》
《Embedded C》
《Architecture and programming of 8051 MCU’s》


 

廣告




 


分享此文：GoogleFacebookPocket請按讚：喜歡 載入中...

相關
 





發表迴響 取消回覆 



在此輸入你的回應…




在下方填入你的資料或按右方圖示以社群網站登入：





























 
 


電子郵件 (必) （電子郵件地址不會被公開）



名稱 (必)



個人網站














 您的留言將使用 WordPress.com 帳號。 ( 登出 / 變更 )












 您的留言將使用 Twitter 帳號。 ( 登出 / 變更 )












 您的留言將使用 Facebook 帳號。 ( 登出 / 變更 )












 您的留言將使用 Google+ 帳號。 ( 登出 / 變更 )




取消
連結到 %s




 透過電子郵件通知我後續回應。
 



 






 
搜尋



熱門文章與頁面︰ 

						從交大資工到臺大資工所					



						在臺北實習的短期租屋					



						千萬別學英語：關於學習、過往、及其它					



						女生讀資工					



						談談資工升大學備審資料的準備					



						「從留學到在美就業」講座心得					



						談談資工升研究所備審資料的準備					



						文章匯整					



						在交大資工的心得					



						計算機系統管理 – 交大修課心得					

  近期文章 

看美劇的日子


眼界、控制、選擇


閱讀器


2016 年末回顧


背後的眼光


 近期迴響 
「姆Q」對「PTT 教我的人生哲學」留言「Shaform」對「從交大資工到臺大資工所」留言「dechen」對「從交大資工到臺大資工所」留言「Shaform」對「2016 年末回顧」留言「6 Anson」對「2016 年末回顧」留言 
分類 
生活紀實

白日夢

胡謅

閱書坊

設計間

散掉的紙張

望世界


TagsAIESEC
AP
Bellevue
BP
debate
dvorak
english
Flash
Google
Google Drive
IBM
Kindle
linux
Mainframe
Master the Mainframe
Microsoft
NPSC
Redmond
System z
USA
交大修課心得
交通大學
努力
升大學的準備方向
升學
危險心靈
古都馬拉松
臺北
臺南
臺大
台灣
台灣大學
回顧
國文
大學
大腦
學習
實習
工作
心情
思想
性別
教學
教育
文字
新竹
新聞
校園
比賽
海外實習
生技
生活
研究所
科幻
程式
程式設計
網路
考試
英文
英語辯論
行列
計劃
設計
評論
資工
超自然
足球
軟體工程師
輸入法
運動
閱謮
閱讀
電腦
食物
鬼Blog Stats 
278,392 hits

 
























張貼到



取消







 












 
 
%d 位部落客按了讚：












































































































































微處理機實驗 - 長庚大學電機工程學系 電機系 電機所 




Your browser does not support JavaScript!

Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!
Your browser does not support JavaScript!













長庚大學 電機工程學系 電機系 電機所

長庚大學 電機工程學系









繁體版
ENGLISH
網站導覽
長庚大學首頁











Your browser does not support JavaScript!

































特色課程 微算機




特色課程-首頁
系統組心得
通訊組心得
展示影片-系統組
展示影片-通訊阻




Your browser does not support JavaScript!








































首頁
 > 
特色課程(T) 
 > 
微處理機實驗 










微處理機實驗


























Course objectives : 教授學習單晶片微處理機之基本硬體架構、指令集、週邊控制之基本原理，並學習程式設計。
Course description : 
本課程以Microchip公司所生產之APP001教學板為主要教材，使用設計介面以MPLAB IDE 進行組合語言設計及實驗。課程內容包括:
1. 硬體架構基礎
2. 指令集
3. 發展系統工具
4. 程式語言實作
5. 週邊及實作
teaching methods : 課堂教學、小組討論、"上機實驗" + " 作品競賽"

































實驗心得_通訊阻






















競賽展示影片(系統組)






















競賽展示影片 (通訊組)






















實驗心得_系統組







































































微處理機系統實驗




課程名稱Course
微處理機系統實驗 (Microcomputer System Lab)


課程說明Introduction

		In this course, we will use an Xscale single board computer to perform 
		embedded software programming and hardware interfacing design.
		Goal of this course
    * Understand the basics of microprocessor system hardware
    * Understand the design of both hardware and software system
    * Familiar with techniques of computer interfacing
    * Learn basics of device driver programming
    * Familiar with Linux and GNU tools


指定用書Textbook
(Not required) Embedded Linux: Hardware, Software, and Interfacing
		by Craig, Ph.D. Hollabaugh, Addison Wesley Professional;  1st 
		edition (March 7, 2002)

		內嵌式Linux系統---硬體、軟體與介面
		陳清豪 譯，培生教育出版集團


教學內容
		Content
1.    Introduction to embedded systems
		2.    Build development workstation
		3.    Build cross-compiling tool sets
		4.    Boot embedded Linux on remote system
		5.    Debug remote system
		6.    Build toolchains and root for an embedded system
		
		7.    Device drivers and RS-232 interface
		8.    Memory-mapped IO interface
		9.    interrupt-driven IO 
		10.  System integration and final projects














微處理機 Microprocessor















微處理機實驗 MicroprocessorLab (
  100上
)
ARM
  內核嵌入式SOC 實作



　
　
 授課教授  上課用書  課程大綱 
參考教材  上課時間   課程助教   
　



　


公    告


      



 




09/22


上課講義        下載
ARM指令集
     下載




09/29


上課講義        下載




10/06


上課講義        下載




10/13


上課講義        下載




10/20


上課講義        下載
範例               
  下載




10/27


上課講義        下載




11/10


上課講義        下載
範例               
  下載




11/17


上課講義        下載
範例               
  下載




11/24


上課講義        下載
範例               
  下載




12/1


上課講義        下載
範例               
  下載




12/8


上課講義        下載
範例               
  下載




12/15


上課講義        下載




12/22


上課講義        下載




12/29


上課講義        下載




                                                                                                
網頁維護   720A實驗室
　
　
　
                                                     

授課教授
                                                                                 




    蔡智強 教授                             
    Jichiang Tsai, Ph. D
                
  臺中市402南區國光路250號       
  Department
  of Electrical Engineering 
       國立中興大學電機工程學系         National
  Chung Hsing University
        Tel: (04) 2284-0688 ext.
  821                 
  Fax: (04) 2285-1410
            Email: jichiangt@nchu.edu.tw       
  



　
上課用書                     

                                  
ARM  內核嵌入式 SOC 實作  
全華科技圖書股份有限公司
                                                                                   

課程大綱
　                 
嵌入式系統開發環境與流程、訓練平臺(PreSOCes)介紹與操作、IAR EWARM Compiler介紹與操作、基本指令實習、
                    
系統初始化設定實習、LED、DIP SWITCH、按鍵組實習、LCD面板實驗、計時器實習、  Interrupt實習、DMA實習、
                    
I2C與Real Time Clock實習、Codec語音實習、Ethernet通訊實習
參考教材      
                         
 2. Embedded uClinux 在 PreSOCes 上實作       
全華科技圖書股份有限公司
                                                                                 

上課時間
         
      每 星期四     15:10 ~ 18:00 
　                                   
501 微處理機實驗室
課程助教
         陳俞樺   
timegamer@ares.ee.nchu.edu.tw      Lab: 720A
何建勳   
breezeleader@ares.ee.nchu.edu.tw     
Lab: 720A
 






微處理器 - 維基百科，自由的百科全書































 







微處理器

維基百科，自由的百科全書


					前往：					導覽，					搜尋











本條目需要編修，以確保文法、用詞、語氣、格式、標點等使用恰當。 
請按照校對指引，幫助編輯這個條目。（幫助、討論） 







本條目沒有列出任何參考或來源。（2014年2月19日） 
維基百科所有的內容都應該可供查證。請協助添加來自可靠來源的參照以改善這篇條目。無法查證的內容可能被提出異議而移除。 



微處理器


Intel Conroe核心



研發日期
1960年代後期或1970年代前期


連接介面

連接至印刷電路板透過:

CPU插座
焊接
其他方法




架構


PowerPC
x86
x86-64
其他（詳見下文）




主要生產商


AMD
IBM
Intel








第一款商用微處理器Intel 4004


微處理器（英語：Microprocessor，縮寫：µP或uP）是可程式化特殊積體電路。一種處理器，其所有元件小型化至一塊或數塊積體電路內。一種積體電路，可在其一端或多端接受編碼指令，執行此指令並輸出描述其狀態的訊號。這些指令能在內部輸入、集中或存放起來。又稱半導體中央處理器（CPU），是微型電腦的一個主要部件。微處理器的元件常安裝在一個單片上或在同一元件內，但有時分佈在一些不同晶片上。在具有固定指令集的微型電腦中，微處理器由算術邏輯單元和控制邏輯單元組成。在具有微程式控制的指令集的微型電腦中，它包含另外的控制儲存單元[1]。用作處理通用資料時，叫作中央處理器。這也是最為人所知的應用（如：Intel Pentium CPU）；專用於圖像資料處理的，叫作Graphics Processing Unit圖形處理器（如Nvidia GeForce 9X0 GPU）；用於音訊資料處理的，叫作Audio Processing Unit音訊處理單元（如Creative emu10k1 APU）等等。從物理角度來說，它就是一塊整合了數量龐大的微型電晶體與其他電子元件的半導體積體電路晶片。
之所以會被稱為微處理器，並不只是因為它比迷你電腦所用的處理器[需要消歧義]還要小而已。最主要的區別別，還是因為當初各大晶片廠之製程，已經進入了1 微米的階段，用1 微米的製造，所產製出來的處理器[需要消歧義]晶片，廠商就會在產品名稱上用「微」字，強調他們很高科技。與現在的許多商業廣告中，「奈米」字眼時常出現一樣。
早在微處理器問世之前，電子計算機的中央處理單元就經歷了從真空管到電晶體以及再後來的離散式TTL積體電路等幾個重要階段。甚至在電子計算機以前，還出現過以齒輪、輪軸和槓桿為基礎的機械結構電腦。文藝復興時期的著名畫家兼科學家李奧納多·達·文西就曾做過類似的設計[來源請求]，但那個時代落後的製造技術根本沒有能力將這個設計付諸實現。微處理器的發明使得複雜的電路群得以製成單一的電子元件。
從1970年代早期開始，微處理器效能的提升就基本上遵循著IT界著名的摩爾定律。這意味著在過去的30多年裡每18個月，CPU的計算能力就會翻倍。大到巨型機，小到筆記型電腦，持續高速發展的微處理器取代了諸多其他計算形式而成為各個類別各個領域所有電腦系統的計算動力之源。



目錄


1 歷史

1.1 最早的晶片
1.2 8位元
1.3 16位元
1.4 32位元
1.5 RISC技術


2 市場統計資訊
3 常見微處理器架構
4 註
5 其他參考
6 外部連結



歷史[編輯]
最早的晶片[編輯]
正如近現代其他科技的發展一樣，微處理器時代仿佛一夜之間就到來了。三個公司，三個計劃，幾乎不約而同地成為微處理器產業的先鋒。它們就是英特爾的Intel 4004，德州儀器公司的TMS 1000和蓋瑞特艾雷賽奇（Garrett AiResearch）工業部的CADC（Central Air Data Computer）。
1968年蓋瑞特被邀請參加研製一種數字電腦，以同正在開發中的用於美國海軍F-14雄貓戰鬥機的主飛行控制電腦的電機系統競爭。這個以基於MOS技術的晶片組為核心的CPU於1970年設計完成，並以更小的體積和更高的可靠性打敗了基於電機系統的設計，被運用於早期的所有雄貓戰鬥機。但今天看來，知道CADC和MP944晶片組的人並不多，主要原因在於美國海軍認為這種技術太過先進而不允許將其設計細節公開，這種情況一直持續到1997年。
德州儀器公司開發出以預編程嵌入式應用（pre-programmed embedded applications）為主打技術的4位元微處理器TMS 1000，並於1971年9月17日推出代號為TMS1802NC的市場版本，用於生產單晶片計算機。英特爾的4004計劃則由弗得里克·法金（Federico Faggin）主持開發，並於1971年11月15日發布。
德州儀器為微處理器申請了專利。1973年9月4日Gary Boone獲得了單片微處理器的美國專利，專利號是3757306。但是我們可能無法確定究竟哪家公司第一個在實驗室做出了微處理器。1971年和1976年英特爾和德州儀器兩次達成專利互許可協定，根據協定，英特爾向德州儀器付微處理器專利的使用費。Cyrix曾經同英特爾為微處理器專利對簿公堂，關於此事的法律檔案可以參見。[1]
有趣的是，有第三方人士聲稱擁有可以涵蓋「微處理器」的專利。具體請參見這個網站，根據這裡的描述，有人早於德州儀器和英特爾就發明瞭「微控制器」，這算不算「微處理器」尚有爭議。
所謂的單晶片是微處理機的一種變體，它包括了CPU，一些記憶體以及I/O介面，所有都整合在一塊積體電路上。單晶片的專利號為4074351，授予了德州儀器的Gary Boone和Michael J. Cochran。當時他們是以微電腦的名稱申請專利的。
根據麻省理工出版的《現代計算史》第200頁到221頁，英特爾同聖安東尼奧的一家叫做電腦終端的公司（後改名為數點公司）簽署了一份合同，合作設計一塊用於終端的晶片。數點後來決定不用這塊晶片了，而採用TTL邏輯電路設計跑相同的指令集，英特爾隨即將該晶片其命名為8008,並於1972年4月上市銷售。這是世界上第一塊8位元微處理器，也是後來《無線電電子》雜誌賣的著名的馬克-8電腦的主要部件。8008及其後繼產品8080開創了微處理器的市場。
8位元[編輯]
緊隨4位元的4004之後，英特爾設計出世界上第一片8位元微處理器，Intel 8008。此後，在市場運作中非常成功的Intel 8080和Zilog公司的Z80以及一系列其他8位元微處理器又相繼推出。原先在摩托羅拉公司設計Motorola 6800的一群人離開公司，另組建了MOS Technology公司並在6800的技術基礎上推出改良產品6502，藉此與Z80在20世紀80年代的微處理器市場上分庭抗禮。
Z80和6502晶片的設計目標都是要減少整個系統的成本，為此開發者使用了縮小規模，簡化匯流排，合併專用晶片（比如Z80就包含了一個記憶體控制器等方法。這些措施導致了1980年代早期家用電腦的「革命」：消費者用99美元的價格就能買到一臺半可用的電腦了。
摩托羅拉推出了MC6809，成為8位元處理器市場的領頭羊。有人認為這是有史以來功能最強大的純8位元處理器－也是所有投產的硬布線處理器中最複雜的。比MC6809更先進的處理器後來都用了微代碼技術。這是因為硬布線邏輯無法滿足越來越複雜的設計，逐步被淘汰了。
另一種早期的8位元處理器是Signetics 2650。由於其指令集架構新穎而功能強大，這種晶片風靡一時。
RCA公司生產的CDP1802，即RCA COSMAC，是應用於航天的處理器的先鋒。1970年代，NASA的旅行者號和海盜號太空探測器都使用了這種晶片。1989年發射的木星探測器伽利略號也裝配了這種處理器。選用CDP1802，一是因為它可以在很低的功耗下執行*；二是因為它採的工藝可以更好抵抗宇宙射線和電脈衝。因此1802也被認為是第一塊抗輻射微處理器。
16位元[編輯]
第一款多片16位元微處理器是美國國家半導體公司於1973年初期推出的IMP-16，8位元的IMP-8晶片組又於1974年推出。1975年該公司推出了第一款單片16位元微處理器，PACE，其基於NMOS技術的新版本，INS8900不久就替代了它。
其他早期的多片16位元微處理器包括DEC用於PDP11小型機系列中LSI-11和PDP-11/30上的主機板，還有仙童公司的MicroFlame 9440，這兩款都是在1975年到1976年推出的。
另外德州儀器出的TMS 9900也是早期的單片16位元處理器，同TI 990相容。9900用在了TI 990/4小型機，TI-99/4A家用電腦和TM990系列OEM品牌微機上。這塊晶片封裝成在一塊陶瓷64腳雙內線（DIP）晶片，而當時大多數8位元微處理器都用更便宜的40腳DIP。後續產品TMS 9980針對英特爾的8080推出，全相容TI 990的16位元指令集，一次傳輸8位元資料，設計成塑料40腳DIP，但是只能尋址16KB。TMS 9995是這個系列的第三塊晶片，使用了全新的設計。此系列產品後來擴充功能到了99105和99110。
英特爾走了一條不同的路，由於沒有小型機可以模擬，他們採取擴充8080的辦法設計出了16位元的8086，這是後來幾乎統治PC晶片的x86家族的第一個成員。英特爾推出的8086使得8080上的軟體可以很經濟的移植重用，商業上獲得的成功超出預期。接著英特爾又發布80186，80286，還有1985年推出的32位元80386，這些處理器都是向前相容的，造就了英特爾PC市場的霸主地位。
整合記憶體管理器的微處理器是英特爾公司的柴爾茨等開發的，獲得美國專利號4442484。
32位元[編輯]
16位元的設計剛剛進入市場，32位元的微處理器就出現了。
世界上第一塊單片32位元微處理器是AT&T貝爾實驗室的BELLMAC-32A，樣本於1980年，1982年正式投產。1984年AT&T解體後更名為WE32000（WE代表西部電子），後來又推出了後續產品WE32100和WE32200。這些晶片用在了AT&T的3B5及3B14小型電腦、世界上第一臺超級台式微機3B2，還有世界上第一臺筆記本式超級微機「亞歷山大」上（這種系統使用類似於現在遊戲機上用的ROM外掛模組）。所有這些系統都執行貝爾實驗室的UNIX作業系統，包括叫做xt-layers的第一個窗口系統。
最著名的32位元微處理器是摩托羅拉於1979年推出的MC68000。這片被稱為68K的晶片具有32位元的暫存器，但是內部和外部資料匯流排都是16位元的，這樣可以減少晶片的腳數。摩托羅拉將其描述為16位元處理器，但是顯然這是塊有32位元結構的晶片。由於速度快、記憶體尋址空間大（16兆）價格低廉，MC68000很快成為此類CPU中最流行的型號。1980年代中期，很多公司都用它來裝配機器，其中包括Atari ST和Commodore Amiga，最為知名的大概算蘋果公司的Apple Lisa和Macintosh了。
英特爾的第一款32位元微處理器是iAPX 432，於1981年推出，但市場上並未獲得成功。此產品有先進的物件導向架構，但同其它同類產品，特別是68000比，效能較差。
68000的成功讓摩托羅拉繼續推出MC68010，這塊晶片加入了對虛擬記憶體的支援。1985年又推出了MC68020，增加了完全的32位元資料和位址匯流排。68020在Unix超級微機市場上獲得巨大成功，許多小公司也用它生產桌面系統。MC68030晶片內整合了記憶體管理器，幾乎成為除DOS外所有機器的標準處理器。MC68040合成了浮點運算器，數學運算效能得到提高。68050未能達到設計要求，沒有發行。後繼的68060採用了更快的RISC設計。1990年代早期，68K開始淡出桌面系統的市場。
其他大公司用68020設計嵌入式系統。曾幾何時，執行在嵌入式系統上的68020晶片比執行在PC機上的英特爾奔騰晶片都多。（見此網頁。摩托羅拉的"冷火"處理器也是68020的一種變種。
在此期間（1980年早期到中期），國家半導體推出了一種非常類似的16位元外部資料線，32位元內部匯流排的微處理器，稱為NS 16032（後改名為32016）。全32位元版本稱作32032，以及一系列工業用OEM微機。待到1980年代中期，Sequent使用NS 32032推出了第一款對稱多處理器伺服器。這款伺服器少有對手，但1980年代晚期就消失了。
其他較值得註意的晶片包括Zilog的Z 8000，但是推出太遲，未能在市場上立足即消聲匿跡了。
一些晶片在20世紀80年代晚期上演的微處理器大戰中開始淡出，甚至逐漸退出市場。結果僅有一種出色產品的Sequent NS 32032系統逐步消失，Sequent也改用英特爾的微處理器。
RISC技術[編輯]
1980年代中期到1990年代早期，一類新型高效能RISC（精簡指令集電腦）嶄露頭角，這些晶片最初用於專用機器和UNIX工作站，但很快就在各領域流行起來了。當然，不包括英特爾的個人電腦。
最早的商業產品是MIPS發布的32位元R2000微處理器（R1000沒有正式發布）。後續產品R3000是真正實用的型號，R4000則是世界上第一個64位元RISC晶片。同類產品還有IBM的Power系列和Sun的SPARC系列。很快所有的廠商都開始生產RISC，包括AT&T的CRISP，AMD 29000，英特爾的i860及i960，摩托羅拉88000，DEC Alpha和HP的PA。
激烈的市場競爭淘汰了很多系列，現在POWER和衍生的PowerPC系列成了個人電腦RISC晶片的主流。只有Sun還在使用SPARC架構。MIPS繼續為SGI系統提供支援，但主要用於嵌入式系統，特別是思科的路由器。其他的系統要麼已經絕跡，要麼也奄奄一息。其他公司也曾經試圖分一杯羹，如ARM公司原打算進軍家用電腦市場，但後來還是專註於嵌入式處理器了。現今基於RISC的計算裝置由MIPS，ARM和PowerPC占據了市場的主流。
當然在IBM相容機領域內，英特爾，AMD以及台灣的VIA都生產x86相容的微處理器。到2004年底，DEC和AMD合作的Alpha，AMD Athlon 64，以及HP和英特爾合作的安騰是最流行的型號。
市場統計資訊[編輯]
2003年，整個微處理器產業的產值大約為440億美元[2]。雖然桌面應用和便攜應用占到整個產業產值的一半，但從售出數量上來說，這兩個領域其實只消費了所有CPU的0.2%。
1997年，有20億塊8位元微處理器售出。8位元微處理器占到全球所有微處理器的55%。[3]
在全球所有的CPU中，32位元及以上的只占不到10%的份額。而在所有售出的32位元CPU里，大約只有2%進入個人電腦（PC）領域。
「總地來講，微處理器、微控制器或數位訊號處理機的平均單價只是剛剛超過6美元而已。」 [4]
常見微處理器架構[編輯]

NSC 320xx
AMD K5, K6, K6-2, K6-III, Duron, Athlon, Athlon XP, Athlon MP, Athlon XP-M（Intel x86架構）
AMD Athlon 64, Athlon 64 FX, Athlon 64 X2, Opteron, Sempron, Turion 64（AMD64架構）
ARM架構, StrongARM, Intel PXA2xx
Atmel AVR架構（僅微控制器）
CDP1802（屬於RCA COSMAC）
Cyrix M1, M2, 6x86（Intel x86架構）
DEC Alpha
IBM POWER（與88000同為PowerPC系列以前的產品線）
Intel 4004, 4040
Intel 8080, 8085, Zilog Z80
Intel 8086, 8088, 80186, 80188, 80286, 80386, 80486（Intel x86架構）
Pentium, Pentium Pro, Celeron, Pentium II, Pentium III, Xeon, Pentium 4, Pentium M, Pentium D, Celeron M, Celeron D（Intel x86,與HP PA-RISC均為IA64架構之前的產品線）
Itanium（IA-64架構）
Intel i860, i960
MIPS架構
摩托羅拉6800, MOS Technology 6502, 摩托羅拉6809
摩托羅拉68000系列, 摩托羅拉ColdFire
摩托羅拉88000（與POWER同為PowerPC系列之前的產品線）
NexGen Nx586（Intel x86架構）
OpenCores OpenRISC架構
PA-RISC系列（HP公司，與x86同為IA-64架構以前的產品線）
PowerPC系列, G3, G4, G5
Signetics 2650
SPARC, UltraSPARC, UltraSPARC II–IV
日立/瑞薩科技的SuperH系列
Transmeta的Crusoe和Efficeon（VLIW架構，可模擬Intel x86）
INMOS Transputer
WDC 65816
美國國家半導體公司的SC/MP（"scamp"）

註[編輯]

1802晶片具有所謂靜態設計，就是說它的時脈可以設為任意低；這種設計可以讓太空飛行器上的處理器以很低的速度執行（最低可以到0赫茲，也就是停機狀態）。這樣的話，如果飛船在航行過程中正處於長時間沒有事件的旅程的時候，可以把電能消耗降到最低。在有任務到達的情況下，例如要進行航線修正，高度控制，資料採集或者無線電通訊的時候，又可以用定時器或者傳感器來喚醒處理器，或者加速其執行。

其他參考[編輯]

中央處理器
電腦架構
尋址模式
數位訊號處理機
微控制器
AMD處理器列表
Intel處理器列表
積體電路
電子設計自動化
系統單晶片

外部連結[編輯]

微型設計

綜合資訊：

Great Microprocessors of the Past and Present
CPU Info Center
Microprocessor White Papers
Microprocessor history

歷史文獻：

standard calculator webpage
single chip microprocessor webpage
microcomputer webpage - 有關TI在微處理器領域的早期成果
A history about important discoveries in microprocessor area during 2004









閱
論
編


處理器技術






架構



哈佛架構
修正哈佛架構（英語：Modified Harvard architecture）
馮·紐曼結構
資料流架構（英語：Dataflow architecture）
CPU架構比較（英語：Comparison of CPU architectures）








指令集



複雜指令集
EDGE
顯式並行指令運算
MISC
單一指令集
精簡指令集
超長指令集
無指令集（英語：No instruction set computing）
零指令集








字元組大小



1位元
4位元
8位元
12位元
16位元
18位元（英語：18-bit）
24位元（英語：24-bit）
31位元（英語：31-bit）
32位元
36位元（英語：36-bit）
48位元（英語：48-bit）
64位元
128位元
256位元（英語：256-bit）
變動位元








並行





指令管線




指令管線化
按序/亂序執行
預測執行
暫存器重新命名
冒險









並列層次




位級並列
指令級並列

純量
超純量


資料並列
任務並列









執行緒




多執行緒
同步多執行緒
超執行緒
超級線程（英語：Super-threading）









費林分類法




單指令流單資料流
單指令流多資料流
多指令流單資料流
多指令流多資料流











類別



數位訊號處理器
單片機
系統晶片
並列向量處理機








組件



算術邏輯單元
桶式移位器
浮點運算器
後端匯流排
多路復用器
暫存器
內存管理單元
轉譯後備緩衝區
處理器緩存
暫存器堆
微程式
控制單元
時脈








電源管理



高階電源管理
高階配置與電源介面
動態時脈調整
動態電壓調節
時鐘門控













權威控制



LCCN: sh85084898
GND: 4039232-6
BNF: cb119325021（資料）









^ 源自：英漢雙解電腦字典





 
						取自 "https://zh.wikipedia.org/w/index.php?title=微處理器&oldid=45016561"					
分類：微處理器隱藏分類：需要校對的頁面自2014年2月缺少來源的條目含有拉丁語的條目自2017年2月需要消歧義的條目連結有未列明來源語句的條目包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansAragonésالعربيةAzərbaycancaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBrezhonegCatalàČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiEuskaraEstremeñuفارسیSuomiFrançaisGalegoहिन्दीHrvatskiBahasa IndonesiaÍslenskaItaliano日本語ქართულიҚазақшаಕನ್ನಡ한국어KurdîКыргызчаLatinaLietuviųLatviešuМакедонскиമലയാളംМонголमराठीBahasa MelayuNederlandsNorsk bokmålਪੰਜਾਬੀPolskiPortuguêsRomânăРусскийSicilianuScotsසිංහලSimple EnglishSlovenčinaСрпски / srpskiSvenskaதமிழ்ТоҷикӣไทยTagalogTürkçeУкраїнськаاردوVènetoTiếng Việtმარგალური 
編輯連結 





 本頁面最後修訂於2017年7月1日 (週六) 21:28。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 










Fw: [請問] 微處理機系統實驗 - 看板 NCTU-Teacher - 批踢踢實業坊


















批踢踢實業坊
›
看板 NCTU-Teacher
關於我們
聯絡資訊




返回看板


分享







作者neoneon (紅茶を飲む程度の能力)看板NCTU-Teacher標題Fw: [請問] 微處理機系統實驗時間Tue Jul 12 02:19:39 2016
※ [本文轉錄自 neoneon 信箱]

作者: [email protected] ("愛宕有機奈米負離子貓")
標題: [請問] 微處理機系統實驗
時間: Sun Jul 10 10:58:17 2016

作者: e40614 (e40614) 看板: NCTU-Teacher
標題: [請問] 微處理機系統實驗
時間: 2012/06/14 Thu 14:37:09

小弟我本身有一點C.C++的基礎
聽說這門課好像會用到組語
沒學過組語的可以去修嗎?
還需要些其他什麼基礎嗎@@?
請各位NCTU大神幫幫我<(_ _)>

--
※ Origin: 交大次世代(bs2.to)
◆ From: 140-113-91-241.Dorm10.NCTU.edu.tw
 作者從 140-113-91-241.Dorm10.NCTU.edu.tw 修改文章於 2012/06/14 Thu 14:47:10
→ Baseball：電機的課還是資工的??                                  06/14 15:05
→ shaform：http://wp.me/s1t0PL-micro 06/14 15:07
推 e40614：資工                                                    06/14 15:18
推 Suzumiya：因為要用組語programming 應該還是要學過比較好          06/14 15:59
推 e40614：恩恩 剛剛跟學長聊了一下 決定選SA好了                    06/14 16:00
→ Suzumiya：至少要熟悉一些常用的指令                              06/14 16:01
→ y800122155：電機的課名會是 微算機                               06/14 18:17


※ 發信站: 批踢踢實業坊(ptt.cc)
※ 轉錄者: neoneon (106.105.175.48), 07/12/2016 02:19:39











課程心得/討論
		

我要發文










作者:shaform (回不去的旅程) 
2014/11/26 02:12












⊕課名⊕ 

微處理機系統實驗 


▲教授▲ 

陳添福 


★修課年度★（請加註開課單位 如:大三通識、XX系選修、XX所） 

100上 資工系 


￡教了什麼￡（課程大概內容。或是額外學會了什麼東西。） 


撰寫在 microcontroller 上執行的程式，利用實驗版或甚至麵包版， 
實際使單晶片和環境互動。所謂的 microcontroller，指的是把中央處理器、 
記憶體、各種輸入出介面等等都整合在一起的小型計算機。 

這堂課使用的微處理機為 8051，使用的語言一開始為 8051 的組合語言， 
但到後來多半用 8051 C 來做更複雜的操作。 

其他一些跟這門課相關的議題： 

〈微處理機系統實驗〉 
http://wp.me/s1t0PL-micro 



◆上課方式◆（投影片、團體討論、老師教學風格） 


使用投影片上課。 

正如本版 #16JRFGF 所言，老師把課全部移到實驗課的前面上。 

實驗課兩人一組，在工三二樓的電腦教室上課。 



▼考試作業▼ 

沒有期末考和小考 
由於學生要求，所以沒有期中考 

所有評分就由 10 次 lab 和最後的期末 project 決定 

Lab 做不出來都可以補 demo，不會扣分 
不過每次的實驗報告要準時交 



Lab 主題如下: 

Lab 1 - LED 

控制 LED 燈，使其輪流閃爍。 


Lab 2 - 讀取按鍵輸入，在矩陣顯示器上顯示數字 


Lab 3 - 七段顯示器 + 麵包版 

操作 7 段顯示器 http://en.wikipedia.org/wiki/Seven-segment_display 
顯示特定數字。 

一開始先是實驗版上的顯示器，接下來要自己接麵包版。 


Lab 4 - Keyboard I/O 

用 4x4 數字鍵盤配合七段顯示器製作計算機。 


Lab 5 - Timer/ Counter 
透過計時器製作時鐘，透過計數器計算按鈕按下次數。 


Lab 6 - 8051 Interrupt 

透過外部按鈕中斷控制LED。 
透過計時器中斷控制七段顯示器，達成倒數時鐘。 

跟上次 Lab 很像，只是透過中斷，可以達成更精準控制 

http://en.wikipedia.org/wiki/Interrupt 


Lab 7 - LCD 

用 LCD 顯示數字，製作可調整的鬧鐘等等 
這裡常會遇到硬體問題，值得註意 


Lab 8 - 8051 RS232 序列傳輸 

透過 RS-232 接頭和電腦通訊，可以在終端機上顯示文字， 
也可以接收鍵盤輸入終端機的內容 

在這 Lab 裡，使用的是 Windows 內建的「超級終端機」 
不過其實用 putty 也可以連，而且還可以用控碼等等來達成特殊效果， 
在期末專題時或可一試 

http://linuxgazette.net/issue65/padala.html 
http://www.keil.com/forum/16610/ 

近年的電腦，慢慢沒有 RS-232 接頭了... 


Lab 9 - External Memory & ADC 

將程式燒錄到外部記憶體，再讓 8051 從記憶體中開始執行。 
另外還有讀取光敏電阻/熱敏電阻的訊號 

http://en.wikipedia.org/wiki/Analog-to-digital_converter 


Lab 10 - 8051 周邊 I/O 

玩玩磁簧開關、蜂鳴器、繼電器等等元件，為專題準備。 




最後幾個星期就是做期末專題，大家點子都不太一樣。 


這期間要上臺報告兩次，一次是專題構想，一次則是最後講解專題。 

大家可以觀摩彼此的專題， 

最後還有觀眾投票，前幾名有神秘小禮物。 




筆者這組的期末專題是一個搶答遊戲，利用 RS-232 從電腦終端機顯示題目， 
兩個玩家透過按鍵搶答，答對時玩家的四驅車會前進，誰先到達終點即獲勝， 
題目中也有利用蜂鳴器來實做的猜歌題。 

也有同學是做打地鼠遊戲。 


￥其他￥（是否註重出席率or嚴禁遲到？需要的基礎？） 

不點名。 
作業投影片和上課投影片常常當天才放上去。 

這門課感覺最花心力的其實是硬體問題， 

組語和 C 的語法其實不多。 

記得最後做期末專題時我們還用了烙鐵之類的 XDD 

記得我烙了半天弄不好，還有熱心的朋友跑來幫我 =w=\ 


然後就是，買材料還滿花錢的 =3= 

本來想用紅外線模組，不過失敗了 
似乎限制頗多，不見得能達到想要的效果。 


￠最後想說的話￠ 

書籍可參考： 

The 8051/8052 Microcontroller 
The 8051 Microcontroller 
Embedded C 

也有網路教學： 
http://goo.gl/P6g6T 















[心得]  drifting (漂流˙) 
2014/11/26 02:12












★修課年度★（請加註開課單位 如:大三通識、XX系選修、XX所） 

99 上學期 資工系 

￡教了什麼￡（課程大概內容。或是額外學會了什麼東西。） 


教的東西實在是太豐富了， 

實驗(一) 實驗儀器操作 + 8051 Programming 
實驗(二) 七段顯示器 ＋ 點矩陣顯示器 
實驗(三) External Memory 
實驗(四) I/O Ports、Keyboard、Scanning 
實驗(五) 8051 Timer、Counter 
實驗(六) 8051 Interrupt 
實驗(七) 8051 序列傳輸 
實驗(八) 8051 & LCD顯示器 1 
實驗(九) 8051 & LCD顯示器 2 
實驗(十) ADC/DAC 


以上，這學期總共做了十次LAB， 

每次LAB都至少有4題(都後面幾次才變成2題或三題) 

相較於另一班的微處理機實驗，(聽說是兩星期做一次!?) 

添福哥的微處理機東西真的很多XD 




◆上課方式◆（投影片、團體討論、老師教學風格） 


課表是排星期一CD上課， 

可是從第三周開始就變成是星期三晚上做實驗前， 

5:40開始上課上到6:30然後去做實驗， 

上課都是上跟這次的實驗內容有關的東西。 

不過前幾堂課老師的題目裡沒附上example， 

導致大家都非常晚回去..... ( ′-`) 

於是乎，在後幾次的題目裡都會附上一些example， 

也因如此寫的速度真的變快許多!!! 

實驗時，會有一群助教可以問問題， 

助教群都相當專業， 

雖然偶爾會有些問題解不出來，但都會很熱心幫你。 




▼考試作業▼ 


每星期想到微處理機其實都很緊張， 

因為作業量蠻多的，加上自己又沒很強，所以常常做不完， 

(有一些大神都沒再怕的，很快就完) 

不過作業的deadline都是學期末，也就是說， 

你只要在學期末之前有DE過都算有交，而且不扣分。 

實驗室也提供另外兩個時段可以自己去做，請助教幫你開門就可以進去。 

每次做完實驗要交報告，說明一下你這次作業學到什麼、心得。 



大約在LAB8的時候有考一次筆試，有要你寫CODE 

我亂寫.....分數就....鳥鳥的，不過平均好像有6X。 



但你以為只有作業和考試?? 



期末還有一個期末專題!!!!!!!!! 

老師的宗旨是將你這學期學到的用在你的專題上， 

老師也強調你筆試考不好可以完全用專題來補救。(暗示兩次XD) 

而且老師似乎很看重專題，說這才是激發學生潛能的東西， 

他也說過讓我們做專題是要讓我們可以去比賽， 

因為8051這麼地被廣泛使用。 

添福哥的用心良苦我們都看到了。 



言歸正傳，專題會花三周進行。 

在LAB10時，你要跟老師和助教報告你要做的主題， 

太簡單就掰掰，太難地方的也會被提出來討論是不是真的可以做到。 

然後花兩周去做你的專題， 

最後在最後一次實驗課，要上臺用投影片講解你的專題 

講解完就去你的位置展示你的專題，當然老師是全程觀看。 



專題這部分應該是最有趣的部分，因為是做自己想出來的東西， 

大家的想法都很厲害，做的東西都很炫。 

很多組是做自動車，還有跑步機、省電裝置、密碼遊戲機， 

甚至還有冰箱XD 



￥其他￥（是否註重出席率or嚴禁遲到？需要的基礎？） 


沒出席率，作業記得DE~~!! 

基礎的話，建議是有一點組語的基礎再來修， 

因為添福哥的微處理機是不用C語言寫的，是用組語， 

所以有組語的基礎在寫作業時會比較順暢。 


￠最後想說的話￠ 


老師人很好，很會聽大家的意見。 

學期一開始用的實驗版有的都壞掉了， 

port常常沒反應搞得大家一肚子氣， 

在資工系的什麼會議有人反映後，板子就全面換新! 

上面說的沒example，也是同學反映之後老師就加上去。 


而作業這麼多應該是老師想讓我們學多一點吧? 

畢竟這種跟嵌入式有關的東西最近愈來愈hot了。 


成績目前還沒出來。 


＆誰適合修這門課＆ 


資電組、資工組必修 && 有熱忱、不怕Loading、想學好8051的人 :) 












微處理機系統實驗 | 資夢























                        
                        Introduction
                    




1.
                        
                        開始
                    




1.1.
                        
                        搜尋資源
                    




1.2.
                        
                        認識同好
                    




1.3.
                        
                        取得書籍
                    


1.4. 使用工具




1.5.
                        
                        學習英文
                    






2.
                        
                        學習程式語言
                    


2.1. Python


2.2. JavaScript


2.3. C/C++


2.4. Ruby


2.5. Java




3. 程式開發實務


3.1. 網站開發


3.2. 遊戲開發


3.3. 手機程式開發




4. 課題


4.1. 基礎知識




4.2.
                        
                        程式解題
                    


4.3. 資安攻防


4.4. 數學


4.5. 計算機工程


4.6. 計算機科學




5. 前方的道路


5.1. 參與公益行動


5.2. 參與開放原始碼專案


5.3. 創業




5.4.
                        
                        當個軟體工程師
                    


5.5. 讀資工系




6. 附錄：資源




6.1.
                        
                        資工系開放式課程資源
                    




6.2.
                        
                        交大資工相關獎學金、競賽、工讀與實習機會
                    




6.3.
                        
                        Timus Online Judge 教學
                    




7. 附錄：資工課程




7.1.
                        
                        組合語言與系統程式
                    




7.2.
                        
                        數位電路實驗
                    




7.3.
                        
                        計算機概論與程式設計
                    




7.4.
                        
                        離散數學
                    




7.5.
                        
                        正規語言概論
                    




7.6.
                        
                        密碼學概論
                    




7.7.
                        
                        微處理機系統實驗
                    




7.8.
                        
                        程式語言
                    




7.9.
                        
                        資訊工程專題
                    






                Published with GitBook
            


















A
A


Serif
Sans


White
Sepia
Night














                    Share on Twitter
                

                    Share on Google
                

                    Share on Facebook
                

                    Share on Weibo
                

                    Share on Instapaper
                









資夢





微處理機系統實驗
前言
微處理機系統實驗是交大資工大三上的課程，在這門課中，學生將會撰寫在 microcontroller 上執行的程式，利用實驗版或甚至麵包版，實際使單晶片和環境互動。所謂的 microcontroller，指的是把中央處理器、記憶體、各種輸入出介面等等都整合在一起的小型計算機。雖然計算能力沒有一般電腦的 CPU 好，但體積小而便宜，被運用在簡單的嵌入式系統中。這堂課使用的微處理機為 8051，使用的語言主要為 8051 的組合語言，但有些班也可能使用 8051 C 來做更複雜的操作。
在課程中將會操作許多的輸出入，包含按鍵、開關、數字鍵盤、透過光敏電阻與熱感電阻配合 ADC 讀取環境的值。或者是 LED 燈、七段顯示器、點矩陣顯示器的輸出，控制馬達、蜂鳴器，甚至是利用 RS-232 和電腦溝通等等。
筆者的期末專題是一個搶答遊戲，利用 RS-232 從電腦終端機顯示題目，兩個玩家透過按鍵搶答，答對時玩家的四驅車會前進，誰先到達終點即獲勝，題目中也有利用蜂鳴器來實做的猜歌題。也有同學是做打地鼠遊戲。
學習資源
這堂課為重實做的課程，練習絕不可少。而讀者若有學過「組合語言與程式程式」，8051 的環境細節與組語的內容其實不深，很快就能進入狀況。讀者可以參考《The 8051/8052 Microcontroller》裡 8051 與組語的基本介紹。或者另外一本《The 8051 Microcontroller》有更全面的教學及練習題。對於 8051 C 的部份，和原始 C 的差別其實不大。讀者可參考：《Embedded C》。而市面上也可找到不少以實做為導向的單晶片中文書籍。
網路上也有不少教學資源：

Architecture and Programming of 8051 Microcontrollers
89S52 microcontroller quick tutorial
8051 教材資源

環境
開發環境可以使用 Keil C51 µVision IDE，不管是組語或者 C 都可以組/編譯。如果你使用 Linux 系的作業系統，也可以使用 MCU 8051 IDE，不過需註意兩者語法稍有不同。另外一個和 MCU 8051 IDE 語法類似且在 Windows 上使用的是 MIDE-51。其中，Keil C 是多數書籍主要使用的開發環境，但免費版對程式大小有些許限制，另外兩個 IDE 則無。
由於有很多學校皆有 8051 的課程，開發板取得非常容易。搜尋「8051 開發板」、「8051 實驗板」皆可找到不少商家販賣。開發時，可以使用 ICE 和電腦連結，即時模擬程式在 8051 上執行的結果，也可以利用燒錄器實際燒到 8051 上再執行。前者較為方便，也較容易除錯，所以通常在開發早期皆透過 ICE 執行程式，事實上在課程中你幾乎不會需要把程式實際燒錄到 8051 上。燒錄器和模擬器皆可在網路上購買。和 8051 相容的單晶片非常多，基本款的十分便宜，在一般的電子材料行皆可購買。其他一些週邊材料也多半可在電子材料行購買到。或者你也可到 iCshop 等網路商店找找看。
參考練習題

用七段顯示器製作配合按鍵製作可設定的時鐘。
用七段顯示器和數字鍵盤實做計算機。
用蜂鳴器播放一段音樂。

延伸閱讀
筆者想在這裡介紹另一個平臺：Arduino。他具有很低的入門門檻，且近年在各國學校裡愈來愈流行。他是一個開放的硬體開發平臺，不僅軟體原始碼是開放的，連硬體電路設計圖都是開放的，玩家甚至可以自行組裝出 Arduino。可參考：Arduino 簡介。而由於具有豐富的函式庫，玩家可以輕易的寫出複雜的功能。種種因素讓 Arduino 深受業餘玩家的喜愛。在台灣，玩 Arduino 的人也漸漸增加，慢慢形成一個社群。
這也是筆者在此介紹他的原因，若讀者對自己動手作專題很有興趣，但對組語或其他硬體知識並不熟悉，則 Arduino 非常值得一試。他的開發工具從硬體、模擬器、IDE、燒錄器，通通都有官方套件，台灣也有代理商可購買。
相關連結

8051/8052 Instruction Set
8051 相關文章
Arduino 筆記 – 認識 Arduino 
Arduino.TW 樂園

















嘉大輔助教學平臺: 登入本網站












 


跳到主要內容









您尚未登入 





嘉大輔助教學平臺

















頁面路徑首頁 /登入本網站 




登入

請使用校務行政系統帳號登入


帳號




密碼







記住帳號





忘記帳號或密碼嗎？


問題反應信箱：contact@mail.ncyu.edu.tw聯絡電話：05-2263411轉2502 遠距教學組







公告日期
最新消息


2016-10-20
教學平臺登入帳號、變更密碼需知



 


 





© 國立嘉義大學版權所有 Copyright © 2016 All Rights Reserved.
地址:60004 嘉義市鹿寮里學府路300號　TEL: 05-2717000　FAX: 05-2717095
網頁維護: 電子計算機中心　TEL: 05-2263411轉2502　FAX: 05-2264107
[隱私權政策] [安全性政策]








