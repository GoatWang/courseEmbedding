


計算流體力學 - 維基百科，自由的百科全書






























 







計算流體力學

維基百科，自由的百科全書


					前往：					導覽，					搜尋






計算流體力學（英語：Computational Fluid Dynamics，簡稱CFD）是21世紀流體力學領域的重要技術之一，使用數值方法在計算機中對流體力學的控制方程式進行求解，從而可預測流場的流動。目前有多種商業CFD軟體問世，比如FLUENT、CFD-ACE+（CFDRC）、Phoenics、CFX、Star-cd等。

目前在工程領域CFD方法已經得到廣泛的應用。美國海空軍下一代F-35戰鬥機所使用的附面層分離進氣道是CFD的成果之一。附面層分離進氣道通過特殊設計形狀的突起分離流速較慢的附面層以改善渦輪風扇發動機的進氣流場。此設計比傳統的附面層隔板方法可以減輕數百公斤重量，同時在一定速度範圍內能夠維持很好的分離效率。

CFD最基本的考慮是如何把連續流體在計算機上用離散的方式處理。一個方法是把空間區域離散化成小胞腔，以形成一個立體網格或者格點，然後應用合適的算法來解運動方程式（對於不粘滯流體用歐拉方程式，對於粘滯流體用納維-斯托克斯方程式)。另外，這樣的一個網格可以是不規則的（例如在二維由三角形組成，在三維由四面體組成）或者是規則的；前者的特徵是每個胞腔必須單獨存儲在內存中。最後，如果問題是高度動態的並且在尺度上跨越很大的範圍，網格本身應該可以動態隨時間調整，譬如在自適應網格細化方法中。
如果選擇不使用基於網格的方法，也有一些可選的替代，比較突出的有：

平滑粒子流體力學，求解流體問題的拉格朗日方法，
譜方法，把方程式映射到像球諧函數和切比雪夫多項式等正交函數上的技術。
格子波爾茲曼方法（Lattice Boltzmann Methods），它在直角正交格點上模擬一個等價的中尺度系統，而不是求解宏觀系統（也不是真正的微觀物理）。

對於層流情況和對於所有相關的長度尺度都可以包含在格點中的亂流的情形，直接求解納維-斯托克斯方程式是可能的（通過直接數值模擬）。但一般情況下，適合於問題的尺度的範圍甚至大於今天的大型並行計算機可以建模的範圍。
在這些情況下，亂流模擬需要引入亂流模型。大渦流模擬和RANS表述（雷諾平均納維－斯托克斯方程式）和k-ε模型或者雷諾應力模型一起，是處理這些尺度的兩種技術。
很多實例中，其他方程式和納維-斯托克斯方程式要同時被求解。這些其他的方程式可能包括描述種類濃度，化學反應，熱傳導，等等。很多高級的代碼允許更複雜的情形的模擬，涉及到多相流（例如，液/氣，固/氣，液/固）或者非牛頓流體（例如血液）。



目錄


1 方法論

1.1 離散化方法
1.2 亂流模型

1.2.1 雷諾平均納維－斯托克斯方程式
1.2.2 大渦流模擬
1.2.3 分離渦流模擬


1.3 求解算法


2 應用
3 計算流體力學知名專家
4 軟體
5 參看
6 外部連結



方法論[編輯]
所有這些方法都遵循同樣的基本的程序。

問題的幾何（物理界限）被定義。
流體占據的體積被分成離散胞腔（網格）。
物理建模得到定義 - 例如，運動方程式+焓+種類不滅
邊界條件被定義。這涉及到液體在問題的邊界行為和性質。對於暫態問題，初始條件也要定義。
方程式作為靜態或者暫態被重複求解。
最後答案的分析和可視化。

離散化方法[編輯]
給定離散化的穩定性通常在數值上建立，而不是像在簡單的線性問題上那樣可以解析的建立。必須特別小心才能保證離散化能夠漂亮的處理不連續的解。歐拉方程式和納維-斯托克斯方程式兩者都可能有衝擊波和接觸錶面。
在使用中的一些離散化方法包括：

有限體積法（Finite Volume Method）。這是「古典」或者說標準的方法，在商用軟體和研究用程序中最為常見。控制方程式在離散的控制體積上求解。這個積分方法導致了一個本身就保守（也就是說，密度這樣的量保持了物理上守恆）的方法。










∂

∂
t



∭
Q
d
V
+
∬
F
d

A

=
0
,


{\displaystyle {\frac {\partial }{\partial t}}\iiint QdV+\iint Fd\mathbf {A} =0,}




其中



Q


{\displaystyle Q}

是被守恆的變量的向量，而



F


{\displaystyle F}

是通量的向量，



V


{\displaystyle V}

是控制體積元體積，



A


{\displaystyle A}

是控制元錶面積。


有限元法（FEM）。這個方法在固體結構分析中很流行，但是也可以用於流體。但是，FEM表述需要特殊處理來保證保守的解。
有限差分方法。這個方法有歷史上的意義而且易於編程。現在只在特殊化的代碼中使用。
邊界元方法。流體占據的邊界被分割成錶面網格。

亂流模型[編輯]
直接數值模擬（DNS）捕捉了所有相關尺度的亂流運動，所以不需要對最小的尺度建立另外的模型。該途徑極其耗費資源，在現代的機器上對於複雜的問題甚至可能無法達成，因而對於流體運動最小尺度的模型還是有必要的。
雷諾平均納維－斯托克斯方程式[編輯]
雷諾平均納維－斯托克斯方程式（RANS）是亂流最古老的方法。將流體運動的各物理量表達為一個統計平均值和一個脈動值的和，代入原始的N-S方程式後再取統計平均，從而得到關於統計平均物理量的控制方程式——RANS方程式。在動量方程式中，出現了一個新的應力項，它是脈動速度的二階相關，稱為雷諾應力。這個二階張量是新的未知量，必須通過一定的模型使整個方程組得到封閉（即使得方程式個數與未知量個數相等），才能求解。對於這個張量有很多不同的封閉模型，常見的如零階模型，一階模型和二階模型。目前二階模型，如k-epsilon模型和k-omiga模型，是工程中最為常見的亂流模型。
下麵是常見的誤解：RANS方程式不適用於有一個時變平均流的流場，因為這些方程式是『時間-平均』的。事實上，統計不穩定（在非靜態）流可以同等對待。這有時被稱為URANS。沒有任何雷諾平均方法中的先天缺陷使得這個情況不能被處理，但是用於閉合（封閉）方程式的亂流模型必須要在均值中的變化發生的時間相對於包含大部分能量的亂流運動的時間尺度相對較大時才正確。
大渦流模擬[編輯]
大渦流模擬（LES）是一種技術，其中更小的渦流被濾掉並用亞格點尺度模型來建模，而更大的能量的渦流則被模擬出來。該方法通常比RANS模型需要更細化的網格，但是比DNS解所需要的網格粗的多。
分離渦流模擬[編輯]
分離渦流模擬（Detached eddy simulation，DES)是RANS模型的一個修改，其中模型在細到足夠使用LES計算的區域切換到亞格點尺度表述。接近固體邊界的區域和渦流長度尺度小於最大格點尺寸的區域被交給RANS模式的解。隨著渦流長度尺度超出格點尺寸，區域使用LES模式。所以格點解析度不像純LES要求那樣高，因此大大減少了計算開銷。雖然DES最初為Spalart-Allmaras模型而建立（Spalart等人, 1997年），它可以用其它RANS模型實現（Strelets, 2001年），通過適當的修改RANS模型中隱含或顯式地涉及到的長度尺度。所以雖然基於Spalart-Allamaras模型的DES像帶牆模型的LES一樣作用，基於其它模型的DES（譬如兩方程式模型）行為就像混合RANS-LES模型。格點的生成比簡單的RANS或LES更為複雜因為要做RANS-LES切換。DES是一種非區域途徑並會產生一個跨越解的RANS和LES區域的單一的光滑速度場。
求解算法[編輯]
離散化完成後要進行的方程式系統的基本求解由很多數值線性代數的為人熟知的許多算法完成。可以使用靜態的疊代方法，譬如對稱高斯-賽得爾（Gauss-Seidel）或者漸進鬆弛（successive overrelaxation），或者克雷洛夫子空間法（Krylov subspaces）。在後者中，解的餘數在非線性算子的一個子空間的正交基上最小化。克雷洛夫子空間法通常和一個預條件算子（preconditioner）和一個內牛頓疊代一起使用。對於非線性問題不幸的是，正交基不能通過短循環來構造（相在一般的共軛梯度法中那樣），而必須存儲整個的序列的向量。
應用[編輯]
這些技術廣泛用於工程設計或者分析和流體交互作用的設備，例如車輛，飛行器，泵，化學裝置和通風系統等等。該技術也用於計算機圖形學，因為動畫家不能像控制固態人物那樣簡單的處理流體，因而必須使用CFD技術結合交互工具，達成動畫影片或遊戲中的流體模擬。
有許多求解納維-斯托克斯方程式的商用軟體包。這些商用包的例子包括下麵這些（按字母序排列）： AVL/FIRE、CFX、Fluent、KIVA、NUMECA、Phoenics、和STAR-CD。其它軟體包作為附件或CFD工具的補充產品使用。這些包括用於後置處理的FieldView和求解細節化學動力學的KINetics。
計算流體力學知名專家[編輯]

Phillip Colella
Professor in Residence, Mechanical Engineering, UC Berkeley
A David Gosman
Professor, Mechanical Engineering, Imperial College
Thomas Hughes
Professor, Applied Mechanics Division, Department of Mechanical Engineering, Stanford
Antony Jameson
Professor, Stanford
John Kim
Professor, Mechanical and Aerospace Engineering, UCLA
Xiaolin Zhong
Professor, Mechanical and Aerospace Engineering, UCLA
Brian Launder
Professor, Mechanical Engineering, UMIST
Bram van Leer
Professor, Aerospace Engineering, University of Michigan.
Brian P. Leonard
Professor Emeritus, Mechanical Engineering, University of Akron
Michael A Leschziner
Professor of Computational Aerodynamics, Department of Aeronautics, Imperial College
Marcel Lesieur
Professor, Modelling and Numerical Simulation of Turbulence (MOST), Grenoble Institute of Mechanics
Randall J. LeVeque
Professor of Applied Mathematics and Mathematics, University of Washington.
Rainald Löhner
Professor, George Mason University.
Parviz Moin
Professor of Mechanical Engineering and the Director of Center for Turbulence Research at Stanford/NASA Ames.
K W Morton
Professor of Numerical Analysis, Director of ICFD, Oxford
Suhas V. Patankar
Professor, Department of Mechanical Engineering, University of Minnesota.
Ugo Piomelli
Associate Professor, Department of Mechanical Engineering, University of Maryland - College Park.
Wolfgang Rodi
Prof. Dr., Intitut fur Hydromechanik, University of Karlsruhe
Philip L. Roe
Professor, Aerospace Engineering, University of Michigan.
Brian Spalding
Professor, Director, CHAM
陶文銓
中國西安交通大學
Tayfun E. Tezduyar
Professor in Engineering, Rice University
David C. Wilcox
President of DCW Industries, Inc.

軟體[編輯]

CFD-ACE+多重物理耦合之計算流體力學商用分析軟體，前身即為CFDRC。現在版權為法國ESI Group集團擁有。
OpenFOAM現在GPL版權的前商用軟體。內部連結：OpenFOAM
Palabos現在GPL版權的前商用軟體
NASA提供CFD軟體給美國居民
Fire Dynamics Simulator消防工程應用軟體
GERRIS GPL版權不可壓縮流體求解器。內部連結：Gerris.
管道系統液體流有一個功能完備的演示，它使用樣品流體來做評估，可以下載使用
Atmos
Stoner流水線模擬器
流水線工作室包括一個評估版的下載（~ 132 M）
Olga 2000
CFD Studio學習CFD問題的教學軟體
Hysys
Comet商用有限體方法
Channelflow Channelflow採用"譜方法"（GPL）
Net-Pipe
NEKTON "譜元素法（SEM）"
Exa Powerflow "格波爾茲曼方法"
Enzo是開源宇宙模擬代碼，採用自適應網格。
FLASH對非商業應用免費，使用自適應網格，對於天體物理流可壓縮求解器
STAR工業CAD-嵌入流模擬器
FLUENT用於一大類自由曲面流應用的CFD代碼
FLOW-3D特別適用於自由曲面流應用的CFD代碼
Intelligent Light - FieldView的製作器
Tecplot CFD後置處理，繪製，圖形和可視化軟體
COSILAB -用於層流和亂流中的化學的軟體和CFD插件
Reaction Design - 用於化學運動學的軟體和CFD插件
Flotherm商用CFD軟體，強調電子屏障，正交網格
COMSOL Multiphysics（也稱FEMLAB）商用有限元包，用於多物理包括CFD
CFX Ansys的CFD-代碼
TAU無結構有限體CFD-代碼，來自DLR，用於飛機和直升機
FLOWer結構化有限體CFD-代碼，來自DLR，用於飛機和直升機
Moldex3D商用CAE軟體，用於塑膠射出成形
Pointwise - Gridgen的製作軟體
Metacomp Technologies, Inc. - CFD++的製作軟體
GridPro - 高效的計算流體力學網格生成軟體
FreeFem++ - 免費的有限元素法計算軟體

參看[編輯]

流體力學
數值模擬技術
有限元分析

外部連結[編輯]

http://www.cfdnet.ca/
http://www.cfd-online.com/
http://www.cfdreview.com/
Usenet關於CFD的討論組
格波爾茲曼方法
FetchCFD 展示和探索工程模擬.






權威控制



NDL: 01139712












 
						取自 "https://zh.wikipedia.org/w/index.php?title=計算流體力學&oldid=44322341"					
2 個分類：計算流體力學流體力學 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


العربيةBosanskiDeutschEnglishEspañolفارسیSuomiFrançaisहिन्दीHrvatskiBahasa IndonesiaItaliano日本語ಕನ್ನಡ한국어МонголNederlandsNorsk bokmålPolskiPortuguêsRomânăРусскийSvenskaதமிழ்ไทยTürkçeУкраїнська 
編輯連結 





 本頁面最後修訂於2017年5月11日 (週四) 12:32。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 










Re: [請益] 請問計算流體力學的書籍... - 看板 Master_D - 批踢踢實業坊


















批踢踢實業坊
›
看板 Master_D
關於我們
聯絡資訊




返回看板


分享







作者Machiavellia (Lion and Fox)看板Master_D標題Re: [請益] 請問計算流體力學的書籍...時間Sat Dec 16 14:24:48 2006
※ 引述《brabus1124 (備一會上嗎?)》之銘言：
: 因為目前在學校裡有在跑軟體，
: 也在昨天抽空去找研究所的學長，
: 學長也問了我幾個有關軟體裡的問題，
: 但是我都知道要調哪幾個參數，但卻對那些參數的真正意思有點模糊。
: 因此學長建議我去看計算流體力學的書籍，
: 所以想請問各位版友大大們可以介紹一下有關計算流體力學的書籍嗎?
: 我跑的是CFDRC...

現在到處都可以找到CFD軟體，也有一票人在用軟體作計算分析，
由於現在的軟體越做越好，也越來越容易使用，即使不懂CFD原理，
也可以用軟體算出一堆東西。
但有句名言︰Garbage in, garbage out.
輸入的是垃圾，輸出的還是垃圾，不會變黃金的。

軟體好用，不代表使用者知道軟體在幹嘛，而且就CFD的領域來說，這情況越來越嚴重。
如果辛苦用軟體跑了一堆結果(也代表花了不少時間心血)，要跟老闆報告時，
如果老闆對CFD很熟的話，通常會在開始報告之前，先問了一堆有關設定的問題，
舉例︰
你用什麼scheme離散？(萬一用1st order upwind算低流速的問題，當場就糗了。)
壓力用什麼scheme？(SIMPLE, SIMPLEC, SIMPLER, or PISO？)
解矩陣用什麼數值方法？(ADI還是Gauss-Seidel method？)
邊界條件如何設定？(這個很重要，一個case都會有好幾個，甚至十幾個邊界條件，
只要其中一個設定有誤，結果就不對。)
Grid-independence check有沒有做？

如果支吾其詞，沒辦法回答的話，狠一點的老闆甚至可以說︰
"你連這些基本都不知道，算出來的結果怎麼會對？下次meeting之前要搞清楚。"
辛苦花時間算出來的結果，他連看都不想看，因為無法解釋結果是可靠的，
沒有打好地基的房子，裝潢再漂亮也不能住人。
至於等會他要用原本預定報告的時間去看報紙泡茶打發時間，那就是他的事了。

回到正題，為了避免被如此打槍，就要對CFD的基本原理有些瞭解。
最快的方法，就是修課。但一學期的課程時數有限，特別是對論文就在做CFD的同學
而言，往往還是需要額外的參考書籍。
翻過幾本CFD的書之後，個人推薦五本書，由淺入深排列︰

1. Computational Fluid Dynamics
   John D. Anderson
  如果對CFD是門外漢的話，這本書相當適合。基本概念與數學推導都算交代得清楚，
  也沒有過於複雜的描述，不錯的入門書。

2. Computational Fluid Mechanics and Heat Transfer, 2nd edition
   J.C. Tannehill, D.A. Anderson and R.H. Pletcher
  這本書很厚，接近800頁，但別被嚇到了，難度與上一本差不多，只是寫得比較詳細，
  也是不錯的參考書。

3. An Introduction to Computational Fluid Dynamics: The Finite Volume Method
   H.K. Versteeg and W Malalasekera
  在CFD領域的書籍中，這本書的名氣的確不高，當初我也是好奇才買入手的。
  看過之後發現，這本書寫得不錯，主要內容圍繞在CFD大師Patankar所發展的數值
  方法，但在推導過程的描述較為簡單易懂。建議看Patankar的書之前，先翻閱這本。

4. Numerical Heat Transfer and Fluid Flow
   S.V. Patankar
  這本書薄薄一本，但在CFD中的地位，就跟聖經一般。但畢竟出版已久，裡頭有些方法
  是有點過時了，但這本書對於之後CFD的發展，有著相當大的影響。
  別看它薄就以為好欺負，對CFD剛入門者，千萬別獃獃地直接拿這本來看。
  裡面不少觀念是沒有那麼容易懂的。

5. Computational Methods for Fluid Dynamics, 3rd edition
   J.H. Ferziger and P. Peric
  這本書感覺上就不是給入門者用的，裡面有些觀念與數學推導並沒有詳細介紹，
  不適合初學者看。但對於已經有基本觀念的讀者而言，
  這本書倒是有不少可供參考的材料。

6. 最後，就是你使用軟體的manual。不管你是用什麼CFD軟體，例如FLUENT, STAR-CD,
   CFX, PHOENICS, FLOW-3D, CFDRC等泛用型軟體,還是FLOWTHERM, ICEPAK等專用型的
   軟體，都會有使用說明書。說明書不只是告知你如何操作軟體，
   寫得好的，還會把簡單的數學推導過程列出。

東拉西扯地寫了一推，希望會有幫助。


--
※ 發信站: 批踢踢實業坊(ptt.cc) 
◆ From: 140.114.108.83
推 wallholla:感謝   推 12/16 16:52
推 neph:推 有見地 12/16 17:18
推 brabus1124:謝謝這位大大的詳細回答...給你"三顆星的評價"。 12/16 20:28
推 Machiavellia:耶...我打了一個多小時才只有三顆星啊...   ^_^ 12/16 20:54
→ Machiavellia:這些書我也兩年多沒翻了,但是印象應該還算正確 12/16 20:56
→ Machiavellia:希望有幫到忙 12/16 20:57
→ eatrol:前四本我看過..我覺得3和4會比較有用(以自己寫程式的觀點) 12/17 00:48
推 sintering:這些書有中譯本嗎? 12/17 12:07
推 SOGADAS:大推.....(給樓上的，還是看原文的會比較好) 12/17 14:43
推 brabus1124:顯然MACH大大沒看過天下第一味連續劇@@a... 12/17 19:41
推 GMD16:Patankar台灣應該絕版了 亞馬遜可以訂到  不便宜 12/18 00:14










流體力學要怎麼唸 | Yahoo奇摩知識+




















 









   ⌂首頁信箱新聞股市名人娛樂氣象運動App下載購物中心商城拍賣更多⋁知識+汽車機車電影字典遊戲旅遊理財房地產時尚美妝折扣城   Yahoo 奇摩知識+                        👤 登入    ✉ 信箱     ⚙ 服務說明    帳號資料 服務說明 意見回報        
















Yahoo奇摩知識+ 首頁











所有分類
 
健康
 
商業與財經
 
娛樂與音樂
 
家居與園藝
 
家庭與人際關係
 
寵物
 
懷孕與育兒
 
政治與政府
 
教育與參考
 
新聞與活動
 
旅遊
 
汽車與交通
 
消費電子產品
 
環境
 
社會科學
 
社會與文化
 
科學
 
美容與造型
 
藝術與人文
 
遊戲與休閒活動
 
運動
 
電腦與網際網路
 
食品與飲料
 
餐廳與小吃
 





世界Yahoo 








阿根廷





澳洲





巴西





加拿大





法國





德國





印度





印尼





義大利





馬來西亞





墨西哥







紐西蘭





菲律賓





魁北克





新加坡





香港





西班牙





泰國





英國與愛爾蘭





美國





越南





西班牙文







關於





關於 Yahoo奇摩知識+
社群指南
排行榜
點數與等級
部落格
如何安全地使用 Yahoo奇摩

 








 科學

 工程學


 看另一則問題 




 


            流體力學要怎麼唸
        


請問流體力學要怎麼唸呢?我花了兩天看過一章後發覺後面習題還是一題都不懂，而且也覺得自己沒什麼吸收，流力的公式是要死背的嗎? 
我想把他唸好，希望能跟我說說唸流力的感想、方法和心得。感激不盡!

更新: 
恩...謝謝您的資料，但我比較想知道有唸過流力的個人經驗談^^。希望有人可以可以給我一些建議。謝謝~





 
1 個人正在追蹤 


 
 7 個解答 
7


檢舉不當使用









您確定要刪除此解答嗎？
是
否












 









抱歉，似乎發生一些問題。



Trending Now





 

解答


評分


最新
最舊














最佳解答: 
             我個人覺得流體力學只是描述大自然界的物理現象的一們科學而已, 重點是在其中的精神, 也就是所謂的 "物理意義" ....... 你說的那種情況我之前也遇過, 公式我全都被熟了而且還寫在旁邊, 但是就是不曉得怎麼帶進去公式算, 不然就是算出來後單位錯了 (因為不曉得算出來的數據是什麼東西, 或是代表什麼, 到最後只是在做加減乘除的計算........)   

流體力學跟熱力學一樣一開始都是介紹一些性質以及名詞, 所以一開始入門一定會不習慣, 舉例來說, 大家都知道"壓力"的定義是 "單位面積下的作用力" , 所以他的公式就是 P=F/A , 公式是死的, 但是他的物理意義卻是非常靈活的, 壓力你可以想像是別人用拳頭打你以及用針刺你, 在相同的作用力下, 你一個你受傷會比較嚴重 ???? 為什麼 ??? 而受傷比較嚴重當然是表示你受到的壓力就比較大..........這就是壓力的"物理意義" , 絕對不單單只是 P=F/A 而已 ~~~~ 

流體力學的公式有90%是不用背的(我個人認為), 但是所有的公式你都必須瞭解其中的"物理意義", 絕不是死記....... 




 參考資料： 
 自己 


傲憾青天御風行
 · 12 年前 





0
真讚



0
真遜





檢舉不當使用


意見





 




新增意見











送出












 · 剛才不久













                  發問者的評分
                















 我覺得流體力學超難低 ˋ ˊ





阿楠
 · 11 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久























 流體力學是門很抽象的學問，要學得好沒有特別的方法， 
就只有多做題目而已，把握基本公式，多看看一些題目解 
法，然後知道什麼時候該用什麼樣的流力理論解決問題， 
大學的流力老師說，流力只要找個一百題題目，把它們都 
做熟了，以後不管遇到什麼變化的流力問題都可以迎刃而 
解，你可以試試看。 
還有流力的公式很少，要背不難吧？不過有些公式可以推 
來推去的，可能需要看一下推公式流程，不過基本上並不 
需要特別記。





 參考資料： 
 大學時流力老師說的 


俗世中的一粒微塵
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久



















 多點想像力，多點觀察，找機會驗證 

還有就是...數學盡量學好一點





 匿名使用者 
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 小風果然是個超級專家，你可以先回家看看連續定理了........... 

傲憾青天御風行：我在猜你是唸熱流組，答的好，你說的壓力的定義但你想過壓力是導出量還是物理量嗎？我想你有時候會算錯答案可能跟我當初一樣，在計算過程中忽略單位換算，唉熱流沒那麼好唸，還要加考一科熱傳學，超累的，加油吧我完全同意且支持你的回答





Robert
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久



















 我個人覺得公式還是要背的,但是說真的並不是很好讀,其實你再上課時教授應該會有蠻詳細的教學,上課聽懂事很重要的 ,因為只要懂了回到家裡自己溫習你才能理解,如果靠自己讀的話,其實要學的好有一點難,就像數學一樣,上實驗課時也很重要,要把各個應力,阻力,摩差力,作用力,反作用力等等的相互關西弄清楚,我相信你應該可以學的不錯





 參考資料： 
 自己 


 匿名使用者 
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 計算流體力學是藉電腦來模擬流體運動過程的一門學問。由於流體力學本身具三維性及時變性與非線性之特質，傳統的理論分析方法所能解決的問題，通常在實用上的限制較多。而計算流體力學因係結合流體力學、數學、數值方法及電腦科技於一身，其適用範圍則較廣。且此一分析工具除了適於探討參數變化的影響外，因其所建立的分析資料庫，更得以減少實驗所需的工時而縮短設計時程。隨著電腦硬軟體技術的更新及計算方法的進步，利用計算流體力學來探討流體的物理世界，不僅已廣為學界所採用， 更成為工業界解決相關工程問題的一大利器。時至今日，計算流體力學與理論流體力學、實驗流體力學已構成現代研究流體力學中之最大主流。在國外，計算流體力學的發展，大約始於一九五○年代（或更早些）。在一九七○年以前，由於傳統電腦的運算速度不快，而且記憶容量有限，計算流體力學只能處理如勢流或非黏滯性流等較簡單的問題，且流場的幾何形狀也較為單純，如機翼或具規則外形者。如果要模擬像空氣流過整架飛機這麼複雜的流場，因模擬所需的計算量非常大，且所需的電腦記憶容量也非常大，就不是傳統的電腦能辦到。然而隨著電腦科技的進步，利用電腦所能處理的問題，也就日趨複雜。 到了一九七六年 CRAY 1S問世後，因其運算速度每秒可超過百萬個浮點運算（MFLOPS， Millions of Floating Point Operations per Second），開創了計算科學的新紀元，從此就進入所謂的「超級電腦」時代。隨著電腦硬軟體技術的進步，科學家及工程師對電腦資源的需求也就益形增加。在一九九一年，Smith 等人﹝1﹞在CRAY Y-MP上成功的模擬獵犬（Harrier）戰機的地面效應（In-Ground Effect）的流場狀態（圖一）。整個模擬採用約2.8 百萬個格點，20 Mwords 的執行計億體（Run-Time Memory），在CRAY Y-MP單一 CPU上共花了約 40 小時的CPU時間，實際的計算速度（Sustained Speed）約為 160 MFLOPS。再者，此模擬所求解的方程為 Navier-Stokes 方程組，所採用的擾流模式則僅為簡單的代數模式（Algebraic Model）。雖然模擬所得到的結果， 離實際工程應用尚有段距離，但從圖一可以看出，主要的流場結構也都清楚的被呈現出來。像這樣的模擬，在航空工業上可說是具有指標作用，代表利用電腦模擬來處理“實際”的大型工程問題，已不再是個達不到的目標。在邁入超級電腦時代之後的十到十五年間，可說是CRAY或類似的向量電腦獨領風騷的年代，許多的科學或工程計算多半是在向量電腦上完成模擬。但隨著向量電腦運算功能的增強，其價錢卻也貴到幾乎沒有機構可以擔負得起。此外，向量電腦的技術不論是在硬體或軟體方面，均發展到相當成熟的階段，技術上已不易有大的突破。因此，單就向量電腦是無法應付未來的計算需求。也因為如此，原本就有不少人投入研究開發的平行電腦[1]， 夾著向量電腦所沒有的一些優點，逐漸在市場上冒了出來。到了九十年代初期，各式各樣的向量電腦及平行電腦充斥在市面上，使得高效能計算[2]呈現出一片百花齊放、欣欣向榮的景象，但也因平行電腦架構本身的差異，衍伸出許多向量電腦所沒有的問題，增加使用者在使用時的困難與不便，從而降低使用的意願。在九十年代初期，大家對於高效能計算的走向，應該是固守在傳統的向量電腦，或是往平行電腦去發展？仍然是眾說紛雲，莫衷一是。但到九十年代中期，高效能計算（或平行計算）的發展，已經逐漸走到較實際可行的階段，因此這過去這幾年來，已經不再有人為平行計算是否為未來高效能計算的主流而爭辯。取而代之的是，如何建立平行計算環境，讓使用者能較容易且有效的使用平行電腦，來解決他們的問題。在1994年的夏季，美國太空總署（NASA）的CESDIS （Center of Excellence in Space Data and Information Sciences）為了進行地球與太空科學計畫（Earth and Space Science Project），而嘗試用低廉而易得的電腦相關零件，或稱為COTS（Commodity Off The Shelf），來組裝大量平行電腦，以應付該計畫所需處理的大量資訊與計算。因此，Thomas Sterling和Don Becker將十六個Intel 100 MHz DX4 以10Mbits/s Ethernet組裝成一個群組，並取名為〝Beowulf〞，意指現存最早的一篇英文史詩。Beowulf Project很快地蔓延到NASA的其他單位以及美國的其他研究單位﹝2﹞。時至今日，個人電腦群組已廣為全世界各地的研究人員所採用的平行計算平臺之一。利用電腦來模擬複雜的流體力學問題，所需的電腦資源相當大，唯有藉助向量或平行電腦始可能足敷所用。由於向量電腦已趨成熟的階段，世界各國皆將研究重心放在平行計算。如何將傳統的計算流體力學的方法加以改良或用全新的演算法將之應用到平行電腦上，就是所謂的平行計算流體力學。國內計算流體力學的發展遲至一九八０年代才開始，一直到將近一九九０年時，才開始擁有向量電腦，但仍不普及。直到國家高速電腦中心（現已更名為國家高速網路與計算中心）成立， 並於一九九三年正式對外開放後，國內使用向量電腦來從事研究的風氣， 才逐漸普及開來，但使用者仍然以學術界為主。至於平行計算方面，在國家高速電腦中心對外開放的前五年，也不遺餘力在推廣，然因時機尚為成熟，推廣成效也就相當有限。然而在過去這幾年來，國內在計算流體力學的研究及應用，已有相當的進展與成效，同時在計算的需求也不再是向量電腦就能滿足，再加上一方面個人電腦群組挾其低廉價格等等的優勢，一方面也因國家高速電腦中心適時的投入個人電腦群組的相關研究，並有專業的研究團隊負責其推廣應用，造成個人電腦群組很快的普及起來，使得高效能計算（或平行計算）已經走到實際可行的階段。因此，國內從事計流體力學的研究人員，已有不少自行或透過國家高速電腦中心的協助完成組裝個人電腦叢集，並在其上進行相關研究。除計算流體力學外，高效能計算在其他科學或工程計算也扮演類似的腳色。例如，以目前最受矚目的生物科技來說，高效能計算早就成為不可或缺的設計工具之一。再如新興科技中的微機電（Microelectromechanical System，MEMS）與奈米技術（Nano-technology），其實際尺寸分別約為10-6米與10-8米左右，因其尺寸的微小益增實驗的困難，不可避免的必須仰賴電腦模擬來加速產品的研發，在此，高效能計算的所扮演的角色將更形重要。在後續的章節，我們將從工程應用的角度對高效能計算做一介紹，並透過效能評估 NPB2 (NAS Parallel Benchmark, Version 2) 報告的結果，指出高效能計算應用的大概走向，讓有興趣者能很快的切入平行計算的領域。最後，將對現在最受矚目的格網計算，做一簡介。貳、高效能計算在Smith等人成功的模擬獵犬戰機的地面效應的流場狀態後，研究人員根據他們的模擬結果預估，同樣的問題若其精度要能為工程實務所接受，則其所需的計算量大約為1015浮點運算。就工程的角度觀之，此模擬若要在100到1,000個小時內完成， 則電腦系統的實際計算速度必須在0.3到3 GFLOPS左右，所需要的Run-time記憶空間約為200 Mwords，同時還需約4到40 Gwords的硬碟空間，才能處理模擬得出的數據。若從工程設計的需求來看，則系統的計算速度必須高達TGLOPS（Teraflops，1012 FLOPS）才足敷所需（表一）。同樣的，若不只考慮流場的模擬，而要將結構分析、推進系統、控制系統一併模擬在內，則所需的系統計算速度也必須是TFLOPS才行（表二）。像上述這麼大的計算需求量，並不限於計算流體力學的領域，在其他領域也有類似的現象（圖二），因此就有所謂的大挑戰（Grand Challenge）問題出現。由於這些大挑戰問題，不論是在科學或工程上，均是很重要的問題，且其應用層面又很廣，同時所需的計算量又非常大（圖三），因此必須要依賴高效能計算技術才能解決，這些就是構成高效能計算進步的動力。更有甚者，高效能計算不但能縮短產品的設計週期，且能降低設計成本，已成為產品設計中不可或缺的一環，並因此而成為一個國家競爭力的指標之一。一﹑如何增進計算能力要瞭解高效能計算之前，必須先知道有那些方式可以增進電腦模擬所需計算能力。我們將可能增進計算能力的方法，大約分為減低系統的Cycle Time、Pipelines、Parallel Pipelines、Superscalar、Superpipeline、Memory Hierarchy、Network、Storage System及Advances in Algorithms﹝3，4﹞。以下我們就逐一加以說明。減低系統的Cycle Time電腦系統的Cycle Time的降低有其極限，例如CRAY電腦從1976年CRAY 1S的12.5 ns (Nanoseconds)，1982年CRAY X-MP的9.5 ns，1988年CRAY Y-MP的6.5 ns，到1992年CRAY Y-MP C90的4.0 ns，在將近二十年改進約三倍左右，且越往後的改進越少。由圖四可以看出，微處理機及PC可以改進的空間雖然較大，但終究也有達到其極限的時候。Pipelines及Superpipelines所謂Pipelining是將運算（Operation）切分成連續的幾個單元（Units或Stages），使得處理器在處理指令時，幾個不同的運算中的單元可以同時進行，如此就可以達到加快計算速度的目的（圖五及圖六）。向量電腦就是採用Pipelining的做法，使得在做向量的計算的速度加快。至於Superpipelining，基本上和Pipelining的做法一樣，只是它的運算切分成比Pipelining更多的單元而已（圖七及圖八）。Parallel Pipelines系統所採用的Pipeline不只一個，因此在做計算時，可將資料分到幾個不同的Pipeline上去同時執行，以達到加速計算的能力。Superscalar系統可以發出不同的指令，同時去執行不同Pipeline的運算（圖九），以達到增進計算能力的目的。 Memory Hierarchy及Storage System就目前電腦科技的發展而言，CPU的計算速度很快且價錢便宜，而記憶體處理資料的速度相對的慢許多，且價錢亦不便宜。由於CPU和記憶體速度有相當大的差異，因此當你必須以很快的速度來處理大量的資料時，如何安排系統的記憶體，使其不但有足夠大的空間，而且存取資料的速度也足夠快，而不致於因記憶系統造成電腦系統的失速 (Stall)， 同時價錢也可為使用者接受的條件下，大概只有Memory Hierarchy的方式，可以符合上述的要求。所謂Memory Hierarchy式的記憶系統，即是將具不同速度的記憶元件（如Register、Cache、Main Memory、Hard Disk等）透過特別的安排組合在一起，使得較常使用的部份採用較快的記憶元件，而較不常使用的部份則採用較慢的記憶元件（圖十）。圖十一顯示，在一典型的Memory Hierarchy系統上，存取資料的速度可以有近百倍的差異。Network由於網路技術的進步，許多不同的電腦系統可以透過網路串在一起，來處理資料或做計算模擬，就形成另一種形式的平行計算－即分散式計算。分散式計算的快慢，往往取快於網路傳輸資料的快慢。例如Ethernet的傳輸速度為10 MB/sec，而HIPPI的傳輸速度可高達800 MB/sec，因此用Ethernet或HIPPI做傳輸網路的分散式計算，其整體計算速度就差很多。像目前最受歡迎的平行計算平臺－個人電腦叢集或群組，即可透過較快速的網路將多部個人電腦連結在一起，而達到較好的運算速率。例如，國家高速電腦中心的個人電腦叢集就曾採用100 Mb 的Ethernet及2.07 Gb的Myrinet二種網路。Advances in Algorithms以上的討論側重在系統方面，圖十二顯示在1976年到1993年之間，微處理機的計算能力成長了近460倍，Cycle Time的改進約佔其中的22倍，其餘的改變則是來自於電腦架構的改進。但從表三的結果，我們卻發現到若選到正確的數值方法，計算所需的CPU時間的差異可達數百倍。因此，只有好的電腦系統還不足以解決問題，在數值方法的選用上更是必須多費心力。在知道有那些方式可以增進電腦模擬所需的計算能力後，我們將可發現過去這些年來，原本只存在於向量電腦或大型平行主機的一些相關技術，均因為微處理器及記憶體製造技術的進步，而一一以“短小而物廉”的形式呈現出來，造成目前市面上的平行主機或個人電腦叢集的核心元件均是以微處理器為主，再搭配適合的記憶存取方式，使得研究人員能用較低廉的代價取得所需的計算能量。再者，因為網路技術的快速成長及普及，加速了技術交流及資料的分享，再加上因計算而產生大量數據的視覺化需求，使得高效能計算已不再侷限於只是計算本身，而是一種透過網路將不同的計算所需資源予與有效整合的技術，其具體的呈現就是所謂的“格網計算（Grid Computing）”。以下僅針對高效能計算中與計算本身較直接相關的部分，即平行電腦的分類、平行電腦之效率與可擴充性、Domain Decomposition及Parallel Programming，分別說明如下。二﹑平行電腦的分類常用的平行電腦的分類，大概為以下四種，即Control Mechanism、Address-Space Organization、Interconnection Networks及Processor Granularity﹝4﹞。Control Mechanism (Flynn Taxonomy)此一分類是根據指令的形態及數據的處理來區分，也就是最為一般人所熟知的Flynn分類 (圖十三），實用上分為SIMD及MIMD二種。SIMD即Single Instruction Stream，Multiple Data Stream的縮寫，也就是由單一的Control Unit將指令下達到每一個處理單元（Processing Unit）。因此，對SIMD平行電腦，每一個處理單元會同步執行來自Control Unit的指令，但每一個處理單元所處理的數據可以不同，同時在該指令周期，處理單元可以被選擇性的關閉，即沒有作用。Illiac IV、DAP、CM-2、MasPar MP-1 & MP-2、Vector Computers皆為SIMD平行電腦的代表。MIMD即Multiple Instruction Stream, Multiple Data Stream的縮寫，也就是個別的處理單元皆有能力去執行和其他處理單元不同的程式。相較之下，MIMD就比SIMD來得有彈性，所能處理的問題的廣度就更大。MIMD平行電腦種類很多，如nCUBE 2、FX-8、FX-2800、CM-5、KSR-1、Paragon XP/S、Convex C4、CRAY Y-MP C90、CRAY T3E、NEC SX-3R、SGI Origin 2000 & 3800、IBM SP2 & SMP、IBM p690 HPC、Compaq Alpha SC、Sun Fire等皆是。Address-Space Organization此一分類是根據計算模擬過程，在不同處理器間資料傳輸的方式來區分，共有Message-passing (or Distributed Memory) Model、Shared-Address-Space (or Shared Memory) Model、Distributed-Shared (or Virtual-Shared) Memory Model 及Distributed Processing四種。Message-Passing (or Distributed Memory) Model中每一個處理器是透過Message-passing Interconnection Network來聯結，每一個處理器有自己的記憶體（Local or Private Memory），別的處理器不能直接到此記憶體上取存資料，不同處理器間的資料傳輸只能靠Message-passing的方式（圖十四）。此類平行電腦有Cosmic Cube、Paragon XP/S、CM-5、IBM SP2、Fujitsu VPP300等。Shared Memory Model中所有的處理器皆是到一個公用的記憶空間去存取資料，且此存取的動作是由硬體來完成的，不同處理器間的資料傳則是透過此一公用記憶空間來達成（圖十五）。此類平行電腦有Convex C4、CRAY Y-MP C90、SGI Power Challenge、SGI Origin 2000 & 3800、HP SPP2000等皆是。Distributed-Shared Memory Model是介於上述二種電腦之間的平行電腦。基本上，此類型的電腦實際上是Distributed Shared Memory Model，但透過硬體或軟體的方式， 使得此類型電腦在使用上和Shared Memory Model一樣，主要是從撰寫程式的角度發展出來的系統，例如KSR-2、BBN TC2000及CRAY T3E皆是。Distributed Processing主要是將許多處理器或工作站或任何電腦系統透過網路（如Ethernet、FDDI等）連結在一起，共同來執行工作即是，例如DEC Alpha AXP Farm及 PC Cluster就是其中的例子。Interconnection Networks在上述所有的平行電腦，其不同處理器之間的連結，或是處理器到記憶體間的連結，都必須透過Interconnection Network才能做到，本分類法就是以Interconnection Network的連結方式來區別，可區分為Static與Dynamic兩種（圖十六及十七）。Processor GranularityProcessor Granularity則是根據處理器的Granularity來區分，可分為Coarse-Grain Computers﹑Medium Grain Computers及Fine-Grain Computers三種。所謂Granularity就是指單一處理的CPU速度與處理器之間資料的傳輸速度的比值，所得結果如果很大，就稱為Coarse-Grain，很小就稱為Fine-Grain，而Medium-Grain則是介於前二者之間。Coarse-Grain的電腦有CRAY Y-MP C90 (1 GFLOPS/Processor, 16 Processors)，Medium-Grain的電腦有IBM SP2 (266 MFLOPS/Processor, 8-128 Processors)，CRAY T3D (150 MFLOPS/Processor, 32-2048 Processors)， 而Fine-Grain的電腦則有MasPar MP-2 (0.15 MFLOPS/Processor, 1024-16384 Processors)，以上只是舉其中少數幾種做為說明之用。以上四種是過往談及平行主機較常用的分類，現因個人電腦叢集的興起及微處理器及網路等相關技術的進步，新一代的平行主機往往採用各式技術於一身，此時也就沒有必要再做上述的分類。三、平行電腦之效率與可擴充性（Performance and Scalability of Parallel Systems）平行處理（Parallel Processing）的研究的主要目的在於，如何設計更大的具多處理器的電腦系統，以便更有效地解決實際的問題。由於使用者通常希望能在此一新系統上執行的問題，常遠大於目前的電腦所能處理的範圍。對電腦設計師而言，為達此一需求，他必須瞭解實際問題由小變大（Scale Up）時其特性的變化，以及此變化對電腦設計的影響。通常從事實際設計總是從較小的系統（即處理器的數目較少）開始，藉著對小系統的認識，做為日後擴充到大系統的設計參考。另一方面，就使用者的立場來看，當你要採購一個新的電腦系統，你會怎麼做？一般而言，多是先考慮以較少的經費買一個較小的系統，等使用一段時間覺得可以接受後，才會考慮再花錢將之擴充到較大的系統，而不是買一個全新的系統。因此，系統的可擴充性（Scalability），就成為電腦設計師在設計新一代的平行電腦的重要考慮因素之一。但由於應用領域的不同，使用者所面對的問題由小變大時其特性的變化亦有所不同。因此，在談到平行電腦的可擴充性問題時，就不能只從系統的角度來看，也必須兼顧應用領域的考量﹝4-11﹞。在談到將應用領域的問題加大以便用來評估較大的平行電腦系統之前，必須先考慮下列兩件事情。第一、問題應加大到多大；也就是說，在使用較大的系統時，必須在甚麼樣的限制下（例如執行時間、記憶容量的使用度等），來增加問題的尺寸。在本文中，問題的尺寸指的是問題本身必須處理的輸入數據的量的大小。第二、應如何將問題加大；也就是說，應如何改變問題的相關變數，來滿足前述的限制。上述第一個問題只從系統的角度來看平行電腦的可擴充性，已經被廣泛的討論過。至於第二個問題，常隨著應用領域或運算法則（Algorithm）的不同而有變化，較難有通則性的考慮，因此也較少被提及。但對使用者而言，這才是他感興趣的地方，因為只有從這個角度來看問題，才能反映出他真正的需求。近年來，也有些研究人員註意到此一問題，在探討平行電腦的可擴充性時，除了電腦結構外，運算法則本身的可擴充性也在考慮之內。但由於他們通常只偏重在個別運算法則的數據計算量與資料傳輸的複雜度（Computation and Communication Complexity）的探討，因此輸入數據量的大小就成為他們在討論可擴充性的唯一變數。可是實際的科學或工程問題的可擴充性，並非如此單純，必須將其他重要變數伴隨數據量大小的改變所產生的變化也考慮在內，如此才能將科學家或工程師為什麼要在較大的系統上執行較大的問題的需求反應出來。那這些變數倒底是什麼呢？由於電腦模擬本身就是尋求實際解答的近似值，因此在求解的過程中，一定會有誤差產生。控制誤差大小的變數，就是我們考慮的對象。例如，運算法則本身的數值精確度（Numerical Accuracy），或者是暫態問題的時間步階（Time Step）的大小等。由於平行電腦的可擴充性和效率提升（Speedup）及效率（Efficiency）是牢不可分，因此在以下的章節中，我們將先從這三者談起。接著，再對電腦科學家是如何看平行電腦的可擴充性，做一番描述。隨後，再談應用領域的人對此一問題的看法。效率提升及效率與可擴充性考慮一具 p 個處理器的平行電腦，並假設問題的尺寸大小為 n ，則效率提升 S(n,p) 通常定義為對單一處理器的最佳運算法則在單一處理器的執行時間和平行運算法則在此平行電腦的執行時間的比值。但因為對單一處理器而言， 什麼樣的運算法則才是最佳的，可說是人言殊異。因之，本文遂採用同一平行運算法則在單一處理器的執行時間 T(n,1) 和此平行運算法則在平行電腦的執行時間T(n,p) 的比值為效率提升的定義，即S(n,p) = T(n,1) / T(n,p) 。平行電腦的效率 E(n,p) 則定義為效率提升除以平行電腦的處理器的數目 p ，即E(n,p) = S(n,p) / p 。最理想的狀況就是效率為 1 時，也就是 S(n,p) = p 。因此，直覺上我們可將系統的可擴充性定義如下：不論系統的處理器數目的多寡及問題尺寸的大小，對任一運算法則而言， 如果系統的效率為 1 ，即 E(n,p) = 1 ，則此系統可稱為可擴充的（scalable）。但實際上沒有一個系統的效率可以達到 1 ，因此上述的定義不具實用價值。也有人嘗試用所謂的理想機器（PRAM, Parallel Random Access Machine）來定義可擴充性，但由於理想機器和實際的平行電腦在執行程式時有很大的不同，故得到的結果，也就未必能採信。再加以同一問題在不同的理想機器上所得到的結果，也不相同，如此一來，更增加比較上的困擾。故用理想機器來定義可擴充性，亦不可行。雖然到目前為止，我們並沒有找到適當的可擴充性的定義，但從上述的討論， 我們可以暫且做出如下的結論：在一特定的平行電腦上執行一特定的運算法則，如果系統的可擴充性越高，則系統的執行效益（Performance）也就越好。問題應加大到多大：擴充（Scaling）模式的發展在不同的限制下，應用問題的擴充模式有三種，包括有固定問題尺寸擴充（Constant Problem-size Scaling）、記憶限制擴充（Memory-bounded Scaling）及時間限制擴充（Time-constrained Scaling）。固定問題尺寸擴充模式在許多實際應用問題，尤其是即時模擬（Real-time Simulation），使用者最感興趣的是，如何在最短的時間內得回結果。對不少問題而言，當問題的尺寸大小固定時，此問題的計算量也隨之固定。因此當平行電腦的處理器的數目增加時， 也就意味著各處理器所需處理的計算量也隨之減少，也就有可能在較短的時間內得到結果。故不論平行電腦的處理器數目的多寡， 問題的所有相關變數一律不變，連問題尺寸的大小也不能改變，在這種情況下，來討論系統的可擴充性，即是所謂的固定問題尺寸擴充模式。早在六十年代 Amdahl 就指出固定問題尺寸擴充模式的缺點在於，當具更多處理器的平行電腦被用來處理尺寸大小固定的問題時，常會造成系統效率的急速下降。因為對絕大多數的程式而言，總有部份的程式具連續性（Serial Portion）而無法加以平行化，因此只能在單一處理器上執行。對一固定尺寸大小的問題，假設程式中不能平行化的部份，在單一處理器上執行所需時間的百分比（Fraction）為s，其餘可平行化的部份，縱使在無限多個處理器上執行，所能得到的最大效率提升也只有 1/s ，這就是 Amdahl定律。雖然 Amdahl 定律可以應用到固定尺寸大小的問題，但對應用領域的使用者，他們之所以要用更大的系統的目的，常常是為了要處理更大的問題。由於程式中不能平行化的部份的百分比 s（Serial Fraction）常隨著問題尺寸的變大而減少，此時 Amdahl 定律就不再適用，必須考慮其他的模式。記憶限制擴充模式大尺度（Large-Scale）的科學或工程計算，通常需要大量的記憶空間。使用者常要求在不超過系統容許的最大記憶空間之下，來執行其所容許的最大問題，在這種情況下，來討論系統的可擴充性，即為所謂的記憶限制擴充模式。但此模式的缺點在於，有可能造成實際執行時間大到令人無法忍受的地步。例如， 有一運算法則在處理數據量為 O(n) 的問題，所需的計算量為 O(n2) 。若此一問題在單一處理器上可處理的數據量為 N ，在記憶限制擴充模式的假設下，具 p個處理器的系統所能處理的數據量為 p*N ，此時系統所需處理的計算量將由 N2增為 (p*N) 2 。即使假設系統的效率提升為百分之百，所需的實際執行時間則增加為原來的 p 倍。在這種情形之下，時間限制擴充模式也就應運而生。時間限制擴充模式除像即時模擬這一類特別著重在對時間的需求愈短愈好的應用外，尚有許多其他的應用問題對精確度的要求遠大於對時間的要求。例如，計算流體力學常被用來模擬飛機的飛行狀態。在模擬的過程中，必需先產生計算所需的網格， 再利用有限差分法（或其他方法）將統御偏微分方程分割化（Discretization），最後再對分割化所造成的代數方程組求其矩陣解。通常網格取得少，所得到的對應矩陣也小，因此所需的計算量也較少。網格取得多，所得到的對應矩陣也大， 所需的計算量相對的也多，但所得到的精確度相對的也較高。像這種希望藉由問題尺寸的增大（通常所需的計算量也隨之加大），以便得到更精確的結果，但同時又希望能透過具更多處理器的平行電腦將實際執行時間維持不變，（即和在單一處理器上執行程式時所需的時間一樣），在這種情況下，來討論系統的可擴充性，即為所謂的時間限制擴充模式。此模式的優點在於， 藉由增大問題尺寸以增加為求得更高精確度所需的計算量，由於此計算量的增加常會造成程式中可平行化的部份的比例隨之增大，相對的程式中不能平行化的部份的比例，也就隨之降低，因此 Amdahl 定律中造成系統效率的急速下降的原因，也就消除了。在實用上，此模式可說是最接近真實狀況。總而言之，上述的三種擴充模式，沒有一種可以適用所有的應用問題及滿足所有的使用者。但它們是目前最常用的擴充模式，使用者必須根據他們的需求，再決定採用何種模式來探討所需的平行電腦系統的可擴充性。應如何將問題加大：方法論（A Methodology）﹝12，13﹞如前所述，平行處理的研究的主要目的在於，如何設計更大的具多處理器的電腦系統，以便更有效地解決實際的問題。因此在討論系統的可擴充性時，就必須考慮到應用問題中相關變數的影響。到目前為止，和可擴充性相關的研究多半侷限在，以問題的數據量的大小做為討論可擴充性的唯一變數，以便能滿足上一節中的擴充模式的限制。但在實際的應用問題，必須將其他重要變數伴隨數據量大小的改變所產生的變化也考慮在內，如此才能真正反應出科學家或工程師為什麼要在較大的系統上執行較大的問題的需求。就計算流體力學的電腦模擬而言，當計算所需的網格產生後，必須利用數值近似法對統御偏微分方程就空間與時間座標予以分割化，最後再對分割化所造成的代數方程組求解。在此一模擬過程中，有些變數和誤差的產生有關，例如決定問題分割程度的解析度（Resolution）的變數，以及控制數值運算法則精確度的變數等。為能反映出真正的物理現象，並降低模擬的誤差，最直接的做法即為增加網格的數目（問題的數據量的大小也隨之增加），從而達到降低因分割化所造成的空間誤差。但必須註意的是，由於使用的數值近似法的不同，兩者之間的關係並非一定是線性的。同時對暫態問題而言，隨著空間分割化的變細，時間步階也必須跟著變小，否則容易造成數值不穩定（Numerical Instability），以致於答案無法收斂。另外如果採用迭代法來求得分割化後所造成的代數方程組的矩陣解，不同的迭代法所需的迭代次數亦不同，且此迭代次數亦受時間步階大小的影響。從上述的討論可以看出，由於不同的誤差來源彼此有連帶關係，因此只從減小單一誤差來源而欲求得整體誤差的降低，並不是最好的方式。因之，要降低整體誤差的最佳方式，應該是將所有和誤差相關的變數，以及這些變數和數據量大小的關係同時考慮在內。雖然目前並沒有一個通用的法則，可以告訴我們該如何做，同時在實際的問題，也沒有一個明確的公式（Formula）可以用來界定這些變數之間的關係。例如Singh 等人曾提出如下的等誤差擴充原理 (Equal-error Scaling Principle)：等誤差擴充原理: 所有誤差來源和數據量大小的關係，必須予以適當的調整擴充，使得個別的誤差來源對整個誤差所造成的影響是一樣的。做為討論平行電腦擴充性的依據，並以海洋流動模擬來證明此一直覺的訴求原理的實用價值。基本上，Singh 等人討論可擴充性的方法如下：首先必須透過誤差的貢獻（Error Contribution）瞭解應用問題的相關變數的關係。接著，採用等誤差原理發展出一套規則，來界定這些變數彼此間和數據量大小的變化的關係。最後，再檢視在適當的規則與擴充模式之下，程式的執行特性是如何隨處理器的數目的大小而變化。四、Domain Decomposition在模擬過程中，不可避免的一定要談到程式設計及執行。平行主機與其他電腦主機不同之處在於，平行主基本身擁有多個處理器（CPU），因此如何設計程式使其能發揮平行主機的特色，這就是所謂的平行演算法（Parallel Algorithm）。在做平行計算時，因平行主機本身擁有多個處理器，故在設計程式時就必須能將所有的數據，經過適度的分割，再丟到各個處理器去執行運算。此時，不但必須讓個別處理器的工作負荷一致，不會造成有的處理器還在工作，有的處理器已經做完或沒事做而等在一旁，否則就會延誤整個工作完成的時間。再者，因處理器的運算速度遠快於不同處理器間交換數據的速度或處理器到記憶體存取數據的速度，因此在設計程式時也必須將此點考慮在內。Domain Decomposition是平行演算法中較為人常用者，因它能較易達到上述目的。五﹑Parallel Programming在決定平行演算法後，接著就必須在撰寫程式，以便在平行主機上執行。在不同的程式語言中，MPI （Message Passing Interface）因已成為大家公推的標準，目前在撰寫程式方面，多數的人是以MPI作為主要的工具。參、NPB 效能評估（Benchmark）在使用電腦做模擬之前，第一個面臨的問題，就是要如何選用電腦。由於市面上電腦的種類極多，且各廠家皆強調自己出產的電腦最好，但實則不同的電腦各有其優缺點，且使用者的需求亦不相同，截至目前仍然沒有一部電腦可以滿足所有使用者的需求，因此常讓使用者無所適從，不知該如何去選取一部適合自己使用的電腦。此一問題並不始自超級電腦，而是自有電腦問世以來，就已經存在的問題。因此，如何去評估電腦的效益 (Performance) ，即稱之為效能評估。由於使用者的要求不同，對電腦的需求也就不同，因此也就有各式各樣的方式來評估電腦的效益。早期的效能評估比較著重在指令或一些簡單的運算，因此常以MIPS (Millions of Instructions per Second) 或 MFLOPS (Millions of Floating Point Operations per Second) 等做為評估的主要標準。但隨著電腦架構的多元化後，只用MIPS 或MFLOPS 的評估方式，已無法滿足使用者的需求，因此像到記憶體存取資料所需的時間，或是不同處理器之間資料傳輸所需的時間，也都被列入考慮。已如前述，在過去二、三十年來，隨著電腦科技的進步，電腦所能處理的問題已從簡單的問題走到非常複雜的問題，因之效能評估的方式也有相當的改變，導致效能評估所採用的程式或程式集，也從早期的 Livermore Loops、Dhrystones、Linpack等比較簡單的程式集，演變到後期的SPEC以及現在用以評估平行電腦的NPB等相當複雜的程式集。接著，我們就針對在高效能計算中較常被人所引用的Linpack與NPB二個效能評估程式集，做更進一步的解說。Linpack在評估電腦的浮點運算效益的效能評估程式集中，就以Jack Dongarra所寫的Linpack最為大家所熟悉﹝14﹞，此程式集原本是由Argonne 國家實驗室負責維護，現在則由田納西大學負責。Linpack程式集是透過許多的副程式來求解稠密線性方程組（A Dense System of Linear Equations），再將全部的浮點運算數目除以實際計算所需的時間，得出的結果即為平均的MFLOPS ，所採用的方法則為高斯消去法。Linpack效能評估報告是公開的， 任何人只要送個如下的電子信件到 netlib@ornl.gov， send performance from benchmark就可以收到由Netlib 寄回的最新的報告。根據問題尺度大小、數值精確度及某些規定，Linpack有幾個不同的版本，其中比較常被人引用的則為Linpack 100x100 及Linpack 1000x1000。一般而言，工作站廠商最喜歡引用Linpack 100x100的雙精度 (Double Precision) 結果，而大的向量或平行電腦廠商則喜歡引用Linpack 1000x1000的結果。在FORTRAN Linpack 100x100效能評估程式集中，主要的計算核心是一個叫daxpy的副程式。Daxpy是將一個向量乘上一個常數後，再將之與另一個向量相加，再將所得到的結果存回到原來的向量，其程式如下：do 30 i = 1,ndy(i) = dy(i) + da*dx(i)30 continue從上面的程式可以看出，此一迴圈 (Loop) 共需乘與加二個浮點運算，以及包含二個取（Load）與一個存（Store）總共三個到記憶體存取資料的動作。基本上， Linpack 100x100效能評估程式集的主要目的，是在測試電腦系統的浮點運算效益及記憶系統的功能。 Linpack 100x100有一個非常嚴格的規定，即對原始程式不可有任何人為的變更， 否則得出的結果就不予採納。因此，Linpack 100×100的結果好壞，完全依賴系統的編譯器（Compiler）的功能。如果系統編譯器的最佳化做得好，如可自動做Loop Unrolling的動作，則所得出的結果往往可比不能自動做Loop Unrolling的系統快許多。對許多大型向量或平行電腦而言，Linpack 100×100的問題尺度太小，無法發揮其計算能力，此時Linpack 1000×1000因其所處理的問題尺度和Linpack 100×100相較，大了許多，也就較能凸顯出系統的計算能力，故大型向量或平行電腦的廠商喜歡引用Linpack 1000×1000的結果。Linpack 1000×1000和Linpack 100×100除問題尺度不同外，主要的差別在於， 在不影響問題答案的精確度下，廠商可依據其系統的特性，對程式做任意的變動。因此，廠商可依其對自身電腦資源的掌控，並延聘專家針對其系統對程式集做精心的調適，從而得出可能的最佳結果。但對大部份的使用者來說，他所能掌握的電腦資源遠不如廠商，同時在撰寫程式方面也不是專家，因此，他若自行撰寫程式來求解同樣的問題，也就無法得到和廠商提供的相同數據。故使用者若不瞭解這一點， 而只是單憑廠商提供的數據，就決定其採購的電腦系統，事後可能會大失所望。NPB（NAS Parallel Benchmark）美國為保持在航空技術居世界領導地位的情形下，在一九八四年成立了數值空氣動力模擬計畫（The Numerical Aerodynamic Simulation Program），簡稱NAS。NAS的主要目的在於，希望能將最新發展出來的電腦硬體與軟體的技術，經過系統化的整合， 從而找出一條路來提升有關先進及大尺度計算的能力，再將此計算能力提供給美國航空太空總署、能源部、工業界、學術界及相關研究機構，使得美國能確保其在計算流體力學及相關領域的世界領導地位。在這樣的前提下，NAS明確的指出，它的目標是在公元二千年能提出一套完整可行的計算系統（Computing System），可以用來模擬整個航太飛行系統，而完成模擬所需的時間則為一到幾個小時，使得美國航太研發機構皆能使用此一系統來從事研發工作。要完成這樣的大挑戰（Grand Challenge），就必須要發展一套能比現有超級電腦（指在一九八０年代中期）快上一千倍的電腦系統，才有可能模擬如此複雜的問題。由於具有這樣能力的電腦系統，尚待發展中，因此就需要一套好的效能評估程式集，來評估具有潛力的電腦系統，NAS Parallel Benchmark（簡稱NPB）就因此應運而生﹝15﹞。由於NPB所欲評估的電腦，基本上是以平行電腦為主，再加上所欲模擬的問題非常複雜， 因此現有的效能評估程式集就無法滿足上述的需求。再者，一套新的平行電腦系統，因其架構的不同，往往需要採用新的運算法則及軟體，才能充份發揮其計算能力。同時也為了公平起見，就必須排除和某一特定電腦架構有關的程式。另外，計算所得的結果， 必須容易查證，因此所欲求解問題的輸入及輸出資料，必須儘可能的少，而且執行此一問題模擬時，所需的記憶空間大小及實際執行所需的時間，必須很容易隨著系統計算能力的增加而調整。最後，此效能評估程式集必須很容易的分散出去，使得需要者能很輕易就得到此一程式集。為滿足上述需求，NPB採用的是“紙與筆（Paper and Pencil）”效能評估，也就是說，對所給定的問題，只從運算法則（Algorithmically）來加以限制，甚至於所需的輸入資料也只是寫在紙上。因此，負責執行此一效能評估的人，可以根據個別電腦系統的特性，找到一個最適合的方法來解決問題，而不受到如資料結構﹑數值方法﹑處理器的配置方式及記憶體的使用等的限制。除了對Assembly Code有合理的限制外，程式語言如FORTAN或C或其擴充皆可採用。NPB總共含有八個測試程式，每一個程式皆強調在平行計算應用到航太方面的某些特點。其中有三個程式則是擷取自實際計算流體力學應用的程式，因此也就相當程度的反應出利用計算流體力學來解決實際問題所會遭遇到的情況。根據問題尺度大小，測試問題分為Class A﹑Class B及Class C三種。以下就針對此八個測試程式，分別做一簡單的描述。The Embarrassingly Parallel (EP) Benchmark此部份主要是利用Pseudorandom number來計算一個積分式，是一個典型的Monte Carlo應用。由於此一程式在計算過程當中，不同的處理器間不要需要交換資料，因此所得到的結果可以做為該特定系統的浮點運算效益的上限。部份結果請見表五。Multigrid (MG) Benchmark此部份是從求解三維 Poisson偏微分方程中，經過簡化得來的，主要是用來測試在不同處理器間具結構性的長距離和短距離的資料傳輸。部份結果請見表六。Conjugate Gradient (CG) Benchmark此部份是用來求解大型稀疏對稱正定矩陣的最小特徵值，主要是用來測試在不同處理器間不具規則性的長距離資料傳輸，基本上這是一個非結構性網格計算問題。3-D FFT PDE (FT) Benchmark此部份是利用FFT來求解三維偏微分方程，基本上是寬頻法的一部份，主要是用來測試在不同處理器間的長距離資料傳輸，但此部份允許採用由廠商提供的Assembly-coded的數學程式庫中的副程式，來執行矩陣相乘與一維、二維及三維FFT。Integer Sort (IS) Benchmark此部份是在Particle Method Codes中常用的排序運算（Sorting Operation），主要是用來測試整數計算的速度及傳輸速率，這當中完全沒有任何浮點運算在內。LU Simulated CFD Application (LU) Benchmark此部份為常用的隱式CFD法則，如NASA Ames所用的軟體之一的INS3D-LU即為其代表，主要是採用Symmetric Successive Over-relaxation (SSOR)方法求解Regular-sparse Block 5×5 Lower and Upper Triangular System，和以下的兩個程式集比較，本程式集能平行化的程度較差些。部份結果請見表七。SP Simulated CFD Application (SP) Benchmark此部份也是常用的隱式CFD法則，但在求解過程所需求解的方程組為幾個Independent Systems of Non-diagonally Dominant, Scalar Pentadiagonal Equations。部份結果請見表八。BT Simulated CFD Application (BT) Benchmark此部份和SP類似，但在求解過程所需求解的方程組為幾個Independent Systems of Non-diagonally Dominant, Block Tridiaonal Equations with a 5×5 Block Size。NASA Ames所用的程式如ARC3D就是SP和BT的典型代表。SP和BT在許多方面有雷同的地方，但在資料傳輸和計算速度比方面卻有顯著的不同。BT的部份結果請見表九。除了系統本身計算能力的效益外，不同系統在價錢上的差異，也是個重要的考量。基本上在做此方面的比較時，是將表五至表九所得出的效益比除以標價（List Price ），但採用的單位則為百萬美元。部份結果請見表十。正如前面所說的，NPB是採用“紙與筆”的方式來做效能評估，因此廠商可以儘一切的努力，來求得可能的最佳結果。首先，廠商在履行NPB效能評估時，程式的設計及執行均可達到非常高的最佳化程度，且此程式僅適用於特定的系統。其次在執行程式時，廠商甚至可以停掉系統上其他使用者正在執行的程式，同時採用最新發展出來的軟體來協助執行程式。因此，NPB所得出的結果，代表在特定系統上可能得到的最佳結果。但對大部份大型向量或平行電腦的使用者而言，他是不可能像上述那樣在系統上執行其程式，因他必須和別的使用者共享資源，同時其程式的最佳化程度亦無法和廠商的相比擬，不僅如此，系統上的軟體可能也不是最新的版本。針對此，NAS在一九九五年年尾，提出另外一套叫做NPB 2的效能評估程式集。因此，遂將以前的NPB稱之NPB 1。基本上，NPB 2是NPB的一套特定執行方式的程式集，此一程式集是免費提供給大眾的， 不像NPB 1的程式集因係廠商自行發展出來的，故別人不見得能要得到。因此NPB 2就有可能在許多具不同配備的不同系統上執行，也就可以得到較多的數據參考。同時，既然可以拿到NPB 2的原始程式，因此任何人都可以將NPB 2上使用的技巧學會後，再將之應用到別的問題。更甚者，因NPB 2不能更改程式的規定，造成NPB 2在不同系統上執行時所得到的結果，和使用者自行撰寫而可通用於大部份的系統的程式在執行時的結果，就極為類似。必須要註意的是，NPB 2所採用的程式語言為FORTRAN 77，而用來執行平行運算所需的工具則為MPI，NPB 2程式集是以Cache-based Memories為主的分散式記憶系統做為程式設計的對象。綜合上述的解說可以看出，NPB 2的結果並不是要取代NPB 1的結果，事實上兩者是互補的。比較NPB 2和NPB 1的結果，應該就可以看出在某些系統上要得到較好的效益的難易程度。有關執行NPB 2程式集在不同的系統上所得到的結果，在一九九六年下旬，由NAS所提出的NPB 2效能評估報告，已有有相當詳細的說明，在此就不再解說。在一九九六年下旬，在NAS所提出的NPB 2報告中，不但對執行NPB 2程式集在不同的系統上的結果有詳細說明外，並在此報告中提及他們對高效能計算的一些看法。由於NAS 在整個高效能計算的發展過程中，一直扮演一個非常重要的角色，因此從NPB2的設計及報告，應該可以相當程度的反應出高效能計算的大概走向，特別是高效能計算應用到計算流體力學方面。在此，根據 NPB2 的設計及報告內容[3]將相關重點再整理歸納如下：一、程式語言－仍然以 Fortran為主。在 NPB2 中規定所有程式只能用Fortran來撰寫及執行， 這意味著Fortran 在未來幾年仍將是工程及科學計算的主要程式語言。二、計算元件－以 RISC-based 微處理器為主。此亦說明如 IBM SP2、SGI Power Challenge/Origin等機器將可 存活一段時間，而傳統的向量電腦仍有其適用的地方，但已不再是主流。三、平行計算環境－以 MPI為主。在 NPB2 中規定只能採用MPI 作為執行平行計算的軟體工具，對使用者而言，這代表有共通的介面可用，程式在不同的機器上就可達到真正的互通。四、平行計算算則－在實際的計算流體力學應用則以區域分割（Domain Decomposition）為主要的算則，也相當程度的反應出過去這些年的趨勢。 從上述的重點可以看出，高效能計算（或平行計算）已經走到較實際可行的階段，即使用者可以在花較少的時間就能學會如何將平行計算應用到其專業領域，而得到可以接受的結果，這就說明為什麼近幾年在各種研討會中用平行計算所發表的成果，有日漸增多的趨勢。同時從所發表的成果可以發現，採用平行計算來從事研究者，從以學術及軍事研究佔多數到現在工業界也有更多的人加入，而大型商業化的專業軟體的平行版本也陸續上市中。肆、格網計算（Grid Computing）如前所述，網路的興起對高效能計算產生巨大的影響。研究人員欲透過網路結合座落在不同地方的各式電腦資源在一起，從事研究工作，這是所謂異地平行計算（Metacomputing）的來由（圖十八）。至於目前最為大家所重視的格網計算（圖十九），即是由異地平行計算演變而來。簡言之，Grid是藉由結合分散各地的各式計算資源而成一虛擬的整合性大型計算資源的一種架構。現在，世界各地越來越多的平行電腦短期或長期地結合在一起，而形成各式各樣功能及目的的Grid或Metacomputer。目前格網計算主要可分為下述的五種應用：分散式超級計算(Distributed Supercomputing)、高生產力計算(High-throughput Computing)、隨選計算(On-demand Computing)、資料密集計算(Data-intensive Computing)以及協同計算(Collaborative Computing)等。目前世界各地已有許多格網計算相關的組織或測試平臺陸續形成。1998年美國的一些單位開始嘗試組成一些橫跨美國本土的格網計算測試平臺，其中較有名的包括NASA的Information Power Grid、Alliance National Technology Grid、及GUSTO test bed 等等。同一年，美國國科會成立了National Partnership for Advanced Computing Infrastructure (NPACI)、National Computational Science Alliance (NCSA)、及Grid Forum等相關組織。在歐洲方面也隨後於1999年成立了European Grid Forum，亞太地區也於2000年成立了Asia-Pacific Grid。而在2000年10月，US Grid Forum、European Grid Forum、以及Asia-Pacific更進一步合併成為Global Grid Forum﹝16-18﹞。國家高速網路與計算中心（前身為國家高速電腦中心）為國內最早推動與主導格網計算的單位之一﹝19﹞，在民國二○○○年開始與德國斯圖佳特超級電腦中心簽署備忘錄，合作異地平行計算為主之應用發展，並自此年開始迄今，每年11月參加於美國舉辦的著名國際高效能計算研討與展覽會（SCXY），進行多國之異地平行計算、即時展示與國際競賽。其中異地平行計算即為格網計算之前身。國家高速網路與計算中心於二○○一年十二月舉辦國內首次的格網運算教育訓練課程，開始進行基礎的格網推廣教育。接著於二○○一年與日本工研院（AIST）簽署備忘錄，加入其所主導之亞太格網組織，中研院計算中心亦於次年元月加入其組織，並於同年五月由中研院計算中心主導合辦第二屆亞太格網研討會。二○○二年三月，國家高速網路與計算中心加入由美國國家科學基金會支持的「環太平洋格網應用與中介體組織（PRAGMA）」，該組織共有美日台韓中泰新澳馬等九國基本成員，其他寰太平國家持續在申請加入中，中心持續在其中扮演關鍵角色，並將於二○○三年十月主辦其研討會。二○○二年，國家高速網路與計算中心與IBM簽約，合作開發「台灣學術研究格網整合計畫」，簡稱「TIGER計畫」。同年十一月，國家高速網路與計算中心主辦之軟體設計比賽即以格網計算相關題目為主軸。在連續三年來緊密的發展與推動，終於二○○二年底，獲行政院首肯，將格網計算列入國家重點發展計畫，並自二○○三年起，以『全球學術研究網路-亞太中樞』計畫，以超高速學術網路的建置、計算資源的整合與數位內容之開發等，運用格網計算所提供的架構與方法，進行國家數位基礎設施的建設。此一計畫為國內整體格網發展至今的總體現，其中，包括環島光纖高速網路骨幹的設置：進行國內教育學術網路的全面升級，由內而外漸進式進行網路整合；知識庫中心的建置：以格網計算整合高速網路骨幹與高速計算與儲存、備援等資源，支援生物、醫療、奈米、防災、生態等等國家重點科技之發展。此項計畫分五年，逐步完成。此一計畫推展初期選擇以生態格網、慢性病醫療格網、超級視訊格網（Access Grid）、生物格網、防洪減災格網、與遠距科學格網六個示範型，並有初步成果產出（如圖二十至圖二十四所示）。伍、結論利用傳統電腦來解決複雜的科學及工程問題已不敷使用，唯有藉助平行計算的方式才能達到此一目的。從前述的討論可以看出，高效能計算（或平行計算）已經走到實際可行的階段，即使用者可以在花較少的時間就能學會如何將平行計算應用到其專業領域，而得到可以接受的結果。同時，廣義的高效能計算，即格網計算亦風起雲湧，成為新一代的高科技。 http://www2.nchc.gov.tw/~c00cys00/ncu/hpcintro.htm 





 參考資料： 
 自己找的 


小風
 · 12 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久













 

檢舉不當使用

 我認為此問題違反社群指南 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此問題違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此解答違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此解答違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此意見違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此意見違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消



 

你可能對以下搜尋感興趣：


國營事業徵才

緊緻拉提告別嘴邊肉

駕訓班輕鬆學開車

搭廉航出國旅遊最省錢












發問問題
通常可在幾分鐘內獲得解答！







展開»






詳細資料



詳細資料






現有問題




更多





請多詳述您的問題
上傳處理中




上傳失敗。 請上傳大於 100x100 像素的檔案
目前發生問題，請再試一次。
您只能上傳 PNG、JPG 或 JPEG 等類型的檔案。
您只能上傳 3GP、3GPP、MP4、MOV、AVI、MPG、MPEG 或 RM 等類型的檔案。
您只能上傳不超過 5 MB 的相片。
您只能上傳不超過 600 MB 的影片。
您只能上傳相片 (png, jpg, jpeg) 或影片 (3gp, 3gpp, mp4, mov, avi, mpg, mpeg, rm)。
您只能上傳相片或影片。
影片不應超過 <b>600mb/5 分鐘</b>
相片不應超過 <b>5mb</b>
影片不應超過 <b>600mb/5 分鐘</b>相片不應超過 <b>5mb</b>
  







解答問題


高空作業車遙控器
公司承租的高空自走車遙控器在工地被人拿走了.請問哪裡有賣中古的遙控器 作業車的型號是:GS-1930?



 

NFB無熔絲開關 選用 我有一個機台 機台主要有兩個馬達都是2KW 連續輸出電流8.3Arms 還有一個電源供應器4.0A 請問要選多大的無熔絲開關 要多少A 有簡單公式或算法 @@? 有無簡單公式或算法
有無簡單公式或算法
有無簡單公式或算法
有無簡單公式或算法?



 

伊德萊斯紫外線烘鞋器.促銷價?



 

防止鞋霉斑的處理方法？



 


發燒問題




不會產生任何副作用的豐胸方法?

                  4 個解答
              

 

小弟因一時失慎，不小心將電線拉斷了。
愚蠢的過程暫不討論，現在的狀況是電管內沒有電線，我要如何走內管拉一條網路線？
我已嘗試用導線器，可是到了轉彎處都過不去，不知道還有沒有別的方式可以拉呢？

                  10 個解答
              

 

如附圖所示,當A線路中可變電阻的接點C往下移動時,B線路中的感應電流方向為何?
(A) 順時鐘方向 (B)逆時鐘方向
(C)無感應電流?

                  7 個解答
              

 
更多問題





電線桿、電塔是鐵的材質吧?為什麼都不會生鏽?

             7 個解答
         

 

美國黑金與黑金剛有區別嗎?

             6 個解答
         

 

減手臂的好方法-手臂轉圈?

             4 個解答
         

 

  








服務條款


隱私權


RSS




















課程大綱










計算流體力學（一）COMPUTATIONAL FLUID DYNAMICS AND HEAT TRANSFER (1)






開課系所 Department/Institute:  航太所          Aeronautics and Astronautics
開課教師 Instructor:   林三益 Lin, San-Yih                  
開課學年 Academic Year:   0102
開課學期 Semester:    1
開課序號 Serial Number:   010

課程屬性碼 Attribute Code:   AA  7426 
課程碼 Course Number:   P452210 
分班碼 Class Code: 
學分數 No. of Credits:           3
課程語言 Medium of Instruction:   中文


課程網址 Course Website: 

先修課程或先備能力 Prerequisite Course(s): 

教師聯絡資訊 Contact with Teacher

林三益教授電話：886-6-2757575 ext. 63691
信箱：sylin@mail.ncku.edu.tw 

助教資訊 Contact with Tutor


學習規範 Course Policy
	    1. 偏微分方程式2. 解矩陣3. 基本離散方法4. 選擇模組方程式在數值方法上的應用5. 程式格點產生      

評量方式 Grading


方法百分比%

家庭作業20% 
20%期中考 40% 
40%期末考 40% 
40%




教學方法 Teaching Strategies
      課程之組成CourseComponent/授課內容所佔比例數學及基礎科學Mathematics and Basic Science/60%工程專業Engineering Expertise/20%設計實作Design and Practice/10%創新發展Innovative Development/10%通識教育General Education/0% 

		※請遵守智慧財產權觀念  不得不法影印
		 Please follow the Intellectual Property instruction and No illegal copy
	

課程教材 Course Material
	    John C. Tannehill, Dale A. Anderson, and Richard H. Pletcher, Computational Fluid Mechematics and Heat Transfer, Taylor    

參考書目 References
	    C. Hirsch, Numerical Computation of Internal and External Flow, John Wiely    

備註 Remarks





基本素養 Basic Literacy
■ 專業倫理與人文素養
 Professional Ethics and Spirit of Humanism
Fundamental Qualities□ 終身學習與服務精神
 Lifelong learning and the spirit of service
Fundamental Qualities□ 多元文化與國際視野
 Multicultural and Global Vision
Fundamental Qualities□ 永續環境與社會關懷
 Sustainable Environment and Social Concern
Fundamental Qualities 

核心能力 Competence
■ 航太分析能力
 Analysis Ability in Aerospace Engineering
□ 創新與設計
 Innovation and Design
■ 工程實作
 Engineering Practicum
■ 整合與管理
 Integration and Management
■ 航太專業知識
 Professional Knowledge in Aerospace Engineering
□ 表達與科技論文撰寫
 Presentation and Technical Writin
■ 基礎學理
 Fundamental Theories
 

課程概述 Course Description
       建立計算流體力學的知識，學習如何發展一數值方法去解有關物理的數學問題，例如常微分方程式或偏微分方程式Establish knowledge of computational fluid dynamics and learn how to develop numerical methods to solve mathematical problems related to physics, such as ordinary and partial differential equations    

課程學習目標 Course Objectives    
	    建立計算流體力學的知識，學習如何發展一數值方法去解有關物理的數學問題，例如常微分方程式或偏微分方程式。    

課程進度 Course Outline


週次 Week進度說明 Progress Description
1偏微分方程式2偏微分方程式3解矩陣4解矩陣5解矩陣6基本離散方法7基本離散方法8基本離散方法9選擇模組方程式在數值方法上的應用10選擇模組方程式在數值方法上的應用11選擇模組方程式在數值方法上的應用12選擇模組方程式在數值方法上的應用13選擇模組方程式在數值方法上的應用14程式格點產生15程式格點產生16程式格點產生17程式格點產生18期末考 

　以上每週進度教師可依上課情況做適度調整。The schedule may be subject to change.


課程學習融入下列議題或具有下列內涵的程度 Immersing the Following Issues or Contents
議題或內容 Issues or Contents關聯性 Correlation生命教育 Life Education
無相關 No correlation服務學習 Service Learning
間接相關 Indirect correlation性別平等 Gender Equity
無相關 No correlation環境安全 Environmental Safety
間接相關 Indirect correlation環境保護 Environmental Protection
間接相關 Indirect correlation智慧財產權 Intellectual Property
間接相關 Indirect correlation法治教育 Law-Related Education
無相關 No correlation人權教育 Human Rights Education
無相關 No correlation 

有關課程其他調查 Other Surveys of Courses
                   1.本課程是否規劃業界教師參與教學或演講?   否            
Is there any industry specialist invited in this course? How many times? No
			
           2.本課程是否規劃內含校外實習 (並非參訪)?   否		   
Is there any in (out of) school practicum involved in this course? How many hours?  No




