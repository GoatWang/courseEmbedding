

中華大學資訊工程(軟體工程設計組) | Yahoo奇摩知識+




















 









   ⌂首頁信箱新聞股市名人娛樂氣象運動App下載購物中心商城拍賣更多⋁知識+汽車機車電影字典遊戲旅遊理財房地產時尚美妝折扣城   Yahoo 奇摩知識+                        👤 登入    ✉ 信箱     ⚙ 服務說明    帳號資料 服務說明 意見回報        
















Yahoo奇摩知識+ 首頁











所有分類
 
健康
 
商業與財經
 
娛樂與音樂
 
家居與園藝
 
家庭與人際關係
 
寵物
 
懷孕與育兒
 
政治與政府
 
教育與參考
 
新聞與活動
 
旅遊
 
汽車與交通
 
消費電子產品
 
環境
 
社會科學
 
社會與文化
 
科學
 
美容與造型
 
藝術與人文
 
遊戲與休閒活動
 
運動
 
電腦與網際網路
 
食品與飲料
 
餐廳與小吃
 





世界Yahoo 








阿根廷





澳洲





巴西





加拿大





法國





德國





印度





印尼





義大利





馬來西亞





墨西哥







紐西蘭





菲律賓





魁北克





新加坡





香港





西班牙





泰國





英國與愛爾蘭





美國





越南





西班牙文







關於





關於 Yahoo奇摩知識+
社群指南
排行榜
點數與等級
部落格
如何安全地使用 Yahoo奇摩

 








 教育與參考

 考試


 看另一則問題 




 


            中華大學資訊工程(軟體工程設計組)
        


我今年指考分發分到中華大學 
我錄取的科系是資訊工程學系(軟體工程設計組) 
請問這個科系在中華算是大系嗎？ 
還有這個科系好嗎？ 
當人會不會當很兇？ 
教授以及資源方面好嗎？ 
還有我想請問一下 
中華大學的 
1.學費 
2.住宿費 
3.學雜費 
大約多少錢？ 
4.社團有哪些，有跨校性的嗎？ 
和企業有合作嗎？ 
資訊工程學系(軟體工程設計組)男女比例大概多少？ 
問的問題有點多，能幫幫我就幫我一下吧！謝謝！

更新: 
想請問一下，我該怎麼選科系？一個年級大概幾學分？ 
那為什麼分資工甲乙丙班？是依據什麼分班？ 
為什麼雅房的是7800四人套房的15000？有什麼差別？ 
什麼叫做"大多社團不熱絡"是大家感情不好的意思？ 
所以，我這個科系，是也要修資工系的課以及軟體工程設計的課？ 
只是偏軟！是這意思嘛？ 
那在請問一下，我該自備電腦嗎？因為要住宿舍！電腦需要哪些程式？ 
不知道你是學長還是學姊，不過還是很感謝你的回答





 
追蹤 


 
 4 個解答 
4


檢舉不當使用









您確定要刪除此解答嗎？
是
否












 









抱歉，似乎發生一些問題。



Trending Now





 

解答


評分


最新
最舊














最佳解答: 
             請問這個科系在中華算是大系嗎？資工系共三班，算最大系.... 
還有這個科系好嗎？不錯，不過選課要註意一下學分 
當人會不會當很兇？認真努力，應該是不會被當 
教授以及資源方面好嗎？會外聘講師來上某些課，會加強學生課後補強，做實驗(有些人會覺得很辛苦) 
還有我想請問一下 
中華大學的 
1.學費    這學期共"50XXX" 如果不分年級的話 
2.住宿費  1宿 2宿 3宿(雅房)都"7800"   4宿(四人套房)"15000" 
3.學雜費  !? 這學期共"50XXX" 如果不分年級的話 
大約多少錢？ 
4.社團有哪些，有跨校性的嗎？ 很多人的社團很少，有些社團有跨校性，大多社團比較不熱絡 
和企業有合作嗎？  社團!? 科系!?  不知道要問哪種 
         資工系企業有合作關係的話應該只有"專題與實習"那方面~ 
資訊工程學系(軟體工程設計組)男女比例大概多少？ 
     大約30/150(依大學部每年級大約)，每個年級都不一樣 

不要認為只有軟體工程設計組 
還有資訊工程組 
總稱 資工系(還有研所、在職專班....) 

雖然我都認為軟體組和資工組，一個偏軟、一個偏硬 
其實是課程 必修課的差別.. 


 2008-08-11 19:49:38 補充： 
大一的學費這學期是 52XXX 
大四會比較少一些... 

男女比例 更正一下 女生大約是 30~40/160~180左右 
           男生 130~150/160~180左右 

 2008-08-14 13:34:01 補充： 
想請問一下，我該怎麼選科系？  你上了資工系(軟體組)就試驗這個科系呀! 
一個年級大概幾學分？  大約16~18學分，如果你有選選修、通識就不只 
那為什麼分資工甲乙丙班？  甲乙班是資工組、丙班是軟體組 
是依據什麼分班？  一個必修課有硬體的課、一個沒有，但是有軟體比較深入的必修課，不過要修你想修的，可以選擇選修，一樣可以修的到 

 2008-08-14 13:34:20 補充： 
為什麼雅房的是7800四人套房的15000？有什麼差別？ 
雅房跟套房的差別，套房的廁所就在寢室內，因為四宿是套房設計，價錢會比較貴。 
什麼叫做"大多社團不熱絡"是大家感情不好的意思？ 
因為參予社團的人數並不是每個社團都很熱絡 
所以只有某些社團人數特別的眾多，其他就比較少人 

 2008-08-14 13:34:43 補充： 
所以，我這個科系，是也要修資工系的課以及軟體工程設計的課？ 
你本身的必修比較偏向軟體，但是選修可以選資工組的課~ 
也就是丙班可以選修甲乙班的課，相對的，甲乙班也可以選修丙班的課 
只是偏軟！是這意思嘛？必修偏軟，選修部分是資工系的都能選 

那在請問一下，我該自備電腦嗎？因為要住宿舍！電腦需要哪些程式？ 
最好自備電腦，不然寫程式、交作業， 你都要上計中解決嗎?? 
電腦剛開學會從C程式開始交，寫程式基本的就用 DEV-C 
另外學校有微軟授權軟體，在學校首頁右下角，像XP、Visual Studio 2008也有 

 2008-08-14 13:37:40 補充： 
另外 

請參加繫上的迎新茶會 
能直接詢問學長姐 
也能順便認識附近的繫上的同學 

或是上摩卡BBS  bbs://140.126.21.4 
上BBS的方法，知識裡找的到~ 
有任何疑問，直接上BBS問是最快的 
那裏是資工系建立的BBS站，也有屬於你們班的班版 




 參考資料： 
 中華資工生,   我是資工的學生,   我是資工的學生,   我是資工的學生,   我是資工的學生 


☆★☆
 · 9 年前 





0
真讚



0
真遜





檢舉不當使用


意見





 




新增意見











送出












 · 剛才不久













                  發問者的評分
                















 與前女友分手,對愛情不懂,並且會失戀痛苦,不安,交往更是菜鳥級,看了網路一些資訊, 
實在無法花這麼多時間去嘗試, 
幸好公司同事在桃園紅娘李姐那兒找到,我就請朋友陪我去看看, 
桌上好多近期交往的成功案例,都是喜餅盒子,公司也很樸實, 
細問下才知道已經有工作經驗22年, 
實體店面有19年了,真不容易,我好希望我也是不久就被祝福下一位





欣芝
 · 2 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久





















 【亞洲36588合法彩券公司直營  官網:  A36588.NET  】 

【 最新活動→迎接新會員，首存狂送20% 】 

【運動→電子→對戰→現場→彩球 】 

【免費服務 →電影區、討論區、KTV歡唱、運動轉播、即時比分、24H客服 】 

【亞洲36588合法彩券公司直營  官網:  A36588.NET  】





 匿名使用者 
 · 3 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久



















 下麵的網址應該對你有幫助 

http://phi008780416.pixnet.net/blog





 匿名使用者 
 · 3 年前 




0
真讚



0
真遜





檢舉不當使用


意見







 




新增意見











送出












 · 剛才不久













 

檢舉不當使用

 我認為此問題違反社群指南 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此問題違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此解答違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此解答違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消




檢舉不當使用

 我認為此意見違反社群規範 
聊天或爭嚷、成人內容、垃圾信、侮辱其他成員、顯示更多
我認為此意見違反服務條款
對未成年兒童有害、帶有暴力或脅迫意味、騷擾或侵犯隱私權、假冒或不實陳述、欺詐或網路釣魚、 顯示更多

其他詳細資料

若您認為自己的智慧財產權受到侵害，並想提出申訴，請參閱我們的版權/智慧財產權政策

檢舉不當使用


取消



 

你可能對以下搜尋感興趣：


國營事業徵才

說走就走泰國輕鬆GO!

為自己拓展視野豐富人生經驗

沖繩租車自駕遊












發問問題
通常可在幾分鐘內獲得解答！







展開»






詳細資料



詳細資料






現有問題




更多





請多詳述您的問題
上傳處理中




上傳失敗。 請上傳大於 100x100 像素的檔案
目前發生問題，請再試一次。
您只能上傳 PNG、JPG 或 JPEG 等類型的檔案。
您只能上傳 3GP、3GPP、MP4、MOV、AVI、MPG、MPEG 或 RM 等類型的檔案。
您只能上傳不超過 5 MB 的相片。
您只能上傳不超過 600 MB 的影片。
您只能上傳相片 (png, jpg, jpeg) 或影片 (3gp, 3gpp, mp4, mov, avi, mpg, mpeg, rm)。
您只能上傳相片或影片。
影片不應超過 <b>600mb/5 分鐘</b>
相片不應超過 <b>5mb</b>
影片不應超過 <b>600mb/5 分鐘</b>相片不應超過 <b>5mb</b>
  







解答問題


翰林版 英文第二冊7到9課的單字?



 

我之前去了韓國,跟大家一樣也是很喜歡哪?想學學看,有推薦的補習班嗎?



 

全民英檢初級參考書籍?
最新出版的全民英檢初級參考書籍，集合各家版本精華，應對你幫助很大，請詳以下網址所列書單！
https://judybook.blogspot.tw/2017/07/blog-post_67.html?



 

淡水商工餐飲日間部讀幾年？夜間部讀幾年？



 


發燒問題




有哪些科學治療性功能障礙的方法?

                  4 個解答
              

 

請問maca瑪卡能快速治療性功能障礙嗎?

                  4 個解答
              

 

大大們，能幫我解決一個問題嗎　　我高中職填志願填錯了　　把慈惠醫專填在前面
如果我種了慈惠醫專的話　　那　７／１３報到當天有辦法坐校車嘛！？慈惠在屏東　我人在高雄　但我害怕沒有校車做到屏東　　想問問看當天有沒有校車　如果沒校車怎麼辦?

                  4 個解答
              

 
更多問題





想要出國打工度假,但英文很爛,聽說英文不錯出國打工的工作可以賺比較多的錢,如果明年底去,有推薦補習班可以幫忙惡補嗎?再麻煩大家提供一下意見,謝謝?

             9 個解答
         

 

我小孩現在國中畢業,現在要升高中,之前都在佳音補習,有沒有推薦的英文補習班,不要文理補習班那種,我的小孩很討厭要一直考試的補習班...?

             9 個解答
         

 

我想學韓文,一直想學韓文,有買發音的書自學過 但看得霧沙沙 ,所以想問問有推薦的補習班學韓語嗎? 我住臺中 想找方便搭車 費用又不會太高的補習班 請推薦了 謝謝?

             4 個解答
         

 

  








服務條款


隱私權


RSS


















軟體工程(Software Engineering;SE)
















軟體工程(Software Engineering;SE)
本網頁以打造無障礙閱讀為目標，可以用任何瀏覽器來觀看本網頁


      軟體工程這門課程在國內教育上，資工與資科等系所會列為必修而資管僅列為選修而已，資管會列為必修的是系統分析與設計，但系統分析與設計只是整個軟體工程的一小部分而已，所以資管出身的資訊人是一定要瞭解的啦....。
    


簡介

軟體工程

軟體開發架構的演進

系統分析與設計


結構化技術

物件導向技術


統一塑模語言(Unified Modeling Language,UML)

樣式理論(Pattern Theory)

資料庫正規化

CMMI(Capability Maturity Mode Integrated)

參考書目

網路資源



      簡介

      1968年秋季，NATO（北約）的科技委員會召集了近50名一流的編程人員、計算機科學家和工業界巨頭，討論和制定擺脫“軟體危機”的對策。在那次會議上第一次提出了軟體工程（softwareengineering）這個概念。 
      大多數軟體開發項目的失敗，並不是由於軟體開發技術方面的原因。它們的失敗是由於不適當的管理造成的。遺憾的是，盡管人們對軟體專案管理重要性的認識有所提高，但在軟體管理方面的進步遠比在設計方法學和實現方法學上的進步小，至今還提不出一套管理軟體開發的通用指導原則。
「新技術一直冒出來，學都學不完了，那裡有空搞軟體工程」、「計畫趕著進行，做都做不完了，那裡有空搞軟體工程」...... 就在這一個又一個的藉口中，原本可以幫助軟體產業進步的軟體工程，竟然變成他們口中阻礙軟體產業進步的絆腳石似的，怎不令人對他們的無知感到心寒。

      寫程式的難度愈來愈低，因為程式語言越來越高階，API 越來越多，開發工具越來越好用，寫程式的門檻自然就大大地降低了。想要開發出有價值的中大型系統，軟體工程就很重要了，以蓋房子來說，你可以隨便找一兩個工人用磚或木材來蓋一棟矮房，但是如果想蓋一百多層樓的101大樓，你非得有良好的工程規劃不可，軟體不也是如此？程式設計師名片上的頭銜都是工程師，雖然和建築工程師、機械工程師... 一樣都被稱為工程師，但比較起來，軟體產業的工程師卻是最不工程導向的 。



      軟體工程

      軟體工程包括兩方面內容：軟體開發技術和軟體專案管理。 
    

軟體開發技術包括軟體開發方法學、軟體工具和軟體工程環境。 
軟體專案管理包括軟體度量、項目估算、進度控制、人員組織、配置管理、項目計畫等。 

      軟體工程是為瞭解決軟體危機而誕生，近來最熱門的技術有
      
UML
Design Patterns
re-engineering
XP 



        軟體架構
      
      已成為軟工熱門的研究之一。
開發流程由強調瀑布式流程(waterfall)轉為強調反覆式流程(iterative)。 反覆式流程的主要精神是分析一些，設計一些，實作一些，執行一些，也就是將整個開發流程切割成數個週期(iteration)，每個週期都是一個叫小型的直線式流程，並且強調週期結束時都有可以執行的結果，而每個週期都是以前一週期的結果為基礎，在新增需求的方式進行，直到所有的軟體需求都滿足為止。因此反覆式流程也是一種漸增式流程(降低風險)。以結果來看，瀑布式流程只會交付一次產品，反覆式流程會交付多次產品。


      SA -> SD -> coding -> test -> installation -> maintance 
    
process

Quality Assurance
Configuration Management
Project Management
CMM 

software system


      bussiness application
      
TPS,DSS,MIS,ES


      web application
      
Web System
Web Service 
E-service : marketing+MIS

real-time
safety-critical

safety critical system

      常用的formal工具 : Petri Nets
    

Petri Nets 的 reachability graph 常因可能的狀況太多而不可能分析，所以有許多論文會討論如何簡化它
現今也常用在電子商務上

軟體開發架構的演進
      

      隨著Internet的興起，分散式系統的環境日趨成熟，要將整個Internet視為區域網路般的存取資源與交換資料，程式設計上就必須考慮到所謂的3層式架構 
    


        展示層(Presentation Tier) 
      

        將UI的部分獨立出來，除了可讓專業的美工處理之外，還要考慮到程式邏輯的變動不會影響到畫面，或是畫面的變動不會影響到程式邏輯 
      

        商業邏輯層(Business Logic Tier) 
      

        將企業運作的邏輯獨立成元件，以方便更新程式碼時只需要異動相關的元件即可 
      

        資料層(Data Tier) 
      

        將關於資料存取的部分獨立出來，如此一來在變動資料庫架構時便不需要更改程式邏輯或畫面 
      

    接下來，讓我們來瞭解程式開發架構是如何由1-Tier走向N-Tier的
    單機架構(1-Tier)

      展示層，商業邏輯層，資料層都在單機上處理，適用於文字處理，個人資料處理(PIM)等單機架構，其瓶頸為
    

檔案型的資料有傳輸浪費頻寬與異動需鎖定等問題
商業邏輯或使用者介面改變，需重新部署

主從架構(Client/Server , 2-Tier)

      將資料層分離出來，儲存到資料庫伺服器，適用於多人存取資料的環境，其瓶頸為
    

商業邏輯或使用者介面改變，需重新部署
資料庫伺服器容易成為效率的瓶頸，例如Client端的連線數會增加伺服器connection紀錄負擔 
      
        //因此我們應該只在取用資料與將資料回存時才進行connection
      

      商業邏輯應該放在client或server端的問題
      
放在前端，資料庫可不受限制的抽換，但商業邏輯改變，需重新部署
放在後端，通常是利用Stored Procedure，但這樣就不易抽換資料庫軟體


分散式架構(N-Tier)

      將展示層，商業邏輯層(放在AP Server)，資料層(放在Database Server)都各自獨立，適用於平臺不同，網際網路的環境。
      
      若展示層以一般開發工具開發稱為
      
        Rich Client
      
      ，若利用動態網頁技術運作於瀏覽器上則稱之為
      
        Thin Client
      
      。 
      
      其瓶頸為
    

AP Server 與 Database Server除了穩定運作的需求外，也易成為效率的瓶頸
需要能將商業邏輯包裝成元件的技術，門檻較高

網路服務(Web Service)

      將整個網際網路視為區域網路甚或是作業系統般，徹底實踐分散式系統的美麗新天地，使用網際網路上的資源就如同取用單機資源一般容易，主要是利用XML作為資料轉換的標準，透過SOAP通訊協定穿過防火牆，打破網際網路的隔閡，目前有Sun 的Java One架構與Microsoft的.NET架構可供參考。
    


      系統分析與設計(Systems Analysis & Design)
資訊系統的種類

交易處理系統(Transaction Processing System;TPS) 
管理資訊系統(Management Information system;MIS)
決策支援系統(Decision Support System;DSS)
高階主管資訊系統(Executive Information System,EIS)

      專家系統(Expert System;ES)
      
使用者介面
推理機
知識庫

操作性系統(Operational Systems)
辦公室自動化系統(Office Automation Systems;OA)

資訊系統的建置策略


      公司內部獨力完成
      
使用者自建(End User Development;EUD)
資訊部門發展


      公司外部取得
      
委外開發(Outsourcing)
套裝軟體(Application Package)


      其他方式
      
與軟體公司合作等


系統開發模式(SoftWare Process Model)
瀑布式(Waterfall)



        編碼與修正模式(Code-andfix Model)
      


        階段模式(Stagewise Model)：Benington(1956)
      

      瀑布模式(Waterfall Model)：Royce(1970)
      = 系統發展生命週期(System Development Life Cycle;SDLC)
      

        特徵
        
適用於需求明確，領域知識(Domain KnowHow)容易取得的專案
強調開發過程需有完整的規劃，分析，設計，測試及文件等管理控制
前一階段完成後才能進入下一階段，各階段僅循環一次
沒有明確規定要劃分成多少個階段，每一階段皆有文件產出


        至少劃分3階段
        
分析
設計
實施


        通常劃分5~7階段不等(每一家學說都不同,掌握精神即可)
        
初步調查 (Preliminary Investigation) 
系統分析 (System Analysis) 
系統設計 (System Design) 
系統開發 (System Development) 
系統實施與評估 (System Implementation and Evaluation) 




      反覆式(Iterative)


      漸增模式(Incremental Model)：Mills(1971)
      
強調需求可分成幾個部分
開發週期可反覆進行


      雛形模式(Prototyping Model)：Bally(1977)
      
適用於需求不明確，專案小，應用領域不熟悉或高風險之專案
強調雛形之快速開發，以雛形作為使用者與資訊人員溝通之工具，使用者高度參與等

        雛形策略
        
演進式雛形(Evolutionary Prototyping)
用後丟棄式雛形(Rapid Throwaway Prototyping)：因成本較高，故適用於風險最高的情形



      螺旋模式(Spiral Model)：Boehm(1988)
      
強調「風險分析」結合了SDLC與雛形模式

        螺旋模式的4個步驟
        
找出系統目標，可行方案與限制
依目標與限制評估方案
開發雛形
使用者評估，決定下一步驟



      同步模式(Concurrent Model)：Aoyama(1993)
      
構想源於製造業的同步工程(Concurrent Engineering)目的在於縮短產品開發時間，適用於套裝軟體的專案

        同步模式的構想
        
活動同步(Activity Concurrency)：不同團隊平行開發
資訊同步(Information Concurrency)：不同團隊資訊共享
整合性的管理系統：協調各種資源的互動關係



需求擷取與分析
使用者需求的分類

巨觀需求：欲電腦化的環境，作業程序與範圍，輸出與輸入所需之資訊或表單及系統目標，限制，主要功能等，盡可能在需求分析階段中釐清與確定。
細部需求：使用者介面之要求，例外狀況之處理，錯誤及輔助訊息之顯示，通常到設計階段處理。

需求的擷取方式

查閱文件 
實地觀察(Observation)

      訪談(Interview)
      
開放式訪談(Open Interview)：類似交談
結構化訪談(Structured Interview)：類似詢問


      問捲
      
簡單隨機抽樣
分層抽樣
便利抽樣
判斷抽樣

開會討論

      聯合開發(Joint Application Development;JAD)
      
範圍界定
關鍵人員的熟悉
會議準備
會議進行
文件產生


需求的表達工具


      流程圖(Flow Chart)
      
□：表達作業處理，可配合
        處理描述
◇：表達流程控制
→：表達資訊流向
波浪形：表達資訊的展示與儲存，可配合
        藍圖(Drawing)
        與
        資料詞彙(Data Glossary)


需求分析文件的樣版

問題描述
新系統目標
新系統限制

      使用者需求
      

        流程圖
        
處理描述
藍圖
資料詞彙



系統分析與設計的兩大技術


結構化技術
      ：將資料與流程分開考慮
      
流程塑模：主要透過資料流程圖(DFD)
資料塑模：主要透過實體關係模式(E-R Diagram)
使用者介面塑模


物件導向技術



      結構化技術


      結構化設計(1960)：強調系統的結構化與可維護性，決定系統應有哪些模組(模組名稱,輸入,輸出,內部資料,處理邏輯)
      

          結構化技術所需工具
        


            文件
          

            工具
          

            經驗法則
          

            評估準則
          



            結構圖(Structure Chart)
          
 
            
          

            模組大小：小模組200行以內
          

內聚力




            HIPO圖(Hierarchical Input Process Output)
          
 
            
          

            控制間距：(Magic Number 7±2)
          

耦合力




            處理規格描述(Process Specification)
            
結構化英語(Structured English) 
程式設計語言(Program Design Language;PDL)


 
            
          

            影響範圍
          
 
            
          



            資料字典(Data Dictionary;DD)
          
 
            
          

            控制範圍
          
 
            
          



      結構化分析(1970)：利用圖形化文件工具(Graphic Documentation Tools)進行企業流程及企業資料格式塑模
      

        事件列(Event List)
        
資料流導向：客戶輸入代號
時間導向：下午3點要簽發支票
控制導向：系統的開啟或關閉


        環境圖(Context Diagram)
        
○：系統
□：外部實體
→：資料流


        資料流程圖(Data Flow Diagram;DFD)：表達系統作業處理與資料流之關係
        

          表示符號
          
□：外部實體(Entity)
→：資料流(Data Flows)
○：處理(Process)
二：資料儲存(Data Store)


          建構方式
          
由上往下分割(Top-Down Partitioning)
由中間往外分割(Middle-Out)：Yourdon-1988



        實體關係圖(Entity-Relationship Diagram;ERD)
        

          表示符號
          
矩形：代表實體類型 (Entity Type) 
菱形：代表實體類型與實體類型間之關係 (Relationship) 
橢圓：代表實體類型或關係之屬性 (Attribute) 
直線：把屬性連結到實體類型或把實體類型連結到關係 
基數率(Cardinality Ratio)：代表實體類型與實體類型間之關係程度。常見的基數率是「1:1」、「1:N」及「M:N」三種
參與限制(Participation Constraint)：個體的存在是否藉由與另一個個體之間的關係而存在。參與限制分為「全部參與（Total Participation）」、「部份參與（Partial Participation）」兩種。


處理規格描述(Process Specification)
狀態轉移圖(State Transition Diagram;STD)


      結構化程式設計(1969)：Dijkstra提出，避免GOTO所造成的混亂
      
循序(Sequence)：compute,read,write
選擇(Condition)：if then else, case 
重複(Repetition)：do while 


      由上而下發展
      
由上而下設計(Top-Down Design)
由上而下編碼(Top-Down Coding),由下而上編碼(Bottom-Up Coding)

        由上而下實施(Top-Down Implementation)由上而下測試(Top-Down Integration Test)
        

          白箱測試：由上而下或由下而上依功能測試
          
單元測試
整合測試


          黑箱測試：情況極端與例外的測試
          
系統測試
驗收測試




結構化分析與設計的評估準則
    良好的設計希望達到模組的內聚力為功能內聚力，耦合力為資料耦合力
    

      內聚力(Cohesion)：衡量模組完成一件工作的程度



        功能內聚力(Function Cohesion)
      
      ：單獨處理一件工作


        順序內聚力(Sequential Cohesion)
      
      ：模組順序執行，一個模組的輸出會成為下一組的輸入


        溝通內聚力(Communication Cohesion
      
      )：使用相同的資料
暫時內聚力(Tempral Cohesion)：模組執行無順序關係但須在一定時間內完成一件工作
程序內聚力(Procedural Cohesion)：按照順序執行而不共用資料
邏輯內聚力(Logical Cohesion)：根據上層模組傳來的參數決定執行的功能
偶發內聚力(Coincidental Cohesion)：模組可做好幾件不相干工作，各模組具有功能內聚力



      耦合力(Coupling)：衡量模組間相互關連的程度


        資料耦合力(Data Coupling)：模組間藉由資料傳遞參數

        資料結構耦合力(Stamp Coupling)：模組各自使用資料結構的一部份
控制耦合力(Control Coupling)：A模組傳遞旗標控制B模組
共同耦合力(Common Coupling)：兩模組使用相同的資料區
內容耦合力(Content Coupling)：A模組可使用B模組的程式碼或改變其變數



      物件導向技術(Object-Oriented Technique，OOP)

針對日趨複雜之軟體需求的挑戰，軟體業界發展出了物件導向 (OO) 的軟體發展模式，作為針對「軟體危機」的最佳對策。
物件導向之觀念起源於模擬語言(1966, Simula 語言)，以物件模式來描述真實系統，並將資料抽象化(Data Abstraction)、封裝、繼承與同名異式的觀念融入於物件系統開發中。 
第一個純粹的OOP語言：1980全錄(Xerox)公司的PARC研究中心所開發的
      
        Smalltalk-80
      


      OOP的先驅 Brad Cox 曾提出Software-IC的概念，而要達到軟體IC的概念，則需要下列特性
    

物件 & Message 
繼承性(inheritance)
封裝性(encapsulation)
動態連結(dynamic binding)

抽象化(Abstraction) 

抽象化所描述的過程，就是由許多物件中抽離出重要的特性來，而這些特性，足以讓被抽象化的物件，與別的物件分別開來。同時，對於物件抽象化的結果，也因我們的需要不同，而有所變化。
所有的抽象化都是系統的發展，為了維繫存在，必須適應變化的唯一路途。
抽象化的目標與物件導向一樣，就是『讓我們更容易模擬世界，並加以處理』。



      物件(Object)=案例(Instance)

由一群具有相同資料結構與相同行為的物件所描述的集合中，某一個特定且存在的物件。
物件是一個具有狀態(State)、行為(Behavior)與識別(Identity)的實體或抽象化概念(Abstract Concept)，且其行為會影響其狀態。
物件是一個封包，包括了名稱(name)、
      
        屬性(attribute)
      
      及
      
        操作(operation)
      
      3部分。
      
在C++中稱為
        
          資料成員(Data Member)
        
        與
        
          成員函式(Member Function)
        

      在Java中稱為
      
        欄位(Field)
      
      與
      
        方法(Method)
      
每一個物件都是一個被class所分類的instance (Every object is an instance of a class)



      類別(Class)=物件類型(Object Type)=抽象化資料型態(Abstract Data Type;ADT)

由一群具有相同資料結構與相同行為的物件描述，所形成的集合，經由抽象化(Abstraction)後稱之為類別。
類別是一種定義(Definition)、描述(Description)、樣版(Template)，故可以類別建立新的物件。

封裝(Encapsulation)

將資料與操作此資料的方法包裝成一個物件稱之為封裝。

      封裝後物件的結構分為2部分
      1.介面(Interface)2.實作(Implementation)
封裝將物件的實作細節隱藏，使其與外界環境隔離，只允許該物件所包含之操作修改其資訊，稱之為資訊隱藏(informatiion hiding)。

繼承(Inheritance)


      所謂繼承就是從基底類別(base class)，建立衍生類別(derived class)。衍生類別除了繼承基底類別的所有特性外，可依據需求建立新的功能或修改，其基底類別不會受任何影響。繼承可提升程式碼的重複使用性(reusability)。
      

        多重繼承(multiple inheritance)：一個類別可以直接繼承多個基底類別─網路結構。多重繼承最常引發的麻煩便是「模稜兩可」(ambiguity) 。
簡單繼承(single inheritance)：一個類別最多只能直接繼承一個基底類別─樹結構。


      類別間的層級關係
      
父類別(Superclass)、泛化、一般化(Generalization)：萃取類別的相同屬性與操作所成的上層類別。
子類別(Subclass)、繼承、特殊化(Specialization)：在既存類別下，加上專門的特性所成的下層類別。
「is a」的關係：子類別 is a 父類別，如鋼琴是樂器。


同名異式(Polymorphism)=多型=動態繫結(Dynamic binding)

定義相同名稱的操作，以不同的方式處理不同類型的資料。
多型在程式執行期利用動態連結(Dynamic Binding)的方式判斷訊息參數的類型與個數來決定運作的方法。

      達到物件導向中「多型」的方法
      
抽象類別 (abstract class)：抽象類別是為了讓方法的使用更多樣化，物件轉換型別為抽象類別後，即使方法名稱相同，其實作的內容與執行結果卻不同。 


物件導向的系統開發方法(Process)

      物件導向的系統開發是一個反覆(Iterative)的過程，包括了三個階段
    

需求分析 ->
      
      (需求模式) 主要以使用個案圖、活動圖、藍圖、資料詞彙、介面元件等作為表達工具。
系統分析與設計 -> 
      
      (分析模式) 將需求模式中的系統表達成一個物件架構，包括了物件圖與類別圖 
      
      (設計模式) 將物件架構至現況之實施環境，包括了循序圖、合作圖、狀態圖、活動圖。
實施與測試 ->
      
      (實施模式)元件圖、部署圖。
      
      (測試模式)

    這種反覆的開發方式，在每個iteration(反覆的期間)結束後，希望能產生具備產品品質、測試、整合過的軟體出來，所以會有多個發行版本(release)存在
    

        重要的物件導向的系統開發方法
      


          方法名稱
        

          方法論者(3 Amigo)
        



          Booch
        

          Grady Booch 
        



          OMT(Object Modeling Technique)物件塑模技術
        

          Jim Rumbaugh 
        



          OOSE(Object-Oriented Software Engineering)物件導向軟體工程
        

          Ivar Jacobson 
        



          RUP(Rational Unified Process)Rational統一流程
        

          Rational / IBM 
        



          XP(eXtreme Programming)極致程式設計
        

          Kent Beck 
        



          要看看還有哪些系統開發方法，可參考： 
          http://www.cetus-links.org/oo_ooa_ood_methods.html



Booch

      Booch之方法將系統開發過程分為
      觀念期、分析期、設計期、進化期、維護期，常用於大型軟體專案。
    

觀念期：確定核心需求
分析期：發展系統行為模式
設計期：建構系統架構
進化期：改良系統
維護期：改良移交後之系統

OMT

      Rumbaugh之OMT方法將系統開發過程分為 觀念形成、物件導向分析、物件導向設計三個階段，常用於企業資訊系統。
    
OOSE

      Jacobson之OOSE方法將系統開發過程分為 分析、建構、測試三個階段，以使用個案著名。
    
RUP

初始階段(inception)
詳述階段(elaboration)
建構階段(construction)
轉換階段(transition)

物件導向的塑模 = 軟體架構

      軟體開發如同音樂譜曲及建築設計，其過程中必須將需求、分析、設計、實作、佈署等各項工作流程之不同觀點予以呈現，這就是軟體系統之塑模(Modeling)。 
    

      Booch等人 / Rational Software 提出可從4+1觀點(4+1 view)來看軟體系統架構(凸顯使用個案的重要性)
    

使用個案觀點(Use Case View)：以使用個案充分表達軟體功能需求
設計觀點(Design View)：以物件的觀念，表達出軟體設計結果 (Logical View) 
流程觀點(Process View)：
實施觀點(Implementation View)
佈署觀點(Deployment View)


      根據上述5個觀點我們可以整理出6種塑模
    

使用個案塑模：使用個案圖
物件資料結構塑模：類別圖、物件圖
物件互動行為塑模：互動圖(包含了循序圖、合作圖)
作業行為塑模：活動圖、狀態圖
使用者介面塑模：
系統元件與組織結構塑模：元件圖、部署圖

物件導向的軟體維護

軟體的維護就是軟體的再生，維護較開發而言要花更多的金錢與時間
軟體維護的思維上就是要考慮到
      
        可維護性(Maintainability)
      
      與
      
        可重複使用性(Reuseability)
      
傳統的重複使用方案並無法兼顧可維護性與可重複使用性的目標，物件導向設計的重複使用方式可在含有宏觀商業邏輯的抽象層次的上層結構來考量，以達到可維護與可重複使用的目標。

物件導向類別設計的法則

開閉原則(Open-Closed Principle ; OCP)
Liskov代換原則(Liskov Substitution Principle ; LSP)
依賴倒轉原則(Dependency Inversion Principle ; DIP)
介面隔離原則(Interface Segregation Principle ; ISP)
組合/聚合重複使用原則(Composition / Aggregation Principle ; CARP)
Demeter原則(Law of Demeter; LoD)


開閉原則(Open-Closed Principle ; OCP)



        模組應當敞開擴充大門，但關閉修改之窗
      
      。
如何達成開閉原則，關鍵在抽象化。
不允許更改的是系統的抽象層，允許擴充的是系統的實作層。
OCP的另一個角度是EVP對可變性的封裝原則(Principle of Encapsulation of Variation)即找到一個系統的可變因素，並將之封裝起來。
可變性必須被封裝，那不同的可變性呢？應用繼承來處理，因此繼承應被視為封裝變化的方法，但繼承的層數避免超過2層以免不同的可變性混和。
應避免將單純的流程控制轉移語句改寫成多型，除非內含了某種商務邏輯。
所有的設計樣式(Design Pattern)都是針對不同的可變性封裝，使系統在不同的角度上達到開閉原則。


      Liskov代換原則(Liskov Substitution Principle; LSP)



        子類別應該可以使用其基礎類別替代
      
      。
Liskov代換原則是繼承之所以能重複使用的基石，只有當衍生類別可以替換掉基礎類別，且軟體的功能不受影響時，其類別才算真正的被重複使用，而衍生類別也才能夠在基礎類別的基礎上增加新的行為。
Liskov代換原則要求凡是基礎類別使用的地方，衍生類別一定適用，故衍生類別必須包含全部基礎類別的介面

      針對違反LSP設計時可行的重構(Refactoring)方式
      
當類別A錯誤的繼承類別B時，可建構一個新的抽象類別C，作為2個具體類別A,B的父類別
當類別A錯誤的繼承類別B時，可重構為類別B委派(Delegate)類別A



      依賴倒轉原則(Dependency Inversion Principle; DIP)



        要依賴於抽象，而不要依賴於具體
      
      。

      依賴倒轉原則的策略是依賴介面或抽象方法及類別，而不是具體方法或類別，包括了下列情況都得遵循DIP
      
變數的類別宣告
參數的類別宣告
方法的傳回型態宣告
型態的轉換

抽象層級含有宏觀和重要的商務邏輯，具體層級含有與實作有關的演算法語次要的商業邏輯，而傳統的程序性設計或錯誤的類別規劃會讓抽象層級依賴於具體層級，因此依賴倒轉原則可倒轉此一現象，讓實作改變時，商業邏輯無須變動。
一個具體Java類別應當只實作Java介面和抽象Java類別中宣告的方法，而不應當給出多餘的方法。

      若Java程式要參照一個物件，若此物件有一個抽象型態，則應使用此抽象型態作為靜態型態(Static Type)
      
靜態型態(Static Type) = 實際型態(Apparent Type)：變數被宣告時的類別
實際型態(Actual Type)：變數所參照的物件真實型態

若一個物件存在其抽象類別，就應當在任何參照此物件的地方使用抽象類別

      Java語言中建構一個物件的程式是違背OCP與DIP的，但可在此類別被建構出來後過多型性使得使用端依賴於其抽象類別。
      
List employees = new Vector();

DIP是最難實作的原則，因為會使用到物件工廠就會產生大量的類別。
DIP假定所有的具體類別都是會變化的並不完全正確，因為某些具體類別是相當的穩定因此並不需要為此發明一個抽象型態。


      介面隔離原則(Interface Segregation Principle; ISP)

由客戶端指定的許多介面比一個一般用途的介面好。 
使用多個專門的介面比使用單一的總介面要好，否則會造成對介面的污染(Interface Contamination)。
一個類別對另一個類別的依賴性應當是建立在最小的介面上的。


      組合/聚合重複使用原則(Composition / AggregationPrinciple ; CARP)
Demeter原則(Law of Demeter; LoD)


      統一塑模語言(Unified Modeling Language ; UML)

由Rational software corporation融合了物件導向三劍客的方法論，統一了以物件導向分析與設計的表示法，於1997年11月由
      OMG(Object Management Group)
      公佈為物件導向視覺化塑模的標準，目前
      最新的版本為 2.0 (2003/06/01)
UML是一種塑模語言，而非方法論，它並沒有規範符號的使用時機與次序僅利用符號來達到溝通的目的，從分析，設計到實作都可以使用同一套符號來表達，因此應用時可以搭配適合的方法論。
UML之所以重要，就是因為他有助於軟體開發人員之間的溝通。我們必須在某種程度上使用他以協助溝通，而非阻礙溝通。
循序圖、合作圖合稱互動圖。

      UML設計的理念
      
使用個案導向(強調以使用者的角度來定義功能需求)
軟體架構設計(強調系統開發要有藍圖)
往覆，漸增式流程(強調降低專案風險)


使用個案圖(Use Case Diagram)

以OO技術開發系統時在需求分析時常利用典型的情節(Scenario)來進行需求塑模，這種個案模式一直沒有統一的表達方式直到Ivar Jacobson等人(1996) 才將使用個案的表達正式化。 
使用個案圖表示從使用者之觀點描述系統的行為者與系統間之互動行為與關係，包含了行為者和使用個案二個元件，此法在資料與展示格式上僅利用文字描述，若能搭配結構化中的藍圖與資料詞彙則可補強其不足之處。
使用案例是專業分工的依據，是專案進度評量的重要因素。

行為者(Actor) = 參與者

環境中與系統有互動關係的人或事物，有該使用個案的啟動者即
      
        主要行為者(Primary Actor)
      
      與其他參與者即
      
        次要行為者(Secondary Actor)
      
      。
參與者被繪製成一個火柴棒形狀的小人並將名稱置其下方。 

使用個案(Use Case)

使用者透過介面要求系統所做一系列相關的事件流，包含了最主要的事件即
      
        基本路徑(Basic Course)
      
      與其他衍生事件或可能發生的錯誤即
      
        替代路徑(Alternative Courses)
      
      。
使用案例被繪製成橢圓形並將名稱置於圖形內部或底部來表示 

      使用個案間的關係：
      
關聯(association)：使用個案與行為者之間的關係，以實線段表示。

        包含(Include)：一個使用個案會用到另一個使用個案，二個或以上的使用個案具有相同的行為模式時，可將該段行為模式獨立出來成為一個新的使用個案，再建立包含的關係，用一個虛線實心箭頭的線段並含有關鍵字 <<include>>  。
延伸(Extend)：在某情況下，使用個案會插入另一使用個案的定義中，用一個虛線實心箭頭的線段並含有關鍵字 <<extend>> 。

        一般化(Generalization)：一個使用個案繼承另一個使用個案的行為，
        用一個實線空心箭頭表示的線段從子使用個案指向父使用個案，且箭頭朝向父使用個案端。


情節(Scenario)

      使用個案中的某一個單一執行路徑，可能是基本路徑也可能是替代路徑。
    
建構使用個案圖的步驟

找出行為者：從環境圖找
找出使用個案：由行為者找出使用個案
描述使用個案：可用自然語言或事件條列式
找出使用個案間的關係：
繪製使用個案圖

類別圖(Class Diagram)

表示系統存在之類別、介面及它們間之靜態資料結構與邏輯關係

      通常以三層表示
      
類別名：正體字：具體類別，斜體字：抽象類別，介面：<interface>
屬性層：
方法層：


      屬性與方法有四種封裝方式
      
public:以符號
        
          + 
        
        表示
private:以符號
        
          -
        
        表示
protected:以符號
        
          # 
        
        表示
static:以符號
        
          _ 
        
        表示

描述介面的類別圖：沒有private的封裝
描述物件的類別圖：描述類別的實體，名稱下需加底線

關係

      類別間的關係包括了
    


      依賴 / 相依(Dependency)
      
使用的關係，表達一個類別會用到另一個類別
另一個類別的改變會影響到使用他的類別，但反之不必然
一類別的區域變數，方法參數，方法返回值，對靜態方法呼叫時是另一個類別時稱之
以虛線開箭頭表示。------->


      一般化(Generalization)
      
繼承的關係，包括了類別間的繼承，介面間的繼承，類別對介面的實作等
以實線空心箭頭表示。


      關聯/結合(Association)
      
同一層級的類別間靜態的結構關係
Java語言中是使用實體屬性實作的
其關係有雙向與單向，建議多用單向
關係有基數(Multiplicity)，關係有名稱，但通常均予以省略

        以實線段表示。 —
        

          依關聯的類別個數來分
          
二元關聯(Binary Association)
多元關聯(n-ary Association)


          依描述整體與部分的關係來分(不同層級的類別)
          
聚合 / 聚集(Aggregation)：以實線且整體端加一個空心的菱形表示。◇—
合成 / 組合(Composition)：整體物件需負責部分物件的生命週期，以實線且整體端加一個實心的菱形表示。◆—




      實現化(Realization)
      
以介面實現其他類別之描述
以虛線空心箭頭表示。


基數(Multiplicity) =多重性 

      在類別連線上與類別之旁以數字標示與之關聯的數量。
    
物件圖(Object Diagram)

描述系統於某一時間點的靜態結構，也稱為案例圖，包含了
      物件
      與連線二個元件。
物件間的關係稱為連線(Link)。

循序圖(Sequence Diagram)

以時間發生之先後順序來表達物件間的訊息傳遞與處理之程序，包含了類別之物件、訊息、操作、生命線與控制焦點等元件。

      循序圖有2個象線
      
垂直象線依照訊息呼叫發生的時間順序，來描述訊息呼叫的先後次序。
水平象線描述一個物件實體傳送訊息給哪一個物件實體。


訊息(Message) =刺激(Stimuli)

      由某一物件傳送訊息至另一物件以啟動操作，以上下位置表示順序。
    
生命線(Lifeline)

      表達物件再某時段的存在，以物件下與物件垂直之虛線表示。
    

      控制焦點 (Focus of Control) =啟動條(ActivationBar)

      表達物件執行某動作之時段，與生命線重疊且以高瘦的矩形表示。
    
系統邊界 (System Border) 

      系統與外界溝通之介面，通常放置在循序圖的最左側。
    
建構循序圖的步驟

確認物件
描述操作
描述訊息
繪製循序圖

合作圖(Collaboration Diagram)

著重表達物件間之連結結構，並能同時展現物件間的訊息傳遞與處理之程序，包含了類別之物件、連結、訊息與操作等元件。
Rational Rose可將循序圖直接轉換成合作圖。 
合作圖與循序圖相比較，少了物件生命線與焦點控制，多了路徑與序數

連結(Link)

      以直線連接二個物件也就是物件間的路徑(Path)。
    
訊息(Message)

      訊息發生順序以自然數或杜威數等編號來表達。
    
活動圖(Activity Diagram)
狀態圖(State Diagram)
元件圖(Component Diagram)
部署圖(Deployment Diagram)


      樣式理論(Pattern
      Theory)

研究一再發生的典型事例，以便研究者可以研習至融會貫通，舉一反三，推陳出新的理論，叫做樣式理論。
樣式不是發明，而是發現

      現代樣式理論：建築設計學家 亞歷山大 Christopher Alexander提出
      
無名之
        
          質
        
        (The Quality Without a Name ; QWAN)


          門
        
        (The Gate)


          道
        
        (The Way)：又稱作「永恆之道」(The Timeless Way)

Alexander認為 透過追尋「道」，可以通過「門」到達「質」是任何一種工程設計的發展過程


        「樣式是某外在背景環境 (Context) 下﹐對特定問題 (Problem) 的慣用解決之道 (Solution)
        」 
      
      。
樣式是不斷的重複發生，而有其重複性。但重複的不是問題的本身，而是問題的本質，所以要把不同問題以相同的樣式來處理，勢必要擷取其本質，也就是『抽象』。所以研究樣式必須重視問題本質而非問題的表象。同樣的問題的背景環境及解決之道也是抽象的。 
設計樣式是對軟體設計模型進行不斷追求完善的使用工具，但樣式的使用無絕對的公式，需要經過大量的個人實踐才能熟練掌握。
重構(Refacotrying)是對不滿意的程式碼進行彌補的時候所需要的技術，因此重構的存在證明瞭樣式並非軟體設計的銀彈(Silver Bullet)

      樣式的要素
      
名字(Name)
問題(Problem)
初始環境(Initial Context)
力(Forces)
解答(Solution)
舉例(Examples)
末態環境(Resulting Context)
推理(Rationale)
相關樣式(Related Patterns)
已知應用(Known Uses)


      樣式的種類
      

        設計樣式(Design Patterns)：GoF提出
        
建構型樣式(Creational Pattern)
結構型樣式(Structural Pattern)
行為樣式(Behavioral Pattern)

架構樣式(Architecture Patterns)
分析樣式(Analysis Patterns)：Martin Fowler提出
反樣式(Anti-Patterns)

物件導向樣式的經典：四人幫(Gang of Four ; GoF) 即Erich Gamma、Richard Helm、Ralph Johnson、John Vlissides等四人，於1995年出版之 
      
        Design Patterns
      
      - Elements of Reusable Object-Oriented Software這本經典著作，包含23種軟體設計樣式，例如MVC Pattern，將軟體設計分為Model、View和Control三個部分，Model是屬於企業邏輯的部分，例如網路購物的交易機制；View是使用者介面的設計；Control則串連Model與View的程式碼。



      關聯式資料庫的正規化(normalization)
定義

      若關聯表中每一欄位的值都是唯一而不可分割的(Atomic)，則稱之為正規化
    
關聯式資料庫的鍵(Key)

候選鍵(Candidate key)：能在資料表中將各列分別出來的欄位(一個資料表可以有多個)
主鍵(Primary key)：從候選鍵中選出來作為主要鍵的欄位
替代鍵(Alternate key)：其他未被選為主鍵的候選鍵欄位
連結鍵(Concatenated key)：指候選鍵是由多個欄位所組成

一階正規化 (First Normal Form; 1NF)

      又稱為平坦檔(Flat File)，若關聯表中的任一行與任一列的交叉格(Cell)上均只有一個值，但會有插入，刪除，更改等異常(Anomalies)
    
二階正規化 (Second Normal Form; 2NF) 

      符合一階正規化的關聯表，再除去資料的
      
        部分功能相依(Partial Dependency)
      

      (將1NF中由部分主鍵就可以決定其值的欄位移出成為另一個關聯表)
    
三階正規化 (Third Normal Form; 3NF) 

      符合二階正規化的關聯表，再除去資料的
      
        遞移相依(Transitive Dependency)
      

      (將2NF中由非由主鍵決定其值的欄位移出成為另一個關聯表)
    
Boyce-Codd正規化 (Boyce-Codd Normal Form; BCNF) 

      符合三階正規化的關聯表，再除去任何因功能相依所造成的異常結果
    
四階正規化 (Fourth Normal Form; 4NF) 

      符合BCNF正規化的關聯表，再除去所有的多值相依
    
五階正規化 (Fifth Normal Form; 5NF) 

      符合四階正規化的關聯表，再除去剩餘的所有異常情況
    


      CMMI(Capability Maturity Model Integrated)
CMMI的由來

      美國國防部對於軟體的策略是希望外包(outsourcing)的，但為了掌握軟體 產品的品質與進度，希望開發過程能夠透明化，因此於1980 年時，提出對軟體承包商的軟體開發能力進行評估的要求。於是美國國防部與卡內基美隆大學(Carnegie-Melon University ; CMU)共同設立了軟體工程研究所(Software Engineering Institute; SEI)  
    

      SEI於1988年研究發佈了軟體開發程序成熟度框架(CMM)，提供了軟體開發程序評估和軟體能力評價兩種評估方法和軟體成熟度提問單，來自產官學的技術和管理專家陸續進駐該機構，開始對工、商、政府提供產品和服務。 1991年，SEI將軟體開發程序成熟度框架 提升為軟體能力成熟度模型(Capability Maturity Model For Software，簡稱SW-CMM)，並發佈了最早的SW-CMM 1.0版。2000年底SEI發表了
      CMMI
      ，
      整合軟體工程(Software Engineeing ; SW)、系統工程(Systems Engineering ; SE)、
      產品與流程發展(Integrated Product and Procss development , IPPD)與供應商來源管理
      (Supplier Sourcing ; SS)的整合模式。從此以後，CMMI就與CMM並行。
    
CMMI的成熟等級

      SEI 試圖在軟體界建立一套工程般的制度，讓個人和組織在軟體開發上能有改進的依據。SEI 的 Capability Maturity Model (CMM) for Software 已經成為許多軟體公司所採行的標準，用作為改進公司內部軟體工程的依據。
      
      根據 CMM 的定義，軟體工程的成熟度分成五個等級，簡單介紹如下： 
    


      CMM-Level 1（initial）：軟體程序漫無章法，程序未被定義。專案流程無統一程序，專案計劃的成功仰賴於工作人員個別的努力。
      
參與範圍：
        
          個人
        

CMM-Level 2（repeatable）：已建立基本的管理與分析的程序(
      
        Measurement and Analysis ; MA
      
      )，對成本、時程、和職務權責能加以追蹤、查詢。已有作業程序所須具有的紀律，所以有能力重覆使用相類似的專案成功的案例與經驗。
      
參與範圍：
        
          專案或團隊
        
流程重點：需求管理(Requirements Management)


      CMM-Level 3（defined）：屬於管理和工程的活動都已設計、定義好，並且文件化，完整地整合成組織內的標準作業程序。各個專案計劃延用標準程序或被認可的標準程序修改程序。
      
參與範圍：
        
          組織或公司
        
流程重點：需求發展(Requirements Development;REQD)，驗證(Verification;VER)，確認(Validation;VAL)


      CMM-Level 4（managed）：組織可收集詳細的軟體程序以及軟體產品的量測資料。軟體作業程序和產品都有一組量測的數據，可讓工程師和經理們瞭解程序和產品的狀況。
      
參與範圍：
        
          組織或公司
        
流程重點：Quantitative Project Management(QPM) 


      CMM-Level 5（optimized）：評估革新性的新技術，做反省與提升，有規則地依序導入採用，以持續不斷地改進程序。
      
參與範圍：
        
          組織或公司
        
流程重點：Causal Analysis and Resolution(CAR) 


CMMI實施

      CMM是一種軟體開發的流程標準，可說是種軟體開發的品質保 証，就像ISO是組織管理的品質保証一樣。細分之下，CMM/CMMI分成五級，從第一級（level 1）到第五級（level 5），分別標示軟體公司流程管理的競爭力程度，一級只要提出申請即可列入，不需經過審查，而到第四級為可做質量管理，第五級則為最佳化，可預防缺陷。
    

      軟體先進國家都已體認到CMM/CMMI的重要性。目前全球約有700餘個包括公司及組織的單位通過CMM認証。其中最難的四、五兩級，全球各自有73與67個單位獲得，多數集中在美國及印度，其他則以個位數分佈在澳洲、蘇俄、以、法、新加坡等國。 
    

      我國行政院於91年11月院頒之『行政院所屬各機關資訊業務委外服務作業參考原則』中，亦明訂通過CMMI 評鑑得列為採購加分項目。
    


      參考書目


      Software Engineering 6th Edition; SOMMERVILLE; addison wesley;ISBN:020139815
吳仁和，林信惠;系統分析與設計;智勝出版 ISBN:9577292194
河合昭男;學習物件導向的第1本書;博碩文化; ISBN:9575275373
Fowler，Scott; UML精華第二版; �眳p; ISBN:9575667557
閻宏 ; Java與樣式理論 ; �眳p ; ISBN:9864214179 
賀元，賴明宗，劉燈 ; 世紀末軟體革命/C++,GUI與物件導向理論;傳徵(股)公司;ISBN:9579996504
賀元，賴明宗，劉燈 ; 世紀末軟體革命2;資訊人文化事業;ISBN:9579964092



      網路資源


UML 參考手冊

物件導向的天空

物件導向的軟體發展

沒人在乎軟體工程

軟體工程的弔詭

點空間

軟體設計的思維

朝陽科大呂瑞麟老師的系統分析與設計講義

淺談UML

測驗




迴首頁 Main Page


主 網 站：http://peterju.notlong.com
(目前轉址至 http://irw.ncut.edu.tw/peterju/)




|

|

|



|

|



This work is licensed under a
Creative
Commons License















軟體工程 - MBA智庫百科









 
 















軟體工程

出自 MBA智庫百科(http://wiki.mbalib.com/)


軟體工程(Software Engineering，SE)

目錄

1 什麼是軟體工程
2 軟體工程的框架
3 軟體工程的基本原理


[編輯] 什麼是軟體工程 
　　軟體工程是一門研究用工程化方法構建和維護有效的、實用的和高質量的軟體的學科。它涉及到程式設計語言，資料庫，軟體開發工具，系統平臺，標準，設計模式等方面。
　　在現代社會中，軟體應用於多個方面。典型的軟體比如有電子郵件，嵌入式系統，人機界面，辦公套件，操作系統，編譯器，資料庫，游戲等。同時，各個行業幾乎都有電腦軟體的應用，比如工業，農業，銀行，航空，政府部門等。這些應用促進了經濟和社會的發展，使得人們的工作更加高效，同時提高了生活質量。
　　軟體工程師是對應用軟體創造軟體的人們的統稱，軟體工程師按照所處的領域不同可以分為系統分析員，軟體設計師，系統架構師，程式員，測試員等等。人們也常常用程式員來泛指各種軟體工程師。

[編輯] 軟體工程的框架 
　　軟體工程的框架可概括為：目標、過程和原則。
　　1、軟體工程目標
　　生產具有正確性、可用性以及開銷合宜的產品。正確性指軟體產品達到預期功能的程度。可用性指軟體基本結構、實現及文檔為用戶可用的程度。開銷合宜是指軟體開發、運行的整個開銷滿足用戶要求的程度。這些目標的實現不論在理論上還是在實踐中均存在很多待解決的問題，它們形成了對過程、過程模型及工程方法選取的約束。
　　軟體工程活動是“生產一個最終滿足需求且達到工程目標的軟體產品所需要的步驟”。主要包括需求、設計、實現、確認以及支持等活動。需求活動包括問題分析和需求分析。問題分析獲取需求定義，又稱軟體需求規約。需求分析生成功能規約。設計活動一般包括概要設計和詳細設計。概要設計建立整個軟體體繫結構，包括子系統、模塊以及相關層次的說明、每一模塊介面定義。詳細設計產生程式員可用的模塊說明，包括每一模塊中數據結構說明及加工描述。實現活動把設計結果轉換為可執行的程式代碼。確認活動貫穿於整個開發過程，實現完成後的確認，保證最終產品滿足用戶的要求。支持活動包括修改和完善。伴隨以上活動，還有管理過程、支持過程、培訓過程等。
　　2、軟體工程過程
　　生產一個最終能滿足需求且達到工程目標的軟體產品所需要的步驟。軟體工程過程主要包括開發過程、運作過程、維護過程。它們覆蓋了需求、設計、實現、確認以及維護等活動。需求活動包括問題分析和需求分析。問題分析獲取需求定義，又稱軟體需求規約。需求分析生成功能規約。設計活動一般包括概要設計和詳細設計。概要設計建立整個軟體系統結構，包括子系統、模塊以及相關層次的說明、每一模塊的介面定義。詳細設計產生程式員可用的模塊說明，包括每一模塊中數據結構說明及加工描述。實現活動把設計結果轉換為可執行的程式代碼。確認活動貫穿於整個開發過程，實現完成後的確認，保證最終產品滿足用戶的要求。維護活動包括使用過程中的擴充、修改與完善。伴隨以上過程，還有管理過程、支持過程、培訓過程等。
　　3、軟體工程的原則
　　軟體工程的原則是指圍繞工程設計、工程支持以及工程管理在軟體開發過程中必須遵循的原則。軟體工程的原則有以下四項基本原則：
　　1）選取適宜開發範型。該原則與系統設計有關。在系統設計中，軟體需求、硬體需求以及其他因素之間是相互制約、相互影響的，經常需要權衡。因此，必須認識需求定義的易變性，採用適宜的開發範型予以控制，以保證軟體產品滿足用戶的要求。
　　2）採用合適的設計方法。在軟體設計中，通常要考慮軟體的模塊化、抽象與信息隱蔽、局部化、一致性以及適應性等特征。合適的設計方法有助於這些特征的實現，以達到軟體工程的目標。
　　3）提供高質量的工程支持。“工欲善其事，必先利其器”。在軟體工程中，軟體工具與環境對軟體過程的支持頗為重要。軟體工程項目的質量與開銷直接取決於對軟體工程所提供的支撐質量和效用。
　　4）重視開發過程的管理。軟體工程的管理，直接影響可用資源的有效利用，生產滿足目標的軟體產品，提高軟體組織的生產能力等問題。因此，僅當軟體過程得以有效管理時，才能實現有效的軟體工程。
　　這一軟體工程框架告訴我們，軟體工程的目標是可用性、正確性和合算性；實施一個軟體工程要選取適宜的開發範型，要採用合適的設計方法，要提供高質量的工程支撐，要實行開發過程的有效管理；軟體工程活動主要包括需求、設計、實現、確認和支持等活動，每一活動可根據特定的軟體工程，採用合適的開發範型、設計方法、支持過程以及過程管理。根據軟體工程這一框架，軟體工程學科的研究內容主要包括：軟體開發範型、軟體開發方法、軟體過程、軟體工具、軟體開發環境、電腦輔助軟體工程(CASE) 及軟體經濟學等。 

[編輯] 軟體工程的基本原理 
　　自從1968年提出“軟體工程”這一術語以來，研究軟體工程的專家學者們陸續提出了100多條關於軟體工程的準則或信條。美國著名的軟體工程專家巴利·玻姆（Barry Boehm）綜合這些專家的意見，並總結了美國天合公司（TRW）多年的開發軟體的經驗，於1983年提出了軟體工程的七條基本原理。
　　玻姆認為，這七條原理是確保軟體產品質量和開發效率的原理的最小集合。它們是相互獨立的，是缺一不可的最小集合；同時，它們又是相當完備的。
　　人們當然不能用數學方法嚴格證明它們是一個完備的集合，但是可以證明，在此之前已經提出的100多條軟體工程準則都可以有這七條原理的任意組合蘊含或派生。下麵簡要介紹軟體工程的七條原理：
　　1、用分階段的生命周期計劃嚴格管理
　　這一條是吸取前人的教訓而提出來的。統計表明，50%以上的失敗項目是由於計劃不周而造成的。在軟體開發與維護的漫長生命周期中，需要完成許多性質各異的工作。這條原理意味著，應該把軟體生命周期分成若幹階段，並相應制定出切實可行的計劃，然後嚴格按照計劃對軟體的開發和維護進行管理。 玻姆認為，在整個軟體生命周期中應指定並嚴格執行6類計劃：項目概要計劃、里程碑計劃、項目控制計劃、產品控制計劃、驗證計劃、運行維護計劃。
　　2、堅持進行階段評審
　　統計結果顯示： 大部分錯誤是在編碼之前造成的，大約占63%錯誤發現的越晚，改正它要付出的代價就越大，要差2到3個數量級。 因此，軟體的質量保證工作不能等到編碼結束之後再進行，應堅持進行嚴格的階段評審，以便儘早發現錯誤。
　　3、實行嚴格的產品控制
　　開發人員最痛恨的事情之一就是改動需求。但是實踐告訴我們，需求的改動往往是不可避免的。這就要求我們要採用科學的產品控制技術來順應這種要求。也就是要採用變動控制，又叫基準配置管理。當需求變動時，其它各個階段的文檔或代碼隨之相應變動，以保證軟體的一致性。
　　4、採納現代程式設計技術
　　從六、七時年代的結構化軟體開發技術，到最近的面向對象技術，從第一、第二代語言，到第四代語言，人們已經充分認識到：方法大似氣力。採用先進的技術即可以提高軟體開發的效率，又可以減少軟體維護的成本。
　　5、結果應能清楚地審查
　　軟體是一種看不見、摸不著的邏輯產品。軟體開發小組的工作進展情況可見性差，難於評價和管理。為更好地進行管理，應根據軟體開發的總目標及完成期限， 儘量明確地規定開發小組的責任和產品標準，從而使所得到的標準能清楚地審查。
　　6、開發小組的人員應少而精
　　開發人員的素質和數量是影響軟體質量和開發效率的重要因素，應該少而精。
　　這一條基於兩點原因：高素質開發人員的效率比低素質開發人員的效率要高幾倍到幾十倍，開發工作中犯的錯誤也要少的多； 當開發小組為N人時，可能的通訊通道為N(N-1)/2, 可見隨著人數N的增大，通訊開銷將急劇增大。
　　7、承認不斷改進軟體工程實踐的必要性
　　遵從上述六條基本原理，就能夠較好地實現軟體的工程化生產。但是，它們只是對現有的經驗的總結和歸納，並不能保證趕上技術不斷前進發展的步伐。因此，玻姆提出應把承認不斷改進軟體工程實踐的必要性作為軟體工程的第七條原理。根據這條原理，不僅要積極採納新的軟體開發技術，還要註意不斷總結經驗，收集進度和消耗等數據，進行出錯類型和問題報告統計。這些數據既可以用來評估新的 軟體技術的效果，也可以用來指明必須著重註意的問題和應該優先進行研究的工具和技術。




取自"http://wiki.mbalib.com/zh-tw/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B"

本條目對我有幫助98  分享到：














   如果您認為本條目還有待完善，需要補充新內容或修改錯誤內容，請編輯條目。

本條目相關文檔
 軟體工程 125頁 軟體工程 512頁 軟體工程 72頁 軟體工程 61頁 軟體工程 512頁 軟體工程 12頁 軟體工程思想 98頁 傳統軟體工程方法 234頁 軟體工程（第一章） 29頁 軟體工程（第六章） 39頁更多相關文檔

本條目相關資訊
富士康收購奧地利IT集團 29.4%股權 成最大股東 2016年10月14日
本條目由以下用戶參與貢獻
Zfj3000,18°@鷺島,Angle Roh,Dan,Cabbage,KAER,連曉霧,Yixi,方小莉,Mis銘,寒曦,Tracy. 頁面分類: 軟體項目管理 





評論(共6條)提示:評論內容為網友針對條目"軟體工程"展開的討論，與本站觀點立場無關。

 59.151.106.*  在 2010年3月17日 09:54 發表    


簡練


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 




 221.178.181.*  在 2010年10月6日 09:29 發表    


好東西


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 




 113.142.17.*  在 2010年10月6日 17:30 發表    


好


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 




 222.182.233.*  在 2014年6月26日 13:44 發表    


可以


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 




 14.152.69.*  在 2014年11月16日 17:48 發表    


缺少就業方向


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 




 113.139.211.*  在 2016年7月6日 17:53 發表    


好好好好好


 回複評論
 發表評論﻿請文明上網，理性發言並遵守有關規定。




 



發表評論﻿請文明上網，理性發言並遵守有關規定。




 




導航


首頁
文檔
百科
商學院
資訊
培訓
幫幫




個人工具


用戶登錄創建新帳號 









搜索



 
 

全球最大的中文經管百科，由121,994位網友共同編寫而成，共計414,092個條目








 
首頁
 
管理
 
營銷
 
經濟
 
金融
 
人力資源
 
咨詢
 
財務
 
品牌
 
證券
 
物流
 
貿易
 
商學院
 
法律
 
人物
 
分類索引
 




查看

條目討論編輯簡體中文繁體中文 


工具▼


鏈入頁面
鏈出更改
上載文件 特殊頁面 可列印版
永久鏈接 













導航


最新資訊
最新評論
最新推薦
熱門推薦
編輯實驗
使用幫助
創建條目
隨便看看












本周推薦
最多推薦



影響世界的100個經典管理定律垃圾人定律產品定位五步法MECE分析法裙擺指數DISC個性測驗吳曉波奧格威法則巴納姆效應六項精進 

蘑菇管理定律猴子管理法則情緒ABC理論100個最流行的管理辭彙21天效應破窗效應懶螞蟻效應SWOT分析模型墨菲定律踢貓效應 

以上內容根據網友推薦自動排序生成









x



	   最後更改15:54, 2016年6月17日.	  
智庫首頁 - 
百科首頁 - 
關於百科 -
	   客戶端 -
	   人才招聘 -
	   廣告合作 - 
權利通知 -
	   聯繫我們 -
	   免責聲明
 - 友情鏈接

©2006-2017 MBAlib.com, All rights reserved. 


 






【工程設計首選】AutoCAD 360 pro v3.0.12直裝/解鎖/專業版-Android 軟體下載-Android 遊戲/軟體/繁化/交流-Android 台灣中文網 -  APK.TW





































設為首頁收藏本站快捷導航
登錄
◆◆




帳號

 密碼


自動登錄
找回密碼
登錄






註冊









請 登錄 後使用快捷導航沒有帳號？註冊




 


討論區BBS部落格Space群組Group專題Collection應用中心金豆儲值懸賞任務鑽石商城Auction












綜合

綜合
本版
帖子
用戶

搜尋






熱搜
line
燒餅
白貓
root
怪物彈珠
rangers
超註音
旅遊大亨
line主題
主題
鈦備份寶可夢外掛
pokemon go 外掛
臺灣綜合
necrobot
toptoon頂通破解
妖怪百姬修改
逍遙安
怪物彈珠外掛

 便捷搜索 1 小時以內的新帖 4 小時以內的新帖 8 小時以內的新帖 24 小時以內的新帖 1 週內帖子 1 月內帖子 6 月內帖子 1 年內帖子 










遊戲交流遊戲下載軟體交流軟體下載
手機影視桌布主題漫畫小說手機鈴聲
水族館手機音樂二手市場新手專區
HTCSonySamsungTWMHuaweiMOTO
應用中心安全檢測解密技術繁化技術










 Android 台灣中文網»討論區 › Android 遊戲/軟體/繁化/交流 › Android 軟體下載 › 【工程設計首選】AutoCAD 360 pro v3.0.12直裝/解鎖/專 ... 









1234567 / 7 頁下一頁
返回列表









  

[行業軟體]
【工程設計首選】AutoCAD 360 pro v3.0.12直裝/解鎖/專業版
 
               
               
               
               
               
[複製連結]
查看: 9450|回覆: 58|好評: 3

















加好友
發消息


 藍蝶
當前離線


積分10502
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽









電梯直達

 
  
       
       
      樓主 
       
       
       






藍蝶
|
收聽TA

|
只看該作者

|倒序瀏覽
|閱讀模式




發表於 2015-5-17 01:52








下載

手機型號:
-


作業系統:
Android 4.X  









馬上加入Android 台灣中文網，立即免費下載應用遊戲。
您需要 登錄 才可以下載或查看，沒有帳號？註冊 

x

 本帖最後由 藍蝶 於 2015-5-21 19:03 編輯 


【語　　言】英文/簡體中文/其它語言

【軟體名稱】AutoCAD 360 pro v3.0.12直裝/解鎖/專業版

【版本信息】v3. 0.12

【文件大小】47M

【使用權限】視遊戲/軟體而定

【更新日期】2015-05-17

【系統要求】Android 2.3+






登錄/註冊後可看大圖




035259xenmkd9mer8n8e8z.png (74.37 KB, 下載次數: 0)

下載附件


 保存到相冊

2015-5-17 01:41 上傳




【軟體簡介】
 ★此版解鎖專業增強版功能，節省620元年費★


AutoCAD 360 是一款易於使用的免費*圖形和草圖手機應用程序，允許用戶隨時隨地查看、編輯和共享 AutoCAD 圖形。借助功能強大的設計檢查和標記工具（可聯機和脫機使用）簡化場地察看和現場工作。通過桌面、Web 和移動設備與其他用戶無縫共享圖形。使用免費的配套程序 AutoCAD 360 Web 應用程序從 Web 瀏覽器輕松訪問圖形。AutoCAD 360 Pro 成員計劃可進一步擴展該應用程序的功能性，使用戶能夠在現場使用更多功能。

查看
•打開上載到免費* AutoCAD 360 聯機帳戶的二維和三維 DWG 圖形
•脫機工作，然後在重新聯機時輕松上載更改
•直接從您設備上的電子郵件上載和打開文件
•查看 DWG 文件的所有方面，包括外部參照、圖層和圖像參考底圖
•使用多點觸摸縮放和平移，輕松導航大型圖形
•使用設備的 GPS 在圖形內自行定向

編輯
•使用“捕捉”精確繪制和編輯形狀
•選擇、移動、旋轉和縮放對象
•直接在圖形上添加和編輯文字註釋；無需圖紙標記
•在現場時驗證圖形中的距離測量
•將編輯保存到 AutoCAD 360 聯機工作空間，以使您的圖形保持為最新圖形
•AutoCAD 360 Pro 每月需 $4.99美元
•AutoCAD 360 Pro 每年需 $49.99美元（比按月支付的成員節省 $9.89）
•AutoCAD 360 Pro Plus 每年需 $99.99美元

更新日誌：2015-05-16
·錯誤修複
·64-bit 




【軟體截圖】





登錄/註冊後可看大圖




035301qzhhopoyrd9o9h9o.png (168.09 KB, 下載次數: 0)

下載附件


 保存到相冊

2015-5-17 01:41 上傳






登錄/註冊後可看大圖




035303ysanqeobinb3mhar.png (166.21 KB, 下載次數: 2)

下載附件


 保存到相冊

2015-5-17 01:41 上傳






登錄/註冊後可看大圖




035304wq92lens9nf77juq.png (133.55 KB, 下載次數: 0)

下載附件


 保存到相冊

2015-5-17 01:41 上傳





【軟體下載】



A360v3012.apk
(47.18 MB, 下載次數: 1031, 售價: 2 個碎鑽)



2015-5-17 01:51 上傳
點擊文件名下載附件







【免責聲明】
    
①本圖像文件皆從網上搜集轉載,不承擔任何技術及版權問題。
    
②所有資訊為測試用途！請於24小時內刪除，如果滿意請購買正版，並尊重智慧財產權 ！
    
③請於下載完後24小時以內將檔案刪除！，請勿作商業上之用途！
    
④所有內容只做為測試用途，絕對不得做為商業用途，若移做它用，一切責任與本人無關！

⑤軟體若有侵權，請告知，本人即刻做出刪除動作，請海涵！


  ☆個人空間更多遊戲☆

★收購:用不到的手機歡迎賣我★

【無限法力】 地牢獵手5免驗證解鎖版 Dungeon Hunter 5 V1.1.0f

【巧奪天工/解迷神作】 紀念碑谷 解鎖版 Monument Valley V2.2.42

【橫版冒險/無限內購】 神秘之劍解鎖版 Arcane Soul V1.0.9

【金幣鎖定】小小守衛者漢化修改版 Tiny Guardians V1.0.3

開心農場2：鄉村度假修改版 FarmVille 2:Country Escape V2.9.204

【無限內購/無限金幣】炮艇戰：3D直升機 中文解鎖版 V1.5.2

【金幣修改】合金彈頭塔防修改版 METAL SLUG DEFENSE V1.24.0

【金幣修改】傲氣雄鷹2014修改版 Sky Force 2014 V1.37

【超強 GPS地點導航】GPS北極星導航 GPS Waypoints v8.5.6已付費版

【無IP限制】天天動聽 TTPOD 修改版 v8. 0.0

【生命不減】農場英雄傳奇修改版 Farm Heroes Saga V2.27.2

【解鎖歌曲/鎖定金幣】 炫光動感 完整版 Dynamix V2.1.0

糖果粉碎蘇打傳奇 道具無限修改版 Candy Crush Soda Saga V1.42.20

【金幣修改】運輸大亨修改版 Transport Empire V1.08.20

【內購解鎖】勇闖地下城解鎖版 Dungeon Quest V1.8.1.9

★小雞模擬器v1. 3.8★街機模擬最齊全。

【多重修改】狂野飆車8(免谷歌)解鎖版 Asphalt 8: Airborne V1.8.0p

【道具無限】糖果粉碎傳奇修改版 Candy Crush Saga V1.52.2.0






您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊



Facebook
Twitter
Google
LINE



「用Android 就來APK.TW」，快來加入粉絲吧！Android 台灣中文網（APK.TW）
工程設計, 首選, AutoCAD, 直裝, 解鎖



評分





 參與人數 57碎鑽 +56
經驗 +5
幫助 +73

收起
理由




 啵一下
 + 1

 + 1
非常讃



 mby418
 + 1

 + 1
非常讃



 darling520
 + 1

 + 1
非常讃



 偉爺
 + 3

 + 5
您的用心發文,協助了眾多版友,貢獻價值不斐.



 saltocarlo


 + 1
讚



 aa6813


 + 1
好內容。朕有賞，還不謝主隆恩.



 kilimanjaro8325
 + 1

 + 1
非常讚



 lmo320
 + 1

 + 1
非常讚



 lincj
 + 1

 + 1
非常讚



 guavapan
 + 1


非常讚




查看全部評分










收藏34
分享
專題0













相關帖子

• 幸運解鎖器Lucky Patcher v6.5.3=免費版
• Abs workout PRO v9.8.4腹肌鍛煉=解鎖專業版
• 文件夾播放器 Music Folder Player Full v2.3.6 =解鎖捐贈版
• Apowersoft 錄音精靈 完美解鎖
• 幸運解鎖器Lucky Patcher v6.5.2=免費版
• 幸運解鎖器Lucky Patcher v6.5.1=免費版
• 幸運解鎖器Lucky Patcher v6.5.0=免費版
• 手機解鎖
• 威力酷剪ActionDirector V2.6.2解鎖雙開版
• 華為Mediapad X1 密碼解鎖


用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆


使用道具

舉報


提升卡
變色卡
排首位



















加好友
發消息


 yanrong1124
當前離線


積分-1
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








  
       
       
      沙發 
       
       
       






yanrong1124
 
|
收聽TA

|
只看該作者




發表於 2015-5-17 03:40




提示: 作者被禁止或刪除 內容自動屏蔽






用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 samyu470
當前離線


積分63
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








  
       
       
      板凳 
       
       
       






samyu470
|
收聽TA

|
只看該作者




發表於 2015-5-17 05:15






感謝分享.請教這個有使用期限嗎?您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊










用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 x10satiopro
當前離線


積分12
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








  
       
       
      地板 
       
       
       






x10satiopro
 
|
收聽TA

|
只看該作者




發表於 2015-5-17 06:46






由 手機網頁 發佈藍蝶 發表於 2015-5-17 01:52[/td][/tr][/table][/td][/tr][/table][/td][/tr]
感謝你得分享
下載體驗
值得推薦工程設計軟件您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊










用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 jl1008
當前離線


積分25
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
5樓 
       
       
       






jl1008
 
|
收聽TA

|
只看該作者




發表於 2015-5-17 09:55






由 手機網頁 發佈這可是最方便弄3D的軟體。您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊










用Android 就來Android 台灣中文網（https://apk.tw）
邀請好友註冊討論區，可以賺碎片換大獎。時尚流行手機，筆記型電腦等你來拿




 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 fasemce
當前離線


積分61
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
6樓 
       
       
       






fasemce
|
收聽TA

|
只看該作者




發表於 2015-5-17 10:07






note3/3g/no root/4.3刪除舊3.0.3pro plus再安裝此更新pro會變成free版本，不知怎麼一回事?謝謝你分享!您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊



評分





 參與人數 2碎鑽 +1
幫助 +2

收起
理由




 rickysir

 + 1
讚



 藍蝶
 + 1
 + 1
回覆用心很讚！




查看全部評分









用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 wayn12000
當前離線


積分38
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
7樓 
       
       
       






wayn12000
|
收聽TA

|
只看該作者




發表於 2015-5-17 10:12






如果可以不用連網
就可以看CAD檔好了
不然CAD檔都要強制傳上雲端
您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊


點評



alpha040


不需要吧，你可以直接從你機器裡開呀，點一下cad檔他就直接開了，哪有一定要傳上雲端?? 

發表於 2015-5-17 23:58



評分





 參與人數 2碎鑽 +2
幫助 +4

收起
理由




 rickysir

 + 1
讚



 藍蝶
 + 2
 + 3
謝謝您!您與樓主的互動不錯嘛!.




查看全部評分









用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 m7terry
當前離線


積分90
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
8樓 
       
       
       






m7terry
|
收聽TA

|
只看該作者




發表於 2015-5-17 10:29






 可配合Ｐｃ版的一起使用　太方便了　推您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊



評分





 參與人數 2碎鑽 +1
幫助 +2

收起
理由




 rickysir

 + 1
讚



 藍蝶
 + 1
 + 1
讚




查看全部評分









用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 bentech
當前離線


積分0
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
9樓 
       
       
       






bentech
|
收聽TA

|
只看該作者




發表於 2015-5-17 10:32






哇，真好哦，特別的感恩。您好！您暫時不能瀏覽帖子的全部內容，請 登錄 | 沒有帳號？ 註冊










用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報




















加好友
發消息


 fub308
當前離線


積分-3
 鑽石 顆
幫助 
 碎鑽 個
經驗 
 金豆 個
技術 

聽眾
收聽








 
10樓 
       
       
       






fub308
|
收聽TA

|
只看該作者




發表於 2015-5-17 11:03




提示: 作者被禁止或刪除 內容自動屏蔽






用Android 就來Android 台灣中文網（https://apk.tw）





 
回覆
支持  反對 


使用道具

舉報














 










今日熱門文章





發文辛苦,不要吝嗇自己的碎鑽喔 !! (別客氣2017/7/20 官方副主題 史努比★單寧風 上架疑問? 這到底是遊戲討論區還是 外掛商專區?7/20【天堂2Angel 助手】使用心得分享(給沒20170720_史努比★單寧風修改_7.6.32017/7/20【LINE 聊天新功能】來囉！【修改版】克魯賽德戰記 Crusaders Quest v藝術家的想像力，裝得下整個宇宙～～
 





今日熱門遊戲


1329天堂 2：革命5328戰鬥女子高校6954鎖鏈戰記301548精靈寶可夢 Pokémon GO32633白貓Project（白貓プロジェクト）134王冠之戰3481石器時代：起源1226陰陽師6492LINE Tsum Tsum2491時空之門 Chronos Gate 



熱門免費兌換





5鑽石
競拍︰550 碎鑽


20鑽石
競拍︰2200 碎鑽


5鑽石
競拍︰550 碎鑽


MyCard LINE 60點
競拍︰60 鑽石


100鑽石
競拍︰12000 碎鑽

 






廣告版
 











下一頁 »
 1234567 / 7 頁下一頁 返回列表



















高級模式


B
Color
Image
Link
Quote
Code
Smilies



您需要登錄後才可以回帖 登錄 | 註冊











本版積分規則
發表回覆
回帖後跳轉到最後一頁

















 
警告：您的Adblck已啟用我們檢測到您已開啟了Adblck影響到部分功能使用，為了討論區的發展及功能的正常展現，還請您將APK.tw列入廣告屏蔽軟體的白名單中。APK.net全體人員感謝您的支持。或您可以 點我購買無廣告功能《綠色證書》勳章同意關閉忽略它





聯繫我們|小黑屋|手機版|Archiver|Android 台灣中文網










GMT+8, 2017-7-21 07:43
, Processed in 0.173143 second(s), 50 queries
, Gzip On, Memcache On.




Powered by APK.TW v2.0
© 2013 APK.TW








：：：幾何資訊有限公司：：：

































帳號：

密碼：


加入會員
忘記密碼























































功　能　介　紹 




視　訊　教　學



教　育　版　授　權



3D 智慧門窗元件



Shaderlight



SketchUp 高等技法書



Plugins: 櫥櫃設計工具



Plugins: Dibac



Plugins: 3D layout



Plugins: 3skeng



Plugins: 3D Electrical



Plugins:1001bit pro



Plugins:1001shadows



系　統　需　求



用　戶　評　價



支　援　服　務



相　關　連　結



軟　體　下　載



 















關於幾何動畫標圖















 









3skeng for SketchUp 2016 管線工程設計工具
 
    3skeng for SketchUp 是專門為SketchUp所開發的一系列管線規劃與設計工具，幾何資訊自2014年7月起已正式取得 3skeng 系列產品原廠在台灣地區銷售權。  
 

 
3skeng - 概念式的3D工程設計軟體
    儘管SketchUp在建築設計方面，能夠以更驚人的速度完成，但是在建築物裡的管路、給排氣風管及線槽規劃等設計服務方面，卻面臨了與既有設備的乾擾與限制，使用3D來呈現與協調管路的工作實是不可或缺。
    如果您是一位工程師、規劃人員或是廠務系統管線安裝技師，並任職於建築營造業、半導體業、光電產業、化工業、生命科學領域、石油化學業、水處理工程、食品衛生科學、醫藥領域亦或是造船工業，或者您也負責廠務系統相關之管線規劃、給排氣系統設計、機台及空間規劃等領域的工作，如果上述領域與您切身相關，3skeng必定是您最佳的操作選擇。
    3skeng管線規劃包括了3skeng Pipe、3skeng Channel、3skeng Steel 三種模組，以及附屬的database資料庫。它結合了3skeng軟體的操作，您無須是一個CAD專家，就能簡單、輕鬆地產生管線。
  
 
管線設計模組 (3skeng Pipe)
* 概圖設計

* 詳圖設計

* 編輯管線

* 連接管線


  
3skeng的研發團隊將開發完成的軟體工具與SketchUp搭配整合後，使其成為配置規劃及空間管理的概念化構圖設計軟體，適合應用在製程機台、廠務系統與實驗室管線、空調工程與冷氣風管、鋼構配管等規劃的工程領域。
 

風管設計模組 (3skeng Channel)


 
3skeng 的所有操作動作，完全以設計者導向為開發目標，你會發現設計過程中3skeng 將依不同的部位自動出現可使用的連接類型。一旦挑選後也會以刻度或分度盤顯示可用的標準尺寸規格或旋轉角度，完全不需要再點選其他SketchUp工具作調整。當然，你也可以自行入你想要繪製的尺寸，一切動作就是那麼地簡單。
 
線槽與鋼構設計模組 (3skeng SteelWork)


 

 
* 點選申請下載3skeng英文試用版
 

購買方式 

如果你認為這個軟體對您的設計作業有幫助，歡迎您到我們的PChome線上購物訂購，待收到軟體授權碼啟用後即可永久使用。
 




歡迎光臨《PChome 3D網路商店》線上購買 3skeng for Sketchup



 





















參訪人數




版權所有幾何資訊有限公司.  All rights Reserved.　
業務諮詢免費電話: 0800-009-399  技術支援專線: 06-299 5399  / 傳真: 06-295 7309 





免費電子書：軟體工程 - 陳鍾誠的網站































Wikidot.com



.wikidot.com
    


Share on








Edit
History
Tags
Source

Explore »

 





陳鍾誠的網站
金門大學：免費電子書、教材、程式、動畫








文章列表

最近修改
所有網頁
標記


相關網站

陳鍾誠的網站
系統程式
C# 程式設計


陳鍾誠

關於陳鍾誠
陳鍾誠的信箱
陳鍾誠的 Facebook
陳鍾誠的網站
陳鍾誠的手機網
陳鍾誠的簡歷
陳鍾誠的 Diigo
陳鍾誠的 Youtube


Wikidot

網站管理
本站成員
標記
加入本站?
頂欄
側欄
樣版
Wikidot 文件
Wikidot 語法
Wikidot Module
Wikidot Embedding
Wikidot Template
Wikidot Layout




Create account or Sign in 




課程
兩岸產業
網路資源
網路程式
開放原碼
動畫設計
研究專題
書籍
系統程式
C# 程式設計
Blender 動畫設計
作品
程式
論文
動畫
文章
新詩
故事
歷史
研究
研究
衛星遊戲
人工智慧
網路出版
機器翻譯
興趣
閱讀
寫作
影片
關註
學習
常用
生活
網站
手機版
手機最愛
Diigo
Twitter
Facebook
Scribd
Youtube
Kmit
ping
GAE
金門不動產
手機入口網
大學課程網


rating: 0+x





                            免費電子書：軟體工程
                        








軟體工程
軟體工程簡介
軟體工程的歷史
規劃篇
開發模式
需求分析
架構設計
系統分析
系統設計
程式篇
測試除錯
設計模式
重構
控制篇
專案管理
版本管理
錯誤管理
訊息
相關網站
參考文獻
最新修改
簡體版
English





文章
留言
授權



導論篇

軟體工程簡介
軟體工程的歷史

規劃篇

開發模式

瀑布模型
螺旋模型
敏捷開發
教堂模式
市集模式




需求分析


架構設計


系統分析

流程圖
正規化
UML 分析圖


系統設計

程式篇

測試除錯
設計模式
重構

控制篇

專案管理

時程管理
人員管理
版本管理
錯誤管理



Facebook



Facebook

Wikidot


Show Comments





Add a New Comment


Post preview:


Close preview








or Sign in as Wikidot user



(will not be published)




-
+


                    Help: wiki text quick reference 











Permanent Link
Edit
Delete





本網頁的作者、授權與引用方式


作者
陳鍾誠，於金門大學資訊工程系，電子郵件：wt.ude.uqn|ccc#wt.ude.uqn|ccc，網站：http://ccckmit.wikidot.com。
授權
本文採用創作共用 (Creative Common) 3.0 版的 姓名標示─非商業性─相同方式分享 授權條款，歡迎轉載或修改使用，但若做為商業使用時必須取得授權，引用本文時請參考下列格式。
中文版 (APA格式)
陳鍾誠 (26 Aug 2010 11:30)，(網頁標題) 免費電子書：軟體工程，(網站標題) 陳鍾誠的網站，取自 http://ccckmit.wikidot.com/se:main ，網頁修改第 4 版。
英文版 (APA格式)
Chung-Chen Chen (26 Aug 2010 11:30), Retrieved from http://ccckmit.wikidot.com/se:main , Page Revision 4.















page revision: 4, last edited: 26 Aug 2010 11:55

Edit
Rate (0)
Tags
Discuss (0)
History
Files
Print
Site tools
+ Options


Edit Sections
Append
Edit Meta
Watchers
Backlinks
Page Source
Parent
Lock Page
Rename
Delete









Help
     |
    Terms of Service
     |
    Privacy
     |
    Report a bug
     |
    Flag as objectionable

Powered by Wikidot.com


                    Unless otherwise stated, the content of this page is licensed under Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License





Other interesting sites






Apmoderneuro









LGAM Knowledge Base
          
              Local Government Knowledge Sharing
            







Alfamedia
          
              Alfabetización mediática para educadores
            







uberOptions
          
              Enable all options on all buttons in SetPoint
            


























        Click here to edit contents of this page.    



        Click here to toggle editing of individual sections of the page (if possible).         Watch headings for an "edit" link when available.    

        Append content without editing the whole page source.    

        Check out how this page has evolved in the past.    

        If you want to discuss contents of this page - this is the easiest way to do it.    

        View and manage file attachments for this page.    

        A few useful tools to manage this Site.    

        See pages that link to and include this page.    

        Change the name (also URL address, possibly the category) of the page.    

        View wiki source for this page without editing.    
  
        View/set parent page (used for creating breadcrumbs and structured layout).    

            Notify administrators if there is objectionable content in this page.        

            Something does not work as expected? Find out what you can do.        

            General Wikidot.com documentation and help section.        

            Wikidot.com Terms of Service - what you can, what you should not etc.        

            Wikidot.com Privacy Policy.          
        



















工程設計軟體的新挑戰 | iThome





















移至主內容















































 










新聞


 

工程設計軟體的新挑戰
 迎戰物聯網、3D列印、智慧製造，邁向人人都能設計製造的新時代

 






 
按讚加入iThome粉絲團









 




 
文/吳其勳
|
2016-05-21發表
  

 



 







圖片來源:  iThome
 8年前，雲端運算開始為軟體廠商所重視，並且逐漸成為IT界的新顯學。這幾年間，不論是桌面軟體帝國微軟，或是搜尋引擎霸主Google，幾乎所有軟體公司都將雲端運算掛在嘴邊；就算是工程設計領域的專業軟體公司，如Autodesk、SolidWorks也不例外，Autodesk在2009年宣佈大力發展雲端，在3D設計與機械設計亦屬一方之霸的SolidWorks也緊追在後，在2010年的全球用戶大會首度宣佈支援雲端版本的計畫。
然而，在接下來的5年，SolidWorks卻隻字不提雲端運算，即便期間如Autodesk等競爭對手已經大張旗鼓邁向雲端，陸續發表多款雲端服務；甚至，就連SolidWorks的創辦人Jon Hirschtick也在2011年離開SolidWorks，創立一家純粹以SaaS雲端服務模式的3D設計軟體公司Onshape，但是SolidWorks卻一直沒有在邁向雲端上有大動作。
在SolidWorks消失5年的雲端
邁向雲端，讓使用者可以任意在桌上電腦、瀏覽器或平板、手機等行動裝置上來使用設計軟體，難道不重要嗎？
去年初SolidWorks發表的SolidWorks Industrial Design，其實已經可以看到雲端運算的端倪。這款SolidWorks首度由工程設計跨足工業設計的代表作，除了提供「自由曲線」等符合工業設計師繪圖風格的功能，同時也提供線上協同作業功能，讓設計師可以繪製不同版本的設計圖，而且其他的設計師可就他人的設計再予修改，產生新的版本，同時產品設計開發團隊成員可在線上針對這些不同設計即時討論，決定最後的完成品。SolidWorks Industrial Design的協同作業功能，其實是整合達梭系統的3DExperience雲端平臺的功能。但是，SolidWorks只強調協同作業，而不提雲端運算的特性。
去年底，SolidWorks推出的年度新版本SolidWorks 2016，首度提供可在瀏覽器上操作的版本SolidWorks 2016 Online，這個版本讓使用者不受制於電腦平臺，不論是Windows、Mac或是Linux電腦，只要有瀏覽器，只要能夠連結網路，即可使用SolidWorks 2016的完整功能，然而，SolidWorks仍避開時髦的雲端，他們只以「Online」稱之為線上版，甚至在發表會過程中完全沒有出現過雲端（Cloud）一字。
SolidWorks 2016 Online其實是採用雲端軟體虛擬化廠商Frame的技術，透過軟體虛擬化的技術實現在瀏覽器操作SolidWorks。
Frame的軟體虛擬化技術讓軟體可執行在雲端平臺，而使用者只要透過瀏覽器就能執行，事實上該軟體是在雲端平臺的資料中心執行，並非在使用者的電腦端執行，使用者端的電腦只是做為顯示及操作介面而已。
雖然說Frame標榜是雲端平臺廠商，然而SolidWorks卻不將雲端兩字放到其軟體名稱上。事實上，線上版的說法確實比較正確，因為SolidWorks 2016 Online版本是藉由軟體虛擬化技術，透過網路提供軟體服務，讓使用者由瀏覽器操作，所以使用者操作的仍是一套SolidWorks軟體，只是在遠端執行罷了。所以，從軟體架構來看，SolidWorks 2016仍是套裝軟體，它本身的架構尚未雲端化，並不是雲端軟體。
雲端的反擊：Xdesign
SolidWorks遲遲不上雲端，到底是他們上不了雲端，還是有其他更大的策略考量？對於未來軟體多樣性的發展趨勢，SolidWorks到底要怎麼因應？這個問題的答案，在今年的SolidWorks World大會有點眉目了。SolidWorks執行長Gian Paolo Bassi一口氣宣佈好幾項產品，其中不只有雲端原生的設計軟體SolidWorks Xdesign，還包含3DExperience Xdrive、SolidWorks PCB、SolidWorks Visualize、SolidWorks Make及SolidWorks Apps For Kids等，橫跨雲端軟體、智慧製造、物聯網等領域的產品。
毫無疑問，SolidWorks已經開始在雲端CAD展開反擊，然而從這麼大陣仗的新產品策略來看，SolidWorks不只是解決CAD軟體上雲端的問題而已，它所要迎戰的更大挑戰，是未來萬物聯網、智慧製造，以及人人都可以是設計者、製造者的新時代。
「設計方式正在改變，」去年才剛由研發副總裁升任執行長的Gian Paolo Bassi說：「未來影響所及不僅僅是專案管理，而是連商業模式都會被改變。」在他的心中有一個藍圖，未來SolidWorks不會只是一套工程設計軟體，而是要成為讓客戶持續研發產品的創新平臺。
Gian Paolo Bassi坦言，只是提供更有效率、更有生產力的設計工具，其實並不夠好，他認為SolidWorks的未來不能只是一個繪圖速度更快的軟體工具，而必須轉型為設計製造的創新平臺，能夠為設計者處理掉瑣事，以專註於更有創意價值的工作；例如設計者其實不該把時間花費在幾何造形的最佳化，而應該把心力放在設計新產品的創意，或是改善既有產品。
言下之意，工程設計軟體必須讓設計師、工程師可以更專註在產品創新，而不是被軟體所侷限。隨著設計方式的改變，設計師與工程師未來不會只仰賴傳統桌面模式，而是能夠依工作所需在不同平臺間自由切換。為此，Gian Paolo Bassi表示，SolidWorks正在打造一個產品創新的平臺，讓使用者可以在Desktop（傳統桌面軟體）、Online（線上雲端服務模式）及Connected（以PC、平板、手機等終端裝置存取雲端服務）等三種模式中擁有最大的彈性。
這三種模式奠定SolidWorks未來發展的大方針，也代表著SolidWorks認為CAD的未來並非全面雲端化，傳統桌面CAD軟體的需求也不會消失，而是新舊技術同時存在，彼此互補的局面。Gian Paolo Bassi指出，在目前5百萬個SolidWorks用戶中，超過9成的用戶仍是使用桌面CAD軟體為主。其中確實也有一些使用者希望能在瀏覽器使用SolidWorks，不過主要是為瞭解決在異地使用軟體的困擾，並非想要把桌面軟體全面雲端化。
從SolidWorks 2016新版增加的功能，也能看出用戶對於桌面軟體仍有極大的需求。為了回應用戶的需求，SolidWorks 2016版本就增加了上百種功能與改進。此外，另一個有趣的事情是，SolidWorks 2016新版本為了提供更好的使用介面，將行之有年的操作選單全面更新，原本操作選單的圖示是以黃綠為主色，新版本則全換成更具現代感的藍白色系。新的設計理念一方面是讓使用介面換上現代軟體的風格，另一方面則是符合未來4K顯示、Windows 10介面風格，以及考量色盲者的使用便利性。然而，在調查使用者最想要的SolidWorks 2017的10大功能中，名列第一的卻是希望恢復舊版的操作介面。在在顯示，CAD使用者格外希望工作環境保持一貫性。
對於使用者想要改回舊版介面，SolidWorks也給予正面的回應，在接下來的更新版本就會讓使用者自由選擇操作介面的風格。Gian Paolo Bassi認為使用者應該有選擇的權利，SolidWorks也因此更新其軟體授權方式，其中既有的永久授權方式依舊不變，新增加的則是短期授權與線上授權模式。短期授權提供如半年期的授權，提供給工作量會因為季節性而變化的企業，在軟體授權採購上有更彈性的選擇。
對於其競爭對手Autodesk軟體已轉為訂閱授權模式，並停止銷售永久授權，Gian Paolo Bassi表示SolidWorks不會這麼做，仍將繼續提供軟體永久授權模式，讓用戶擁有彈性的選擇。
Xdesign更大的野望
既然大多數的SolidWorks用戶並未想要馬上轉進雲端軟體模式，那麼SolidWorks Xdesign雲端設計軟體的目的為何？
首先，令人好奇的是Xdesign特別的功能。截至目前為止，SolidWorks只在今年SolidWorks World 2016大會透露Xdesign的一些功能，然而光是其中自動化生成與設計指引的功能，就格外令人矚目。
SolidWorks以設計相機的三腳架做為實機展示，首先設計人員匯入相機的3D模型，接著定位出三腳架的著地位置、與相機的銜接點，以及相關的設計參數，之後Xdesign就會自動計算、繪製出三腳架的腳管，提供設計人員參考指引。接下來，若設計者希望三腳架下方要容納更大的空間，那麼就繪製一個立方體，將其移至三腳架的下方，Xdesign就會再重新計算腳架角度，自動調整腳管的位置。
除此之外，Xdesign還提供自動搜尋相似元件的功能。設計者只要繪製概略的外觀，Xdesign就能自動比對元件資料庫，提供造型類似的元件模型，讓設計者直接套用，或再予以小幅修改。
Xdesign同時還結合3DExperience Xdrive檔案同步分享，這是建造在達梭3DExperience雲端平臺的線上檔案分享服務，簡單來說就是CAD專屬的Dropbox雲端硬碟，讓設計人員儲存在電腦本機的3D模型檔案可同步至雲端硬碟，以利多人一起參與線上協同作業，同時也方便產品專案團隊成員利用手機、平板等行動裝置，隨時隨地檢視3D模型。此外，Xdesign也整合MBD（Model Based Definition），可提供3D數位製造相關的參數資訊，以利於數位製造所需。
這些Xdesign聰明的功能，勢必能吸引許多人的目光，也讓人對於CAD軟體有不同的見解。然而，在SolidWorks 2016新版本中，你卻找不到這樣的自動化設計與指引的功能。
為何屬於旗艦級的SolidWorks 2016，卻沒有雲端產品Xdesign的智慧功能呢？我們就此詢問Gian Paolo Bassi，他證實SolidWorks 2016與Xdesign是兩個截然不同的產品線，甚至是由兩個不同的產品開發團隊負責研發。
Gian Paolo Bassi表示，Xdesign是全新的方向，也是SolidWorks未來重要的方向，他們會以Xdesign開發全新的技術，讓用戶有更多不同的選擇。他說，以Xdesign的自動化生成、設計指引的功能來說，這對於目前興起的Kickstarter創業家而言很方便，因為這些創業家普遍不是經過專業訓練的產品設計師，可不會操作SolidWorks 2016這樣功能豐富的專業級設計軟體，他們迫切需要的是一個方便素人設計家使用，可以快速把心中的產品概念呈現出來的設計軟體。
Xdesign只要瀏覽器就能執行，不需要安裝任何軟體，對於素人設計師而言很方便；而由目前所透露的一些功能來看，其任務顯然是協助素人設計師快速繪製產品雛型，而不是專家級所需要的精巧複雜的設計。
Gian Paolo Bassi也說，對於已經熟於使用SolidWorks軟體的專業設計師而言，自動化生成、設計指引可能絲毫沒有助益，所以SolidWorks桌面軟體繼續成為最好的CAD軟體，而Xdesign則提供需要新技術的客戶。其實也就是其所定調的Desktop、Online、Connected等三大模式，讓用戶各選所需。SolidWorks Xdesign將在5月推出Beta測試版，預期在今年底推出。
從Xdesign的產品定位與發展方向來看，對SolidWorks來說這不僅僅是把設計軟體雲端化而已，Xdesign既是CAD新興技術的實驗部隊，也是搶攻更大新興用戶的搶灘部隊。
在Maker浪潮風行，3D列印的推波助瀾下，現在軟硬體都很容易取得，技術門檻與成本價格持續在降低，再加上設計軟體與3D列印製造，未來是人人都可以設計與製造產品的年代。可以肯定的是，CAD設計軟體的將來不會侷限於專業的產品設計師或製造工程師，當人人都想要設計製造產品時，可想見CAD設計軟體還有很大的機會。
然而，做為專業人士使用的設計軟體，與一般素人需要的設計軟體，勢必是截然不同的面貌。所以，未來的設計軟體應該是什麼樣的型態？這應該就是Xdesign正在因應的最大挑戰。
當兒童也能設計製造產品
其實，SolidWorks正在進行的另一個實驗性專案：SolidWorks Apps For Kids，也是在呼應上述的挑戰。隨著3D列印的普及，未來或許不見得是家家都有3D列印機，但處處都有3D列印站，就像現在常見的相片沖印站一樣，卻是極有可能的。再加上電子商務平臺也在積極佈局未來3D列印製造的需求，把3D列印工廠與消費者串連在線上市集。可預期未來3D列印的方案隨手可得，屆時就算是兒童，只要會設計產品，也能製造自己的物品，而SolidWorks Apps For Kids就是要讓兒童也能使用3D設計軟體。
基於方便兒童操作使用的考量，SolidWorks選擇以平板App的型式開發兒童3D設計軟體，並將整個產品創意、設計與製造的流程分成6個獨立的App：
Capture IT：可以擷取圖像、影像、聲音，做為創意來源。
Shape IT：可以繪製3D立體模型。
Style IT：可以著色、彩繪，加上貼紙、圖片合成等等。
Mech IT：可以建立機械構造，讓物件可以移動、轉動等等。
Show IT：可以展示設計物。
Print IT：可以列印2D平面圖像，或是以3D列印製造實物。
SolidWorks Apps For Kids預計隨著今年的教育版推出。
Visualize：跨出SolidWorks的第一步
由此可見，不論是SolidWorks Xdesign或是SolidWorks Apps For Kids，在探索3D設計如何在雲端、App運作的同時，也在開創更大的3D設計新興族群。此外，SolidWorks今年還有一個舉動也是在擴大3D設計的使用族群，那就是SolidWorks Visualize，其前身是在汽車與工業界知名的視覺效果渲染軟體Bunkspeed。
Bunkspeed的強項是即時視覺渲染，在許多汽車或產品廣告中，那些我們以為是實際商品拍攝的照片，其實不見得都是以相機拍攝的，而是透過Bunkspeed這樣的視覺效果軟體所製作，以其近乎擬真的材質、光影效果，呈現出宛如真實的產品照片。
這家公司原本是被SolidWorks的母公司達梭系統所收購，然而在今年卻轉移到SolidWorks旗下，成為SolidWorks Visualize這套產品。
其實，Bunkspeed軟體所做的，就是在3D模型的錶面貼上效果逼真的材質，例如汽車的鋼板，再藉由即時運算來處理光影的變化，以呈現逼真的效果。而它的獨到之處，則是利用一般電腦搭配GPU繪圖卡，就能即時處理光影渲染的效果，而且就算是光影效果最難擬真的鑽石光澤，也難不倒它。
Bunkspeed原本就是一套獨立的軟體，它支援諸多知名3D設計軟體的檔案格式，包括SolidWorks、Autodesk Alias、Rhino、SketchUp等等，所以當這套軟體納入SolidWorks旗下時，也成為少見能支援競爭對手的產品。
至於何以說SolidWorks藉助Visualize來擴大3D設計使用族群呢？因為只要企業擁有SolidWorks的合約授權，該公司的所有員工皆可免費使用Visualize標準版。SolidWorks認為這起碼對行銷部門非常有幫助，因為行銷人員可以自己嘗試不同的產品配色，或是廣告稿的呈現方式。例如為產品替換不同的配色、調整產品呈現的角度，或是更換不同的背景圖，一旦找到不錯的點子，可以立刻用照相機功能擷取畫面，做為討論溝通之用。
未來，SolidWorks Visualize也將支援非SolidWorks的用戶。這款產品在SolidWorks平臺可說是與眾不同，其所扮演的角色以及戰略意義，似乎透露著SolidWorks在嘗試有別於過往的策略。
物聯網的大挑戰
物聯網（Internet of Things），是繼雲端運算之後，能夠影響整個IT業界的大趨勢。根據思科（Cisco）的研究，預估2020年全球將有500億個連網裝置，屆時每個人平均都有6至7個連網裝置，其潛在的市場量可想而知。
伴隨著物聯網的興起，未來的產品都會強調智慧功能與連網的延伸應用。例如再普通不過的茶杯，都已經有能夠辨別內容物的智慧茶杯問市了，它能自動為主人計算熱量，甚至說不定還能提醒飲料是否要變質了；又如智慧雨傘，它會自動連上氣象網站，確認降雨機率，在你要出門時亮燈提醒帶傘。
從這些智慧連網產品，可以看出未來產品的共通特質：內建晶片、電路板、連結網路，也就是說，純粹只有機械構造，毫無電子、電機的產品可能會越來越少，那麼對於大多數從機械設計起家的CAD設計軟體來說，光是MCAD（Mechanical CAD）是絕對無法應付未來物聯網的時代。這也是為何SolidWorks在一年半前整合了電機（Electrical）設計之後，今年再往前推進一步，整合電子設計，將Altium公司的電路板設計軟體PCB Works整合為SolidWorks PCB，以提供涵蓋機械、電機與電子設計的完整方案。
SolidWorks將SolidWorks Electronic與SolidWorks PCB納入平臺後，可解決產品智慧功能方面的問題，然而智慧連網產品還有連結網路的營運問題，以及如何管理與分析使用者的資料，以提供進階服務等等的挑戰。在連網部分，SolidWorks提出的解決方法是與Xively合作，透過其IoT管理平臺來處理物聯網裝置的連線與營運，而資料分析的部分則是採用達梭的NetVibes平臺。
在邁向物聯網之際，企業除了會面臨軟體工具面的挑戰：設計製造軟體、物聯網管理平臺、分析平臺的整合之外，更大的問題可能在於企業組織的合作與溝通上。多數企業的部門設計也如同軟體工具一樣，機械工程師、電子工程師、產品設計師、資訊工程師，各在不同的功能性部門，過去只是產品外型與內部機構設計必須配合，解決溝通協調問題或許還算簡單，但未來的物聯網產品則是橫跨產品設計、機構、電子、電機及資訊系統，這些都得一起配合就是個超級大挑戰了。
效法生物學，以軟體技術改變未來的設計方式
這二十年來，隨著設計與製造需求的轉變，軟體不斷在改變；SolidWorks在二十幾年前還只是一個3D模型設計軟體，如今旗下有數十種軟體，涵蓋設計、製造、模擬、檢驗、產品生命周期管理等等的設計製造平臺，接下來還得持續面對未來新興設計族群興起、物聯網、3D列印與數位製造等等的挑戰。設計軟體確實因為使用者的需求，而有很大的轉變。
然而，達梭系統執行長Bernard Charlès說，接下來是軟體技術去改變設計方式的時候了。他說，二十年來設計產品的方式，從本質上來說毫無改變，雖然設計軟體等工具越來越先進，但是以飛機為例，這二十年來飛機的設計幾乎是一樣，難道這就是最好的設計了嗎？現在飛機的造形是最有效率的嗎？
Bernard Charlès有足夠的條件以飛機為例質疑設計的方式，因為他擁有機械博士學位，而且擔任達梭系統執行長超過二十年，而達梭系統最知名的CATIA工程設計軟體，則是源於由法國空軍獨立的達梭航太。而且，他也是與波音共同啟動全球第一架全數位化設計飛機——波音777的負責人。
Bernard Charlès表示，有些鳥類的飛行構造其實比現在的飛機還要有效率，為何飛機的設計不學習鳥類這樣的生物構造呢？
在過去，受限於運算與軟體技術，設計上要效法生物精巧的構造實屬不易，然而Bernard Charlès認為，現在大數據、雲端運算等軟體技術越來越成熟，未來的設計方式要利用軟體技術，從生物學找出更省能源、更有效率，有助於地球永續的產品設計。因為，地球只有一個，而且技術上我們將會做得到。

設計方式正在改變，未來影響所及不僅僅是專案管理，而是連商業模式都會被改變。——SolidWorks執行長Gian Paolo Bassi

 

20年來設計產品的方式絲毫沒變，在大數據與雲端技術成熟之際，未來可望效法生物學，徹底改變產品的設計。——達梭系統執行長Bernard Charlès


【相關報導請參考「SolidWorks的逆襲」專題】
 


































 




 







 Advertisement


 

 

更多 iThome相關內容


  
 SolidWorks 2015正式登臺 

 OpenStack基金會社群經理揭露OpenStack新版關鍵特色 

 OpenStack臺灣先期投入者：硬體價值削弱得靠服務競爭 

 在臺率先成立OpenStack顧問團隊 惠普砸重金要靠Helion大翻身 

 OpenStack開源新勢力能否撼動VMware帝國？ 

 挑戰雙V雲端版圖 OpenStack逐漸成氣候 
 
 






 







 

熱門新聞






 


英國Wi-Fi業者使壞，讓2.2萬名用戶無意中同意去掃流動廁所

2017-07-18
 
 






 


Google 兩步驟驗證將以手機提示取代簡訊

2017-07-17
 
 






 


【AI關鍵技術】三大熱門深度學習框架新進展

2017-07-19
 
 






 


硬體不相容，部份英特爾Atom裝置無法升級Windows 10 Creators Update

2017-07-18
 
 






 


災難！CoinDash首度發行貨幣當天就被駭，損失近700萬美元

2017-07-18
 
 






 


微軟亞洲研究院院長洪小文：越複雜越不管用，AI最適合封閉型的高重複性任務

2017-07-17
 
 






 


安撫使用者不滿情緒，Skype聯絡人狀態顯示功能回來了!

2017-07-17
 
 






 


南韓代管業者Nayana遭勒索軟體攻擊，與駭客達成協議將支付110萬美元贖金

2017-06-21
 
 






 


2017年AI開始普及化，技術競賽白熱化

2017-07-15
 
 






 


國際警方聯手關閉暗網市集AlphaBay

2017-07-17
 
 



 

專題報導




企業行動化管理解決方案採購大特輯 


AI 100（上） 


公有雲儲存服務大盤點 


富士通AI新戰略 


企業身分驗證雲端服務採購特輯 

更多專題報導
 

 













      成碩資訊專業軟體服務網
      




























關於成碩

營業項目

公司資訊

遠端連線工具
 

				 
 








關於成碩 About Chen Sho
						







  正值電腦面臨千禧年危機，一群對於研發、設計、銷售、 
						服務工程業界軟體資訊，多年經驗的軟體資訊工程師，

               開始籌備，決定結合各方專長
						及工程知識領域，提供工程業界及上下游材料供應廠商 
						，更優質的管理軟體資訊。

  
						成立 藝術軟件創作工作室， 研發工程估計價及工程管理系統軟體 EasyWork 
						Express 且針對舊有客戶系統軟體進行改版。  
               同時繼續與配合多年的協力廠商 培舜資訊 合作，銷售KenCAD工程繪圖軟體。

  
						銷售水電工程業工程管理系統軟體初版，獲得工程業先進們的認同與採用，並且持續
						軟體更新與改版。

  
						成立 成碩資訊有限公司，開始銷售，水電機電消防空調工程相關行業之工程業估價軟體、 工程工務管理系統ERP軟體 
						、
               工程設計繪圖軟體及水電五金燈飾電氣材料零售批發廠商之材料進銷存管理系統軟體。 
 
						針對民國百年蟲年碼溢位問題及增進軟體功能，全系列完成全新改版，軟體命名為
               EasyWork express plus 
						工程工務管理系統軟體及EasyStock express 
						plus 
						材料進銷存管理系統軟體。



成碩資訊  
						專營:
水電工程、機電工程、消防工程、 冷凍空調工程 、環境工程
						設備承裝業之工程工務成本管理系統ERP軟體、
工程估價軟體與工程設計繪圖
						材料估算軟體及水電材料行、五金材料行零售買賣批發業之進銷存管理系統軟體。
成碩資訊  
						本著: 
						
專業研發、精益求精、服務第一、領先同業之精神。經過多年實力培養與客戶的口碑相傳
						， 致力提昇軟體技術與服務品質，
                      	並堅持於水電、機電、消防、 冷凍空調、環境工程專門行業別軟體研發設計銷售，服務範圍已遍及全國各地。
                         
						










                       成碩資訊有限公司 Chen Sho Information Co.,Ltd.  Copyright 版權所有©









      成碩資訊專業軟體服務網
    

















































KenCAD                                水電 . 機電 . 消防 . 空調 . 環工 工程專業
						設計繪圖軟體












最新版號:2016-105.01.01


軟體功能持續提昇 , 請來電詢問最新功能




    

    






軟體特色 : 

 能解決圖面材料估算與工程設計繪圖軟體










						全新工程繪圖軟體，架構於AutoCAD全系列繪圖平臺，圖檔完全相容。

工程專業角度考量，以水電工程等相關行業需求設計 , 專業易學易用。

提供內建圖例管線，使用者可依需求快速新增資料庫 , 資料完整齊全。

簡化一般繪圖指令，提供建築水電消防空調工具模組，操作得心應手。


內建法規計算公式，讓您面對工程法規計算公式變化，輕鬆修改應對。

完整教育訓練課程，提供教學互動式光碟及操作手冊，深入應用功效。




                   


                	歡迎免費索取 




軟體功能操作展示光碟
TEL: 04-2375-9368

                   

e-mail:chensho.info@msa.hinet.net

                   

或chensho.info@gmail.com

                   







                   

型錄下載:


                   







                   





FOR AutoCAD 
			2000／2002／2004／2006／2007／2008／2009／2010／11／12／13/14/15/16 繪圖平臺

FOR 

BricsCAD V15 !!!

			BricsCAD V15軟體,圖檔及操作相容於AutoCAD軟體。







軟體說明 :








水電.機電.消防.空調工程 , 繪製工程設計圖及施工圖 , 市售繪圖平臺軟體雖可繪製 , 
				似乎專業性稍嫌不足。


				此工程繪圖軟體行銷多年 , 累積水電工程相關行業工程製圖 



, 需求
				經驗而成  , 提供施工圖及設計圖使用。

提昇繪圖效率及材料估算準確



 , 

工程法規常用計算式 , 只要稍深入瞭解公式 , 可
				自行設計工程計算公式。





 請點選至YouTube觀看功能多媒體展示範例影片(文字說明無聲音)
           







軟體功能







功能簡介







圖例管理放置工具




						內建常用標準圖例，並以工程分類放置圖例，使繪圖時取貼圖塊更具系統性及快速性。

						可自建圖例或將外來圖例匯入，給予圖例估算品名規格屬性，不再只是單純圖例而已。

						放置圖例時，特殊佈置模式，如崁牆(箱體坎入牆線中)，貼牆(開關、插座貼黏牆線)….等 





管線繪製編輯工具


						提供各工程管線繪製時專屬功能，如電氣管線通過圖塊，能自動截斷管線，繪製排水管自動繪

						製水流順水圖形，一次完成電氣迴路符號、條數、指引線…….等動作。提供管線資料庫，於管

						線尺寸標註時，順便帶入管線資料屬性，以利估算圖面管線之長度。 





建築平面繪製工具


						解決水電相關行業，需自行繪製建築平面圖之困擾，系統提供繪製建築平面圖之工具模組。

						軟體提供牆、柱、門、窗、樓梯、電梯，車位、隔間等平面模組，快速產生建築圖樣。






大樣施工圖繪製工具




						對話框設定參數方式，並於繪製過程中，詢問變形附件之樣式，系統自動繪出另件圖形。

						雙線之公制、英制尺寸，繪製時只要選好尺寸系統會自動，以現有比例繪出雙線之寬度。






材料估算與法規計算




						圖面繪製完成後，或外來圖檔進行轉換後，即可進行圖面材料數量計算。

						估算完成後之內容，可直接產生於圖面上或轉入Easy Work Express 估價軟體中。

						提供工程法規計算公式，且開放自行新增或修改公式。






簡化指令功能

提供以對話框方式、圖框自動繪製與比例自動調整。
提供多種圖層控制工具，以求簡易完成工程套圖。

						外來建築平面圖，統一更換顏色與圖層、簡繁體文字轉換、提供文字字庫與編修工具。
自動繪製電氣單線圖、保護協調曲線圖繪製、電力負載計算。
提供2D管線單線轉繪3D管線單線功能。風管3D實體及管路3D實體繪製。




管線繪製功能



自動搜尋立管，標註上下引線功能。
自動搜尋管線，標註尺寸文字功能。
依據用水器具數量，決定管徑尺寸功能。
管線經過電氣設備時，自動連結為弧或直線。
給水器具選取後，自動接至主管功能。
排水器具選取後，自動接至主管功能、並產生順水梯功能。
空調進回水分色，並由系統自動配接功能。
器具置入管線，自動裁剪內部線段功能。
管線經過器具，器具內線段自動裁剪功能。
平面管線可設定轉換ISO管線模式及3D實體管路。

						管線器具再連結功能，讓移位後的器具重新與管線再作連結功能。
管線接續功能，讓中段的兩條管線再作接合。

						提供消防泡沫灑水模組工具，可接成各式各樣的連結狀況，並具泡沫頭防護圈檢測功能。






尺寸標註及文書功能





						除了尺寸資料庫供使用者選用，省略字串的不便外，系統也會將標註尺寸的管線，自動更換為

具有估算的資料。


						提供單行寫字/全螢幕多行寫字/字庫功能寫字/文字拆字連結功能/文字爆炸/單行修改/全螢幕服務


						文字修改/常用中文字型檔資料庫建立/文字、高度、寬度、顏色…等屬性修改。


						依據文字出圖高度輸入尺寸文字高度，系統將依據出圖比率自動調整文字高度，當然，事後改


						出圖比率，文字尺寸也將一併自動更改。 









附註: 購買者需自備AUTOCAD繪圖軟體或BricsCAD繪圖軟體









             成碩資訊有限公司 Chen Sho Information Co.,Ltd.  Copyright 版權所有©




















軟體工程與CMMI



































 







 

焦點話題  »新聞中心  »叡揚e論壇  »成功案例  »資安電子報  »eHR電子報產品與服務  »Vital 全方位雲端服務家族  »Vitals ESP 知識管理企業雲  »醫院評鑑管理系統  »teamKube 工作管理系統  »teamLife 全方位辦公室資源整合  »R.A.D.A.R. 人力資源管理   »Heart-SWS 服務管理系統  »Heart-ITSM 資訊服務管理系統  »Heart-Survey 線上問捲管理系統  »S.P.E.E.D. 公文線上簽核管理  »B.E.S.T. 銀行信用風險資訊解決方案  »網擎三合一訊息安全解決方案  »QuEye 自動化持續整合平臺  »系統管理工具  »資訊安全  »資訊系統維運與開發服務  »iVoting 網路投票平臺  »Tracko案件追蹤管考系統  »政府共同供應契約e-School關於叡揚  »叡揚簡介  »創辦人的話  »叡揚大事紀  »得獎肯定  »合作夥伴  »營業據點  »聯絡我們CSR專區GSS部落格人才招募 






English日文簡體中文Facebook


	無 Iframes







首頁 | 焦點話題 | 叡揚e論壇 | EIS51 | 軟體工程與CMMI

A+
A
A-
 





					軟體工程與CMMI				





	留忠賢 博士 中原大學 資訊工程系 副教授

最近流傳一句話，“CMMI是什麼？CMMI就是讓你每天晚一個小時下班”。身為這句話的原始作者，我有必要指出，這句話還有下半句，而且更為重要。“如果自己不想辦法把事情做好，這一小時將永遠補不回來，而且可能得不到預期的效果。

我在此要強調一個觀念是，我們要作的是軟體工程，而不是或不只是CMMI。事實上，CMMI中的流程領域（ProcessArea），除了組織面的幾個領域，莫不都涵蓋在軟體工程中。因此，只要軟體工程做得好，CMMI自然就沒有問題，而且可能不只補回一小時。反之，如果沒有把軟體工程做好，則CMMI就真的只會讓你晚一個小時回家，而且這一小時將永遠補不回來。

何謂「軟體工程」？

	什麼是軟體工程？從歷史的眼光來看，軟體工程是軟體危機（SoftwareCrisis）之後的產物，也是歷經一串軟體的慘案後，大家才逐漸瞭解要開發一個比較複雜的軟體系統，必須遵循一定的開發流程，遵守一定的工作步驟，才能順利完成。早期的電腦，基本上是數學家及科學家的工具（或玩具），主要都用來做數學的運算，因此大部分的程式都是一個人獨力完成的。在這種情況下，程式大多是屬於個人的創作，而且自己就是使用者，因此，可以想到哪裡就寫到哪裡。可是當硬體的運算能力變強之後，電腦可以做的事情也越來越多了，此時的軟體不再是個人創作，而是團隊合作的成果，但是在沒有標準工作程序的狀況下，慘案就不斷發生。至此，大部分人才充分理解到，軟體開發也應該和其他領域的工程專案一樣，要先確認需求，要先有系統設計然後才能撰寫程式，再經一系列的測試才能交付給使用者。這就是我們一般通稱的瀑布開發模式（WaterfallModel），而這樣的開發流程，在其他工程領域，如建築、機械等，其實都已行之有年了。因此，這樣的開發流程，並不是軟體工程所獨創，而是根據其他工程領域的成功經驗，再結合軟體的特性而來的。

	何謂「標準工作程序」？

	什麼是一個標準工作程序（Process）呢？或者我們為什麼需要制訂標準工作程序呢？我們制訂標準工作程序的主要目的是要將一件工作的最佳實行（BestPractice）的步驟記錄下來，以便我們自己日後，甚至於任何人，只要遵循這些步驟照著做，都可以得到最佳的結果。就好像食譜一樣，只要每一步驟都照著做，就可以烹飪出一道美味的菜一樣。而前述的瀑布開發模型，其實就是其他工程領域的最佳實行演進而來的。但是我們的最佳實行是怎麼來的呢？一是參考別人，二是不斷嘗試。有一句台語，「有樣學樣，沒樣自己想」，正是最好的寫照。當我們作一件新的工作時，如果我們沒有前例可循，土法煉鋼或是暴力法常是我們採用的方式。若是成功了，或許會覺得運氣真好，瞎貓碰到死老鼠。但是下次呢？如果我們沒有把成功的步驟記錄下來，下次還能碰到死老鼠嗎？如果我們能把成功的步驟記錄下來，任何一隻瞎貓，只要照著做，每一次都能碰到死老鼠。這就是我們為什麼要制訂標準工作程序的主要原因。

CMMI改善工作程序　落實基本動作

CMMI基本上是一個工作程序改善（ProcessImprovement）的框架（Framework）。CMMI所要問的，不只是做對了沒、做好了沒，而是我們可不可能做得更好。因此CMMI的程序才要去稽核做對沒，做好了沒，因為如果連做對做好都談不上，那何來改善?實際上，軟體開發的工作程序，一直都在持續演化中，而且也都有新的工作程序模型出現，每一種新的程序模型都是為了改善舊的程序模型的缺失。例如傳統的瀑布模型最主要的缺失是如果誤解了使用者的需求，往往必須等到系統完成才真正知道，可是此時為時已晚，而且修正的代價往往很高。因此，就有了雛形模式（Prototyping）及反覆式模式（Interactive），乃至於最近在學術界十分流行的輕快式（Agile）及極致式（ExtremeProgramming）等模式，莫不是針對目前常用的開發模型的某些缺點，提出可能的改善方案。

雖然CMMI的目的是工作程序的改善，CMMI也可以用來幫助選擇比較適合的開發模式，但是CMMI真正重視的是基本動作的落實。以CMMI的工程程序領域（Engineering ProcessArea）來說，其所規範的如需求展開、需求管理、技術解答（包括設計以及實作，TechnicalSolution）、產品整合、驗證以及確認等動作，不論採用那一種開發模型，這些動作都是一定要有的，只是在不同的開發模式中，這些動作的型態會有所不同。例如在Waterfall模式中，需求展開是在前面階段，透過密集的使用者訪談將之完成（理想狀況下）而在XP（ExtremeProgramming）模式中，則透過一次又一次的使用者故事（UserStory）慢慢將之組合出來。雖然做法不同，但精神是一致的。也就是說，CMMI只會要求你做哪些動作，至於如何完成這些動作，則是由組織自行決定的。另一個比較特殊的例子是專案規劃（ProjectPlanning）。一個專案若是採用Waterfall模式，則專案範圍、產出及專案時程可能在專案啟動就大致完全確定。但如果是產品開發，則也許採用反覆式模式，雖然一般而言，產品的範圍及專案時程在啟動時也許無法完全決定，但每一次在Interaction開始之前，則應該已決定好這次Interaction的範圍及時程。因此，我們相當於把一個較大的產品開發拆成幾個較小的專案，所應該完成的工作並無兩樣，在這裡我們特別要強調的是，不管專案或產品開發，無論是採用哪一種開發模式，主要的基本動作都是相同的，也都是不能省略的。

	文件是溝通的最終且必要媒介

	許多人對推動CMMI的怨言主要在於文件的要求太多，為此我們必須要先特別瞭解文件產生的目的在於溝通的需要，而不是來自流程，或是CMMI的要求。如果只是為了CMMI的要求而產生文件，那真的以後永遠都要晚一個小時下班了。以目前大部份專案或產品開發來說，大都需要一個團隊的合作與努力，才能順利完成，因此，使用者、管理階層以及團隊成員間的溝通協調都是絕對必要的。雖然有專案會議、審查、平時的聊天、電子郵件等各種正式及非正式的溝通，但是文件是溝通的最終且必要的媒介。

以使用者需求確認這件工作來說，我們有沒有可能僅僅透過使用者訪談以及和使用者的專案會議就能完全確認？我想許多人都會認為不可能，至少不太可能，因此我們就必須要撰寫使用者需求工作說明書，系統功能清單等文件。這些文件的主要目的是什麼？是為了和使用者溝通，而不是CMMI的要求。

再以系統設計這件工具來說，SA在告訴PA或程式設計師要實作那些功能及程式時，可不可能只靠口頭交待，就能將資料模型(DataModel)，E-R Diagram及Tableschema完全解釋清楚，如果有兩個以上的PA時，只靠口頭溝通就能完全一致且清楚嗎？如果不能的話，是不是要把資料模型寫成文件。因此文件的另一目的是為了專案成員之間的溝通，而不僅是CMMI的要求。除非使用者另有需求，在系統完成之後再來補文件，基本上是不太有意義的事。以補文件這件事而言，代表著這份文件可能是不必要的，或者根本上做事方法錯誤。而大部份補文件的情形，通常是後者，即做事方法錯誤。

確實審查　幫助及早發現並避免錯誤

那我們要怎樣才能不補文件，或是能夠及時或適時地將文件產出呢？最重要的是靠審查(Review)，尤其是技術審查(TechnicalReview)。審查的目的，大家都知道是要及早發現錯誤，但是更重要的是避免錯誤被放大。大部份軟體工程的書都會講，改正一個在需求階段的錯誤所花的人力如果是一的話，如果這個錯誤沒被發現，在系統設計修正它所花的人力將是二到五倍，而到了系統實作，即Coding階段才來修正，所花的人力則是十到五十倍，若是到了UAT階段或上線之後才發現，則修正這個錯誤所花的人力是六十到一百倍。那我們要怎樣才能在需求階段或系統設計階段發現錯誤呢？唯有審查，又審查，再審查。最近大家流傳著樵夫與磨斧頭的故事，技術審查即是主要的磨斧頭工夫。另一個非常淺顯的例子是，當程式委外或委DC時，第一批回來的程式一定要做審查，道理非常簡單，若不做審查且找出錯誤，則相同的錯誤會在以後的程式重複出現。若有五批程式，則至少要花五倍的時間才能把錯誤全部修改好，這又是另一個磨斧頭的例子。

但是技術審查和文件產出又有什麼關係呢？在需求階段或是系統設計階段的審查，我們是不是需要做報告或是作簡報呢？如果沒有簡報，相信要做好審查是相當困難的。實際上，只要將簡報內容略加擴充，其實就足以產生適當的文件了。一般而言，一件工作大概有二到五次的技術審查，就可以做到相當不錯的境界，亦即可以避免絕大多數的錯誤。審查和稽核(Audit)的目的不同，稽核只檢查該做的工作有沒有做到，而審查則要檢查工作做對了沒有，是不是還可以做得更好。因此，只要各種技術審查做得確實，CMMI的各項稽核根本不是問題，而且，由於許多錯誤都可以在專案前面階段檢查出來，可以讓專案的進行更加順利，因此不僅可能可以不用加班趕工，甚至提早下班，都不是天方夜譚。

小改變帶來的大改善

最後，我要再度重新強調，我們真正要努力的，是把軟體工程做好，而不只是滿足CMMI的要求而已。CMMI只是一個流程改善的框架而已，沒有軟體工程，就不會有流程改善。軟體工程或CMMI的目的，並不是在產出文件，而是要把系統做好，而要把系統做好，許多小小的改變，其實可以得到絕大的改善。例如說有一個病人，患有高血壓、糖尿病、心血管疾病及腦中風的危險，若要全面有效治療，如開心手術或開腦手術，病人可能就會喪命在手術臺上。但若病人改善飲食，每天持續作溫和的運動如散步，一段時間之後，也許心肺功能改善到可以開腦手術的地步。而在專案這邊也是一樣，要進行全面的流程改善也許相當困難，但是有許多小小的改變卻是可能，也可以收到很好的效果。這些小小的改變是：
一、第一批程式一定要做Code Review
二、專案會議中，留一段時間作技術審查，設計部份要做簡報，程式部份，可能的話要做Demo
三、事先想好測試個案
四、規劃系統整合步驟
五、專案一定要做好人力規劃及備援方案

其實還可以列出更多更多，不過最重要的是，大家要多多思考，如何讓自己更聰明的工作，更有效率的工作，而不僅僅是賣命的工作。賣命的工作，並不能讓你避開慘案，唯有記取歷史的教訓，以及盡量複製自己以及別人成功的經驗，才能真正讓你享受專案成功的果實和喜悅，而這才是導入CMMI 的真正目的。

	  




Tweet









Sitemap



		焦點話題

新聞中心
叡揚e論壇
成功案例
資安電子報
eHR電子報



		產品與服務

Vital 全方位雲端服務家族
Vitals ESP知識管理企業雲
醫院評鑑管理系統
teamKube工作管理系統
teamLife辦公室資源整合
R.A.D.A.R.人力資源管理
Heart服務管理系統
S.P.E.E.D.公文線上簽核管理
B.E.S.T.銀行信用風險資訊解決方案

網擎三合一訊息安全解決方案
QuEye自動化持續整合平臺
系統管理工具
資訊安全
資訊系統維運與開發服務
iVoting網路投票平臺
Tracko案件追蹤管考系統
政府共同供應契約



		關於叡揚

叡揚簡介
創辦人的話
叡揚大事紀
得獎肯定
合作夥伴
營業據點
連絡我們



		瞭解更多

CSR專區
人才招募



		熱門連結

叡揚資訊 粉絲頁
GSS Engineering Blog
Vitals ESP 粉絲頁
GSSCloud 瘋雲區
teamKube 粉絲頁
Youtube 專頁






﻿




























