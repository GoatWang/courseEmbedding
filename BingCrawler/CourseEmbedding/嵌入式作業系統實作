


Wiki - 課程進度與開放資源





















成大資工 Wiki


所有頁面
分類
隨機頁面
最近活動
上傳檔案

本頁面

頁面原始檔
可列印版本
刪除本頁




登入 / 註冊帳號
登出 









搜尋
前往


LaTeXConTeXtTexinforeSTMarkdownCommonMarkPlain textMediaWikiOrg-modeICMLTextileAsciiDocMan pageDocBookDZSlidesSlidyS5EPUBODTDOCXRTF 













viewedithistorydiscuss

課程進度與開放資源


Instructor: Jim Huang (黃敬群) <jserv.tw@gmail.com>

Facebook 粉絲專頁 (不要擔心提了笨問題，這就是專門和學生互動的)

討論區: https://www.facebook.com/groups/system.software2016/
共筆: https://embedded2016.hackpad.com
課程信箱: <embedded.master2015@gmail.com>
參考硬體平臺: STM32, STMicroelectronics

嵌入式作業系統設計與實作 (Spring 2016)






Week
Date
Subject
Assignment




#1
Feb 23
2016q1 Overview
= 2016q1: Homework1 =


#2
Mar 1
2016q1:基本能力鑑定測驗
-


#3
Mar 8
Code Review
= 2016q1: Homework2 =


#4
Mar 15
Synchronization and POSIX Threads
-


#5
Mar 22
Object-Oriented Programming & Thread
= 2016q1: Homework3 =


#6
Mar 29
Threading and ARM
= 2016q1: Homework4 =


#7
Apr 5
停課一次 / Embedded Linux Conference


#8
Apr 12
ARM architecture
= 2016q1: Homework5 =


#9
Apr 19
OS Scheduling


#10
Apr 26
分組報告(A)


#11
May 3
分組報告(B)


#12
May 10
作業系統發展回顧 + 即時 Linux 的工業應用


#13
May 17
分組報告(C)


#14
May 24
中斷、排程，多核心處理


#15
May 31
分組報告(D)


#16
Jun 7
分組報告(E)


#17
Jun 14
分組報告(F)


#18
Jun 21
分組報告(G) + 期末總結



進階嵌入式系統設計與實作 (Fall 2015)






Week
Date
Subject
Assignment




#1
Sep 18
2015q3 Overview
= 2015q3: Homework1 ; 2015q3: Ext1 =


#2
Sep 25
2015q3:基本能力鑑定測驗
-


#3
Oct 2
ARM Architecture and Optimization Concepts
= 2015q3: Homework2 ; 2015q3: Homework3 =


#4
Oct 9
國定假日
-


#5
Oct 16
Compilers + Calling Convention
= 2015q3: Homework4 =


#6
Oct 23
專題演說
= 2015q3: Homework5 =


#7
Oct 30
Code Review
= 2015q3: Homework6 =


#8
Nov 6
C Programming + ARM
= 2015q3: Homework7 =


#9
Nov 13
From Hello to Preemptive Scheduler
= 2015q3: Homework8 =


#10
Nov 20
From ARM core to Peripherals
= 2015q3: Homework9 =


#11
Nov 27
STM32 + Peripherals
= 2015q3: Homework10 =


#12
Dec 4
Peripherals: GPIO ADC
QA: GPIO, QA: ADC


#13
Dec 11
; Peripherals: SPI; uVisor
QA: SPI


#14
Dec 18
課程公告; Peripherals: USART, Flash, I2C
QA: USART, QA: Flash, QA: I2C


#15
Dec 25
專題演說
QA: USB


#16
Jan 1
Happy New Year!
*


#17
Jan 8
Code Review / 作業回顧
*


#18
Jan 15
Software Quality + Security Issues
*



嵌入式作業系統設計與實作 (Spring 2015)






Week
Date
Subject
Assignment




#1
Feb 24
2015q1 Overview
*


#2
Mar 3
2015q1:基本能力鑑定測驗
Lab 38: ARM Cross-Development Environment


#3
Mar 10
ARM Architecture + OS Concepts
Lab 39: FreeRTOS


#4
Mar 17
ARM Exceptions/Interrupts
Lab 40: Scheduling


#5
Mar 24
Embedded Linux Conference 2015
Lab 41: 基礎觀念訓練


#6
Mar 31
ARM and RTOS: Part I
確認 Lab 38, Lab 39, Lab 40, Lab 41 均充分完成


#7
Apr 7
ARM and RTOS: Part II
Lab 42: Mini ARM OS


#8
Apr 14
From Hello to Preemptive Scheduler
Lab 42: Mini ARM OS


#9
Apr 21
Kernel Concepts and Threading
Lab 43: Runtime Behavior


#10
Apr 28
2015q1:Group Presentation(1)
*


#11
May 5
2015q1:Group Presentation(2)
*


#12
May 12
2015q1:Group Presentation(3)
*


#13
May 19
2015q1:Group Presentation(4)
*


#14
May 26
2015q1:Group Presentation(5)
*


#15
Jun 2
2015q1:Group Presentation(6)
*


#16
Jun 9
2015q1:Group Presentation(7)
*


#17
Jun 16
2015q1:Group Presentation(8)
*


#18
Jun 23
2015q1:Group Presentation(9)
*



進階嵌入式系統開發與實作 (Fall 2014)






Week
Date
Subject
Assignment




#1
Sep 18
2014q3 Overview
Lab 31: ARM Environment


#2
Sep 25
ARM Architecture (cont)
Lab 32: QEMU + FreeRTOS


#3
Oct 2
ARM Architecture (cont2)
Lab 33: GDB + FreeRTOS


#4
Oct 9
ARM Architecture and Interface
Lab 34: Buffer overflow


#5
Oct 16
Hardware Concepts Review
Lab 35: STM32F429


#6
Oct 23
Code Review for Lab 32-33
Lab 35: STM32F429


#7
Oct 30
Code Review + ELF
Lab 36: ELF


#8
Nov 6
Interrupt/Exceptions + RTOS
Lab 37: Memory allocation


#9
Nov 13
2014q3:Group Presentation (1)
-


#10
Nov 20
2014q3:Group Presentation (2)
-


#11
Nov 27
2014q3:Group Presentation (3)
-


#12
Dec 4
2014q3:Group Presentation (4)
-


#13
Dec 11
2014q3:Group Presentation (5)
侯捷 C++ 底層技術課程分享


#14
Dec 18
2014q3:Group Presentation (6)
-


#15
Dec 25
2014q3:Group Presentation (7)
-


#16
Jan 1
Happy New Year!
-


#17
Jan 8
2014q3:Group Presentation (8)
-


#18
Jan 15
2014q3:Group Presentation (9)
-


#18
Jan 17
期末展示
-



嵌入式作業系統設計與實作 (Spring 2014)






Week
Date
Subject
Assignment




#1
Feb 18
Overview: Embedded Systems and OS
Lab 25


#2
Feb 25
ARM Architecture Evolution
Lab 26


#3
Mar 4
Case: Quadcopter
Lab 27


#4
Mar 11
Assignment Review
Lab 28


#5
Mar 18
ARM Cortex-M + RTOS Concepts
Lab 29


#6
Mar 25
ARM I/O, Interrupt, Exception
Lab 30


#7
Apr 1
春假
:


#8
Apr 8
Advanced OS Design issues
:


#9
Apr 15
Group Presentation (a)
:


#10
Apr 22
Group Presentation (b)
:


#11
Apr 29
Group Presentation (c)
:


#12
May 6
Group Presentation (d)
:


#13
May 13
Group Presentation (d)
:


#14
May 20
Group Presentation (f)
:


#15
May 27
Group Presentation (g)
:


#16
Jun 3
Group Presentation (h)
:


#17
Jun 10
Talk: 雲、端、架構
:


#18
June 17
Group Presentation
:


#18
Jun 21
期末成果展示
:



進階嵌入式系統開發與實作 (Fall 2013)






Week
Date
Subject
Assignment




#1
Sep 17
Overview: Embedded in our world
Lab 19: QEMU


#2
Sep 23
ARM Architecture and SoC
Lab 20: GNU Toolchain


#3
Oct 1
Operating Systems for Embedded
Lab 20: GNU Toolchain


#4
Oct 8
ARM: Instructions
Lab 21: RTOS (1)


#5
Oct 15
ARM: Toolchain and Peripherals
Lab 22: RTOS (2)


#6
Oct 22
ARM: Interrupts and Exceptions
Lab 23: RTOS (3)


#7
Oct 29
Code Review
-


#8
Nov 5
Code Review + Group Presentation(1)
Lab 24: Hardware


#9
Nov 12
3D Printer + Group Presentation(2)
-


#10
Nov 19
Group Presentation(3)
-


#11
Nov 26
Speech + Group Presentation(4)
-


#12
Dec 3
Group Presentation(5)
-


#13
Dec 10
Group Presentation(6)
-


#14
Dec 17
Group Presentation(7)
-


#15
Dec 24
Group Presentation(8)
-


#16
Dec 31
Group Presentation(9)
-


#17
Jan 7
Group Presentation(10)
-


#18
Jan 12
期末展示
-



嵌入式作業系統設計與實作 (Spring 2013)






Week
Date
Subject
Assignment




#1
Feb 19
課程介紹 + 期初考


#2
Feb 26
Embedded Operating System Concepts
Lab 8 : GNU Toolchain + RTOS (Sol 8)


#3
Mar 5
RTOS Characteristics
Lab 9 : Multitasking programming (Sol 9)


#4
Mar 12
從火星探測號談 scheduling
Lab 10 : Priority Inversion (Sol 10)


#5
Mar 19
ARM Architecture Intro
Lab 11: Build RTOS for ARM (Sol 11)


#6
Mar 26
ARM Architecture Intro + 月考
Lab 12: RTOS Visualization (Sol 12)


#7
Apr 2
春假



#8
Apr 9
ARM and Assignment Review
Lab 13: ARM Programming with GNU Toolchain (Sol 11)


#9
Apr 16
I/O, Interrupt, Exception (ARM)
Lab 14: OS and BSP Porting (Sol 14)


#10
Apr 23
RTOS Evaluation
Lab 15: Benchmarking concepts


#11
Apr 30
Case Study: Train control + 月考
Lab 15: Validation and benchmarking


#12
May 7
Tickless scheduling
Lab 16: Hardware Enablement


#13
May 14
Embedded Kernel Design Review
Lab 17: Tickless scheduling for ARM hardware


#14
May 21
Embedded Kernel Design Review-2
Lab 18: OS Evaluation for ARM


#15
May 28
Automotive Linux Summit (Spring) +月考



#16
Jun 4
Open Discussion



#17
Jun 11
The End




進階嵌入式系統開發與實作 (Fall 2012)






Week
Date
Subject
Assignment




#1
Sep 18
Overview: Embedded - Why and How
Lab 1: QEMU


#2
Sep 25
ARM Architecture (Basic)
Lab 2: GNU Toolchain + QEMU/ARM


#3
Oct 2
Realtime Operating System (Basic)
Lab 2s: GNU Toolchain + QEMU/ARM


#4
Oct 9
Timer, Interrupt, Exception in ARM
Lab 3: GNU Toolchain + RTOS


#5
Oct 16
RTOS Design and Implementation
Lab 4: RTOS for MCU


#6
Oct 23
Code review of Lab assignments
Lab 5: RTOS modifications


#7
Oct 30
Peripherals and hardware interface
Lab 6: Hardware


#8
Nov 6
Embedded Linux Conference Europe
分組準備與討論


#9
Nov 13
Group Presentation (1)
分組準備與討論


#10
Nov 20
Group Presentation (2)
Lab 6: Hardware + Unit Test


#11
Nov 27
Group Presentation (3)
Lab 6: Hardware + On-Chip Debugger


#12
Dec 4
Group Presentation (4)
Lab 7: On-Chip Debugger + semihosting


#13
Dec 11
Group Presentation (5)
Hack!


#14
Dec 18
Group Presentation (6)
Hack!


#15
Dec 25
Group Presentation (7)
Hack!


#16
Jan 1
Happy New Year - 2013
N/A


#17
Jan 8
Final project review (and vote)
N/A


#18
Jan 15
Make Your Own System (and profit)
DONE


embeddedarmstm32rtoskernellinuxncku




Please enable JavaScript to view the comments powered by Disqus.




本站所有內容，除另有標註外，採用創用 CC 姓名標示-相同方式分享 3.0 台灣 授權條款授權
	

說明
Powered by gitit
Customized by CrBoy










































中華行動數位嵌入式Android實作教學中心 -  - 嵌入式系統培訓專家































ETC嵌入式科技學院



                                嵌入式Android雲端物聯網人才養成班 
                            



                                ARM智慧機械物聯網平臺應用人才養成班 
                            



                                嵌入式Android物聯網系統移植培訓  
                            



                                Embedded Linux系統移植實作 
                            



                                嵌入式Device Driver開發實務
                            





                        MTC MCU科技學院
                    



                                ARM單晶片物聯網系統開發  
                            



                                單晶片ARM Cortex-M0實務開發 
                            



                                嵌入式單晶片 ARM Cortex-M4 
                            



                                ARM單晶片物聯網整合實作  
                            



                                ARM即時作業系統移植實作  
                            



                                ARM USB通訊韌體開發 
                            





                        ATC Android科技學院
                    



                                Android雲端應用程式開發
                            



                                Android應用程式開發實務
                            



                                伺服器程式設計 
                            



                                Android系統整合移植實務 
                            



                                Android硬體框架整合實務 
                            




最新課程總覽


企業客製化教學服務


ETC嵌入式粉絲專頁


關於我們


聯絡我們













最新消息 ： 



106年度經濟部工業局職訓補助-白天中長期、假日進修班第二梯次開始招生！7/22起陸續開課，名額有限，額滿截止！
                        











                智慧電子人才培訓。中長期養成
            


                    詳情瞭解
                
ARM智慧機械物聯網平臺應用 
                學專業。無負擔，最高補助100%
                
            


                    詳情瞭解
                
嵌入式Android物聯網人才養成
                結訓立即擁有與接軌業界即戰力
            



                經濟部工業局 短期在職補助班
            


                    詳情瞭解
                
裝置設備與驅動設計 
                嵌入式工程師必學-linux driver
            










                培養軟實力  成就職場就業力
            
            獨家Cortex-A9四核開發板實作教學 
            一次學會嵌入式 Linux+Android系統
            

                    7月23日 (週日班)
                

                    詳細課程內容
                







                業界指名MCU韌體工程師必學
            
            獨家採用ARM-Cortex M系列開發板 
            搭配多元化周邊模組實作練習
            

                    7月29日 (週六班)
                

                    詳細課程內容
                







                一次學會Android底層的移植技術
            
            獨家採用Cortex A9四核開發板
            搭配多元周邊模組實作練習與業界接軌
            

                    7月22日 (週六班) 工業局專班


                    詳細課程內容
                







                劃時代新型態Android APP開發
            
            學會最夯的『IOT智慧生活』遠端控制APP
            讓你贏在職場起跑點、勝在加薪關鍵點
            

                    8月19日 (週六班)
                

                    詳細課程內容
                









                Embedded Linux 系列 
Series Course

                     採用最新Cortex-A9四核開發板教學
                



嵌入式Android物聯網人才養成班
智慧電子人才培訓-職訓專班

                        上課日期：106.9.26至106.12.7
                        
                            【一至五白天班】
                        



ARM智慧機械物聯網平臺應用人才養成
工業局補助專班

                        上課日期：106.8.2至106.10.16
                        
                            【一至五白天班】
                        



嵌入式Android物聯網系統移植培訓 


                        上課日期：106.7.23至106.11.19 
                        
                            【周日全天班】
                        


                        上課日期：106.8.30至106.11.24 
                        
                            【一三五夜間班】
                        



Embedded Linux系統移植實作


                        上課日期：106.9.3至106.10.8 
                        
                            【週日全天班】
                        


                        上課日期： 106.10.31至106.11.21 
                        
                            【二四白天班】
                        



嵌入式Device Driver開發實務


                        上課日期： 106.7.25至106.8.22
                        
                            【二四夜間班】
                        


                        上課日期：106.8.20至106.9.24
                        
                            【工業局專班】
                        







                Microcontroller 系列 
Series Course

                     採用最新ARM Cortex M系列發板教學
                



ARM單晶片物聯網系統開發 


                        上課日期：106.7.29至106.11.18
                        
                            【週六全天班】
                        


                        上課日期：106.10.15至106.12.31
                        
                            【週日全天班】
                        



單晶片ARM Cortex-M0實務開發 


                        上課日期：106.7.29至106.8.19
                        
                            【週六全天班】
                        


                        上課日期：106.8.23至106.9.5 
                        
                            【二三五白天班】
                        



嵌入式單晶片 ARM Cortex-M4 


                        上課日期：106.9.17至106.10.29
                        
                            【工業局專班】
                        


                        上課日期：106.9.18至106.9.27
                        
                            【一三五白天班】
                        



ARM單晶片物聯網整合實作


                        上課日期：106.8.13至106.8.27
                        
                            【工業局專班】
                        


                        上課日期：106.8.29至106.9.1
                        
                            【二五白天班】
                        



ARM即時作業系統移植實作


                        上課日期：106.8.20至106.9.3
                        
                            【週日全天班】
                        


                        上課日期：106.8.28至106.8.30
                        
                            【一三白天班】
                        



ARM USB通訊韌體開發




                        上課日期：106.8.29至106.9.01
                        
                            【二五白天班】
                        


                        上課日期：106.9.17至106.9.24
                        
                            【週日全天班】
                        







                Android 系列課程 
Series Course

                     採用最新Cortex-A9四核開發板教學
                



Android雲端應用程式開發   


                        上課日期：106.8.19至106.11.25
                        
                            【週六全天班】
                        


                        上課日期：106.10.15至107.1.21
                        
                            【週日全天班】
                        



Android應用程式開發實務


                        上課日期：106.8.5至106.9.2
                        
                            【週六全天班】
                        


                        上課日期：106.9.16至106.10.14
                        
                            【週六全天班】
                        



伺服器程式設計


                        上課日期：106.8.5至106.9.2
                        
                            【週六全天班】
                        


                        上課日期：106.10.15至106.11.12
                        
                            【週日全天班】
                        



Android系統整合移植實務


                        上課日期：106.7.22至106.8.5
                        
                            【工業局專班】
                        


                        上課日期：106.8.4 至106.8.7
                        
                            【週一五白天班】
                        



Android硬體框架整合實務


                        上課日期：106.8.12至106.9.2 
                        
                            【工業局專班】
                        


                        上課日期：106.8.9 至106.8.10
                        
                            【週三四白天班】
                        







                單元 系列課程 
Moudle Series Course

                      深入淺出、多元化的系列課程
                



Linux系統管理


                        上課日期： 106.7.18至106.7.19
                        
                            【二三白天班】
                        


                        上課日期： 106.7.23至106.7.30
                        
                            【周日全天班】
                        



嵌入式Linux系統程式設計


                        上課日期：106.7.23至106.8.27
                        
                            【週日全天班】
                        


                        上課日期：106.7.31至106.8.11
                        
                            【一三五白天班】
                        



C語言程式設計


                        上課日期：106.8.3至106.8.14
                        
                            【一三四白天班】
                        


                        上課日期：106.8.5至106.8.26
                        
                            【週六全天班】
                        



Java程式設計


                        上課日期：106.8.14至106.8.21
                        
                            【一三五白天班】
                        


                        上課日期：106.8.19至106.9.9
                        
                            【週六全天班】
                        



C++物件導向程式設計


                        上課日期：106.8.19至106.9.9 
                        
                            【週六全天班】
                        












        我有興趣想進一步瞭解課程，請專人與我連絡
    




姓名 
                
                   
                電話 
                
                   
                E-Mail 
                




 

                舊學員 

                  新學員 





 首頁課程回函








驗證碼



                    << 點選觀看驗證碼
                

請選擇您想參加場次
週(一.三.五)7pm-8pm
週(二.四)2pm-3pm
週(六.日)11am-12pm
週(六.日)2pm-3pm
由專人為您安排另約時段





請選擇
Google
Yahoo
Yes123
104
其他


















教育訓練中心


                    課程諮詢：臺北市開封街一段2號9樓
                

                    上課地點：臺北市開封街一段2號6樓(臺北火車站│館前路口│麥當勞隔壁中心大樓)
                

                    諮詢專線：02-2311-7355
                




本中心營業時間


                    每週一至週五　　AM9:00-PM9:30
                

                    每週六日　　　　AM9:00-PM5:30
                




上課時段說明


                    夜間班　　　　 PM7:10至PM10:00
                

                    一到五白天班 　AM9:30至PM5:30
                

                    週六全天班 　　AM9:30至PM5:30
                

                    週日全天班 　　AM9:30至PM5:30
                




報名方式


                    親至中心報名直接註冊繳費
                

                    Email報名：grace@cadtc.com.tw
                


                    下載報名錶 填妥後請回傳本中心
                    
                    
                    傳真專線(02)2331-3591
                    課程即日起接受報名與註冊繳費!額滿為止
                    中華行動數位保留開課時間調整的權利
                










            服務專線：(02)2311-7355　|　傳真專線：(02)2331-3591　|　服務時間：週一至週五9:00-21:30 週六日9:00-17:30
課程諮詢：臺北市開封街一段2號9樓  |  上課地點：臺北市開封街一段2號6樓
(館前路口/近新光三越站前店/麥當勞隔壁大樓)
Copyright(C) 1996-2017 Chinese Action Digital Technology Co., Ltd. 保留一切權利
        


























國立成功大學 - 課程地圖







    
 


 首頁 







 通識教育課程地圖 






 院系所課程地圖 








意見回饋 ｜ 
  

English ｜ 
  




 1.
        
請選擇學院
其他文學院理學院工學院管理學院醫學院社會科學院電機資訊學院規劃與設計學院生物科學與科技學院 
        2. 
        
請選擇系所
電機系          資訊系          電機所          多媒學程        資訊所          製造所          微電所          電通所          醫資所          奈積學程         



 3. 
        
選擇未來發展 - 升學

						國內進修                                          

						國外進修                                          


選擇未來發展 - 就業

						資訊產業                                          

						生醫產業                                          

						學術界                                            

						公職                                              

						其它                                              






嵌入式作業系統設計、實作與移植          


  	嵌入式作業系統的介紹，進而設計與實作一小型作業系統，並移植到一個以ARM Cortex 處理器為核心之嵌入式系統。

課程教育目標 

A. 教育學生基礎專業知識及終身學習之能力B. 教育學生運用專業知識解決資訊應用問題之能力 
課程基本素養與核心能力 

[核心能力]畢業生應具備基礎專業數學及資訊理論知識之基本能力
畢業生應具備資訊理論推導及實驗設計、數據分析歸納之能力
畢業生應具備培養學習興趣及持續學習之能力
畢業生應具備獨立、創新思維及發掘、分析、解決資訊相關問題之能力
 
近年開課資訊



開課年度
課程碼
分班碼
課程名稱(超連結為課程大綱)
學分數
英語授課
授課教師



0105/2
F732300
 
 
		  	嵌入式作業系統設計、實作與移植          

3.0
N
黃敬群



0104/2
F732300
 
 
		  	嵌入式作業系統設計、實作與移植          

3.0
N
黃敬群



0103/2
F732300
 
 
		  	嵌入式作業系統設計、實作與移植          

3.0
N
黃敬群



0102/2
F732300
 
 
		  	嵌入式作業系統設計、實作與移植          

3.0
N
黃敬群



0101/2
F732300
 
 
		  	嵌入式作業系統設計、實作與移植          

3.0
N
蘇文鈺







 國立成功大學 |  課程查詢  
701臺南市大學路1號   TEL:  06-2757575#50158  意見回饋信箱: 教務處課務組 em50150@mail.ncku.edu.tw
    國立成功大學 版權所有  © NCKU All Rights Reserved.  計網中心資訊系統發展組 製作










	Raspberry Pi嵌入式系統入門與應用實作
















































                                                                      






















 




 
               















	 
           
           


























             















加入會員
忘記密碼


修改基本資料
會員權益
















	 
           
           







































	 
           
























‧製作角色扮演遊戲∼開啟寶箱



‧為企劃書製作索引



‧增強素描真實感的秘密武器


















	 
           
























臺北: (02)2788-2408 






臺中: (04)2452-7051 

 



高雄: (07)384-7699 


 



















































Raspberry Pi嵌入式系統入門與應用實作 
                            
















作者：
                                                張元翔










書號：
AEH003700
   
                                            出版日：
2016/08/05



ISBN：
9789864761005
   
                                            EAN：
9789864761005



紙本書價格： 480
   
                                            附件： 
線上下載



電子書： 已出版






































  博客來    金石堂    天瓏     Google Play 圖書  團體購書




































         



















 
回頁首







最正規的學習架構，建立相關領域的知識並動手實作，進而發揮創意，自行開發專屬的電子產品。嵌入式系統在科學與日常生活中的應用非常廣泛，而目前最熱門的嵌入式系統，首推Arduino與Raspberry Pi。Arduino提供的學習套件較多，程式簡單易懂，因此非資訊專業的創客玩家很容易就可以上手；而Raspberry Pi則是完整的微型電腦，配備作業系統，且使用正規的程式語言，因此相當適合資訊相關專業人才學習與入門。以現在當紅的物聯網來說，Raspberry Pi嵌入式系統就可以扮演關鍵的角色，在建構物聯網應用之前，可以先瞭解嵌入式系統的軟硬體原理與設計方法。書中以主題方式介紹相關概念，並使用Raspberry Pi作為實驗平臺，實際動手進行嵌入式系統實作，並提供相關範例檔，內容涵蓋：硬體(Hardware)、軟體(Software)、網路(Network)、多媒體(Multimedia)等課題，從做中學，快速入門。本書適用對象：對於Raspberry Pi嵌入式系統應用或物聯網應用具有興趣的人士，包含：資訊相關領域 (資訊、電機、電子等科系) 的大專生、專業研發人員或創客玩家等。適用Raspberry Pi 3 & 2








回頁首







張元翔 學歷：美國匹茲堡大學/電機博士經歷：中原大學/資訊工程系/副教授 中原大學/通訊工程碩士學位學程/副教授 美國匹茲堡大學/醫學院放射科/助理教授美國匹茲堡大學/醫學院放射科/研究助理/後博士美國匹茲堡大學/電機工程系/研究助理聯銪實業股份有限公司/研發工程師









回頁首














Raspberry Pi最佳入門與實戰應用(第二版) (適用Raspberry Pi 2/Raspb...more Raspberry Pi超炫專案與完全實戰(第二版) (附143段教學與執行影片/範例檔) 用Arduino全面打造物聯網 














 
回頁首









Chapter 1 嵌入式系統Chapter 2 作業系統Chapter 3 計算機網路Chapter 4 基礎電學Chapter 5 電路學Chapter 6 程式設計Chapter 7 GPIO應用-基礎篇Chapter 8 GPIO應用-數位輸出與輸入Chapter 9 GPIO應用-串列周邊介面Chapter 10 GPIO應用-類比輸出與輸入Chapter 11 GPIO應用-感測器Chapter 12 GPIO應用-馬達控制Chapter 13 GPIO應用-家電控制Chapter 14 多媒體概論Chapter 15 訊號處理Chapter 16 影像處理Chapter 17 視訊處理Chapter 18 電腦視覺附錄A-1 嵌入式系統實驗設備與材料A-2 基本單位A-3 Raspberry Pi GPIO針腳圖A-4 ASCII碼A-5 參考文獻









 
回頁首









範例檔



















僅提供已加入碁峰會員之教師申請任教科目之教師資源：教學投影片、習題解答、教學樣書、線上測驗系統…，若申請未任教科目之教學資源，碁峰保有核發與否之權利。






若您已是碁峰教師會員，請直接於左方 教師登入區 輸入帳號密碼。






若您尚未加入會員，請先 加入會員，即可享有多項教師專屬服務。













 
遍佈北中南，陣容堅強的碁峰業務團隊，都將竭誠的為您服務





請利用申請表單填寫欲申請之相關教學資源，將盡快為您處理 




教學配件(教學投影片)













 










  
                                












 












關於碁峰│隱私權政策│聯絡我們    
                                檢視 : PC 版  手機版 






碁峰資訊股份有限公司 GOTOP INFORMATION INC. 
         臺北市南港區三重路66號7樓之6 / 7F.-6,No.66,Sanchong Rd.,Nangang District,Taipei 
         TEL:(02)2788-2408 FAX:(02)8192-4433 劃撥帳號:14244383 
         Copyright 2014© GOTOP   Information Inc, All Rights Reserved 請勿任意連結、轉載






需要安全驗證



Facebook加入或登錄 Facebook   郵箱或手機號密碼忘記帳戶？登錄想加入 Facebook 嗎？註冊註冊安全驗證碼請輸入以下文本看不清楚上面的文字？換一個或播放語音驗證信息框中文字：這是什麼？安全驗證這是一個標準的安全測試，用於阻止垃圾郵件製造者創建假帳戶並向用戶發送垃圾信息。提交中文(簡體)English (US)日本語한국어Français (France)Bahasa IndonesiaPolskiEspañolPortuguês (Brasil)DeutschItalianoMessengerFacebook Lite用戶地點游戲位置名人二手市場小組食譜彩色氣球Instagram公司簡介創建廣告創建主頁開發者招聘信息隱私權政策Cookie廣告選項條款設置活動日誌 Facebook © 2017





嵌入式系統 - 維基百科，自由的百科全書































 







嵌入式系統

維基百科，自由的百科全書


					前往：					導覽，					搜尋






本條目不符合維基百科的品質標準，需要完全重寫。 
請在討論頁中討論相關議題，並參考更優秀條目寫作指南。 











Soekris net4801,適用於網路應用程式


嵌入式系統（Embedded System），是一種嵌入機械或電氣系統內部、具有專一功能和實時計算效能的電腦系統。[1][2]嵌入式系統常被用於高效控制許多常見裝置，被嵌入的系統通常是包含數位硬體和機械部件的完整裝置，例如汽車的防鎖死煞車系統。相反，通用電腦如個人電腦則設計靈活，可以智慧型處理各式各樣的運算情況，以滿足廣大終端用戶不同的需要。
現代嵌入式系統通常是基於微控制器（如含整合記憶體和/或外設介面的中央處理單元）的，但在較複雜的系統中普通微處理器（使用外部儲存晶片和外設介面電路）也很常見。通用型處理器、專門進行某類計算的處理器、為手持應用訂製設計的處理器等，都可能應用到嵌入式系統。常見的專用處理器有數位訊號處理器。
嵌入式系統的關鍵特性是處理特定的任務，因此工程師能對其進行最佳化，以降低產品的體積和成本，提升可靠性和效能。
嵌入式系統的物理形態包括便攜裝置如計步器、電子手錶和MP3播放器，大型固定裝置如交通燈、工廠控制器，大型複雜系統如混合動力汽車、磁共振成像裝置、航空電子裝置等。它們的複雜度低至單晶片，高至大型底盤或外殼內安裝有多個部件、外設和網路。



目錄


1 嵌入式系統例項
2 歷史
3 特性

3.1 使用者介面
3.2 嵌入式系統的處理器

3.2.1 嵌入式主機板
3.2.2 ASIC和FPGA解決方案


3.3 外圍裝置
3.4 工具
3.5 偵錯
3.6 作業系統
3.7 啟動

3.7.1 內部自檢


3.8 可靠性體系


4 嵌入式軟體架構的類型

4.1 控制迴圈
4.2 非搶先式任務
4.3 搶先式定時器
4.4 搶先式任務
4.5 微內核與外內核
4.6 虛擬機器
4.7 檢查點計算
4.8 辦公用（單核心）作業系統
4.9 Exotic custom作業系統


5 外部連結
6 常見的嵌入式作業系統
7 業界常見的開源嵌入式軟硬體系統



嵌入式系統例項[編輯]
嵌入式系統通常應用於消費類、烹飪、工業、自動化、醫療、商業及軍事領域。

電信系統

從網路級的電話交換機到手機終端都部署了大量嵌入式系統。

消費類電子

包括PDA、MP3播放器、行動電話、遊戲機、數字攝錄影機、DVD播放器、全球衛星定位系統接收器和印表機。

家居應用

微波爐、洗衣機和洗碗機中採用了嵌入式系統，帶來靈活性、效率和功能；高階暖通空調系統採用聯網的恆溫器更精確、高效地按天或季度控制溫度；智慧型家居使用嵌入式裝置進行感知、控制，通過有線和無線網路控制燈光、溫濕度、安全、音影片、監控等。

交通系統

安全要求相當高的飛機中採用了先進的航空電子裝置，如慣性導航系統、全球衛星定位接收器； 各種電機——直流無刷電機、異步電機和直流電機中使用了電氣/電子電機控制器； 汽車、電動車、混合動力汽車越來越多地採用嵌入式系統來節能減排； 其他汽車安全系統，包括防抱死制動系統、電子穩定控制系統、牽引力控制系統、自動四驅系統。

醫療裝置

使用嵌入式裝置進行生命體徵監測，電子聽診器放大聲音，各種醫療成像系統（正電子發射電腦斷層掃描、單光子發射電腦化斷層顯像、電腦斷層掃描、核磁共振成像）進行非入侵式內部檢查； 醫療裝置內的嵌入式系統通常採用工業電腦。

嵌入式系統應用在交通、消防、安防、醫療和生命攸關係統中，由於這些系統能夠與駭客等隔離，因而更可靠。在消防安全中，經過設計，系統能在高溫環境下持續工作。出於安全需要，嵌入式系統可以自給自足，能夠處理切斷了電氣和通訊系統的情況。
WSN領域的發展，促使一種新型的微型無線裝置微塵迅速普及。人們可以通過資訊監測和控制系統感知並作用於物理世界的無數事物。微塵採用微製造技術，通過先進的IC設計技術，將無線子系統與尖端的傳感器結合；從而讓人們可以通過資訊監測和控制系統感知並作用於物理世界的無數事物。這些微塵是完全自給自足的，在需要更換電池或充電前通常可以工作數年。
利用嵌入式Wi-Fi模組，原先利用串列埠進行通訊的裝置可以輕鬆啟用無線通訊功能。
歷史[編輯]
MIT儀器研究室的查爾斯·斯塔克·德雷珀開發的阿波羅制導電腦是現代嵌入式系統的雛形之一。在專案初期，它被看成風險最高的部分，原因是為了減小尺寸和重量，它採用了當時最新研發的單片積體電路。
第一款大批次生產的嵌入式系統是1961年發布的民兵I飛彈內的D-17自動制導電腦。當民兵II飛彈在1966年開始生產的時候，D-17升級成一種新型電腦，其中首次大量使用了積體電路。僅這個專案就將與非門模組的單價從1000美元降低至3美元，低到可用於商業產品。
由於二十世紀六十年代的這些早期應用，不僅嵌入式系統的價格降低了，同時處理能力和功能也獲得了巨大的提高。以第一款單晶片英特爾4004為例，它是為計算機和其他小型系統設計的，但仍然需要外部記憶體和外圍晶片。1978年，國家工程製造商協會發布了可編程單晶片的「標準」，涵蓋了幾乎所有以電腦為基礎的控制器，如單板機、數控裝置，以及基於事件的控制器。
隨著微控制器和微處理器的價格下降，消費品也可以更換掉基於按鈕的模擬器件，如分壓計和可變電容，採用微處理器讀取開關或按鈕訊號。
到了二十世紀八十年代早期，記憶體、輸入輸出部件整合到處理器內，產生了單晶片。在採用通用電腦占用的成本太高昂的應用中，單晶片取而代之。
較低成本的單晶片編程後可取代很多獨立部件，這種嵌入式系統通常比傳統解決方案更複雜，但這些複雜性多數體現在單晶片自身。嵌入式系統需要的外圍元件很少，多數設計工作集中在軟體，而軟體原型的建立及測試與設計、建立新的不使用嵌入式處理器的電路相比速度更快。
特性[編輯]
區別於可以執行多重任務的通用型電腦，嵌入式系統是為某些特定任務而設計的。有些系統則必須滿足實時性要求，以確保安全性和可用性；另一些系統則對效能要求很低甚至不要求效能，以簡化硬體、降低成本。
嵌入式系統並不總是獨立的裝置。許多嵌入式系統由嵌入較大裝置的小計算部件組成，提供較通用的功能。例如吉他機器人採用嵌入式系統來調弦，但總的來說它的設計目的絕不是調弦而是演奏音樂；車載電腦作為汽車的一個子系統存在，提供導航、控制、車況反饋等功能。
為嵌入式系統編寫的程式稱為韌體，儲存在唯讀記憶體或快閃記憶體晶片內，執行在有限的硬體資源上：小容量記憶體，小鍵盤或螢幕甚至沒有。
使用者介面[編輯]
嵌入式系統使用者介麵包括了從沒有使用者介面而只專註於單一任務、到類似於現代桌面作業系統的複雜圖形化使用者介面的各類介面。
簡單的嵌入式裝置使用按鈕、LED、圖形或數字LCD和簡單的選單系統。
較高端的嵌入式系統使用圖形螢幕，配合輕觸感應或屏邊按鈕使用，可使占用空間最小並提供靈活性：按鈕的含義隨螢幕顯示的內容而改變，而且指向想要的選項進行操作就能實現選擇。手持系統通常採用螢幕加操縱桿按鈕作為觸控裝置。
有些系統通過串行通訊介面（如RS-232、USB、I2C等）或網路連線遠端提供使用者介面。這種方式的優勢在於：擴充功能了系統的效能、削減了螢幕的成本、簡化了BSP，可以在PC上構建豐富的使用者介面。例如執行在嵌入式裝置平臺（如IP攝錄影機或路由器）上的嵌入式網路伺服器，它無需安裝客製軟體，而是在連到裝置的PC端的網路瀏覽器中顯示使用者介面。
嵌入式系統的處理器[編輯]
嵌入式處理器大概可分為兩類。一類是普通微處理器：使用獨立的積體電路記憶體和外設。另一類是單晶片：具有片上外設，降低了功耗、尺寸和成本。嵌入式系統的軟體是為某種應用客製的，而不是像個人電腦那樣的由終端用戶安裝的商品，因此可以使用各種不同的基本CPU架構：既有範紐曼型架構也有不同程度的哈佛結構；既有RISC也有非精簡指令集處理器；字長從4位元到64位元甚至更高，當然最典型的仍然是8/16位元。多數架構由幾家不同的公司生產，使用了大量不同的變數和類型。
嵌入式系統也會使用通用型微處理器，但比單晶片需要更多外圍電路。
嵌入式主機板[編輯]
PC/104和PC/104+是小型、小批次嵌入式強固系統的標準之一，大多基於x86架構；通常比標準PC要小，而比多數簡單的8/16位元嵌入式系統要大；使用MSDOS、Linux、NetBSD，或實時嵌入式作業系統如MicroC/OS-II、QNX、VxWorks。有時這些主機板也會使用非x86處理器。
在某些應用中，小巧、高效並非主要關註點，因而可以使用與x86型PC主機板相容的部件。VIA EPIA系列板卡則可以彌補這個空缺，它相容PC但是高度整合、體積較小，或提供其他對嵌入式工程師很有吸引力的特性。這種方法的好處是低成本商品也可以使用通用的軟體開發工具。用這種方法構建的系統仍然是嵌入式系統，因為它嵌入在較大的裝置中、用於滿足單一用途。例如ATM和電子遊戲機，它們都包含了針對各自應用的代碼。
多數嵌入式主機板都不是圍繞PC設計的，也不使用ISA或PCI匯流排。如果採用SoC處理器，用標準匯流排連線分立元件就不是上策，此外軟硬體開發環境都可能會很不一樣。
一種常用的設計模式是採用小型系統模組——也許只有商務卡片大小，容納高密度的BGA晶片如ARM處理器和外設、用於儲存的外部快閃記憶體、作為記憶體的DRAM。模組廠商通常會提供啟動軟體和作業系統選項，一般包括Linux和一些實時作業系統。這些模組由熟悉專業測試方法的組織大批次生產，配合較小批次的、帶特殊應用外設的客製主機板使用。
ASIC和FPGA解決方案[編輯]
SoC是一種常見的為超大批次嵌入式系統設計的可配置陣列。它在單個晶片內包含了多處理器、乘法器、快取和介面，形成一個完整的系統；通過專用積體電路或現場可編程門陣列來實現。
外圍裝置[編輯]
嵌入式系統通過外設與外部通訊：

串行通訊介面：RS-232、RS-422、RS-485等
同步串行通訊介面：I2C、SPI、ESSI等
USB
多媒體卡：SD卡、CF卡等
網路：乙太網、LonWorks等
現場匯流排：CAN匯流排、LIN匯流排、PROFIBUS等
定時器：PLL、捕獲比較模組和時間處理單元
分立IO：GPIO
模擬-數字/數字-模擬轉換(ADC/DAC)
偵錯介面：JTAG、ISP、ICSP、BDM埠、BITP、DP9埠等

工具[編輯]
同典型的電腦程式員一樣，嵌入式系統設計人員也使用編譯器、連結器和偵錯程式開發嵌入式系統軟體。然而，他們也使用一些大多數程式設計師不熟悉的工具。
軟體工具的來源有如下幾種：

專註於嵌入式系統市場的軟體公司
從GNU軟體開發工具移植（參見交叉平臺編譯）
有些情況下，如果嵌入式處理器與普通個人電腦處理器很近似的話也可以使用個人電腦開發工具

嵌入式系統設計人員也使用一些不為普通電腦程式員所熟悉的軟體工具：

一個常用工具是「電路內部仿真器」（ICE，in-circuit emulator）或者是最新設計中的嵌入式偵錯程式。這個偵錯工具是開發嵌入式程式的基本技巧。它代替微處理器或者嵌入微處理器內部，提供了在系統中快速呼叫和偵錯試驗代碼的便捷工具。一個焊點通常就是一個插入系統的特殊電路，通常使用一臺連結到這些焊點的個人電腦作為偵錯介面。
連結器通常是各種各樣。對於大多數商業編程來說，連結器幾乎是事後才考慮的部分，預設設定也從來不變。與此相反，嵌入式連結器有完整、複雜的命令列語言是很普通的。經常有不同類型的記憶體，分別儲存特殊的代碼和資料。單獨的資料結構能夠放在特殊的位址，這樣軟體能夠很方便地存取對映到記憶體的控制暫存器。嵌入式連結器經常有用於減小代碼大小和執行時間的外部最佳化工具。例如，他們可能移動子程式的位置以使用較小的呼叫和跳轉指令。它們經常帶有管理資料疊加（英語：data overlays）和band switch（英語：band switch）技術的特性，這些技術是在嵌入式軟體經常使用的擴充功能廉價CPU的方法。
另外一個常用的工具是一個在程式中添加代碼和或者CRC的工具程式（經常是自己寫的），使用這個工具嵌入式系統能夠在執行程式之前先進行程式資料檢查。
為數位訊號處理開發軟體的嵌入式程式設計師經常使用MathCad或者Mathematica這樣的數學工具進行數學仿真。
一些較少使用的工具有將資料檔案轉換成代碼的工具，使用這種工具就可以在程式中包含任意類型的資料。
少數一些專案為了特殊的可靠性或者數位訊號處理要求使用同步程式語言（英語：Synchronous programming language）。

一些程式語言為嵌入式系統編程提供了一些特殊支援。

對於C語言，ISO/IEC TR 18037:2005定義了

指定的位址空間
指定的儲存類
基本輸入輸出的硬體尋址



偵錯[編輯]
偵錯通常使用內部電路仿真器或者其他一些能夠在微控制器微碼（microcode）內部產生中斷的偵錯程式。微碼中斷讓偵錯程式能夠在只有CPU工作的硬體中進行操作，基於CPU的偵錯程式能夠從CPU的角度來測試和偵錯電腦的電路。PDP-11開創了這種特性的先河。
開發人員能夠仍然使用斷點、單步執行以及高階語言進行偵錯，在許多的偵錯工具上都有這種能力。另外開發人員在偵錯實時事件順序的時候需要記錄、使用簡單的記錄工具。
首先遇到這種問題的個人電腦和大型電腦程式設計師經常在設計優先級和可行方法的時候感到困惑。指導、代碼審查和非個人風格（egoless（英語：egoless））的編程是值得推薦的。
隨著嵌入式系統變得越來越複雜，更高層次的工具和作業系統逐漸移植到可行的裝置上。例如，蜂窩電話、個人數字助理和其他的消費用電腦需要一些從個人或者這些電子裝置製造商之外的公司購買或者提供的一些重要軟體。在這些系統中，需要如Linux、OSGi或者Java這樣的開放編程環境，這樣第三方軟體提供上才能夠在大規模的市場上銷售軟體。
大多數這樣的開發環境都有一個執行在個人電腦上的參考設計，這種軟體的絕大部分都可以在傳統的個人電腦上開發。然而，從開放環境移植到專用的電子裝置和電子裝置的驅動程式開發通常仍然是傳統的嵌入式系統軟體工程師的工作。在有些情況下，the engineer works for the integrated circuit manufacturer, but there is still such a person somewhere.
作業系統[編輯]




使用Windows XP的網際網路收費電話


嵌入式系統經常沒有作業系統、專用的嵌入式作業系統（經常是實時作業系統）或者指定程式設計師移植到這些新系統。
啟動[編輯]
嵌入式系統帶有啟動代碼，通常它禁止中斷、設定電子裝置參數、測試電腦（RAM、CPU和軟體），然後開始應用程式執行。許多嵌入式系統從短暫的掉電狀態取消復原，經常重起而不進行最近的自檢。在十分之一秒內重起是常見的現象。
許多設計人員發現LED在指示錯誤狀態上非常有用，它們可以幫助進行故障處理。一個常用的機制是在復位的時候點亮電子裝置所有的LED以表明供電和LED正常工作；然後在進行加電自檢時由軟體改變LED的狀態；在此之後，軟體用這些LED指示操作過程中的正常或者故障狀態。這可以讓技術人員、工程師和用戶瞭解系統的狀態。一個有趣的例外是電度表（electric power meters（英語：electric power meters））和其他一些大街上的東西，閃爍的指示燈是為了吸引註意力或者表示損壞狀態。
內部自檢[編輯]
許多嵌入式系統都有一定程度或者一定數量的內部加電自檢，自檢有幾種類型：

電腦檢查：檢查CPU、RAM和程式記憶體。通常一加電就開始這些檢查，在一些安全性非常重要的系統中，通常周期性地在安全時間間隔內進行自檢，或者經過一段時間就進行自檢。
外圍裝置檢查：仿真輸入和讀入資料或者測量輸出資料。有大量的通訊、模擬和控制系統都有這些非常廉價的檢查。
電源檢查：通常測試每個供電電路，也可能檢查電池或者主電源輸入。通常供電部分的負載都很重，並且少有餘量，所以這項檢查很有意義。
通訊檢查：驗證從相連單元接收到的簡單訊息，例如在網際網路上使用ICMP訊息「ping」。
電纜檢查：將線連結到待檢查的電纜上指示針進行檢查。如電話這樣的同步通訊系統經常使用「同步」測試。電纜檢查成本很低，當單元部分有插頭的時候這項檢查尤其重要。
裝備檢查：一個系統在安裝時經常需要進行調整，這項檢查就向安裝人員做出狀態指示。
消耗檢查：檢查系統所消耗的東西、在預量太低時發出警告。最常見的例子是汽車的油量表，最複雜的例子可能是維持化學反應物詳細狀態的自動醫學分析系統。
執行檢查：檢查用戶關心的系統執行狀態。顯然，在系統執行時必須進行這項檢查，這方面的檢查包括飛機上的導航儀器、汽車的速度表和磁碟的指示燈等。
安全檢查：在'安全時限'內進行檢查確保系統仍然可靠。安全時限通常小於能夠產生損害的最小時間。

可靠性體系[編輯]
根據人們需求的不同，可靠性也有不同的定義，有意思的是，可靠性的類型卻相對較少，相似可靠性類型的系統，使用相似類型的內在檢查和取消復原方法：

系統非常不安全或者無法修理。這包括太空系統、水下電纜、導航燈塔、鑽孔系統，非常奇怪的是還包括汽車和大規模生產產品。總的來說，嵌入式系統檢測各個子系統、線上切換到冗餘部分或者工作在「limp模式」提供部分的功能。大規模生產的消費產品如汽車、個人電腦或者印表機也屬於這個類別，這是因為與購買的費用相比維修費用高昂、維修人員又路途遙遠。
系統不能安全地停止執行。這包括飛機導航、反應控制系統、重要的化學工廠安全控制、鐵路訊號、單發動機飛機的發動機，如上所述，但是「limp模式」較難容忍，通常需要操作員選擇備份系統。
系統停機時將會造成大量的金錢損失。這些包括電話交換機、工廠控制、橋樑和電梯控制、資金轉移、市場開發、自動銷售和服務等，這些系統通常有一些運轉/不運轉測試，它們通常帶有線上冗餘或者使用替換系統和人工過程的limp模式。
系統不安全的時候不能操作。同上面的情況類似，系統的執行將會造成大量的金錢損失。醫療裝置、帶有發動機這樣的熱備份的飛行器、化學工廠控制、自動股票交易、遊戲系統等。測試可能是五花八門，但是出錯時能夠做的就是停止整個系統。

嵌入式軟體架構的類型[編輯]
常用的嵌入式軟體架構有幾種不同的基本類型。
控制迴圈[編輯]
在這種設計中，軟體有一個簡單的循環，這個循環調用各個子程式，每個子程式管理硬體或者軟體的某一部分。中斷通常用來設置標記或者更新軟體其他部分能夠讀取的暫存器。
系統使用簡單的API來完成允許和禁止中斷設置。如果處理得當的話，它能夠在巢狀子程式中處理巢狀調用，在最外面的中斷允許巢狀中恢復前面的中斷狀態。這種方法是實作Exokernel的一個最簡單的方法。
通常在循環中有一些子程式使用周期性的即時中斷控制一組軟體定時器，當一個定時器時間到的時候就會執行相應的子程式或者設置相應的標誌。
任何可能發生的硬體事件都應該有軟體定時器的支援，硬體事件大概每萬億次出現一次錯誤，對於現代的硬體來說大概是一年發生一次，對於以百萬計大規模生產的裝置來說，遺漏一個軟體軟體定時器在商業上可能是災難性的。
有時測試軟體運行一組基於軟體的安全定時器，它們周期性地複位硬體中的軟體看門狗。如果軟體錯過一個事件，安全定時器軟體將會捕捉到它。如果安全定時器出錯，看門狗硬體將會複位系統。
可以使用指向每個狀態機函式的指標實作狀態機，函式可以用C++、C或者組合語言等實作。變化的狀態將不同的函式放到指標中，每次循環運行時都會執行函式指標。
許多設計人員建議每個循環讀一次輸入輸出裝置、並且儲存得到的結果，這樣可以保證邏輯過程的在一致的參數上運行。
許多設計人員喜歡將狀態機設計成每個狀態僅僅檢查一到兩項內容，通常是檢查硬體事件和軟體定時器。
設計人員建議多級狀態機應該讓低層狀態機早於高層狀態機運行，這樣高層就能夠根據正確的資訊運行。
如內部燃燒控制這樣的複雜功能通常根據多維表格進行處理，代碼通常進行查表處理而不進行複雜的計算，為了減小表格的大小以及成本軟體可以在條目之間進行差值運算。
在最小的微控制器中，尤其是只有128位元組堆疊的8051中，控制環允許好的連結器使用靜態分配的資料覆蓋本地變數。在這種機制中，離子程式調用樹末端越近的變數得到的記憶體位址越高。當開始一個新的分支的時候，它的變數可以在以前分支遺棄的空間中進行重新分配。
簡單控制迴圈的一個主要缺點是它無法保證響應特定硬體事件的時間。
細心的設計可以很容易地保證中斷不會被長時間禁止，這樣中斷代碼就可以在非常精確的時間運行。
控制環的另外一個主要缺陷是增加新的特性的時候會變得複雜。需要花費很長時間的演算法必須小心地進行分解以使得每次只有一小部分在主循環中運行。
這種系統的優勢是它的簡單性，並且在很小的軟體上，循環執行地很快幾乎沒有人關心它是不可預測的。
它的另外一個優勢是這種系統保證運行軟體的質量，無法將不好的運行結果歸咎為其他的作業系統。
非搶先式任務[編輯]
非搶先式任務系統非常類似於上面的系統，只是這個迴圈是隱藏在API中的。我們定義一系列的任務，每個任務獲得自己的子程式棧；然後，當一個任務空閒的時候，它呼叫一個空閒子程式（通常呼叫「暫停」、「等候」、「交出（yield（英語：yield））」等等）。
帶有類似屬性的架構都帶有一個事件佇列，有一個迴圈根據佇列列表中的一個域確定刪除時間和呼叫子程式。
這種架構的優點和缺點都非常類似於控制環，只是這種方法添加新的軟體更加簡單，只需要簡單地編寫新的任務或者將它添加到佇列直譯器中。
搶先式定時器[編輯]
使用上面的任何一種系統，但是添加一個按照定時器中斷執行子程式的定時器系統，這樣就給系統添加了嶄新的能力，這樣定時器子程式第一次能在一個有保證的時間內執行。
另外，代碼第一次能夠在非預期的時間存取自己的資料結構。定時器子程式必須要象中斷子程式一樣進行處理。
搶先式任務[編輯]
使用上面的非搶先式任務系統，從一個搶先式定時器或者其他中斷執行。
這樣系統就突然變得很不一樣了。任何一個任務的代碼都有可能損害其他任務的資料&emdash;所以它們必須進行切缺的切分。對於共享資料的存取必須使用一些同步策略進行控制，如訊息佇列、訊號燈或者非阻塞同步機制。
經常在這一步開發組織就會購買一套實時作業系統。如果一個組織缺少能夠編寫作業系統的人才或者作業系統將要在幾個產品之上，這可能是一個明智的選擇。這通常要將開發計劃增加六到八周，and forever after programmers can blame delays on it.
微內核與外內核[編輯]
這種方法試圖將系統組織得比單核心更易於配置，而同時提供類似的特點。
微內核是實時作業系統的一個邏輯發展，通常的組織方式是作業系統內核分配記憶體並且將CPU在不同的執行緒之間進行切換。用戶模式的行程實現如檔案系統、用戶介面等主要的功能。
微內核在二十世紀五十年代開始首次嘗試，但是由於電腦在任務間切換以及在任務間交換資料速度非常緩慢，所以人們放棄了微內核而鍾情於MULTICS和UNIX風格的大內核。總體上來說，微內核在工作切換以及任務間通訊速度快的時候是比較成功的，在速度慢的時候是失敗的。
外內核通過使用普通的子程式呼叫獲得的通訊效率很高，硬體以及系統中的軟體都是程式設計師能用也能擴充功能的。資源內核（可能是庫的一部分）分配CPU時間、記憶體以及其他資源。如多工、網路以及檔案系統這樣的大內核特性通過代碼庫來提供。庫可以進行動態的連線、擴充功能或者共享。不同的應用甚至可以使用的不同的庫，但是所有的資源都來自於資源內核。
虛擬機器[編輯]
一些航空電子系統使用幾個商用電腦。這樣更進一步，每個電腦都在模擬它們自身的幾個副本，重要的程式同時在幾個電腦上執行並且進行投票控制（vote）。
模擬環境的優點就是即使一個電腦出現故障，軟體的不同常式能夠遷移到正常工作的軟體分割，表決的票數並不受影響。
通常虛擬軟體執行在電腦的用戶模式下，它捕捉、模擬硬體存取和不在用戶模式下執行的指令。
檢查點計算[編輯]
另外一種常用的機制是兩個電腦計算for a bit，然後將它們的計算結果報到那個點上。如果一個電腦的計算是nut，它就會被關閉。
辦公用（單核心）作業系統[編輯]
這種系統通常在沒有系統經費的嵌入式專案中流行，但是從這篇文章的多個作者來看，這通常是不正確的，它們的邏輯是：

作業系統是經過特殊封裝的重用代碼庫。如果這些代碼有用，設計人員就會節省時間和金錢，否則它們就是無用的。
商務系統的作業系統沒有嵌入式硬體的介面。例如，如果要用Linux寫一個馬達控制器或者電話交換機，絕大部分的實際控制操作都是IOCTL呼叫，同時，正常的讀、寫和查詢介面都是無用的。所以作業系統對於實際的開發妨礙很大。
大多數的嵌入式系統不處理辦公事務，所以辦公作業系統的大部分代碼都被浪費了。例如，絕大多數的嵌入式系統從來都不使用檔案系統或者螢幕，所以檔案系統和圖形化使用者介面部分就是浪費的，這些不用的代碼只會影響系統的可靠性。
辦公用作業系統保護硬體不讓用戶程式操作，這就嚴重地妨礙了嵌入式開發工作。
作業系統必須移植到嵌入式系統上，也就是說，硬體驅動程式無論如何都必須重寫，這也是作業系統最難的部分，所以使用這樣的作業系統幾乎沒有功效。
作業系統真正有用、可移植的特性是小段代碼。例如，一個基本的TCP/IP介面大約有3000行代碼，另外的一個例子是大約同樣大小的簡單檔案系統。如果設計需要這些代碼，能夠使用少於嵌入式系統開發10%的經費就能完成，不需要支付版權費用，只需要簡單地重寫就可以了。如果系統這些代碼有足夠的通用性，嵌入式系統雜誌封面的後面通常有公司銷售沒有版權費的C語言實現代碼。

然而許多工程師並不認同這一點，嵌入式Linux越來越受到人們的歡迎，尤其是在無線路由器和全球定位系統這樣的功能強大的嵌入式系統中。其中有下麵一些原因：

有現成的移植到普通嵌入式晶片的實現代碼。
它們允許重用公開獲得的裝置驅動程式、網頁伺服器、防火牆或者其他代碼。
開發系統能夠從許多特性組合開始，在發布的時候可以剔除不需要的功能，從而節約所消耗的記憶體。
許多工程師認為在用戶模式執行應用程式更為可靠、更容易偵錯，所以開發過程更容易、代碼更易於移植。
許多嵌入式系統沒有控制系統那樣對於實時性的嚴格要求，對於許多應用來說如嵌入式Linux這樣的系統的回應速度就已經足夠了。
要求更快的回應速度，而不是可靠性的特性，通常放到了硬體上。
許多實時作業系統都針對每件產品收取費用，當產品是消費品時，這項費用是巨大的。

Exotic custom作業系統[編輯]
一些系統需要安全、及時、可靠或者高效的特性，上面的架構卻無法達到，構建這樣的系統有一些廣為人知的技巧：

僱傭一個真正的系統程式設計師。他們的花費很小，但是能夠節約數年的偵錯以及相關的收入損失。
RMA（rate monotonic analysis），可以用來評估一組任務能否在特定的硬體系統下執行，在最簡單的形式下，設計人員保證最快完成的任務有最高的優先級，平均來說CPU至少有30%的空閒時間。
和諧的任務能夠高效地最佳化CPU。基本上來說，設計人員保證每件工作都是從heartbeat timer開始工作的。在實時作業系統上很難這樣做，因為它們在等候輸入輸出裝置的時候通常就會切換任務。
剛好有兩個優先級（通常是執行和禁止中斷）的系統不能出現高優先級任務等候低優先級任務釋放訊號燈或者其他資源的優先級倒置問題，
有監視器（monitor）的系統不能出現死結。監視器鎖住一段代碼禁止中斷和其他搶先任務。如果這個監視器只用於一小段快速執行的代碼，系統可能工作正常。如果能夠證明監視器API在所有情況下都能夠完整執行，例如僅僅禁止中斷，那麼就不會產生系統掛起的情況。

這就意味著使用兩個優先級和監視器的系統是安全、可靠的，因為它們沒有死結和優先級倒置的問題。如果監視器能夠執行到結束，那麼就永遠不會掛起。如果使用和諧的任務，可能還會相當高效。然而，RMA無法描述這些系統，優先級最好也不要到處都有，其中包括作業系統和硬體。
外部連結[編輯]

即時操作系統如何工作（英）
嵌入式系統門戶（英）
視窗嵌入開發者中心（英）
嵌入系統與VLIW處理器（英）
嵌入式C++ 首頁（英）
QNX首頁（英）
LynuxWorks嵌入式系統首頁（英）
嵌入式系統討論群、書籍、職缺、與其他林林總總（英）
嵌入式軟體設計（英）
擁有嵌入式系統研發社團的大學列表（英）
嵌入式系統編程（英）
EE概要 - 電機工程與嵌入系統編程（英）
DeviceTools - 給內嵌裝置開發者的工具與矽片（英）
Embedian（英）
內嵌計算工業的紀錄雜誌（英）
內嵌白皮書、下載、公司、新聞、文章（英）
內嵌系統疑難排解 - 一個概述從基版醞釀、製造、到後勤的問題。（英）
Working across Multiple Embedded Platforms跨平臺嵌入式系統。（英）

常見的嵌入式作業系統[編輯]
參見嵌入式作業系統

Android
Firefox OS
iPhone OS
uC/OS II
FreeRTOS
uCLinux
VxWorks
pSOS
Nucleus
PalmOS
Windows CE
Windows XP Embedded
Windows Vista Embedded
嵌入式Linux
ECOS
QNX
Lynx
Symbian
Arm-Linux
RT-Thread

業界常見的開源嵌入式軟硬體系統[編輯]



無作業系統
有作業系統 +弱GUI
有作業系統 + GUI介面


8/16位元處理器


ardunio開發板（軟硬體全套，開源，目前較熱門）
各家單晶片公司提供參考設計(如Ateml等)




Arduino開發板（軟硬體全套，開源，目前較熱門）
Ethernut/nutos專案（軟硬體配套，開源，偏重電腦網路）
UcosII作業系統(軟體，開源但商業版本需要license費)
FreeRTOS作業系統（軟體，商業公司提供的開源版本，也售賣對應的商業版本）
Keil RTX51 Real-Time Kernel（開源，Keil軟體內建需要license）


/


32位元處理器
/


Ethernut/nutos專案（軟硬體配套，開源，偏重電腦網路）
eCos作業系統（軟體，開源，優點是可以客製化RTOS）
uClinux作業系統（軟體，開源，有對應的硬體板uCsimm專案）
FreeRTOS作業系統（軟體，商業公司提供的開源版本，也售賣對應的商業版本）
Keil RTX Real-Time Kernel（開源，Keil軟體內建需要license）
RT-thread作業系統（軟體，開源，國內開發,有簡單GUI）




Android作業系統
Beagle board專案（軟硬體配套，開源）
Raspberry Pi 專案（軟硬體配套，開源）












閱
論
編


單晶片






總論



單板機
特殊功能暫存器（英語：Special function register）








架構



8051
ARM
AVR
PIC
C166（英語：C166）
TriCore（英語：TriCore）
FR-V（英語：FR-V）
MC6800








家族系列





4位元




TLCS-47（英語：Toshiba TLCS）









8位元




AVR
PIC（8-bit）
COP8
MCS-48（英語：Intel MCS-48）
英特爾MCS-51
Z8（英語：Zilog Z8）
eZ80（英語：Zilog eZ80）
飛思卡爾68HC08（英語：HC08）
飛思卡爾68HC11（英語：HC11）
H8
PSoC
東芝TLCS（英語：TLCS-870）
XC800系列（英語：XC800）









16位元




C166
CR16/CR16C
H8S
MSP430
PIC（16位元）
R8C
東芝TLCS-900
XC 2000
XE166









32位元




Am29000
CRX
富士通FR
FR-V
H8SX
MPC5xx
PIC（32位元）
TLCS-900
TriCore
英飛凌XMC4000
英飛凌AURIX
V850
應用級ARM核心列表











介面





編程




電路線上串列燒錄編程（ICSP）
系統線上燒錄編程（英語：In-system programming）（ISP）
程式和除錯介面（PDI）
高電壓串列編程燒錄（HVSP）
高電壓並列編程燒錄（HVPP）
Bootloader
ROM
aWire









除錯




debugWIRE
Joint Test Action Group（JTAG）
In-circuit debugging（ICD）
In-circuit emulator（ICE）
In-target probe（ITP）











模擬器



gpsim








列表



Common microcontrollers
By manufacturer

Freescale
Intel










參見



嵌入式系統
可程式邏輯控制器













權威控制



LCCN: sh87006632
GND: 4396978-1
BNF: cb12410613b（資料）
NDL: 01064710









^ Michael Barr. Embedded Systems Glossary. Neutrino Technical Library. [2007-04-21]. 
^ Heath, Steve. Embedded systems design. EDN series for design engineers 2. Newnes. 2003: 2. ISBN 978-0-7506-5546-0. An embedded system is a microprocessor based system that is built to control a function or a range of functions. 





 
						取自 "https://zh.wikipedia.org/w/index.php?title=嵌入式系統&oldid=44183591"					
分類：嵌入式系統隱藏分類：維基百科需要重寫的條目含有英語的條目包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源維基教科書 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AlemannischالعربيةAzərbaycancaБългарскиCatalàČeštinaDanskDeutschEnglishEspañolEestiفارسیSuomiFrançaisעבריתहिन्दीMagyarBahasa IndonesiaItaliano日本語한국어Lietuviųമലയാളംမြန်မာဘာသာNederlandsNorsk nynorskNorsk bokmålPolskiPortuguêsRomânăРусскийSrpskohrvatski / српскохрватскиSimple EnglishSlovenčinaСрпски / srpskiSvenskaதமிழ்ไทยTürkçeУкраїнськаاردوTiếng Việt 
編輯連結 





 本頁面最後修訂於2017年4月30日 (週日) 05:39。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 






 









艾鍗學院-嵌入式軟韌體教育訓練中心 - 嵌入式即時作業系統FreeRTOS 設計實作




































首頁關於艾鍗最新公告公司簡介師資介紹開發板介紹環境設備交通資訊最新職缺艾鍗新聞獲獎與榮耀課程資訊資料科學系列課程大數據分析與機器學習應用工程師養成班Embedded Linux課程[學程] 嵌入式Linux開發實務Linux系統建置實務嵌入式Linux開發實務 Linux系統程式設計Linux驅動程式 ARM Boot Loader設計Linux Socket網路程式設計Linux核心程式介面Raspberry Pi之Python程式設計硬體控制快速打造物聯網Web整合應用班韌體設計系列課程[學程] MCU韌體開發實戰USB韌體設計單晶片韌體開發班生醫感測器整合設計班ARM Cortex-M0 應用整合設計穿戴式裝置應用開發TI MSP430微控制器開發 嵌入式即時作業系統FreeRTOS 設計實作快速打造物聯網Web整合應用班硬體設計系列課程電路設計實作班感測電路設計與應用Allegro/PCB Layout設計FPGA 數位IC設計實戰 H.264視訊編、解碼器系統開發ARM系列課程快速打造物聯網Web整合應用班ARM Boot Loader設計ARM Cortex-M0 應用整合設計Android系列課程[學程] Android APP 實戰開發Android嵌入式平臺開發訓練班 Android FrameworkAndroid ADK周邊裝置開發班程式語言系列課程暑期C語言程式研習營JavaScript程式設計精修班Python程式設計班Java 物件導向程式 資料結構精修班C語言程式設計iOS程式開發系列課程iPhone程式設計基礎班iPhone程式設計進階班德州儀器課程Android嵌入式平臺開發訓練班 TI MSP430微控制器開發 Web及雲端系列課程快速打造物聯網Web整合應用班web全端開發工程師養成班雲端伺服器建置實務Google App Engine 雲端程式開發實務研發經理人才培育班產品應用系列課程生醫感測器整合設計班NFC無線通訊設計實作班快速打造物聯網Web整合應用班轉職就業班醫療電子產品開發人才養成班IoT平臺開發人才養成班 (政府補助)物聯網韌體工程師人才養成班物聯網平臺開發人才養成班(政府+企業雙重補助)課程說明會平日班_課程說明會假日班_課程說明會數位學習APCS檢定(C語言)數位課程Web全端程式設計數位課程資料結構數位課程Python數位課程MCU數位課程Linux驅動程式數位課程C語言程式設計數位課程更多數位課程補助專班物聯網平臺開發人才養成班更多...企業服務企業內訓服務艾鍗企業VIP會員研發設計服務電腦教室租借服務學員專區學員見證資訊專區廠商求才學員常見問題學員權益與報名須知試聽專區最新成果展學習地圖研討活動前進校園



 

     


 









 













現在位置：艾鍗學院＞韌體設計系列課程＞嵌入式即時作業系統FreeRTOS 設計實作班

 報名好禮優惠

1. 8/30前報名享95折早鳥優惠 2. 分期方案:"可享6期/12期分期0利率"名額有限，別再錯過了！  



 


課程特色

隨著產品功能要求愈來愈複雜，MCU 已從8 位元朝向32 位元的發展，運作時脈也不斷提高，同時MCU 被要求不能只是傳統的單工處理而是要求多工並行作業，使得RTOS 嵌入及時作業系統應運而生。 本課程已目前MCU最多人使用的的FreeRTOS開放式嵌入及時作業系統之使用作深入的介紹。課程以動手實作為主，使學員對FreeRTOS作業系統之程式觀念、應用有更進一步瞭解，同時教授基於TI LM3S3748 的FreeRTOS 移植、硬體元件移植，非常適合於相關軟韌體開發從業人員進修。



 課程目標

本門課程以開源FreeRTOS作為嵌入式即時作業系統談論的重點。首先會介紹如何在TI LM3S3748(ARM Cortex M3)上移植FreeRTOS。接著說明FreeRTOS的任務管理、時間管理、資源分享、記憶體管理、任務通訊、硬體HAL 層等機制及具體使用方法，最終掌握嵌入式系統設計的基本方法。

 我想瞭解更多 


適合對象

1. 電子、電機 、資訊、自動控制等相關科背景。 2. 想從事ARM BSPdevelopment、ARM Bootloader研發相關工作者。 3. FreeRTOS programmer. 4. 須具C 程式設計基礎。


課程大綱

1. ARM Cortex-M3 微處理器架構簡介 2. Stellaris® LM3S3748 EVB介紹 3. 開發環境TI Code Composer Studio 安裝 4. FreeRTOS架構介紹 5. 基於TI LM3S748 的FreeRTOS移植 6. Task產生& 範例演練 7. Task優先權排程管理&範例演練 8. 佇列管理&範例演練 9. 中斷管理&範例演練 10. Task通訊&範例演練 11. 同步處理機制-Semaphore, mutex&範例演練 12. FreeRTOS硬體驅動程式的移植


職涯方向

嵌入式設計師 │ 韌體工程師 │ 資訊家電設計師 │ 網路應用程式設計


學生須知

報名須知 | 繳費方式 | 退費方法


上課花絮

▪ 從無到有的培訓過程，紮實前瞻且完善。


延伸學習


嵌入式Linux開發學程

MCU韌體開發實戰學程
ARM Bootloader







			
				熱門活動			




[政府補助]物聯網開發工程師養成班
[政府補助]嵌入式Linux開發實務
[小班教學]FPGA數位IC設計實戰
[數位課程]輕鬆學習不受限
[政府補助]MCU+韌體實戰開發
[熱門推薦]大數據應用工程師班
[職前訓練]工程師培訓後就業計畫
[暑假限定]高中生C語言程式研習營
[政府補助]物聯網整合應用實作班
[熱門推薦]Web全端工程師班
[高中限定]APCS程式認證培訓班
[熱門課程]感測電路設計與應用








			
				最新開課資訊			








已閱讀個資保護聲明
嵌入式即時作業系統FreeRTOS設計實作班
  


 

 

 

 







			
				熱門推薦			




 
8/15 ↑ 物聯網韌體工程師養成班 【待業限定，政府補助，名額倒數中】


8/12 ↑ 嵌入式Linux開發實務【本班符合政府補助】報名立即送Raspberry Pi 3開發套件組


8/12↑MCU+韌體設計實戰班【政府補助】報名送艾鍗獨家研發ARM實驗板+MCU套件包+電子模組

 
10/29↑FPGA 數位IC設計實戰   【百萬年薪的第一步】報名送BeMicro CV kit

 
8/16↑暑期C語言程式研習營  【7/31前報名，享早鳥優惠！！】好評加開中，額滿為止

 
↑物聯網整合應用實作班報名送最新Raspberry Pi 3開發套件包補助今年最後一梯次，剩8位



 








 

訂閱艾鍗電子報掌握最新課程優惠

 
Please enable JavaScript &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;br /&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;
 
 
 














已閱讀個資保護聲明
嵌入式即時作業系統FreeRTOS設計實作班
  


 

 

 

 





最新消息

 最新公告
 近期研討
 就業人才培訓計畫
 研發實習生計畫








關於艾鍗

 公司簡介
 師資簡介
 環境設備
 會員廠商
 活動相簿
 交通資訊








服務項目

 教育訓練
 職前訓練
 企業內訓
 數位學習
 教室租借








社群資源

 艾鍗 Facebook
 艾鍗 YouTube 頻道
 艾鍗技術討論區
 教學實錄分享
　　　　　　










學員專區

 個資保護聲明
 學習地圖
 學員見證
 課程Q&A
 學員權益
 加入會員













聯絡我們




 








 




首頁關於艾鍗最新公告公司簡介師資介紹開發板介紹環境設備交通資訊最新職缺艾鍗新聞獲獎與榮耀課程資訊資料科學系列課程大數據分析與機器學習應用工程師養成班Embedded Linux課程[學程] 嵌入式Linux開發實務Linux系統建置實務嵌入式Linux開發實務 Linux系統程式設計Linux驅動程式 ARM Boot Loader設計Linux Socket網路程式設計Linux核心程式介面Raspberry Pi之Python程式設計硬體控制快速打造物聯網Web整合應用班韌體設計系列課程[學程] MCU韌體開發實戰USB韌體設計單晶片韌體開發班生醫感測器整合設計班ARM Cortex-M0 應用整合設計穿戴式裝置應用開發TI MSP430微控制器開發 嵌入式即時作業系統FreeRTOS 設計實作快速打造物聯網Web整合應用班硬體設計系列課程電路設計實作班感測電路設計與應用Allegro/PCB Layout設計FPGA 數位IC設計實戰 H.264視訊編、解碼器系統開發ARM系列課程快速打造物聯網Web整合應用班ARM Boot Loader設計ARM Cortex-M0 應用整合設計Android系列課程[學程] Android APP 實戰開發Android嵌入式平臺開發訓練班 Android FrameworkAndroid ADK周邊裝置開發班程式語言系列課程暑期C語言程式研習營JavaScript程式設計精修班Python程式設計班Java 物件導向程式 資料結構精修班C語言程式設計iOS程式開發系列課程iPhone程式設計基礎班iPhone程式設計進階班德州儀器課程Android嵌入式平臺開發訓練班 TI MSP430微控制器開發 Web及雲端系列課程快速打造物聯網Web整合應用班web全端開發工程師養成班雲端伺服器建置實務Google App Engine 雲端程式開發實務研發經理人才培育班產品應用系列課程生醫感測器整合設計班NFC無線通訊設計實作班快速打造物聯網Web整合應用班轉職就業班醫療電子產品開發人才養成班IoT平臺開發人才養成班 (政府補助)物聯網韌體工程師人才養成班物聯網平臺開發人才養成班(政府+企業雙重補助)課程說明會平日班_課程說明會假日班_課程說明會數位學習APCS檢定(C語言)數位課程Web全端程式設計數位課程資料結構數位課程Python數位課程MCU數位課程Linux驅動程式數位課程C語言程式設計數位課程更多數位課程補助專班物聯網平臺開發人才養成班更多...企業服務企業內訓服務艾鍗企業VIP會員研發設計服務電腦教室租借服務學員專區學員見證資訊專區廠商求才學員常見問題學員權益與報名須知試聽專區最新成果展學習地圖研討活動前進校園



Raspberry Pi嵌入式系統入門與應用實作(電子書) - Books on Google Play                                            Cookies help us deliver our services. By using our services, you agree to our use of cookiesLearn moreGot itMy AccountSearchMapsYouTubePlayNewsGmailDriveCalendarGoogle+TranslatePhotosMoreShoppingWalletFinanceDocsBooksBloggerContactsHangoutsKeepEven more from GoogleSign inHidden fieldsSearch             Apps       My apps     Shop      Games     Family     Editors' Choice            Movies & TV       My movies & TV     Shop      TV     Family     Studios     Networks            Music       My music     Shop            Books       My books     Shop      Comics     Textbooks     Children's Books            Newsstand       My newsstand     Shop            Devices       Shop            Entertainment          Account     Redeem     Buy gift card     My wishlist     My Play activity     Parent Guide                  Genres              Arts & Entertainment  Biographies & Memoirs  Books in Spanish  Business & Investing  Computers & Technology  Cooking, Food & Wine  Education  Engineering  Fiction & Literature  Health, Mind & Body  History  Home & Garden  Law  Medicine  Mystery & Thrillers  Parenting & Families  Politics & Current Events  Religion & Spirituality  Romance  Science & Math  Science Fiction & Fantasy  Sports  Textbooks  Travel  Young Adult       Comics    General  Crime & Mystery  Fantasy  Horror  Literary  Manga  Media Tie-In  Science Fiction  Superheroes       Children's Books    Ages 5 & Under  Ages 6-8  Ages 9-12  Action & Adventure  Animals & Nature  Comics  Early Learning  Education  Fiction  Growing Up  History & Biographies  Mysteries  Science Fiction & Fantasy  Sports                        Home            Top Charts            New Arrivals                                       Settings      Android Device Manager                        Raspberry Pi嵌入式系統入門與應用實作(電子書)          張元翔    August 5, 2016   碁峰資訊股份有限公司                       Buy as Gift            Add to Wishlist   Adding...   Added to Wishlist   Remove   Removing...      Item added to wishlist.     Item removed from wishlist.      Free sample   2            $15.94 $9.99 Buy               最正規的學習架構，建立相關領域的知識並動手實作，進而發揮創意，自行開發專屬的電子產品。嵌入式系統在科學與日常生活中的應用非常廣泛，而目前最熱門的嵌入式系統，首推Arduino與Raspberry Pi。Arduino提供的學習套件較多，程式簡單易懂，因此非資訊專業的創客玩家很容易就可以上手；而Raspberry Pi則是完整的微型電腦，配備作業系統，且使用正規的程式語言，因此相當適合資訊相關專業人才學習與入門。以現在當紅的物聯網來說，Raspberry Pi嵌入式系統就可以扮演關鍵的角色，在建構物聯網應用之前，可以先瞭解嵌入式系統的軟硬體原理與設計方法。書中以主題方式介紹相關概念，並使用Raspberry Pi作為實驗平臺，實際動手進行嵌入式系統實作，內容涵蓋：硬體(Hardware)、軟體(Software)、網路(Network)、多媒體(Multimedia)等課題，從做中學，快速入門。本書適用對象：對於Raspberry Pi嵌入式系統應用或物聯網應用具有興趣的人士，包含：資訊相關領域 (資訊、電機、電子等科系) 的大專生、專業研發人員或創客玩家等。適用Raspberry Pi 3 & 2#碁峰資訊 GOTOP Information Inc.     Read more                 My review                                  Review from                                            Reviews      Write a Review      Edit Review          Review deleted         Additional information     Features Original pages   Best for Web, Tablet   Pages  416    Language Chinese   ISBN 9789864761005   Genres   Computers & Technology  Programming  計算機 / 編程 / 綜合     Read more    Content protection This content is DRM protected.   Report  Flag as inappropriate          Reading information     Smartphones and Tablets   Install the  Google Play Books app  for  Android  and  iPad/iPhone . It syncs automatically with your account and allows you to read online or offline wherever you are.   Laptops and Computers   You can read books purchased on Google Play using your computer's web browser.     eReaders and other devices   To read on e-ink devices like the Sony eReader or Barnes & Noble Nook, you'll need to download a file and transfer it to your device. Please follow the detailed  Help center  instructions to transfer the files to supported eReaders.           Similar   See more                   Pre-ordered           Raspberry Pi實例應用集(電子書)    河野悅昌 July 3, 2015    2  $15.94 $9.99        一邊製作電子產品，一邊學習電氣基礎知識吧！本書集結了各種以「Rasperry Pi」實作的電子產品範例。Raspberry Pi是一種只有信用卡大小，價格低廉（約1500塊台幣），功能完整的微型電腦，在硬體開發人員與軟體開發人員之間擁有極高的人氣。除了可當成個人電腦使用，也能應用於小型系統裡，而且可以跟許多擴充版、感測晶片結合，自作出許多充滿創意的電子產品。本書介紹了電子告示牌、遙控鏡頭這些既實用又能引起讀者興趣的電子作業，各位讀者可在製作過程中逐漸學會電氣／電子作業的基礎知識。作者隸屬於日本Android之會秋葉原分部，除了自行舉辦講座與活動，也銷售自行開發的Raspberry Pi擴充套件，是一位致力於硬體DIY的工程師。他活用了過去舉辦初學者講座的經驗撰寫本書，希望能寫出讓電子作業的初學者也能輕易讀懂的內容。本書特色：在不接上鍵盤、滑鼠與螢幕的情況之下使用Raspberry Pi#碁峰資訊 GOTOP Information Inc.             2  $15.94 $9.99                      Pre-ordered           Python x Arduino物聯網整合開發實戰(電子書)    Pratik Desai June 21, 2016    2  $16.27 $9.99        使用Python搭配開發板進入物聯網未來是物聯網的時代。需要實體元件能與網路層級的應用程式進行通訊。Arduino結合Python，就能用來開發物聯網專題，以及搭配圖形化使用者介面與連結網際網路的應用程式。從使用Arduino來設計硬體專題開始，本書會告訴您用來開發複雜雲端應用所有需要的東西。您會以循序漸進的複雜度來深入探索不同領域的主題，最後做出可應用於真實世界中的專題。您很快就能學會如何開發使用者介面、圖表、遠端存取、訊息通訊協定與雲端連結。每個成功的主題都會搭配多個範例，能幫您開發出劃時代的硬體應用喔！本書為誰而寫？ 如果您是學生、業餘玩家、開發者或是設計師，在程式設計與硬體原型開發的經驗比較不足或是完全零基礎的話，本書就是為您而寫。如果您是軟體開發者或硬體設計師，想要製作互連裝置的各種應用，本書可以幫您入門。本書可以幫您：．使用Arduino來設計並開發您專屬的硬體原型．使用Firmata通訊協定和Python讓Arduino能與電腦互動．藉由開發各種熱門感測器的應用上獲得動手做的經驗．開發圖形化使用者介面來控制您的元件與圖表，實現感測器資料視覺化．從網際網路來存取您的Arduino原型．實作用於Arduino通訊的傳訊通訊協定．將您的硬體專題與雲端服務結合．透過本書專題來製作進階物聯網應用<HR>名人推薦</B>「本書特點在於使用Python開發各類型的應用程式來補足Arduino在介面資料視覺化與網路通訊上的不足，更涵蓋如何整合各類型雲端服務的進階網路專題，包含好用的Xively與強大的Amazon AWS IoT平臺。不僅適用於個人玩家，也推薦給學校相關科系的教師。期待您與我們分享更多有趣的妙點子！」 -- CAVEDU 教育團隊  曾吉弘#碁峰資訊 GOTOP Information Inc.                  2  $16.27 $9.99                      Pre-ordered           Microsoft Azure教戰手札(第三版)–系統建置與管理篇(電子書)    小朱/黃建笙(Jason方丈) September 14, 2015    2  $18.26 $9.99       台灣微軟中小企業解決方案暨經銷事業群 雲端事業發展副總經理 周旺暾 / 台灣微軟營運暨行銷事業群 資深協理 李玉秀 專文推薦隨書加碼附贈Azure雲端互動練習系統(相關說明請見書內系統認證卡)國內第一本詳盡說明Microsoft Azure雲端平臺系統管理與建置的中文書。第一本以系統管理人員 (IT Pro) 角度編寫的Microsoft Azure中文入門書。範圍涵蓋至2015年Build 2015與Microsoft Ignite 2015大會中所揭示的各式服務以及更新功能。<可用於準備微軟MCP認證考試科目70-533:實作Microsoft Azure基礎建設解決方案，以及70-534:架構Microsoft Azure解決方案。你知道Microsoft Azure有大量且豐富的資源可供使用嗎？你知道你能運用Azure的虛擬機器以及虛擬網路，在雲上打造自己的IT基礎建設嗎？你知道如何運用SQL Database降低資料庫建置的龐大成本嗎？你知道Azure的Active Directory服務能讓你輕鬆達成使用者單一簽入與裝置管理能力嗎？這些都是本書的重點所在。本書囊括了2015年最新的Microsoft Azure新功能與服務更新，包含Azure App Service、SQL Database Elastic Pooling、Azure FilesVM Multi-NIC Configuration、Load Balancer/Internal Load Balancer等，並介紹到最新的Resource Group以及Azure Resource Manager的概念，為未來Azure的管理模式的改變作好準備。#碁峰資訊 GOTOP Information Inc.                  2  $18.26 $9.99                      Pre-ordered           Raspberry Pi最佳入門與實戰應用(第二版) (適用Raspberry Pi 2/Raspberry Pi第一代)(電子書)    柯博文 December 24, 2015    2  $14.94 $9.99       達人指引、實戰入門！多元演練、全面體驗！從入門邁向專業，細述Raspberry Pi的來龍去脈，以及那股強大的應用魅力！新鮮的Raspberry Pi(樹莓派)吸引全球廣大的Maker搶鮮品嚐，曾被美國《時代雜誌》評為十大科技產品，號稱為窮人的電腦，約只有一張信用卡大小，是低價硬體及開源軟體的結合。在國外，成為不少學校的電腦科學教育工具、低收入者的電腦、無人機的駕駛、海洋探索的設備…，甚至是Amazon自動送貨飛機的核心。透過多台Raspberry Pi的應用，可預期未來在雲端計算和分散式運算的強大發展，而其低價體積小的優勢，更為物聯網的發展提供了實務解決之道。本書從入門切入，簡介Raspberry Pi第一代、Raspberry Pi 2，與不到200元的最新Raspberry Pi Zero等相關開發板資訊，以及細述作業系統、開機SD卡的準備、相關設定、圖形介面、系統管理、網路管理、檔案壓縮、檔案結構、架設網站伺服器，以及程式開發。最後進入實戰的應用，如透過網路控制GPIO(物聯網智慧城市運用基礎)、架設網路檔案伺服器、網路攝影機、網路收音機、可選台網路收音機、mp3播放器、UPnp和DLNA、iOS專用Airplay播放器、照相機和定時拍照、Raspberry DropBox，以及與當紅Arduino的結合等。附錄加碼介紹Raspberry Pi與相關程式語言，以及Raspberry Pi的圖形化開發工具wyliodrin，對於不會寫程式的初學者來說，是一個非常好用的開發工具。wyliodrin還可以遠端透過網路更新樹莓派上面的程式並且執行，非常符合現在熱門的物聯網應用話題。最後，Raspberry Pi與Windows 10物聯網作業系統(Windows 10 IoT Core)的內容更值得您細探究竟！#碁峰資訊 GOTOP Information Inc.             2  $14.94 $9.99                      Pre-ordered           Raspberry Pi超炫專案與完全實戰(深入Raspberry Pi的全面開發經典) (電子書)    柯博文 January 28, 2015    2  $17.26 $9.99       [嚴選經典]美國矽谷創業家/全球數十家科技大廠與業界指定講師之Raspberry Pi技術鉅作達人等級、觸手可及！實力制霸、完全進化！兩年半時間，全球銷售近350萬台的硬魅力！自造神器Raspberry Pi能做的，絕對遠比您想像的還多！2012年誕生的Raspberry Pi(樹莓派)，絕對有資格在電腦發展史寫下一頁輝煌記錄，可說是當今最令人驚豔的低成本小型電腦。以手機、平板電腦和遊戲機來說，很難開發與設計相關的底層系統和應用軟體，且硬體是不公開的，但Raspberry Pi卻完全相反。從看到它的綠色電路板那一刻起，它便邀請你一同進入萬用的電腦互動世界裡。Maker必備、經典絕對！晉升Raspberry Pi自造達人不能錯過的一本實戰指南！透過此書，可學習到：Raspberry Pi在網站伺服器系統、USB外接硬碟檔案伺服器、家庭雲端儲存系統與私有雲、LCD點陣式液晶氣象預報機、物聯網溫度監視器、照相機與攝影機、安全監視系統、擴增實境影像辨識系統、智慧電視、P2P 檔案下載機、遙控電器開關、迷你無線路由器／口袋型無線基地台、數位播放機、螢幕與數位相框、超級電腦…等應用，廣泛涉及當紅的物聯網、無人載具、Big Data、機器人、影像辨識與智慧家庭等主題。現在，就請翻開此書，開始燃燒Raspberry Pi的自造達人世代魂！[聯合推薦]◎國立虎尾科技大學機械與機電工程研究所   毛彥傑 助理教授◎崎鋒科技股份有限公司  高瑞穎 總經理◎龍華科技大學多媒體與遊戲發展科學系  梁志雄 助理教授◎前鴻海科技資深處長/國立臺北科技大學助理教授  現為自由工作者與專業顧問及技術培訓專家  梁文耀 先生◎國立交通大學資訊工程系   曹孝櫟 教授◎前資策會創研所產業發展中心自由軟體組副組長  資深自由軟體/開放原始碼技術推廣者  黃昭龍 先生◎拓墣產業研究所新事業運營中心/多璞顧問股份有限公司  藍麗霞 總監/總經理         (以上推薦者係依姓氏筆劃排列)#碁峰資訊 GOTOP Information Inc.                  2  $17.26 $9.99                      Pre-ordered           Java嵌入式程式設計-Raspberry Pi    張益裕 January 1, 2015    2  $1.92       2015/04/30改版，支援Raspberry Pi 2 Model B與Pi4J 1.0。 Java嵌入式程式設計入門，介紹最新的Java SE Embedded 8應用程式開發技術，在Raspberry Pi設計各種嵌入式應用程式。從基礎的LED、開關、伺服馬達與超音波感應器控制與開發，最後使用停車場模擬系統，整合基礎的應用為一個可以實際運作的嵌入式系統。在CodeData連載的Java Embedded系列專欄，改編並重新排版為電子書。所有範例程式與高解析度插圖、線路圖，都公開在GitHub。                  2  $1.92                      Pre-ordered           Arduino互動設計專題與實戰(深入Arduino的全方位指南) (電子書)    柯博文 August 12, 2014    2  $18.26 $9.99       逐一深入學習Arduino核心運用的開發指南！美國矽谷創業家、全球數十家科技大廠與業界指定講師之Arduino技術寶典！從入門邁向專業，細述Arduino的來龍去脈，以及那股強大的自造威力！Arduino已成為學習微控制器的首選主題，而本書是全方位的Arduino設計指引，廣泛且深入核心平臺開發，全面解說Arduino所有函數與API(應用程式介面)，並介紹市面常見的數十種感應器，輔以實例設計，最後與智慧型手機結合，進行應用，並導入雲端系統與物聯網的運用基礎；另外，書中亦特別介紹可免費學習Arduino的線上模擬器運用。書中應用實例多元且豐富，內容涵蓋：自製Arduino、霹靂燈、水銀開關讀取(物體傾斜偵測)、光敏電阻(自製小夜燈)、電晶體(控制玩具車馬達)、DC馬達、Servo步進馬達(控制機器手臂的關鍵)、繼電器(自製智慧家庭自動控制設備)、七段式數字號碼LED(顯示數字)、數字鍵盤、8x8  LED(自製LED廣告招牌和字幕機)、藍色背光液晶模塊LCD(顯示圖片和文字)、三軸重力加速度/傾斜角度模組。濕度(室內保溼監測)、溫度(溫度記錄器)、一氧化碳(室內一氧化碳警報器)、超聲波距離(倒車警示器)、火焰(自製火災警報器)、一氧化碳/瓦斯/煙霧(家中安全警報器)、紅外線動作(小偷警示器)、土壤濕度(盆栽水份顯示器)、聲音(噪音檢測器)、顏色(自製家中油漆顏色檢測器)、酒精(預防酒駕利器)、三軸磁場(指南針)，以及溫度計和濕度計二合一等傳感器(感測器)。遙控器、FM收音機、遙控器RFID讀卡機(悠遊卡讀取器核心)、SD讀卡器(資料儲存和讀取)、與個人電腦傳遞資料、MIDI(電子琴的溝通)、搖桿(自製遊樂器搖桿)、網路Ethernet(自製伺服器、取得網路資料)、ZigBee/XBee(一對多近距離通訊)、藍牙手機/電腦的無線通訊、無線電頻率通訊、IC實驗、音樂播放，以及Arduino和Android、iOS連接…等。#碁峰資訊 GOTOP Information Inc.                  2  $18.26 $9.99                      Pre-ordered           用LinkIt ONE玩出物聯網大未來(電子書)    鄧文淵 總監製/文淵閣工作室 編著 November 30, 2015    2  $12.62 $9.99       迎接趨勢、抓住商機，就從物聯網開始！聯發科與Seeed Studio針對物聯網與穿戴式裝置開發了LinkIt ONE，腳位配置比照Arduino UNO板，因此許多擴充板都可以直接使用，而開發使用Arduino IDE，讓原本熟悉Arduino者都能無縫接軌。更重要的是LinkIt ONE具備了連網規格，包括GPRS(行動上網)、藍芽、GPS(衛星定位)、Wi-Fi，以及GSM(電話及簡訊)與SD記憶卡。透過免費的雲端系統更可以輕鬆使用網頁或行動裝置控制實體設備。本書以LinkIt ONE為工具，全面涵蓋入門到物聯網專題實作。 拼創新、玩科技，訓練邏輯、結合專題，實踐軟硬整合的互動設計！■ 基礎級：從基礎玩起，由Arduino進入LinkIt ONE，學會開發環境的建置。接著，使用LinkIt ONE的Grove擴充套件，電路連接簡易，同時配合麵包板實作，逐步瞭解電路原理。■ 入門級：透由元件、感測器產生互動，如觸控、光線、聲音、LCD、LED、灰塵、UV紫外線、溫濕度、大氣壓力的感測運用，以及三軸加速器、蜂鳴器、繼電器、伺服馬達等模組應用。■ 進階級：進入通訊與儲存的應用，包括GSM、Wi-Fi、藍牙、GPS、SD卡、Flash記憶體，以及雲端服務。■ 專業級：體驗mp3播放器、遠端監控、藍牙遙控自走車…等專案，玩出LinkIt ONE強大的專題應用魅力！#碁峰資訊 GOTOP Information Inc.                  2  $12.62 $9.99                      Pre-ordered           Raspberry Pi 機器人自造專案(電子書)    Richard Grimmett September 19, 2014    2  $14.94 $9.99       從零開始，花小錢打造屬於您自己的機器人機器人的發展神速，現在，只要您有興趣，就能輕鬆取得製作機器人所需的硬體元件以及相關軟體，打造屬於自己的機器人。本書會從啟用Raspberry  Pi這塊板子開始。它可以解譯您的指令並讓機器人執行各種動作。跟著本書的每個單元進行實作，假以時日，您就能擁有一臺可說、可聽並可用多種令人讚嘆不已的方式來移動的機器人了。跟著本書的步驟導引，您就能應用Raspberry  Pi實作出各項有趣的功能，包括語音辨識、仿人語音模擬、圖像辨識、馬達控制、GPS定位以及無線控制。您還可以學到如何整合這些功能來製作專屬的機器人專案。．開箱、供電並用Ubuntu  Linux來設定您的Raspberry Pi．在您的專題中應用Open  CV來辨識顏色、樣式與動作．加入並控制語音軟體讓您的機器人可以說話．為您的機器人加上GPS定位功能．使用無線USB鍵盤來遙控您的機器人．透過各種外部硬體讓您的機器人動起來．製作可移動、下水甚至飛行的機器人．與您的機器人擺脫纜線的束縛 #碁峰資訊 GOTOP Information Inc.                  2  $14.94 $9.99                      Pre-ordered           用mBlock玩Arduino - Starting from Scratch(電子書)    林信良 September 24, 2015    2  $12.62 $9.99       ‧使用基於Scratch 2.0的mBlock‧採用最普及的Arduino Uno控制板‧以視覺化語言突顯程式設計概念‧可上傳程式至控制板的Arduino mode‧透過Arduino mode認識Arduino IDE‧作者離開學校十餘年後，透過Arduino得以興致盎然地重新探索電子電路相關知識，將感動與心得化為書籍分享。‧採用基於Scratch 2.0的mBlock，圖像式建構程式的方式，對程式設計入門者極為友善。‧藉由視覺化程式語言可用元素不多、容易佔據設計空間等問題，來突顯出程式設計的重要設計觀念。‧採用Arduino Uno銜接電子電路元件與模組，有利讀者未來進一步銜接Arduino進階書籍。‧Arduino mode可直接上傳程式至Arduino控制板，亦可將程式匯入Arduino IDE做適當編輯、修改。#碁峰資訊 GOTOP Information Inc.             2  $12.62 $9.99              Show More      ©2017 Google  Site Terms of Service  Privacy  Developers  Artists  About Google   By purchasing this item, you are transacting with Google Payments and agreeing to the Google Payments  Terms of Service  and  Privacy Notice .        


Wiki - 嵌入式作業系統設計與實作 (2014 Spring) :: 期末專題清單





















成大資工 Wiki


所有頁面
分類
隨機頁面
最近活動
上傳檔案

本頁面

頁面原始檔
可列印版本
刪除本頁




登入 / 註冊帳號
登出 









搜尋
前往


LaTeXConTeXtTexinforeSTMarkdownCommonMarkPlain textMediaWikiOrg-modeICMLTextileAsciiDocMan pageDocBookDZSlidesSlidyS5EPUBODTDOCXRTF 













viewedithistorydiscuss

嵌入式作業系統設計與實作 (2014 Spring) :: 期末專題清單




最新資訊

期末專題訂於 2014 年 6 月 21 日 (週六)
地點：成功大學電機系一樓 繁城講堂 (地圖)

時間表

每組 25 分鐘 (含 Q&A)
關於演講人黃耀文執行長的商周報導








時段
議程




10:00-11:30
專題演講: 創業救國 / 阿碼科技 黃耀文 執行長


13:10-14:25
分組報告(x3)


14:25-14:30
break


14:30-15:55
分組報告(x3)


15:55-16:10
break


16:10-17:25
分組報告(x3)


17:35-
講評



期末專題目標

「人在作，Google 在看」，我們會邀請同學未來可能的雇主、同事們來評分
去年的 期末專題 水準
所有開發過程都公開，最終成果用 open source 形式釋出
從底層到上層應用，一手通包，體驗打造具體而微系統的過程

分組表

第1組 (2G手機) [1]
第2組 (電吉他調音器) [4]
第3組 (robot arm)
第4組 (F9 microkernel 的 driver model)
第5組 (高精度繪圖機) [2]
第6組 (防盜攝影機) [3]
第7組 (空氣烏克麗麗) [6]
第8組 (Firefox OS) [5]
第9組 (自動翻書機) [7]
第10組 (uGFX) [8]
第11組 (基於 OpenRISC 之多核心軟硬體整合專案開發) [9]

(方括號數字為報告順序)
致謝

感謝 STMicroelectronics 捐贈 STM32F429i-Discovery 硬體開發板
感謝 鴻海科技集團 捐贈 BananaPi 硬體開發板
感謝 台達電子 提供資金協助
感謝 社會各界熱心人士 捐贈 Raspberry Pi, Beaglebone, STM32F429i-Discovery, APC, Cubieboard

聯絡人

講師: 黃敬群 jserv.tw@gmail.com
助教: 陳秉文 nicholas800208@gmail.com
embedded2014




Please enable JavaScript to view the comments powered by Disqus.




本站所有內容，除另有標註外，採用創用 CC 姓名標示-相同方式分享 3.0 台灣 授權條款授權
	

說明
Powered by gitit
Customized by CrBoy














