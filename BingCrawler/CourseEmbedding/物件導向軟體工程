


軟體工程(Software Engineering;SE)
















軟體工程(Software Engineering;SE)
本網頁以打造無障礙閱讀為目標，可以用任何瀏覽器來觀看本網頁


      軟體工程這門課程在國內教育上，資工與資科等系所會列為必修而資管僅列為選修而已，資管會列為必修的是系統分析與設計，但系統分析與設計只是整個軟體工程的一小部分而已，所以資管出身的資訊人是一定要瞭解的啦....。
    


簡介

軟體工程

軟體開發架構的演進

系統分析與設計


結構化技術

物件導向技術


統一塑模語言(Unified Modeling Language,UML)

樣式理論(Pattern Theory)

資料庫正規化

CMMI(Capability Maturity Mode Integrated)

參考書目

網路資源



      簡介

      1968年秋季，NATO（北約）的科技委員會召集了近50名一流的編程人員、計算機科學家和工業界巨頭，討論和制定擺脫“軟體危機”的對策。在那次會議上第一次提出了軟體工程（softwareengineering）這個概念。 
      大多數軟體開發項目的失敗，並不是由於軟體開發技術方面的原因。它們的失敗是由於不適當的管理造成的。遺憾的是，盡管人們對軟體專案管理重要性的認識有所提高，但在軟體管理方面的進步遠比在設計方法學和實現方法學上的進步小，至今還提不出一套管理軟體開發的通用指導原則。
「新技術一直冒出來，學都學不完了，那裡有空搞軟體工程」、「計畫趕著進行，做都做不完了，那裡有空搞軟體工程」...... 就在這一個又一個的藉口中，原本可以幫助軟體產業進步的軟體工程，竟然變成他們口中阻礙軟體產業進步的絆腳石似的，怎不令人對他們的無知感到心寒。

      寫程式的難度愈來愈低，因為程式語言越來越高階，API 越來越多，開發工具越來越好用，寫程式的門檻自然就大大地降低了。想要開發出有價值的中大型系統，軟體工程就很重要了，以蓋房子來說，你可以隨便找一兩個工人用磚或木材來蓋一棟矮房，但是如果想蓋一百多層樓的101大樓，你非得有良好的工程規劃不可，軟體不也是如此？程式設計師名片上的頭銜都是工程師，雖然和建築工程師、機械工程師... 一樣都被稱為工程師，但比較起來，軟體產業的工程師卻是最不工程導向的 。



      軟體工程

      軟體工程包括兩方面內容：軟體開發技術和軟體專案管理。 
    

軟體開發技術包括軟體開發方法學、軟體工具和軟體工程環境。 
軟體專案管理包括軟體度量、項目估算、進度控制、人員組織、配置管理、項目計畫等。 

      軟體工程是為瞭解決軟體危機而誕生，近來最熱門的技術有
      
UML
Design Patterns
re-engineering
XP 



        軟體架構
      
      已成為軟工熱門的研究之一。
開發流程由強調瀑布式流程(waterfall)轉為強調反覆式流程(iterative)。 反覆式流程的主要精神是分析一些，設計一些，實作一些，執行一些，也就是將整個開發流程切割成數個週期(iteration)，每個週期都是一個叫小型的直線式流程，並且強調週期結束時都有可以執行的結果，而每個週期都是以前一週期的結果為基礎，在新增需求的方式進行，直到所有的軟體需求都滿足為止。因此反覆式流程也是一種漸增式流程(降低風險)。以結果來看，瀑布式流程只會交付一次產品，反覆式流程會交付多次產品。


      SA -> SD -> coding -> test -> installation -> maintance 
    
process

Quality Assurance
Configuration Management
Project Management
CMM 

software system


      bussiness application
      
TPS,DSS,MIS,ES


      web application
      
Web System
Web Service 
E-service : marketing+MIS

real-time
safety-critical

safety critical system

      常用的formal工具 : Petri Nets
    

Petri Nets 的 reachability graph 常因可能的狀況太多而不可能分析，所以有許多論文會討論如何簡化它
現今也常用在電子商務上

軟體開發架構的演進
      

      隨著Internet的興起，分散式系統的環境日趨成熟，要將整個Internet視為區域網路般的存取資源與交換資料，程式設計上就必須考慮到所謂的3層式架構 
    


        展示層(Presentation Tier) 
      

        將UI的部分獨立出來，除了可讓專業的美工處理之外，還要考慮到程式邏輯的變動不會影響到畫面，或是畫面的變動不會影響到程式邏輯 
      

        商業邏輯層(Business Logic Tier) 
      

        將企業運作的邏輯獨立成元件，以方便更新程式碼時只需要異動相關的元件即可 
      

        資料層(Data Tier) 
      

        將關於資料存取的部分獨立出來，如此一來在變動資料庫架構時便不需要更改程式邏輯或畫面 
      

    接下來，讓我們來瞭解程式開發架構是如何由1-Tier走向N-Tier的
    單機架構(1-Tier)

      展示層，商業邏輯層，資料層都在單機上處理，適用於文字處理，個人資料處理(PIM)等單機架構，其瓶頸為
    

檔案型的資料有傳輸浪費頻寬與異動需鎖定等問題
商業邏輯或使用者介面改變，需重新部署

主從架構(Client/Server , 2-Tier)

      將資料層分離出來，儲存到資料庫伺服器，適用於多人存取資料的環境，其瓶頸為
    

商業邏輯或使用者介面改變，需重新部署
資料庫伺服器容易成為效率的瓶頸，例如Client端的連線數會增加伺服器connection紀錄負擔 
      
        //因此我們應該只在取用資料與將資料回存時才進行connection
      

      商業邏輯應該放在client或server端的問題
      
放在前端，資料庫可不受限制的抽換，但商業邏輯改變，需重新部署
放在後端，通常是利用Stored Procedure，但這樣就不易抽換資料庫軟體


分散式架構(N-Tier)

      將展示層，商業邏輯層(放在AP Server)，資料層(放在Database Server)都各自獨立，適用於平臺不同，網際網路的環境。
      
      若展示層以一般開發工具開發稱為
      
        Rich Client
      
      ，若利用動態網頁技術運作於瀏覽器上則稱之為
      
        Thin Client
      
      。 
      
      其瓶頸為
    

AP Server 與 Database Server除了穩定運作的需求外，也易成為效率的瓶頸
需要能將商業邏輯包裝成元件的技術，門檻較高

網路服務(Web Service)

      將整個網際網路視為區域網路甚或是作業系統般，徹底實踐分散式系統的美麗新天地，使用網際網路上的資源就如同取用單機資源一般容易，主要是利用XML作為資料轉換的標準，透過SOAP通訊協定穿過防火牆，打破網際網路的隔閡，目前有Sun 的Java One架構與Microsoft的.NET架構可供參考。
    


      系統分析與設計(Systems Analysis & Design)
資訊系統的種類

交易處理系統(Transaction Processing System;TPS) 
管理資訊系統(Management Information system;MIS)
決策支援系統(Decision Support System;DSS)
高階主管資訊系統(Executive Information System,EIS)

      專家系統(Expert System;ES)
      
使用者介面
推理機
知識庫

操作性系統(Operational Systems)
辦公室自動化系統(Office Automation Systems;OA)

資訊系統的建置策略


      公司內部獨力完成
      
使用者自建(End User Development;EUD)
資訊部門發展


      公司外部取得
      
委外開發(Outsourcing)
套裝軟體(Application Package)


      其他方式
      
與軟體公司合作等


系統開發模式(SoftWare Process Model)
瀑布式(Waterfall)



        編碼與修正模式(Code-andfix Model)
      


        階段模式(Stagewise Model)：Benington(1956)
      

      瀑布模式(Waterfall Model)：Royce(1970)
      = 系統發展生命週期(System Development Life Cycle;SDLC)
      

        特徵
        
適用於需求明確，領域知識(Domain KnowHow)容易取得的專案
強調開發過程需有完整的規劃，分析，設計，測試及文件等管理控制
前一階段完成後才能進入下一階段，各階段僅循環一次
沒有明確規定要劃分成多少個階段，每一階段皆有文件產出


        至少劃分3階段
        
分析
設計
實施


        通常劃分5~7階段不等(每一家學說都不同,掌握精神即可)
        
初步調查 (Preliminary Investigation) 
系統分析 (System Analysis) 
系統設計 (System Design) 
系統開發 (System Development) 
系統實施與評估 (System Implementation and Evaluation) 




      反覆式(Iterative)


      漸增模式(Incremental Model)：Mills(1971)
      
強調需求可分成幾個部分
開發週期可反覆進行


      雛形模式(Prototyping Model)：Bally(1977)
      
適用於需求不明確，專案小，應用領域不熟悉或高風險之專案
強調雛形之快速開發，以雛形作為使用者與資訊人員溝通之工具，使用者高度參與等

        雛形策略
        
演進式雛形(Evolutionary Prototyping)
用後丟棄式雛形(Rapid Throwaway Prototyping)：因成本較高，故適用於風險最高的情形



      螺旋模式(Spiral Model)：Boehm(1988)
      
強調「風險分析」結合了SDLC與雛形模式

        螺旋模式的4個步驟
        
找出系統目標，可行方案與限制
依目標與限制評估方案
開發雛形
使用者評估，決定下一步驟



      同步模式(Concurrent Model)：Aoyama(1993)
      
構想源於製造業的同步工程(Concurrent Engineering)目的在於縮短產品開發時間，適用於套裝軟體的專案

        同步模式的構想
        
活動同步(Activity Concurrency)：不同團隊平行開發
資訊同步(Information Concurrency)：不同團隊資訊共享
整合性的管理系統：協調各種資源的互動關係



需求擷取與分析
使用者需求的分類

巨觀需求：欲電腦化的環境，作業程序與範圍，輸出與輸入所需之資訊或表單及系統目標，限制，主要功能等，盡可能在需求分析階段中釐清與確定。
細部需求：使用者介面之要求，例外狀況之處理，錯誤及輔助訊息之顯示，通常到設計階段處理。

需求的擷取方式

查閱文件 
實地觀察(Observation)

      訪談(Interview)
      
開放式訪談(Open Interview)：類似交談
結構化訪談(Structured Interview)：類似詢問


      問捲
      
簡單隨機抽樣
分層抽樣
便利抽樣
判斷抽樣

開會討論

      聯合開發(Joint Application Development;JAD)
      
範圍界定
關鍵人員的熟悉
會議準備
會議進行
文件產生


需求的表達工具


      流程圖(Flow Chart)
      
□：表達作業處理，可配合
        處理描述
◇：表達流程控制
→：表達資訊流向
波浪形：表達資訊的展示與儲存，可配合
        藍圖(Drawing)
        與
        資料詞彙(Data Glossary)


需求分析文件的樣版

問題描述
新系統目標
新系統限制

      使用者需求
      

        流程圖
        
處理描述
藍圖
資料詞彙



系統分析與設計的兩大技術


結構化技術
      ：將資料與流程分開考慮
      
流程塑模：主要透過資料流程圖(DFD)
資料塑模：主要透過實體關係模式(E-R Diagram)
使用者介面塑模


物件導向技術



      結構化技術


      結構化設計(1960)：強調系統的結構化與可維護性，決定系統應有哪些模組(模組名稱,輸入,輸出,內部資料,處理邏輯)
      

          結構化技術所需工具
        


            文件
          

            工具
          

            經驗法則
          

            評估準則
          



            結構圖(Structure Chart)
          
 
            
          

            模組大小：小模組200行以內
          

內聚力




            HIPO圖(Hierarchical Input Process Output)
          
 
            
          

            控制間距：(Magic Number 7±2)
          

耦合力




            處理規格描述(Process Specification)
            
結構化英語(Structured English) 
程式設計語言(Program Design Language;PDL)


 
            
          

            影響範圍
          
 
            
          



            資料字典(Data Dictionary;DD)
          
 
            
          

            控制範圍
          
 
            
          



      結構化分析(1970)：利用圖形化文件工具(Graphic Documentation Tools)進行企業流程及企業資料格式塑模
      

        事件列(Event List)
        
資料流導向：客戶輸入代號
時間導向：下午3點要簽發支票
控制導向：系統的開啟或關閉


        環境圖(Context Diagram)
        
○：系統
□：外部實體
→：資料流


        資料流程圖(Data Flow Diagram;DFD)：表達系統作業處理與資料流之關係
        

          表示符號
          
□：外部實體(Entity)
→：資料流(Data Flows)
○：處理(Process)
二：資料儲存(Data Store)


          建構方式
          
由上往下分割(Top-Down Partitioning)
由中間往外分割(Middle-Out)：Yourdon-1988



        實體關係圖(Entity-Relationship Diagram;ERD)
        

          表示符號
          
矩形：代表實體類型 (Entity Type) 
菱形：代表實體類型與實體類型間之關係 (Relationship) 
橢圓：代表實體類型或關係之屬性 (Attribute) 
直線：把屬性連結到實體類型或把實體類型連結到關係 
基數率(Cardinality Ratio)：代表實體類型與實體類型間之關係程度。常見的基數率是「1:1」、「1:N」及「M:N」三種
參與限制(Participation Constraint)：個體的存在是否藉由與另一個個體之間的關係而存在。參與限制分為「全部參與（Total Participation）」、「部份參與（Partial Participation）」兩種。


處理規格描述(Process Specification)
狀態轉移圖(State Transition Diagram;STD)


      結構化程式設計(1969)：Dijkstra提出，避免GOTO所造成的混亂
      
循序(Sequence)：compute,read,write
選擇(Condition)：if then else, case 
重複(Repetition)：do while 


      由上而下發展
      
由上而下設計(Top-Down Design)
由上而下編碼(Top-Down Coding),由下而上編碼(Bottom-Up Coding)

        由上而下實施(Top-Down Implementation)由上而下測試(Top-Down Integration Test)
        

          白箱測試：由上而下或由下而上依功能測試
          
單元測試
整合測試


          黑箱測試：情況極端與例外的測試
          
系統測試
驗收測試




結構化分析與設計的評估準則
    良好的設計希望達到模組的內聚力為功能內聚力，耦合力為資料耦合力
    

      內聚力(Cohesion)：衡量模組完成一件工作的程度



        功能內聚力(Function Cohesion)
      
      ：單獨處理一件工作


        順序內聚力(Sequential Cohesion)
      
      ：模組順序執行，一個模組的輸出會成為下一組的輸入


        溝通內聚力(Communication Cohesion
      
      )：使用相同的資料
暫時內聚力(Tempral Cohesion)：模組執行無順序關係但須在一定時間內完成一件工作
程序內聚力(Procedural Cohesion)：按照順序執行而不共用資料
邏輯內聚力(Logical Cohesion)：根據上層模組傳來的參數決定執行的功能
偶發內聚力(Coincidental Cohesion)：模組可做好幾件不相干工作，各模組具有功能內聚力



      耦合力(Coupling)：衡量模組間相互關連的程度


        資料耦合力(Data Coupling)：模組間藉由資料傳遞參數

        資料結構耦合力(Stamp Coupling)：模組各自使用資料結構的一部份
控制耦合力(Control Coupling)：A模組傳遞旗標控制B模組
共同耦合力(Common Coupling)：兩模組使用相同的資料區
內容耦合力(Content Coupling)：A模組可使用B模組的程式碼或改變其變數



      物件導向技術(Object-Oriented Technique，OOP)

針對日趨複雜之軟體需求的挑戰，軟體業界發展出了物件導向 (OO) 的軟體發展模式，作為針對「軟體危機」的最佳對策。
物件導向之觀念起源於模擬語言(1966, Simula 語言)，以物件模式來描述真實系統，並將資料抽象化(Data Abstraction)、封裝、繼承與同名異式的觀念融入於物件系統開發中。 
第一個純粹的OOP語言：1980全錄(Xerox)公司的PARC研究中心所開發的
      
        Smalltalk-80
      


      OOP的先驅 Brad Cox 曾提出Software-IC的概念，而要達到軟體IC的概念，則需要下列特性
    

物件 & Message 
繼承性(inheritance)
封裝性(encapsulation)
動態連結(dynamic binding)

抽象化(Abstraction) 

抽象化所描述的過程，就是由許多物件中抽離出重要的特性來，而這些特性，足以讓被抽象化的物件，與別的物件分別開來。同時，對於物件抽象化的結果，也因我們的需要不同，而有所變化。
所有的抽象化都是系統的發展，為了維繫存在，必須適應變化的唯一路途。
抽象化的目標與物件導向一樣，就是『讓我們更容易模擬世界，並加以處理』。



      物件(Object)=案例(Instance)

由一群具有相同資料結構與相同行為的物件所描述的集合中，某一個特定且存在的物件。
物件是一個具有狀態(State)、行為(Behavior)與識別(Identity)的實體或抽象化概念(Abstract Concept)，且其行為會影響其狀態。
物件是一個封包，包括了名稱(name)、
      
        屬性(attribute)
      
      及
      
        操作(operation)
      
      3部分。
      
在C++中稱為
        
          資料成員(Data Member)
        
        與
        
          成員函式(Member Function)
        

      在Java中稱為
      
        欄位(Field)
      
      與
      
        方法(Method)
      
每一個物件都是一個被class所分類的instance (Every object is an instance of a class)



      類別(Class)=物件類型(Object Type)=抽象化資料型態(Abstract Data Type;ADT)

由一群具有相同資料結構與相同行為的物件描述，所形成的集合，經由抽象化(Abstraction)後稱之為類別。
類別是一種定義(Definition)、描述(Description)、樣版(Template)，故可以類別建立新的物件。

封裝(Encapsulation)

將資料與操作此資料的方法包裝成一個物件稱之為封裝。

      封裝後物件的結構分為2部分
      1.介面(Interface)2.實作(Implementation)
封裝將物件的實作細節隱藏，使其與外界環境隔離，只允許該物件所包含之操作修改其資訊，稱之為資訊隱藏(informatiion hiding)。

繼承(Inheritance)


      所謂繼承就是從基底類別(base class)，建立衍生類別(derived class)。衍生類別除了繼承基底類別的所有特性外，可依據需求建立新的功能或修改，其基底類別不會受任何影響。繼承可提升程式碼的重複使用性(reusability)。
      

        多重繼承(multiple inheritance)：一個類別可以直接繼承多個基底類別─網路結構。多重繼承最常引發的麻煩便是「模稜兩可」(ambiguity) 。
簡單繼承(single inheritance)：一個類別最多只能直接繼承一個基底類別─樹結構。


      類別間的層級關係
      
父類別(Superclass)、泛化、一般化(Generalization)：萃取類別的相同屬性與操作所成的上層類別。
子類別(Subclass)、繼承、特殊化(Specialization)：在既存類別下，加上專門的特性所成的下層類別。
「is a」的關係：子類別 is a 父類別，如鋼琴是樂器。


同名異式(Polymorphism)=多型=動態繫結(Dynamic binding)

定義相同名稱的操作，以不同的方式處理不同類型的資料。
多型在程式執行期利用動態連結(Dynamic Binding)的方式判斷訊息參數的類型與個數來決定運作的方法。

      達到物件導向中「多型」的方法
      
抽象類別 (abstract class)：抽象類別是為了讓方法的使用更多樣化，物件轉換型別為抽象類別後，即使方法名稱相同，其實作的內容與執行結果卻不同。 


物件導向的系統開發方法(Process)

      物件導向的系統開發是一個反覆(Iterative)的過程，包括了三個階段
    

需求分析 ->
      
      (需求模式) 主要以使用個案圖、活動圖、藍圖、資料詞彙、介面元件等作為表達工具。
系統分析與設計 -> 
      
      (分析模式) 將需求模式中的系統表達成一個物件架構，包括了物件圖與類別圖 
      
      (設計模式) 將物件架構至現況之實施環境，包括了循序圖、合作圖、狀態圖、活動圖。
實施與測試 ->
      
      (實施模式)元件圖、部署圖。
      
      (測試模式)

    這種反覆的開發方式，在每個iteration(反覆的期間)結束後，希望能產生具備產品品質、測試、整合過的軟體出來，所以會有多個發行版本(release)存在
    

        重要的物件導向的系統開發方法
      


          方法名稱
        

          方法論者(3 Amigo)
        



          Booch
        

          Grady Booch 
        



          OMT(Object Modeling Technique)物件塑模技術
        

          Jim Rumbaugh 
        



          OOSE(Object-Oriented Software Engineering)物件導向軟體工程
        

          Ivar Jacobson 
        



          RUP(Rational Unified Process)Rational統一流程
        

          Rational / IBM 
        



          XP(eXtreme Programming)極致程式設計
        

          Kent Beck 
        



          要看看還有哪些系統開發方法，可參考： 
          http://www.cetus-links.org/oo_ooa_ood_methods.html



Booch

      Booch之方法將系統開發過程分為
      觀念期、分析期、設計期、進化期、維護期，常用於大型軟體專案。
    

觀念期：確定核心需求
分析期：發展系統行為模式
設計期：建構系統架構
進化期：改良系統
維護期：改良移交後之系統

OMT

      Rumbaugh之OMT方法將系統開發過程分為 觀念形成、物件導向分析、物件導向設計三個階段，常用於企業資訊系統。
    
OOSE

      Jacobson之OOSE方法將系統開發過程分為 分析、建構、測試三個階段，以使用個案著名。
    
RUP

初始階段(inception)
詳述階段(elaboration)
建構階段(construction)
轉換階段(transition)

物件導向的塑模 = 軟體架構

      軟體開發如同音樂譜曲及建築設計，其過程中必須將需求、分析、設計、實作、佈署等各項工作流程之不同觀點予以呈現，這就是軟體系統之塑模(Modeling)。 
    

      Booch等人 / Rational Software 提出可從4+1觀點(4+1 view)來看軟體系統架構(凸顯使用個案的重要性)
    

使用個案觀點(Use Case View)：以使用個案充分表達軟體功能需求
設計觀點(Design View)：以物件的觀念，表達出軟體設計結果 (Logical View) 
流程觀點(Process View)：
實施觀點(Implementation View)
佈署觀點(Deployment View)


      根據上述5個觀點我們可以整理出6種塑模
    

使用個案塑模：使用個案圖
物件資料結構塑模：類別圖、物件圖
物件互動行為塑模：互動圖(包含了循序圖、合作圖)
作業行為塑模：活動圖、狀態圖
使用者介面塑模：
系統元件與組織結構塑模：元件圖、部署圖

物件導向的軟體維護

軟體的維護就是軟體的再生，維護較開發而言要花更多的金錢與時間
軟體維護的思維上就是要考慮到
      
        可維護性(Maintainability)
      
      與
      
        可重複使用性(Reuseability)
      
傳統的重複使用方案並無法兼顧可維護性與可重複使用性的目標，物件導向設計的重複使用方式可在含有宏觀商業邏輯的抽象層次的上層結構來考量，以達到可維護與可重複使用的目標。

物件導向類別設計的法則

開閉原則(Open-Closed Principle ; OCP)
Liskov代換原則(Liskov Substitution Principle ; LSP)
依賴倒轉原則(Dependency Inversion Principle ; DIP)
介面隔離原則(Interface Segregation Principle ; ISP)
組合/聚合重複使用原則(Composition / Aggregation Principle ; CARP)
Demeter原則(Law of Demeter; LoD)


開閉原則(Open-Closed Principle ; OCP)



        模組應當敞開擴充大門，但關閉修改之窗
      
      。
如何達成開閉原則，關鍵在抽象化。
不允許更改的是系統的抽象層，允許擴充的是系統的實作層。
OCP的另一個角度是EVP對可變性的封裝原則(Principle of Encapsulation of Variation)即找到一個系統的可變因素，並將之封裝起來。
可變性必須被封裝，那不同的可變性呢？應用繼承來處理，因此繼承應被視為封裝變化的方法，但繼承的層數避免超過2層以免不同的可變性混和。
應避免將單純的流程控制轉移語句改寫成多型，除非內含了某種商務邏輯。
所有的設計樣式(Design Pattern)都是針對不同的可變性封裝，使系統在不同的角度上達到開閉原則。


      Liskov代換原則(Liskov Substitution Principle; LSP)



        子類別應該可以使用其基礎類別替代
      
      。
Liskov代換原則是繼承之所以能重複使用的基石，只有當衍生類別可以替換掉基礎類別，且軟體的功能不受影響時，其類別才算真正的被重複使用，而衍生類別也才能夠在基礎類別的基礎上增加新的行為。
Liskov代換原則要求凡是基礎類別使用的地方，衍生類別一定適用，故衍生類別必須包含全部基礎類別的介面

      針對違反LSP設計時可行的重構(Refactoring)方式
      
當類別A錯誤的繼承類別B時，可建構一個新的抽象類別C，作為2個具體類別A,B的父類別
當類別A錯誤的繼承類別B時，可重構為類別B委派(Delegate)類別A



      依賴倒轉原則(Dependency Inversion Principle; DIP)



        要依賴於抽象，而不要依賴於具體
      
      。

      依賴倒轉原則的策略是依賴介面或抽象方法及類別，而不是具體方法或類別，包括了下列情況都得遵循DIP
      
變數的類別宣告
參數的類別宣告
方法的傳回型態宣告
型態的轉換

抽象層級含有宏觀和重要的商務邏輯，具體層級含有與實作有關的演算法語次要的商業邏輯，而傳統的程序性設計或錯誤的類別規劃會讓抽象層級依賴於具體層級，因此依賴倒轉原則可倒轉此一現象，讓實作改變時，商業邏輯無須變動。
一個具體Java類別應當只實作Java介面和抽象Java類別中宣告的方法，而不應當給出多餘的方法。

      若Java程式要參照一個物件，若此物件有一個抽象型態，則應使用此抽象型態作為靜態型態(Static Type)
      
靜態型態(Static Type) = 實際型態(Apparent Type)：變數被宣告時的類別
實際型態(Actual Type)：變數所參照的物件真實型態

若一個物件存在其抽象類別，就應當在任何參照此物件的地方使用抽象類別

      Java語言中建構一個物件的程式是違背OCP與DIP的，但可在此類別被建構出來後過多型性使得使用端依賴於其抽象類別。
      
List employees = new Vector();

DIP是最難實作的原則，因為會使用到物件工廠就會產生大量的類別。
DIP假定所有的具體類別都是會變化的並不完全正確，因為某些具體類別是相當的穩定因此並不需要為此發明一個抽象型態。


      介面隔離原則(Interface Segregation Principle; ISP)

由客戶端指定的許多介面比一個一般用途的介面好。 
使用多個專門的介面比使用單一的總介面要好，否則會造成對介面的污染(Interface Contamination)。
一個類別對另一個類別的依賴性應當是建立在最小的介面上的。


      組合/聚合重複使用原則(Composition / AggregationPrinciple ; CARP)
Demeter原則(Law of Demeter; LoD)


      統一塑模語言(Unified Modeling Language ; UML)

由Rational software corporation融合了物件導向三劍客的方法論，統一了以物件導向分析與設計的表示法，於1997年11月由
      OMG(Object Management Group)
      公佈為物件導向視覺化塑模的標準，目前
      最新的版本為 2.0 (2003/06/01)
UML是一種塑模語言，而非方法論，它並沒有規範符號的使用時機與次序僅利用符號來達到溝通的目的，從分析，設計到實作都可以使用同一套符號來表達，因此應用時可以搭配適合的方法論。
UML之所以重要，就是因為他有助於軟體開發人員之間的溝通。我們必須在某種程度上使用他以協助溝通，而非阻礙溝通。
循序圖、合作圖合稱互動圖。

      UML設計的理念
      
使用個案導向(強調以使用者的角度來定義功能需求)
軟體架構設計(強調系統開發要有藍圖)
往覆，漸增式流程(強調降低專案風險)


使用個案圖(Use Case Diagram)

以OO技術開發系統時在需求分析時常利用典型的情節(Scenario)來進行需求塑模，這種個案模式一直沒有統一的表達方式直到Ivar Jacobson等人(1996) 才將使用個案的表達正式化。 
使用個案圖表示從使用者之觀點描述系統的行為者與系統間之互動行為與關係，包含了行為者和使用個案二個元件，此法在資料與展示格式上僅利用文字描述，若能搭配結構化中的藍圖與資料詞彙則可補強其不足之處。
使用案例是專業分工的依據，是專案進度評量的重要因素。

行為者(Actor) = 參與者

環境中與系統有互動關係的人或事物，有該使用個案的啟動者即
      
        主要行為者(Primary Actor)
      
      與其他參與者即
      
        次要行為者(Secondary Actor)
      
      。
參與者被繪製成一個火柴棒形狀的小人並將名稱置其下方。 

使用個案(Use Case)

使用者透過介面要求系統所做一系列相關的事件流，包含了最主要的事件即
      
        基本路徑(Basic Course)
      
      與其他衍生事件或可能發生的錯誤即
      
        替代路徑(Alternative Courses)
      
      。
使用案例被繪製成橢圓形並將名稱置於圖形內部或底部來表示 

      使用個案間的關係：
      
關聯(association)：使用個案與行為者之間的關係，以實線段表示。

        包含(Include)：一個使用個案會用到另一個使用個案，二個或以上的使用個案具有相同的行為模式時，可將該段行為模式獨立出來成為一個新的使用個案，再建立包含的關係，用一個虛線實心箭頭的線段並含有關鍵字 <<include>>  。
延伸(Extend)：在某情況下，使用個案會插入另一使用個案的定義中，用一個虛線實心箭頭的線段並含有關鍵字 <<extend>> 。

        一般化(Generalization)：一個使用個案繼承另一個使用個案的行為，
        用一個實線空心箭頭表示的線段從子使用個案指向父使用個案，且箭頭朝向父使用個案端。


情節(Scenario)

      使用個案中的某一個單一執行路徑，可能是基本路徑也可能是替代路徑。
    
建構使用個案圖的步驟

找出行為者：從環境圖找
找出使用個案：由行為者找出使用個案
描述使用個案：可用自然語言或事件條列式
找出使用個案間的關係：
繪製使用個案圖

類別圖(Class Diagram)

表示系統存在之類別、介面及它們間之靜態資料結構與邏輯關係

      通常以三層表示
      
類別名：正體字：具體類別，斜體字：抽象類別，介面：<interface>
屬性層：
方法層：


      屬性與方法有四種封裝方式
      
public:以符號
        
          + 
        
        表示
private:以符號
        
          -
        
        表示
protected:以符號
        
          # 
        
        表示
static:以符號
        
          _ 
        
        表示

描述介面的類別圖：沒有private的封裝
描述物件的類別圖：描述類別的實體，名稱下需加底線

關係

      類別間的關係包括了
    


      依賴 / 相依(Dependency)
      
使用的關係，表達一個類別會用到另一個類別
另一個類別的改變會影響到使用他的類別，但反之不必然
一類別的區域變數，方法參數，方法返回值，對靜態方法呼叫時是另一個類別時稱之
以虛線開箭頭表示。------->


      一般化(Generalization)
      
繼承的關係，包括了類別間的繼承，介面間的繼承，類別對介面的實作等
以實線空心箭頭表示。


      關聯/結合(Association)
      
同一層級的類別間靜態的結構關係
Java語言中是使用實體屬性實作的
其關係有雙向與單向，建議多用單向
關係有基數(Multiplicity)，關係有名稱，但通常均予以省略

        以實線段表示。 —
        

          依關聯的類別個數來分
          
二元關聯(Binary Association)
多元關聯(n-ary Association)


          依描述整體與部分的關係來分(不同層級的類別)
          
聚合 / 聚集(Aggregation)：以實線且整體端加一個空心的菱形表示。◇—
合成 / 組合(Composition)：整體物件需負責部分物件的生命週期，以實線且整體端加一個實心的菱形表示。◆—




      實現化(Realization)
      
以介面實現其他類別之描述
以虛線空心箭頭表示。


基數(Multiplicity) =多重性 

      在類別連線上與類別之旁以數字標示與之關聯的數量。
    
物件圖(Object Diagram)

描述系統於某一時間點的靜態結構，也稱為案例圖，包含了
      物件
      與連線二個元件。
物件間的關係稱為連線(Link)。

循序圖(Sequence Diagram)

以時間發生之先後順序來表達物件間的訊息傳遞與處理之程序，包含了類別之物件、訊息、操作、生命線與控制焦點等元件。

      循序圖有2個象線
      
垂直象線依照訊息呼叫發生的時間順序，來描述訊息呼叫的先後次序。
水平象線描述一個物件實體傳送訊息給哪一個物件實體。


訊息(Message) =刺激(Stimuli)

      由某一物件傳送訊息至另一物件以啟動操作，以上下位置表示順序。
    
生命線(Lifeline)

      表達物件再某時段的存在，以物件下與物件垂直之虛線表示。
    

      控制焦點 (Focus of Control) =啟動條(ActivationBar)

      表達物件執行某動作之時段，與生命線重疊且以高瘦的矩形表示。
    
系統邊界 (System Border) 

      系統與外界溝通之介面，通常放置在循序圖的最左側。
    
建構循序圖的步驟

確認物件
描述操作
描述訊息
繪製循序圖

合作圖(Collaboration Diagram)

著重表達物件間之連結結構，並能同時展現物件間的訊息傳遞與處理之程序，包含了類別之物件、連結、訊息與操作等元件。
Rational Rose可將循序圖直接轉換成合作圖。 
合作圖與循序圖相比較，少了物件生命線與焦點控制，多了路徑與序數

連結(Link)

      以直線連接二個物件也就是物件間的路徑(Path)。
    
訊息(Message)

      訊息發生順序以自然數或杜威數等編號來表達。
    
活動圖(Activity Diagram)
狀態圖(State Diagram)
元件圖(Component Diagram)
部署圖(Deployment Diagram)


      樣式理論(Pattern
      Theory)

研究一再發生的典型事例，以便研究者可以研習至融會貫通，舉一反三，推陳出新的理論，叫做樣式理論。
樣式不是發明，而是發現

      現代樣式理論：建築設計學家 亞歷山大 Christopher Alexander提出
      
無名之
        
          質
        
        (The Quality Without a Name ; QWAN)


          門
        
        (The Gate)


          道
        
        (The Way)：又稱作「永恆之道」(The Timeless Way)

Alexander認為 透過追尋「道」，可以通過「門」到達「質」是任何一種工程設計的發展過程


        「樣式是某外在背景環境 (Context) 下﹐對特定問題 (Problem) 的慣用解決之道 (Solution)
        」 
      
      。
樣式是不斷的重複發生，而有其重複性。但重複的不是問題的本身，而是問題的本質，所以要把不同問題以相同的樣式來處理，勢必要擷取其本質，也就是『抽象』。所以研究樣式必須重視問題本質而非問題的表象。同樣的問題的背景環境及解決之道也是抽象的。 
設計樣式是對軟體設計模型進行不斷追求完善的使用工具，但樣式的使用無絕對的公式，需要經過大量的個人實踐才能熟練掌握。
重構(Refacotrying)是對不滿意的程式碼進行彌補的時候所需要的技術，因此重構的存在證明瞭樣式並非軟體設計的銀彈(Silver Bullet)

      樣式的要素
      
名字(Name)
問題(Problem)
初始環境(Initial Context)
力(Forces)
解答(Solution)
舉例(Examples)
末態環境(Resulting Context)
推理(Rationale)
相關樣式(Related Patterns)
已知應用(Known Uses)


      樣式的種類
      

        設計樣式(Design Patterns)：GoF提出
        
建構型樣式(Creational Pattern)
結構型樣式(Structural Pattern)
行為樣式(Behavioral Pattern)

架構樣式(Architecture Patterns)
分析樣式(Analysis Patterns)：Martin Fowler提出
反樣式(Anti-Patterns)

物件導向樣式的經典：四人幫(Gang of Four ; GoF) 即Erich Gamma、Richard Helm、Ralph Johnson、John Vlissides等四人，於1995年出版之 
      
        Design Patterns
      
      - Elements of Reusable Object-Oriented Software這本經典著作，包含23種軟體設計樣式，例如MVC Pattern，將軟體設計分為Model、View和Control三個部分，Model是屬於企業邏輯的部分，例如網路購物的交易機制；View是使用者介面的設計；Control則串連Model與View的程式碼。



      關聯式資料庫的正規化(normalization)
定義

      若關聯表中每一欄位的值都是唯一而不可分割的(Atomic)，則稱之為正規化
    
關聯式資料庫的鍵(Key)

候選鍵(Candidate key)：能在資料表中將各列分別出來的欄位(一個資料表可以有多個)
主鍵(Primary key)：從候選鍵中選出來作為主要鍵的欄位
替代鍵(Alternate key)：其他未被選為主鍵的候選鍵欄位
連結鍵(Concatenated key)：指候選鍵是由多個欄位所組成

一階正規化 (First Normal Form; 1NF)

      又稱為平坦檔(Flat File)，若關聯表中的任一行與任一列的交叉格(Cell)上均只有一個值，但會有插入，刪除，更改等異常(Anomalies)
    
二階正規化 (Second Normal Form; 2NF) 

      符合一階正規化的關聯表，再除去資料的
      
        部分功能相依(Partial Dependency)
      

      (將1NF中由部分主鍵就可以決定其值的欄位移出成為另一個關聯表)
    
三階正規化 (Third Normal Form; 3NF) 

      符合二階正規化的關聯表，再除去資料的
      
        遞移相依(Transitive Dependency)
      

      (將2NF中由非由主鍵決定其值的欄位移出成為另一個關聯表)
    
Boyce-Codd正規化 (Boyce-Codd Normal Form; BCNF) 

      符合三階正規化的關聯表，再除去任何因功能相依所造成的異常結果
    
四階正規化 (Fourth Normal Form; 4NF) 

      符合BCNF正規化的關聯表，再除去所有的多值相依
    
五階正規化 (Fifth Normal Form; 5NF) 

      符合四階正規化的關聯表，再除去剩餘的所有異常情況
    


      CMMI(Capability Maturity Model Integrated)
CMMI的由來

      美國國防部對於軟體的策略是希望外包(outsourcing)的，但為了掌握軟體 產品的品質與進度，希望開發過程能夠透明化，因此於1980 年時，提出對軟體承包商的軟體開發能力進行評估的要求。於是美國國防部與卡內基美隆大學(Carnegie-Melon University ; CMU)共同設立了軟體工程研究所(Software Engineering Institute; SEI)  
    

      SEI於1988年研究發佈了軟體開發程序成熟度框架(CMM)，提供了軟體開發程序評估和軟體能力評價兩種評估方法和軟體成熟度提問單，來自產官學的技術和管理專家陸續進駐該機構，開始對工、商、政府提供產品和服務。 1991年，SEI將軟體開發程序成熟度框架 提升為軟體能力成熟度模型(Capability Maturity Model For Software，簡稱SW-CMM)，並發佈了最早的SW-CMM 1.0版。2000年底SEI發表了
      CMMI
      ，
      整合軟體工程(Software Engineeing ; SW)、系統工程(Systems Engineering ; SE)、
      產品與流程發展(Integrated Product and Procss development , IPPD)與供應商來源管理
      (Supplier Sourcing ; SS)的整合模式。從此以後，CMMI就與CMM並行。
    
CMMI的成熟等級

      SEI 試圖在軟體界建立一套工程般的制度，讓個人和組織在軟體開發上能有改進的依據。SEI 的 Capability Maturity Model (CMM) for Software 已經成為許多軟體公司所採行的標準，用作為改進公司內部軟體工程的依據。
      
      根據 CMM 的定義，軟體工程的成熟度分成五個等級，簡單介紹如下： 
    


      CMM-Level 1（initial）：軟體程序漫無章法，程序未被定義。專案流程無統一程序，專案計劃的成功仰賴於工作人員個別的努力。
      
參與範圍：
        
          個人
        

CMM-Level 2（repeatable）：已建立基本的管理與分析的程序(
      
        Measurement and Analysis ; MA
      
      )，對成本、時程、和職務權責能加以追蹤、查詢。已有作業程序所須具有的紀律，所以有能力重覆使用相類似的專案成功的案例與經驗。
      
參與範圍：
        
          專案或團隊
        
流程重點：需求管理(Requirements Management)


      CMM-Level 3（defined）：屬於管理和工程的活動都已設計、定義好，並且文件化，完整地整合成組織內的標準作業程序。各個專案計劃延用標準程序或被認可的標準程序修改程序。
      
參與範圍：
        
          組織或公司
        
流程重點：需求發展(Requirements Development;REQD)，驗證(Verification;VER)，確認(Validation;VAL)


      CMM-Level 4（managed）：組織可收集詳細的軟體程序以及軟體產品的量測資料。軟體作業程序和產品都有一組量測的數據，可讓工程師和經理們瞭解程序和產品的狀況。
      
參與範圍：
        
          組織或公司
        
流程重點：Quantitative Project Management(QPM) 


      CMM-Level 5（optimized）：評估革新性的新技術，做反省與提升，有規則地依序導入採用，以持續不斷地改進程序。
      
參與範圍：
        
          組織或公司
        
流程重點：Causal Analysis and Resolution(CAR) 


CMMI實施

      CMM是一種軟體開發的流程標準，可說是種軟體開發的品質保 証，就像ISO是組織管理的品質保証一樣。細分之下，CMM/CMMI分成五級，從第一級（level 1）到第五級（level 5），分別標示軟體公司流程管理的競爭力程度，一級只要提出申請即可列入，不需經過審查，而到第四級為可做質量管理，第五級則為最佳化，可預防缺陷。
    

      軟體先進國家都已體認到CMM/CMMI的重要性。目前全球約有700餘個包括公司及組織的單位通過CMM認証。其中最難的四、五兩級，全球各自有73與67個單位獲得，多數集中在美國及印度，其他則以個位數分佈在澳洲、蘇俄、以、法、新加坡等國。 
    

      我國行政院於91年11月院頒之『行政院所屬各機關資訊業務委外服務作業參考原則』中，亦明訂通過CMMI 評鑑得列為採購加分項目。
    


      參考書目


      Software Engineering 6th Edition; SOMMERVILLE; addison wesley;ISBN:020139815
吳仁和，林信惠;系統分析與設計;智勝出版 ISBN:9577292194
河合昭男;學習物件導向的第1本書;博碩文化; ISBN:9575275373
Fowler，Scott; UML精華第二版; �眳p; ISBN:9575667557
閻宏 ; Java與樣式理論 ; �眳p ; ISBN:9864214179 
賀元，賴明宗，劉燈 ; 世紀末軟體革命/C++,GUI與物件導向理論;傳徵(股)公司;ISBN:9579996504
賀元，賴明宗，劉燈 ; 世紀末軟體革命2;資訊人文化事業;ISBN:9579964092



      網路資源


UML 參考手冊

物件導向的天空

物件導向的軟體發展

沒人在乎軟體工程

軟體工程的弔詭

點空間

軟體設計的思維

朝陽科大呂瑞麟老師的系統分析與設計講義

淺談UML

測驗




迴首頁 Main Page


主 網 站：http://peterju.notlong.com
(目前轉址至 http://irw.ncut.edu.tw/peterju/)




|

|

|



|

|



This work is licensed under a
Creative
Commons License








現代軟體工程：物件導向軟體發展策略-金石堂網路書店














































會員功能列

 


加入會員
登入




您好
登出


會員專區
客服中心
查訂單


 
（ 0 件）0 元
結帳












購物車
（ 0 件）0 元
結帳



金石堂及銀行均不會請您操作ATM!  如接獲電話要求您前往ATM提款機，請不要聽從指示，以免受騙上當!
    (詳情)




現代軟體工程：物件導向軟體發展策略－金石堂網路書店歡迎您加入博客和facebook 臉書粉絲團！The largest retail books store chains in Taiwan! 





TOP關鍵字

2017希望書包
怪獸的產地
七龍珠
肆一 
蠟筆小新套票
抽EC






全館搜尋
中文書
英文書
簡體書
雜誌
MOOK
文具
玩具親子
美妝配飾
3C
家電
運動休閒
居家生活
動漫部屋
日用清潔
食品




 

天花版bn

12345678910





購物目錄


首頁
3h快送
中文書
英文書
簡體書
雜誌
MOOK
文具
美妝配飾
玩具親子
3C
家電
運動休閒
居家生活
日用清潔
動漫精品
食品






商品次目錄


新書
預購書
推薦書
套書
暢銷書排行榜
書展 / 特惠
讀者書評
出版社專區
香港出版品




 

    您的位置：金石堂網路書店
中文書
電腦資訊
程式設計
其它程式設計
商品詳情

 


現代軟體工程：物件導向軟體發展策略
                        










作者：郭忠義、薛念林、馬尚彬、黃為德
追蹤



出版社：博碩文化  
出版社追蹤


出版日：2015/3/13

ISBN：9789862019979
語言：中文繁體
適讀年齡：全齡適讀


定價：450 元

特價：79 折 356 元 (可得紅利3點)
紅利優惠價：77 折 345 元 (折抵說明)紅利可抵：11 元 
信用卡紅利：可折抵多家銀行 (扣抵說明)
運送方式：全球配送　香港到店　國內宅配國內店取　












<<



>>


https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082b.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-01.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-02.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-03.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-04.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-05.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-06.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-07.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-08.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-09.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-10.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-11.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-12.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-13.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-14.jpg
https://cdn.kingstone.com.tw/book/images/product/20131/2013120331082/2013120331082-15.jpg














                           購買後立即為您進貨!立即購買 預計出貨日：2017/8/1



金石堂讀者好評
 
0 個人說讚，看排行 >






電腦資訊分類追蹤
使用此功能請先登入金石堂網路書店正式會員。這是什麼？




分享：
                            
                           	  










書籍介紹
其他讀者也買
強力推薦
讀者好評(0)
下標籤
團體專屬服務






內容簡介作者目錄
詳細資料






內容簡介 top 
《現代軟體工程：物件導向軟體發展策略》

降低發展軟體系統的工作量、減少發展軟體系統所需的時間是現今軟體發展流程的主要趨勢。本書將說明物件導向軟體工程的特徵、並提供物件導向當中，簡易實用的重要特有功能與技術，善用這些技術將能更有效率地發展軟體系統。

	 

	光靠一種方法或流程就想打遍天下，在軟體發展中是不可行的，所謂「one size fits all」並不適用於軟體發展。因此，本書著重於介紹軟體發展流程的框架（framework），開發者可以將此框架「客製化」以適合本身的需求。讀者在學習本書之後，將有能力應用物件導向技術從事軟體發展工作。

	 

本書有別於傳統的軟體工程書籍，引入現代的先進軟體工程技術，並具有下列特色：

	 

	◎全面理解基本軟體工程與物件導向的觀念。

	◎提供「案例研究」（case study）說明物件導向軟體發展流程。

	◎介紹系統化軟體測試技術與方法，導引出各種敏捷軟體發展方法，如Scrum方法。

	◎根據軟體設計原理與發展樣式，協助發展者發展可保養的軟體系統，提高設計品質。

	◎以敏捷觀念介紹一些有用的建模原理與應用，例如責任驅動設計、模型驅動架構。

	◎專章介紹軟體度量預測與使用CRC卡模型，兼顧傳統與實用性。



作者top 


作者介紹

郭忠義臺北科技大學資訊工程系副教授，多年來開授物件導向程式語言，軟體工程等課程，兼任臺北科技大學計算機與網路中心校務資訊組組長，帶領開發校務資訊系統。曾任教於教育訓練中心，擔任銀行業、電信業、零售業、遊戲產業、IC 設計業、微控制產業等軟體工程師訓練與顧問工作。目前的興趣是開發智慧型軟體系統。薛念林逢甲大學資訊工程系副教授，於大學教授物件導向軟體工程、軟體品質與軟體測試、物件導向設計等課程，目前兼任逢甲大學資訊處系統發展組組長，協助校園資訊化系統之建置。目前的興趣在於軟體設計方法及軟體測試方法。馬尚彬臺灣海洋大學資訊工程系副教授，於大學教授物件導向程式語言、Web 程式設計、軟體工程等課程，研究領域包括服務導向架構與行動運算。目前兼任臺灣海洋大學圖書與資訊處教學支援組組長，帶領開發校園行動軟體系統。黃為德於1972年獲德國慕尼黑工科大學（Technische Universitat Munchen）自然科學博士（Dr.rer.nat.），現任國立中央大學資訊工程學系榮譽教授，多年來開授物件導向軟體工程及軟體度量課程，目前的興趣在於如何應用「模型驅動架構」發展軟體系統。





目錄 top 
現代軟體工程：物件導向軟體發展策略－目錄導覽說明


	第1章 軟體工程概說（Introduction to Software Engineering）

	第2章 物件技術辭彙（Vocabulary of Object Technology）

	第3章 物件導向符號（Object-Oriented Notations）

	第4章 統合軟體發展流程（Unified Software Development Process）

	第5章 軟體設計原理（Software Design Principles）

	第6章 軟體發展樣式（Patterns for Software Development）

	第7章 物件導向軟體測試（Object-Oriented Testing）

	第8章 基本敏捷建模（Basic Agile Modeling）

	第9章 敏捷發展方法（Agile Methods）

	第10章 責任驅動設計（Responsibility-Driven Design, RDD）

	第11章 模型驅動架構」（ Model Driven Architecture, MDA）

	 

	附錄A 軟體度量（Software Metrics）概念

	附錄B CRC 卡（CRC cards）






詳細資料top 

                               語言：中文繁體規格：平裝分級：普級開數：19*26頁數：352
                               出版地：台灣















其它程式設計相關書籍
延伸閱讀推薦
延伸推薦









延伸推薦top 





MAXIMUM PC Spc...

特價 532元
立即購買 




PC DIY! 7月2017...

特價 160元
立即購買 




PC HOME 電腦家庭 7...

特價 171元
立即購買 




PC DIY! 6月2017...

特價 160元
立即購買 




數位狂潮DIGITREND ...

特價 85元
立即購買 




500日圓學會Powerpo...

特價 200元





數位超整理術-照片篇...

特價 295元





這種程度也沒問題!Excel...

特價 359元





商務Excel實踐術 修訂版...

特價 340元





超厲害派遣社員傳授的EXCE...

特價 204元





Android 2.X應用開...

特價 352元
立即購買 











共0篇好評top 
寫書評去 >










商品標籤 (什麼是標籤？)

good辦公軟體



我的標籤新增









團體專屬服務top

團體專屬服務














訂購須知top 
防治詐騙，提醒您!!金石堂及銀行均不會請您操作ATM! 如接獲電話要求您前往ATM提款機，請不要聽從指示，以免受騙上當! 

商品運送說明：
當商品送達金石堂門市或便利商店後，您會收到E-mail及APP出貨/到貨通知，您也可透過【訂單查詢】確認到貨情況。
建議您可下載『金石堂APP』並開啟推撥設定，即可收到相關出貨/到貨通知訊息。
並請您於指定期限內取貨付款，若逾期未取，您取貨的金石堂門市或便利商店將會辦理退貨作業。
產品顏色可能會因網頁呈現與拍攝關係產生色差，圖片僅供參考，商品依實際供貨樣式為準。 

退換貨說明：
依據「消費者保護法」第19條及行政院消費者保護處公告之「通訊交易解除權合理例外情事適用準則」，以下商品購買後，除商品本身有瑕疵外，將不提供7天的猶豫期：

                            1、 易於腐敗、保存期限較短或解約時即將逾期。（如：生鮮食品）
                            2、 依消費者要求所為之客製化給付。（客製化商品）
                            3、 報紙、期刊或雜誌。（含MOOK、外文雜誌）
                            4、 經消費者拆封之影音商品或電腦軟體。
                            5、 非以有形媒介提供之數位內容或一經提供即為完成之線上服務，經消費者事先同意始提供。（如：電子書、電子雜誌、下載版軟體、虛擬商品…等）
                            6、 已拆封之個人衛生用品。（如：內衣褲、刮鬍刀、除毛刀…等）
若非上列種類商品，商品均享有到貨7天的猶豫期（含例假日）。
辦理退換貨時，商品（組合商品恕無法接受單獨退貨）必須是您收到商品時的原始狀態（包含商品本體、配件、贈品、保證書、所有附隨資料文件及原廠內外包裝…等），請勿直接使用原廠包裝寄送，或於原廠包裝上黏貼紙張或書寫文字。退回商品若無法回復原狀，將請您負擔回復原狀所需費用，嚴重時將影響您的退貨權益。










中文書籍分類

文學財經企管生活風格飲食料理心理勵志醫療保健旅遊宗教命理教育/親子教養童書羅曼史輕小說漫畫語言／字辭典藝術設計電腦資訊
程式設計
C／C#／JAVA
VB
其它程式設計


網頁設計
繪圖／影音／多媒體
辦公軟體／應用軟體
作業系統
資料庫
3C數位生活
APPLE專區
認證考試
網路／安全／概論
其他電腦資訊

自然科普人文歷史社會哲思考試書／政府出版品參考書全部的分類 >>



手機版
現代軟體工程：物件導向軟體發展策略




相關商品


雜誌



PC DIY! 7月2017第245期
數位狂潮DIGITREND 2017第44期
PC HOME 電腦家庭 7月2017第258期
MAXIMUM PC Spcl: BUILD IT:The Perfect PC Vol.2 2017
PC DIY! 6月2017第244期









外嵌連結
現代軟體工程：物件導向軟體發展策略



在金石堂門市找此書
                         選擇縣市：

請選擇
基隆市
臺北市
新北市
桃園市
新竹市
新竹縣
宜蘭縣
苗慄市
苗慄縣
南投縣
臺中市
雲林縣
彰化縣
嘉義市
臺南市
高雄市
屏東縣

查詢












↑回上方

金石堂網路書店

首頁
關於金石堂網路書店
人才招募
客服中心
異業合作
出版情報
手機版
關於金石堂書店
金石堂書店全台門市



客服專線：02-2364-9989
傳真：02-2364-4672
客服時間：週一至週五 9：00∼12：30 及 13：30∼18：00（例假日除外）
地址：100 台灣臺北市中正區汀州路三段 160 巷 3 號 2 樓
Copyright©2016, Digital Kingstone Co., Ltd. 金石網絡股份有限公司






瀏覽本站建議使用：Internet Explorer 8.0 以上或 FireFox、Google Chrome、Safari 等瀏覽器。
本網站已依台灣網站內容分級規定處理且符合電子商務、安全交易















金石堂APP出/到貨提醒不漏接，讓您便利隨行
















.13




現代軟體工程：物件導向軟體發展策略 | TAAZE 讀冊生活網路書店 - Yahoo奇摩超級商城




























 


   首頁 購物中心 拍賣 中古車 折扣城 信箱 App下載 


  Yahoo!奇摩超級商城        電腦資訊    全部分類      電腦資訊                
          我的商城     購物車清單 我的最愛 收藏商品 超贈點 折價券 我的專屬優惠 商店客服 超級商城公告    | 登入     訂單查詢     出貨進度 退換申請 發票查詢 新手上路 常見問題      
   商品分類 逛商店    漢神百貨  流行館  型男館  熱銷榜  折扣城  聯名卡  超贈點         登入後可收藏最愛商店    


     服飾服飾   分類  漢神百貨品牌服飾 漢神百貨內睡衣 流行女裝 中大尺碼女裝(M-7L) 女性內睡衣 品牌/潮流男裝  本類推薦  ★ 夏日玩色穿搭5折起 ★ 質 感 女 裝 推 薦 LIST ★ ★MOMA旗艦館：新品上市 ★a la sha：滿2000現折200 ★cantwo：網路獨家均一價 網友熱搜TOP1．洋裝 網友熱搜TOP2．背心 網友熱搜TOP3．寬褲 7/25前抽渡邊直美代言淨味劑 機能內衣超值★專區5折up 型男夏日穿搭★均一價199up    人氣商店  糖罐子►超取99元免運費 Miu-Star►50元券現領現折 東京著衣►100元券現領現折 設計家 原創風格►全店69折 TMH 好評女裝►全店88折 LAMECHIC►5折回饋專區 Life8►居家系列5折 OB大尺碼►襯衫均一價269 Peach Love►全店5折  新進商店  金安德森►萊爾富99免運 新時尚►萊爾富99免運 MOMA►萊爾富99免運         美妝美妝   分類  漢神百貨美妝保養 專櫃美妝/香水 開架美妝/藥妝 美體/私密/手足保養 香氛沐浴/髮品/假髮  本類推薦  2017防曬大集合►看更多 專櫃美妝香水►滿1500打88折 代購超紅►The saem遮瑕膏免運 beautyblender►15周年限定 口紅鎖色神器►怎麼吃喝都不掉色 ★薇佳100元現領現折★ =====本週熱搜關鍵字===== 熱搜No.1 ♥ SOFINA妝前乳 熱搜No.2 ♥ 香水 熱搜No.3 ♥ 法婡雅    人氣商店  86小舖►萊爾富99免運 屈臣氏►現折$50 康是美►滿千折百 小三美日►萊爾富99免運 寶拉珍選►專區79折 薇姿VICHY►滿千折百 巴黎萊雅►彩妝85折 無印良品►滿700折50 巴黎草莓►萊爾富99免運  新進商店  三原水►萊爾富99免運 純淨佳人►去角質買一送一免運 聯合利華►開幕慶現折50元         鞋包/精品/配飾鞋包/精品/配飾   分類  漢神百貨精品珠寶 漢神百貨鞋包配飾 國際精品 品牌鞋包 流行女包/皮夾 流行女鞋 型男鞋包配件 手錶 珠寶/ 飾品/配件  本類推薦  ☀質感穿搭真皮鞋包5折起 ☀新鮮人好感度up穿搭特輯 ☀放暑出遊鞋包全攻略 ☀玩色夏日！50%off 年終優選．潮流時尚單品 ★夏日配飾★新品299起 ★施華洛世奇★開幕慶限時超贈點5倍送 ★型男配件↘精選店家五折起    人氣商店  Pixy►全店任2件79折 天藍小舖►任選2件398 Ann'S►涼鞋季9折 Sophie&Sam►兩雙1500 MAGY瑪格►開幕慶百款$990 FOSSIL►熱銷男夾7折 大新莊鐘錶►MK錶享87折 施華洛世奇►超贈點5倍送+獨家滿額贈 周大福►小小兵黃金現折388  新進商店  Kwoomi►萊爾富99免運 時光鐘錶►萊爾富99免運 OSEWAYA►萊爾富99免運         媽咪寶貝媽咪寶貝   分類  漢神百貨媽咪寶貝 童裝/媽咪裝 寶貝媽咪用品  本類推薦  ▶尿布特賣最低800up ▶新手媽咪懶人包特搜 ▶寶貝玩水必備79折up ＝＝＝夏季熱搜榜＝＝＝ 熱搜推薦 ▶ 涼鞋 熱搜推薦 ▶ 泳裝 熱搜推薦 ▶ 地墊 熱搜推薦 ▶ 費雪 熱搜推薦 ▶ 學步鞋 熱搜推薦 ▶ 親子裝 熱搜推薦 ▶ 哺乳衣 熱搜推薦 ▶ 帽子    人氣商店  AIB小舖☛限時任2件69折 米妮希望屋☛新品79折 QB allshine☛童裝均一價$99 美國派☛新品折後$166/件 baby童衣☛人氣童裝任選65折 拍手童裝☛全館滿699現折100 母嬰同室☛涼感包巾第二件5折 哈韓孕媽咪☛哺乳衣任選79折 橘魔法☛涼鞋第二件76折  新進商店  魔幻甜心►萊爾富99免運 時尚寶貝►萊爾富99免運 UNICO-LIFE►萊爾富99免運         電腦/週邊電腦/週邊   分類  Apple 專區 平板/NB/PC 週邊設備/零組件  本類推薦  【爆殺】微軟藍芽滑鼠↘990 全新SurfacePro↘31888 iPad 9.7吋 WIFI↘10300 ZENBOOK雙碟版↘129990 小米智能攝影機↘1049 4G獨顯i7電競筆電↘36900 EPSON三合一印表機↘4190 128G金屬防水隨身碟↘249 SanDisk雙用隨身碟↘1090 Intuos創意觸控繪圖板↘3400 華碩雙頻IP分享器↘2290 NEW! 小學堂♥雷射印表機    人氣商店  三井3C►買品牌印表機送咖啡券 每家比電子►全館結帳2%回饋! 紐頓e世界►買顯卡送Rocket遊戲 浩昇科技►EPSON原廠匣95折 台灣奇茂購物►全館最高折200 PC PARTY►雷蛇煉獄奎蛇7折 office24列印►綠犀牛下殺88折 科大電腦►全館滿2千折150元 彩虹3C►專區滿3千折300元  新進商店  Luminee►萊爾富99免運 嗨殼F巷►萊爾富99免運 達墨精品3C►萊爾富99免運         家電/視聽家電/視聽   分類  生活/廚房家電 電視/影音/耳機 冷氣/冰箱/洗衣機  本類推薦  強檔▶父親節採購指南討爹歡心 強檔▶揪感心空調讓老爸超涼爽 送88☛B&Q影音劇院現正特價 送88☛你可以讓爸爸學會追劇 送88☛這節怎麼能沒刮鬍刀呢 送88☛學老媽抓住爸爸的口味 好康☛買移動式空調送電風扇 好康☛湯姆森直流扇五折對殺 好康☛無法想像LG冰箱這麼低 好康☛東元洗衣機瘋狂特價中 新奇☛鬼怪男孔劉代言清淨機 新奇☛日本首創水過濾吸塵器    人氣商店  封館殺9折+狂賀開店60年：德昌 現折1,500+日立空調它殺：愛買 滿額折300+電漿除菌清淨：臻淨 滿額折300+代購小家電：樂魔派 滿額折300+米家機器人夯：靂昂 全館!88折+米家影音任挑：牧晨 滿額折300+藍芽耳機夯：夏露奇 滿額折300+潮牌無線耳機：炫燁 滿額折300+藍芽影音喇叭：無線  新進商店  滿額折300+夏普大電它俗：永鴻 滿額折300+南臺灣家電王：秀翔 滿額折300+空調兩天快裝：佳瑩         相機/手機/玩具相機/手機/玩具   分類  單眼相機/鏡頭 數位相機/拍立得 相機週邊 手機 手機配件/通訊 電玩/玩具  本類推薦  ☞新鮮人應援▼滿3千折350元!! ☞新品NEW²報首刊▼幾何手機殼 ★小米夜視攝影↘1100免運 ★SONY運動攝影↘10900免運 ★DJI  SPARK↘15500現貨! ★血氧血壓智能手環↘849起 ★小米1000mah電源↘499 ★暑假瘋玩 熱銷桌遊↘299 ★bitplayd照相手機殼↘1280 ★NOKIA 5 現貨↘5390 ★夏日戲水用玩具↘79起 ★暑假瘋玩 熱銷桌遊↘299    人氣商店  東菱數位科技➤GH5現貨零利率 WL數碼達人➤蔡司鏡頭現折8800元 SG➤全館配件滿6百現折100 一手流通➤手機滿3千現折350 帝谷通信➤OPPO A57$6988 GOSHOP➤小米手環現折$50 數位風潮➤美肌自拍桿買1送1 龐奇桌遊➤滿千折百 再送桌遊 funbox➤全館滿888送$100禮券  新進商店  放肆購►萊爾富99免運 Nydus►萊爾富99免運 亞果元素►全館免運         美食/纖體/保健美食/纖體/保健   分類  漢神百貨美食街 美顏美體/營養保健 冷凍/生鮮/甜點 小吃熟食/糕餅/零食 飲料/食材/雜貨 有機食品  本類推薦  oh爸男神★美食x保健滿千88折! 健康美麗迎夏日★保健熱銷榜 異國零食特搜No1★限時87折! 閨月表達孝心★豬腳麵線No.1 ★網友熱搜=88節蛋糕早鳥預購 ★網友熱搜=小小兵起司拉麵 ★網友熱搜=曾粉 海味叻沙 ★網友熱搜=芒果青冰 ★網友熱搜=愛文芒果 ★網友熱搜=亞培安素2箱立即送 ★網友熱搜=辣炒年糕點心麵 ★網友熱搜=老協珍滴雞精    人氣商店  亞尼克★現領現折50元 愛買★好友週任2件88折 每日優果★全館滿千88折 夢甜屋★生乳捲任2條699免運 大樂購物中心★全館滿千折百 煲好湯★全館滿千88折 飲食生活家★亞培成人系列95折 Double手法式甜點★全館8折 橙姑娘★梅精買五送一  新進商店  青鳥旅行►萊爾富99免運 甜園小舖►萊爾富99免運 豆嫂的零食►萊爾富99免運         醫療/日用品/寵物醫療/日用品/寵物   分類  醫療用品/器材 生活百貨/日用品 寵物/水族用品  本類推薦  ▶一點絕！領券後＄922 ▶開幕慶～熊寶貝買1送6 ▶Durex旗艦店 $ 50領折 ▶愛康衛生棉～再也回不去 熱搜字 ❤ 梅雨季_除濕防霉 熱搜字 ❤ 防蚊 熱搜字 ❤ 液體衛生棉 熱搜字 ❤ 保險套 寵物熱搜❤ 涼墊 寵物熱搜❤推車 寵物熱搜❤ 除臭吸水尿布 寵物熱搜❤ 低粉塵貓砂    人氣商店  ★屈臣氏指定商品75折 ★ASAP天天領50折券 ★康是美＄50領折 ★雙寶醫療 ＄100領折 ★康諾醫療＄100領折 ★維康醫療護具88折 寵物夢工廠►全店滿千折百 King Wang 精品館►滿額送贈品 培菓平價寵物網►全店95折  新進商店  快意生活►萊爾富99免運 木酢達人►萊爾富99免運 派對盒►萊爾富99免運         居家/寢具/傢具居家/寢具/傢具   分類  漢神百貨居家生活 居家/雜貨/園藝 寢具/家飾 傢俱/收納/床墊 廚房鍋具/餐具/用品 衛浴設備/浴室用品 五金/照明工具  本類推薦  酷涼冰沙杯★ 居家好物5折up 蛋黃哥玻璃杯★ 88折＆免運 涼夏消暑首選★ 冰沙杯$63/瓶 涼夏杯具組★ 任選62折 晴雨小幫手★ 遮陽傘↘6折 熱搜字 ❤  鞋櫃 熱搜字 ❤  衣櫃 熱搜字 ❤ 沙發床 熱搜字 ❤  毯/被子 熱搜字 ❤ 天絲（床組）    人氣商店  H&D東稻家居 ♥ 專區86折 翔仔居家 ♥ 新品享85折 完美主義 ♥ 收納盒系列2件79折 棉床本舖 ♥ 滿990送德國兔 收納專科 ♥ 專區最高折1000 戀家小舖 ♥ 簡約素色款9折 Modern Deco ♥ 全館79折 HOLA ♥ 全館滿千折100 特力屋 ♥ 全館滿千折100  新進商店  漫生活居家►萊爾富99免運 OH!Show►萊爾富99免運 易奇寶居家►萊爾富99免運         運動/戶外/交通運動/戶外/交通   分類  漢神百貨休閒運動 腳踏車/汽機車精品 運動器材/用品 運動鞋/服飾/包包 戶外用品/行李箱 樂器 18禁專區  本類推薦  ►Summer趴～IG拍照打卡特輯 ►女孩粉粉運動風折188 ►女人節目●Puma緞帶鞋均一價 ►戶外超大傘●３秒帳專區 ►夏季露營趣●Coleman78折up 熱搜關鍵字 ❤ 比基尼 熱搜關鍵字 ❤ FUN暑假全攻略 熱搜關鍵字 ❤ 防曬穿搭 熱搜關鍵字 ❤ 行李箱 熱搜關鍵字 ❤ 腳踏車    人氣商店  ★SKECHER旗艦店最低55折 ★TheNorthFace新品2件85折 ★A PLUS全店NIKE5折up ★UV100防曬 $99免運 ★運動世界＄150領折 ★宅神也健身小物＄99免運 ★native shoes藝人最愛朝聖拖 ★Pump306最高折188 ★喬依比基尼 滿599送手機套  新進商店  INDULGENCE►萊爾富99免運 IronSteel安全鞋►萊爾富99免運 Juniper 朱尼博►萊爾富99免運         餐券/娛樂/旅遊餐券/娛樂/旅遊   分類  美食餐券 娛樂/生活/服務券 旅遊住宿券  本類推薦  📣  吃喝玩樂暑期全攻略 📣 『限量』饗食天堂餐券免運 『VIP』義大買1送7+快速通關 『預購』丹堤父親節蛋糕88折 『推薦』六福萬怡酒店下午茶 『搶先』六福水樂園299元 『熱賣』騎士堡3小時親子券 『FUN』劍湖山王子飯店住宿 激推品 ►遊樂園門票 激推品 ►親子住宿 激推品 ►高CP吃到飽 超贈點折抵首選★天仁/翰林    人氣商店  農場美食/田園1日遊 ►全台任選 奧塞美術館大展 ►門票即買即用 品花苑午晚餐吃到飽  ►599起 東森海洋4人住宿  ►25折 便利商店24H洗衣服 ► 3件369 日月潭碼頭水沙連飯店►湖景房 冷氣空調清洗►下殺55折 東森海洋4人住宿  ►25折 耐斯王子大飯店4人住宿►44折  新進商店  ♥指舞春秋 舒壓放鬆 ♥台灣農場趴趴走  體驗小小農夫 ♥葛洛莉spa萊爾富99免運         圖書/文具/影音圖書/文具/影音   分類  書籍/雜誌期刊 二手書專區 音樂/電影/影集 文具/辦公用品  本類推薦  ▶珍藏齊柏林 ►關西親子遊-金石堂滿700送70元 ►30色彩筆文具/手藝↘39 ►NORNS-迪士尼文具小物 ►3M生活-文具超值選$18起 ►DATABANK文具-第2件8折 ❤熱搜NO.1~紙膠帶 ❤熱搜NO.2~萬寶龍鋼筆 ❤熱搜NO.3~療癒小物 ❤熱搜NO.4~迪士尼 ❤熱搜NO.5~文創小物    人氣商店  ★讀冊5折up/萊爾富$99免運 ★金石堂-滿700送70元 ★城邦-滿499現折50元 ★大創萊爾富$99免運 ★bluecat萊爾富$99免運 ★書立得童書7折起 ★時報文化69折起 ★麥克英文有聲書78折起 ★今周刊全店免運  新進商店  芮菲客筆►萊爾富99免運 文禮學院►萊爾富99免運 易撕貼本鋪►萊爾富99免運       











超級商城
 > 
圖書/文具/影音
 > 
書籍/雜誌期刊
 > 
電腦資訊
 
















TAAZE 讀冊生活網路書店TAAZE讀冊生活網路書店
｜新書79折！二手書1折起！超商取貨350免運費 











本店購物車
 加入最愛店家



訂閱電子報












商店首頁
商店滿意度
 商店介紹
購物須知
商店客服
限時促銷活動(9)


























分享到Facebook



 分享到Plurk






加入收藏清單








 







 






商品編號：p069972643173
店家貨號：11100740575
購買人次：0
銷售件數：0




熱賣相關品

                        更多
                    







                        網路價 
                        
                        元
                    
購買





 






現代軟體工程：物件導向軟體發展策略
降低發展軟體系統的工作量、減少發展軟體系統所需的時間是現今軟體發展流程的主要趨勢...






網路價


450元 396元
約可獲得超贈點： 3 點 





付款方式


網購必備筆筆享3%．辦卡送威秀電影票


刷卡最有利筆筆享2%最高送2400刷卡金
刷卡紅利折抵 
      接受20家銀行

信用卡 
ATM轉帳 
全家付款取貨 







交貨方式


萊爾富純取貨 (購物滿99元免運費) 、貨運 / 宅配 (購物滿1000元免運費) 、全家取貨付款 (購物滿350元免運費)  




交貨日


  付款完成後 14 工作天出貨  











服務承諾


七日鑑賞期內退貨免運費
 









        立即購買    


加入購物車













商品詳細說明















分級標示普級 


















































出版日期：2015-03-13作者：郭忠義、薛念林、馬尚彬、黃為德出版社：博碩文化股份有限公司ISBN/ISSN：9789862019979裝訂：平裝內容簡介：降低發展軟體系統的工作量、減少發展軟體系統所需的時間是現今軟體發展流程的主要趨勢。本書將說明物件導向軟體工程的特徵、並提供物件導向當中，簡易實用的重要特有功能與技術，善用這些技術將能更有效率地發展軟體系統。光靠一種方法或流程就想打遍天下，在軟體發展中是不可行的，所謂「one size fits all」並不適用於軟體發展。因此，本書著重於介紹軟體發展流程的框架（framework），開發者可以將此框架「客製化」以適合本身的需求。讀者在學習本書之後，將有能力應用物件導向技術從事軟體發展工作。本書有別於傳統的軟體工程書籍，引入現代的先進軟體工程技術，並具有下列特色：◎全面理解基本軟體工程與物件導向的觀念。◎提供「案例研究」（case study）說明物件導向軟體發展流程。◎介紹系統化軟體測試技術與方法，導引出各種敏捷軟體發展方法，如Scrum方法。◎根據軟體設計原理與發展樣式，協助發展者發展可保養的軟體系統，提高設計品質。◎以敏捷觀念介紹一些有用的建模原理與應用，例如責任驅動設計、模型驅動架構。◎專章介紹軟體度量預測與使用CRC卡模型，兼顧傳統與實用性。作者簡介：郭忠義臺北科技大學資訊工程系副教授，多年來開授物件導向程式語言，軟體工程等課程，兼任臺北科技大學計算機與網路中心校務資訊組組長，帶領開發校務資訊系統。曾任教於教育訓練中心，擔任銀行業、電信業、零售業、遊戲產業、IC 設計業、微控制產業等軟體工程師訓練與顧問工作。目前的興趣是開發智慧型軟體系統。薛念林逢甲大學資訊工程系副教授，於大學教授物件導向軟體工程、軟體品質與軟體測試、物件導向設計等課程，目前兼任逢甲大學資訊處系統發展組組長，協助校園資訊化系統之建置。目前的興趣在於軟體設計方法及軟體測試方法。馬尚彬臺灣海洋大學資訊工程系副教授，於大學教授物件導向程式語言、Web 程式設計、軟體工程等課程，研究領域包括服務導向架構與行動運算。目前兼任臺灣海洋大學圖書與資訊處教學支援組組長，帶領開發校園行動軟體系統。黃為德於1972年獲德國慕尼黑工科大學（Technische Universität München）自然科學博士（Dr.rer.nat.），現任國立中央大學資訊工程學系榮譽教授，多年來開授物件導向軟體工程及軟體度量課程，目前的興趣在於如何應用「模型驅動架構」發展軟體系統。目錄：第1章 軟體工程概說（Introduction to Software Engineering）第2章 物件技術辭彙（Vocabulary of Object Technology）第3章 物件導向符號（Object-Oriented Notations）第4章 統合軟體發展流程（Unified Software Development Process）第5章 軟體設計原理（Software Design Principles）第6章 軟體發展樣式（Patterns for Software Development）第7章 物件導向軟體測試（Object-Oriented Testing）第8章 基本敏捷建模（Basic Agile Modeling）第9章 敏捷發展方法（Agile Methods）第10章 責任驅動設計（Responsibility-Driven Design, RDD）第11章 模型驅動架構」（ Model Driven Architecture, MDA）附錄A 軟體度量（Software Metrics）概念附錄B CRC 卡（CRC cards） 





 



9.6
店家滿意度


2.0
出貨天數


0.5
回信天數


1.6
缺貨率%


 





        立即購買
    


加入購物車













消費者滿意度：9.6





平均服務品質

                    出貨速度：2.0 天
                    回信速度：0.5 天
                    缺貨率：1.6 %



                近一週瀏覽次數：145198            






本店商品搜尋






商品名稱
        	店家貨號
        
價格範圍
 ~ 








本店全部分類


全部商品(430144)
      
註目新書(3312)【暑期外語檢定書展】精選2書66折(843)特價書區(33)單本79折，2本再84折(2本66折)(15)單本79折，2本再95折(2本75折)(284)日檢JLPT(167)多益TOEIC(179)托福TOEFL(36)英檢GEPT(83)雅思IELTS(25)韓檢TOPIK(21)【MOOK 夏季清涼寫真】9折只限2周！(44)動漫版(4)性感版(19)純情版(21)【MOOK 美食景點打牙祭】79折起！(51)各地美食情報(23)精選美饌(6)人氣名店(17)小酌好去處(5)【2017東立夏日漫博展】79折起！(653)輕小說(180)BL(352)小說79折(47)畫冊/設定集(20)動漫週邊(42)進擊的巨人週邊(12)【Dimanche迪夢奇】旅遊計畫本、專案日誌(24)【2018跨年日誌】88折(35)【E-books設計生活】科技周邊配件9折起(62)生活旅行系列(10)涼扇系列(7)收納系列(6)充電組系列(6)耳機系列(19)傳輸線系列(14)【熊愛咖啡】任2件8折專區(10)任兩件再8折(6)85折(4)【哈囉珍妮！韓國小物】特選商品75折起(54)創意文具(27)生活雜貨(27)【甘川洞文具房】最低2件6折！(202)2件6折(6)3件85折(98)創意文具(35)生活雜貨(22)紙膠帶(41)【電腦人全書系】全面75折(353)環島之旅(13)異國之旅(47)美味之旅(44)攝影之旅(58)職人之旅(42)3C之旅(45)生活之旅(40)幸福之旅(19)時尚之旅(19)藝術之旅(15)人文之旅(11)【雜誌百元商店街】最低只要10元啊！賣完為止！(239)10元(115)百元(124)【三採童書展】72折起！(630)套書72折(47)任選3書再95折(264)小公主蘇菲亞(21)自然生態探險(16)我的第一本科學漫畫書(29)我是露露(13)科學與生活(1)迪士尼樂園(26)童話故事館(41)楓之谷奇幻學習(18)漫畫大英百科(31)漫畫兒童卡內基(9)漫畫科學實驗(27)漫畫學經典數學理財知識(15)歷史文化探險(13)親子互動共學(33)繪本館(26)【巴巴文化童書7折起！】(47)單書79折，任選2書再95折(7)7折專區(40)【教養X閱讀都是花時間的事】(4317)●2書75折(1367)●套書7折起(23)●特價5折(119)▶專家怎麼說(97)▶老師怎麼說(46)▶一般人怎麼說(20)▶新手父母，別慌！(100)◁引導閱讀(35)◁保護自己(6)◁情緒與家庭(29)◮0-6歲(28)◮7-10歲(391)◮11-15歲(260)媽媽最推薦的繪本(704)台灣東方跨世紀小說(123)推薦出版社(969)小魯(142)台灣東方(204)青林(50)親子天下(186)小天下(76)三採(38)格林(39)維京國際(47)遠流(135)聯經(20)小熊(19)木馬(13)【圓神全書系，2書再95折】最低69折(621)特價69折(23)心理勵志(106)生活風格(46)醫學保健(52)親子教養(44)商業投資(94)文學小說(100)人文社科(89)其他類型(67)【MOOK 居家質感改造！】(62)創意居家(23)幸福空間(7)日用雜貨(14)收納達人(13)個性傢具(5)【MOOK 童書繪本展！】(85)故事繪本(2)益智趣味遊戲(20)女孩最愛美少女(11)男孩心中的英雄(17)親子共享著色本(23)好玩有趣貼紙本(10)歐美童書繪本(2)【MOOK 經典漫畫人物】(40)60s(7)70s(12)80s90s(15)2000s(6)日文MOOK【卡漫嘉年華】(31)女性向作品(6)公式設定(3)技法講座(6)遊戲插畫(9)超人氣繪師(6)情報誌(1)【日文MOOK｜大人小孩都愛的卡通人物】(37)迪士尼系列(13)歡樂史努比(5)懶懶熊&蛋黃哥(5)妖怪手錶(5)慕敏家族&達洋貓(3)三麗鷗&麵包超人(1)菇菇栽培研究室&San-X角落生物(4)其他角色收藏(1)日文MOOK(1695)風格藝術設計(88)藝術欣賞(31)商業設計(31)工藝技術(12)趣味文具(11)電腦設計(3)其它風格收藏設計生活空間佈置(67)居家ＤＩＹ(12)房間佈置(25)室內設計建築景觀(9)庭園園藝(5)商店設計(4)裝璜改造(7)主題風格(5)其它生活空間佈置趣味嗜好收藏(50)相機攝影(50)性感寫真少女人型音樂團體軍事武器模型搖控鐵道世界交通工具汽機車其他收藏其它趣味嗜好收藏卡漫動畫電玩(334)原版漫畫(5)卡漫畫集(153)角色玩偶(91)遊戲電玩(49)特攝＆玩具(23)動漫創作(13)珍稀圖鑑其它卡漫動畫電玩親子兒童繪本(174)兒童百貨(63)插畫繪本(111)其它親子兒童繪本居家生活手藝(517)料理食譜(32)咖啡點心(44)花藝時間(5)雜貨收納(39)串珠飾品(11)手工編織(123)綺麗刺繡(27)實用裁縫(70)特殊手藝(60)娃娃製作(48)彩繪印染(2)摺紙勞作(38)黏土銀飾(9)拼布藝術(9)其它居家生活手藝樂活休閒旅遊(241)人氣美食(30)旅遊情報(168)文藝史地(8)運動競技(18)寵物世界(17)其它樂活休閒旅遊美容美髮彩妝(36)專業髮妝(4)女性美髮(10)男性美髮(3)指甲彩繪(19)銀飾刺青其它美容美髮彩妝女性流行時尚(136)女性時尚(89)女明星(33)浪漫婚紗(14)女性精品飾物女性影視寫真其它女性流行時尚男性流行時尚(52)美女寫真(22)男性影視寫真男性風尚(27)男性精品飾物(1)男明星(2)其它男性流行時尚【二手書】失戀-最療癒書展-滿499元現折50元(10312)愛情作家陪著你(1067)學習放手(99)單身也很美好(206)老師的話要聽(3070)交新朋友去(1447)超想運動der!(1071)下次戀愛前瘦下來(3352)【二手書】夏日放鬆指南(5253)心靈舒壓(1574)運動保健(1771)手作好療癒(647)吃出好體質(1261)【二手書】女人我最大--姐之放鬆指南(6118)給女性的主題旅遊(332)在台灣吃吃喝喝(208)包包款一款就出發!(96)爬山露營、野炊愛好者(28)超好買的旅行-香港(192)近一點的旅行-韓國日本(1486)熱情一點的旅行-東南亞(316)瘦身(2340)收納(326)美妝(1018)保養(108)【二手書】孩子們最喜歡的書(4451)圖畫書(795)少兒文學(1816)少兒知識家(524)語言學習(133)親子關係(1183)【二手書】2016二手書暢銷榜(2352)世界文學(55)華文文學(28)心理勵志(62)漫畫/輕小說(56)商業(99)兒少讀物 親子教養(1387)高單價童書/套書5折起(18)繪本(217)兒童/青少年讀物(620)嬰幼兒+學齡前寶貝(142)親子教養看這邊(390)社科x哲學x史地(122)生活風格x語言學習(53)科學x醫學保健(426)奇幻x推理小說(64)【二手書】長照書展│我們一起變老(189)高齡社會學(16)銀髮族告白(28)樂齡生活(43)照顧的勇氣(28)失智不失志(13)臨終，安寧並不難(21)重生的契機(40)【二手書】淘寶區│單一價x好折扣(18792)►二手書館◄銅板價9元起(5590)9元↘(45)19元↘(92)29元↘(2419)39元↘(1243)49元↘(1791)►二手書館◄挖寶專區1折起(13202)1折以下(862)2折以下(4987)3折以下(1916)4折以下(2131)5折以下(3306)【二手書】光復節‧台灣小旅行(257)台灣主題玩法(74)臺北新北基隆(73)桃園新竹苗慄(9)臺中彰化南投(16)雲林嘉義臺南(11)高雄屏東(28)宜蘭花蓮台東(41)離島(5)【二手書】幸福食光│美食書展1折起(33)台灣夜市X小吃(6)下午茶X點心(3)圍爐新菜色(6)一鍋就上菜(3)呷菜 健康愛地球(7)食品安全好重要(8)【二手書】創作者的日常技能(28)寫作x編劇x說故事(1)觀察x攝影x感動瞬間(4)聽歌x說曲x玩音樂(8)晴耕x雨讀x農耕趣(2)舌尖x回憶x好味道(13)【二手書】我欣賞自己│心理勵志書展(53)作夢就要作大的!(6)敢追夢的人(14)挫折的力量(16)作自己想作的(3)海外打工X異地探索自我(14)認識自己，走自己的路!【二手書】ϟ圖書館預約不到ϟ 書展(21)ϟ起毛邊的ϟ 超熱門借閱(1)ϟ借不到的ϟ 推理小說(1)ϟ排到死的ϟ 奇幻x武俠小說(12)ϟ還沒學會就要還的ϟ 職場成功術ϟ集數長的ϟ 羅曼史X輕小說(6)ϟ大家搶的ϟ 童書X親子教育ϟ有力量的ϟ 生活X心理勵志(1)【二手書】玩不膩！發現日本的N種玩法！(41)第一次自由行(13)鐵道.電車.散策 一路慢慢晃(7)四季風景x在地生活(7)設計.雜貨.文具.手帳.美食(10)奢華行程vs.小資之旅(4)中文書(108197)華文文學(5129)華文文學研究(594)中國古典文學(766)現代詩(591)現代散文(1073)小說(1978)文學人物傳記(51)其它華文文學(76)世界文學(3678)世界文學總論(154)神話／寓言(51)世界詩集(73)日本文學(1121)英美文學(1393)法國文學(264)德國文學(118)俄國文學(52)義大利文學(35)西葡語文學(34)其它各國文學(278)文學人物傳記(15)其它世界文學(90)類型文學(5081)驚悚／懸疑小說(963)推理小說(897)科幻小說(124)奇幻小說(1701)武俠小說(289)歷史小說(406)網路小說(608)其它類型文學(93)歷史地理(3089)史學理論(114)中國歷史(927)台灣研究(534)西方歷史(285)西方國別史(280)歷史人物(530)地理(69)軍事(272)其它歷史地理(78)哲學宗教(3712)中國哲學(565)西方哲學(423)佛教(1249)道教(71)基督宗教(638)其他宗教(490)其它哲學宗教(276)社會科學(4093)政治(861)經濟(562)社會(1079)法律(656)人類(77)大眾傳播(125)性別研究(81)文化研究(567)其它社會科學(85)藝術(3742)藝術總論(289)音樂(470)攝影(635)電影(281)戲劇(266)舞蹈(20)美術(121)繪畫(856)書法(154)雕塑(22)工藝(80)藝術品(40)藝術人物傳記(143)時尚(104)其它藝術相關(261)建築設計(1141)建築總論(115)建築史(12)各式建築(137)各國建築(41)景觀建築(23)室內設計(426)平面設計(196)作品集(31)產品設計(103)其它建築設計(57)商業(4721)管理學(102)經營管理(758)市場行銷(707)人力資源(107)科技管理(56)專案管理(13)財務金融(204)投資理財(1226)創業(193)職場成功法(1054)企業與企業家(223)其它商業相關(78)語言(4617)語言學(94)英文(1956)日文(809)中文(359)語言檢定(888)留遊學(46)韓文(268)泰文(24)印尼語(15)越南語(27)法文(51)西班牙文(35)其他語言(40)其它語言相關(5)電腦(2561)電腦總論(143)應用軟體(868)程式語言(575)多媒體影音(249)WWW(103)硬體／網通(198)MAC／APPLE(83)檢定認證(275)電玩遊戲(49)其它電腦相關(18)生活風格(8651)休閒娛樂(379)飲食烹調(3448)醇酒(147)美妝(439)影視寫真(173)命理／占星(883)手工藝(1278)園藝(305)棋奕／遊戲(288)收藏(182)運動(468)寵物(324)性愛（限）(104)文具雜貨(96)其它生活風格相關(137)醫學保健(4115)中醫(483)身心靈養生(522)瘦身法(480)西醫(268)護理／保健(1630)疾病醫療(525)公共衛生(61)醫界人物傳記(34)其它醫學保健相關(112)旅遊(2692)臺灣(478)主題旅遊(324)觀光學(47)中國(193)東北亞(791)東南亞(168)亞洲其他(43)紐澳、大洋洲(52)北美洲(91)中南美洲(20)歐洲(412)非洲(20)其它旅遊相關(53)漫畫／輕小說(23339)漫畫(12335)輕小說(4796)BL(1538)羅曼史(2274)漫畫技法(145)圖文創作(514)其它漫畫／輕小說 (1737)政府考用(3877)升學考試(770)語言能力測驗與考試(19)公職人員考試(781)專技人員考試(249)公營機關考試(169)師資甄試／檢定(44)金融證照考試(116)技能檢定考(426)其他考試檢定(49)政府出版品(793)其它政府考用(461)少兒親子(13806)嬰幼兒(454)學齡前幼兒(1235)圖畫書(4481)幼教多媒體(174)少兒文學(3488)少兒知識家(1911)語言學習(681)親子關係(700)其它少兒親子(682)教育(3309)教育學(497)學前教育(91)初等教育(391)中等教育(182)高等教育(1262)技職教育(160)留學／升學(81)終身學習(126)終身學習特殊教育(40)家庭關係(142)學習方法(262)其它教育相關(75)科學(1586)其它科學相關(44)自然科學(451)數學(165)物理學(80)化學(58)生命科學(221)天文／地球(139)應用科學(428)心理勵志(4817)心理學理論(527)輔導諮商(365)兩性關係(537)職場學(155)成功學(848)說話術(426)心靈雞湯(1576)名人勵志(204)其它心理勵志(179)傳記(441)明星(20)政治人物(112)商業人物(39)社會人物(99)文學家(43)思想家(24)藝術家(44)科學家(36)其它傳記相關(24)中文雜誌(1440)財經企管(233)工商企管(127)投資理財(57)新聞時事(49)人文文學(148)人文(76)文學(61)地理(11)科學科技(13)自然科學(11)應用科學(2)電腦3C(10)3C個人電腦(8)遊戲電玩(2)生活風格(213)女性風尚(82)男性風尚(45)家庭生活(83)手工技藝(3)休閒嗜好(170)汽機車(35)運動競技(27)相機攝影(9)動漫玩具(24)模型收藏(38)軍事武器(16)刺青其它嗜好(21)影視娛樂(32)偶像寫真(14)電影情報(6)娛樂新聞(12)旅遊情報(19)語言學習(105)英文(87)日文(18)藝術欣賞(36)藝術欣賞設計(36)建築裝潢(46)建築欣賞(10)室內設計(36)音樂音響(11)古典音樂(11)親子育樂(49)兒童刊物(3)青少年刊物(16)教育(21)懷孕育兒(9)其他(355)歐美雜誌(887)財經企管(55)工商企管(27)投資理財(7)新聞時事(21)人文文學(25)人文(3)文學(17)地理(5)科學科技(11)自然科學(9)應用科學(2)電腦3C(16)3C遊戲電玩(8)電腦設計(8)網路/程式生活風格(176)女性風尚(91)男性風尚(41)家庭生活(35)手工技藝(9)休閒嗜好(79)汽機車(2)運動競技(29)相機攝影(35)刺青(1)醇酒(12)影視娛樂(13)偶像寫真電影情報(5)娛樂新聞(8)旅遊情報(6)藝術欣賞(67)美術(8)設計(55)舞蹈(4)建築裝潢(67)建築欣賞(9)室內設計(58)音樂音響(33)古典音樂(3)流行搖滾(20)爵士音樂(3)類型音樂(2)樂器(5)親子育樂(1)其他(338)創意生活｜創意文具(1926)書寫文具(170)鉛筆(37)自動鉛筆(23)簽字筆(1)原子筆(19)自動原子筆鋼筆(7)鋼珠筆(8)多用筆(4)沾水筆(7)墨水瓶(6)筆蕊(7)自動筆芯(2)填充用品寫用品禮盒組(7)書寫用品其他(42)其他事務文具(492)裝訂用品(21)黏貼用品(6)修正用品(1)車票夾切割剪用品(4)磁鐵(78)收納(28)文件夾(72)書衣(58)筆袋(82)證件夾(22)書籤(77)筆盒(12)筆筒(2)名片盒(27)資料架&盒(2)雜誌箱其他紙品系列(784)海報(51)明信片(222)卡片(109)筆記本(222)筆記書(1)無時效性日誌(75)行事曆(1)萬用手冊(6)記帳本(25)信封、信紙(4)便條紙(49)多孔內頁素描本(14)剪貼本(1)集章本(4)其他美術繪圖(145)美術用筆(78)顏料(11)素描本(31)美術用紙(11)製圖用品(4)美術用品其他(10)其他辦公事務精品(39)精筆收納皮件(9)萬用手冊桌上用品(28)事務精品其他(2)其他時效性紙品(4)月曆日誌手帳卡片海報桌曆掛曆(1)時效性商品其他其他(3)3C電腦科技(168)電腦耗材(13)電腦傳輸用品(12)滑鼠(13)隨身碟(1)手機配件(27)手機收納用品(6)耳機配件(54)iPad周邊配件(2)iPhone周邊配件(4)電腦包(8)相機包數位用品其他(28)其他其他(124)創意生活｜生活雜貨(1937)手作DIY(322)紙膠帶(162)收納本(12)貼紙(49)剪貼本印章(60)印泥(35)ＤＩＹ相關(4)手作用品其他其他包裝收納(30)包裝紙包裝盒(1)提袋(6)填充物品包裝收納其他(1)緞帶禮花(22)其他禮品收藏(41)禮品收藏其他(8)相本(1)相框(1)電子數位相框(2)畫框紀念品(6)手錶(8)鬧鐘(5)掛鐘(10)其他提袋收納(217)皮包背包(61)書包提袋(27)購物袋(44)環保袋(11)零錢包(24)提袋收納其他(50)其他旅行用品(187)弔牌(21)提袋(19)購物袋(42)收納用品(22)整理用品(52)其他旅行用品其他(31)節慶禮品(51)紅包袋(36)賀年卡弔.掛飾擺設用品玩偶(13)玩具(1)禮品節慶禮品其他(1)其他衣飾用品(264)服裝(152)飾品(60)衣飾配件帽子(6)圍巾胸針(31)徽章(12)衣飾用品其他(3)其他居家用品(414)生活清潔用品(83)裝飾用品(19)餐飲用品(257)收納整理用品(1)居家用品其他(54)其他美食禮品(194)咖啡(137)茶(38)果醬米麵(7)茶點(4)飲品(7)美食禮品其他(1)禮盒組其他兒童玩具、教具(44)玩具玩偶類(4)益智(28)美育教材兒童ＤＩＹ(5)自然科學教材教具兒童玩具教具其他(7)其他模型其他(173)唱片CD(379)品味生活(145)心靈療癒(32)身心放鬆(13)靜坐冥想自然音樂(10)輕音樂(6)New Age新世紀(21)跨界音樂(15)音樂周邊/有聲書(40)生活綜合/合輯(8)其他古典美學(17)交響曲(1)協奏曲(6)奏鳴曲(1)古典舞曲管弦樂(1)室內樂(5)獨奏曲(3)古典綜合/合輯其他流行音樂(90)國台語男歌手(21)國台語女歌手(15)粵語歌手/團體/合輯日韓男歌手日韓女歌手西洋男歌手西洋女歌手(1)嘻哈/R&B(1)電子/舞曲(1)流行搖滾/重金屬(1)亞洲樂團/團體(33)亞洲流行綜合/合輯(9)流行綜合/合輯(8)其他爵士藍調(32)爵士演唱(13)爵士演奏(9)跨界爵士(2)咆勃/新咆勃/硬咆勃靈魂/放克/拉丁/巴沙諾瓦節奏藍調鄉村/民謠藍調(1)現代/城市藍調原聲藍調(3)藍調綜合/合輯爵士綜合/合輯(4)其他世界音樂(18)宗教音樂(3)民族音樂(3)鄉村/都市民謠(3)亞洲北/中/南美洲(1)歐洲中東/非洲世界音樂綜合/合輯(8)其他表演藝術(42)歌劇(3)戲曲/國樂/相聲舞臺劇樂器演奏(37)跨界美聲(2)節慶音樂表演藝術綜合/合輯其他影視配樂   (10)國內電視配樂國內電影配樂(8)國外電視配樂影視/電玩綜合/合輯(2)其他兒童音樂(25)主題音樂童謠/有聲書(1)兒童學習(2)親子音樂其他(22)二手中文書(317809)華文文學(25380)華文文學研究(1875)中國古典文學(2081)現代詩(703)現代散文(4393)小說(16191)文學人物傳記(137)世界文學(26808)世界文學總論(1001)神話/寓言(429)世界詩集(152)日本文學(7210)英美文學(11948)法國文學(1996)德國文學(669)俄國文學(187)義大利文學(297)西葡語文學(157)其他各國文學(2716)文學人物傳記(46)類型文學(19350)驚悚／懸疑小說(3066)推理小說(4547)科幻小說(480)奇幻小說(7530)武俠小說(1104)歷史小說(716)網路小說(1907)歷史地理(8256)史學理論(320)中國歷史(1640)台灣研究(933)西方歷史(1235)西方國別史(691)歷史人物(2621)地理(407)軍事(409)哲學宗教(7023)中國哲學(667)西方哲學(2195)佛教(1957)道教(62)基督宗教(1601)其他宗教(468)東方哲學(73)社會科學(12165)政治(1814)經濟(3271)法律(4227)人類(1784)大眾傳播(300)性別研究(613)文化研究(156)藝術(10881)藝術總論(1342)音樂(1003)攝影(1144)攝影(1803)電影(1074)戲劇(553)舞蹈(166)美術(384)繪畫(1855)書法(73)雕塑(36)工藝(380)藝術品(63)藝術人物傳記(288)時尚(717)建築設計(3518)建築總論(274)建築史(14)各式建築(171)各國建築(133)景觀建築(38)室內設計(1451)平面設計(1358)作品集(79)商業(23681)管理學(1340)經營管理(4589)市場行銷(3781)人力資源(1393)科技管理(322)財務金融(2395)專案管理(60)投資理財(2954)創業(655)職場成功法(5021)企業與企業家(1171)語言(9508)語言學(442)英文(5333)日文(1419)中文(578)語言檢定(1270)留遊學(162)韓文(159)法文(78)德文(37)西班牙文(19)其他語言(11)電腦(502)電腦總論(81)應用軟體(176)程式語言(84)多媒體影音(72)WWW(38)硬體／網通(33)MAC／APPLE(9)檢定認證電玩遊戲(9)生活風格(16367)休閒娛樂(1213)飲食烹調(5788)醇酒(221)美妝(1856)影視寫真(635)命理／占星(1328)手工藝(1919)園藝(390)棋奕／遊戲(378)收藏(225)運動(1247)寵物(647)性愛（限）(354)文具雜貨(166)醫學保健(14198)中醫(969)身心靈養生(1089)瘦身法(3571)西醫(1560)護理／保健(5275)疾病醫療(1022)公共衛生(454)醫界人物傳記(258)旅遊(8509)臺灣(1537)主題旅遊(1636)觀光學(234)中國(483)東北亞(2683)東南亞(433)亞洲其他(70)紐澳、大洋洲(152)北美洲(248)中南美洲(22)歐洲(999)非洲(12)漫畫／輕小說(34669)漫畫(17247)輕小說(10294)BL(4451)羅曼史(668)圖文創作(2009)政府考用(4468)升學考試(587)語言能力測驗與考試(165)公職人員考試(2779)專技人員考試(444)公營機關考試(394)師資甄試／檢定(99)少兒親子(15668)嬰幼兒(722)學齡前幼兒(779)圖畫書(3574)幼教多媒體(166)少兒文學(5485)少兒知識家(1817)語言學習(471)親子關係(2654)教育(6571)教育學(2844)學前教育(320)初等教育(20)中等教育(25)高等教育(1642)技職教育(273)特殊教育(387)學習方法(1060)科學(5983)自然科學(1235)數學(720)物理學(584)化學(257)生命科學(1007)天文／地球(634)應用科學(1546)心理勵志(22573)心理學理論(2771)輔導諮商(1319)兩性關係(4144)職場學(2828)成功學(4436)說話術(1085)心靈雞湯(4922)名人勵志(1068)傳記(1081)明星(76)政治人物(236)商業人物(138)社會人物(372)文學家(60)思想家(38)藝術家(96)科學家(65)絕版二手書(7431)華文文學(656)世界文學(999)類型文學(316)心理勵志(533)漫畫／輕小說(508)少兒親子(144)歷史地理(194)哲學宗教(136)社會科學(390)藝術(209)建築設計(120)商業(979)科學(96)電腦(7)生活風格(340)醫學保健(527)旅遊(433)政府考用(421)教育(180)傳記(14)語言(229)其他(33219)二手簡體書文學其他文學理論中國古典文學華文創作現當代文學世界文學人物傳記網路／青春文學文學工具書藝術其他藝術理論繪畫建築設計戲劇／舞臺音樂／舞蹈雕塑／工藝書法／篆刻古玩／收藏電影／電視攝影歷史其他史學理論域外漢學古籍經典史料方志歷史讀物中國史風俗習慣考古文物紀實文獻世界史文化史歷史地理地理理論其他其他地理學理論國外旅遊指南中國旅遊指南地圖工具書哲學其他哲學理論世界哲學中國哲學邏輯學／倫理學／美學哲學讀物心理其他心理學理論研究方法勵志／普及讀物宗教其他宗教學理論佛教天主教／基督教其他宗教／地方信仰道教伊斯蘭教宗教讀物社科財經投資其他社科工具書社科總論政治軍事法律經濟／財務文化社會商管／理財出版／傳播教育其他各式教案教育理論課程教材留學／考研／考用高等／成人教育中小學教輔／讀物少兒／親子教養語言其他語言學理論韓語漢語法語俄語翻譯與寫作國學／小學英語日語德語其他語言科學力學其他科普讀物自然科學總論電腦／網路數學物理學／化學生物科學天文／地球科學工業技術農業科學生活動漫／漫畫其他美體美妝兩性關係風水占卜武術運動保健養生飲食文化棋類博弈益智／遊戲寵物／園藝手工藝／居家生活醫學其他中西醫結合醫學總論中國醫學西洋醫學方劑／藥學綜合工具書各類圖鑑其他百科全書回頭書華文文學華文文學研究中國古典文學現代詩現代散文小說文學人物傳記世界文學世界文學總論神話/寓言世界詩集日本文學英美文學法國文學德國文學俄國文學其他各國文學類型文學驚悚／懸疑小說推理小說科幻小說奇幻小說武俠小說歷史小說大眾文學歷史地理史學理論中國歷史台灣研究西方歷史西方國別史歷史人物地理軍事哲學宗教中國哲學西方哲學佛教道教基督宗教其他宗教東方哲學社會科學政治經濟社會法律人類大眾傳播性別研究文化研究藝術藝術總論音樂戲劇工藝舞蹈攝影電影美術繪畫書法雕塑藝術品藝術人物傳記時尚建築設計各國建築室內設計商業管理學經營管理市場行銷人力資源財務金融投資理財創業職場成功法企業與企業家語言語言學英文日文中文其他亞洲語言歐、非洲語言學習數位語言學習語言檢定留遊學韓文泰文印尼語越南語法文德文西班牙文義大利文阿拉伯文其他語言生活風格休閒娛樂飲食烹調命理／占星手工藝運動性愛（限）醫學保健中醫瘦身法西醫護理／保健公共衛生旅遊漫畫／輕小說少兒親子學齡前幼兒圖畫書少兒文學少兒知識家親子關係教育教育學學前教育終身學習特殊教育家庭關係科學生命科學天文／地球心理勵志心理學理論輔導諮商兩性關係職場學成功學

 

平臺說明



開創新客群，同時擁有電腦版、手機版&APP商店！專人輔導立即開店！


服務說明
購物須知
常見問題



 





熱賣相關品
（購買這件商品的人，通常也會購買下列商品。）
TOP




 » 更多商品 






商品促銷區TOP







在家玩蒙特梭利：掌握0～6歲九大敏感期，48...
網路價：237元




» 更多商品











[x]





[x]










手機逛超級商城
加入超級商城粉絲團
退貨辦法
服務說明
我要開店


服務條款
隱私權






加入收藏清單





商品名稱：



標籤：(非必填)


 
你還可新增  個標籤 (每次新增限輸入一個，每次限10個字)您可自訂標籤，方便資料分類與管理 
常用的標籤：








資料傳輸中.






  








物件導向與軟體工程-金石堂網路書店














































會員功能列

 


加入會員
登入




您好
登出


會員專區
客服中心
查訂單


 
（ 0 件）0 元
結帳












購物車
（ 0 件）0 元
結帳



金石堂及銀行均不會請您操作ATM!  如接獲電話要求您前往ATM提款機，請不要聽從指示，以免受騙上當!
    (詳情)




物件導向與軟體工程－金石堂網路書店歡迎您加入博客和facebook 臉書粉絲團！The largest retail books store chains in Taiwan! 





TOP關鍵字

2017希望書包
怪獸的產地
七龍珠
肆一 
蠟筆小新套票
抽EC






全館搜尋
中文書
英文書
簡體書
雜誌
MOOK
文具
玩具親子
美妝配飾
3C
家電
運動休閒
居家生活
動漫部屋
日用清潔
食品




 

天花版bn

12345678910





購物目錄


首頁
3h快送
中文書
英文書
簡體書
雜誌
MOOK
文具
美妝配飾
玩具親子
3C
家電
運動休閒
居家生活
日用清潔
動漫精品
食品






商品次目錄


新書
預購書
推薦書
套書
暢銷書排行榜
書展 / 特惠
讀者書評
出版社專區
香港出版品




 

    您的位置：金石堂網路書店
中文書
電腦資訊
程式設計
其它程式設計
商品詳情

 


物件導向與軟體工程
                        










作者：施純協
追蹤



出版社：知行文化  
出版社追蹤


出版日：2000/7/1

ISBN：9789579575812
語言：中文繁體
適讀年齡：全齡適讀


定價：300 元

特價：89 折 267 元 (可得紅利2點)
紅利優惠價：86 折 259 元 (折抵說明)紅利可抵：8 元 
信用卡紅利：可折抵多家銀行 (扣抵說明)
運送方式：全球配送　香港到店　國內宅配國內店取　












<<



>>


https://cdn.kingstone.com.tw/book/images/product/20131/2013120041486/2013120041486b.jpg














                           本商品已絕版無法購買
                           


金石堂讀者好評
 
0 個人說讚，看排行 >






電腦資訊分類追蹤
使用此功能請先登入金石堂網路書店正式會員。這是什麼？




分享：
                            
                           	  










書籍介紹
其他讀者也買
強力推薦
讀者好評(0)
下標籤
團體專屬服務






內容簡介目錄
詳細資料






內容簡介 top 
《物件導向與軟體工程》
                                物件導向與軟體工程
　台灣目前是全球電腦硬體代工重鎮，而對未來軟體工業的龐大產值，世界各國莫不加緊腳步，爭相發展軟體工業，建立垂直分工體系，以取得競爭優勢。新一代的「軟體工程」技術，一般認為，以「物件導向」為主流。物件導向的思維，提高了軟體的再利用性，使軟體的開發過程，可以像硬體的組裝一樣，提高軟體的效率與品質。

　「軟體工程」一詞早於「物件導向」﹔但是「物件」的思維卻遠早於「軟體工程」。舊瓶新裝，將既有的邏輯思維重新包裝，可再創「物件」之時代意義。天底下本來就沒有什麼新鮮事，就像真實世界的原子一樣，物件的觀念其實早就存在，觀念的建立乃改變之源頭﹔心態的調整乃成功之要素。讓我們從邏輯思維的角度，來看「物件導向與軟體工程」。
關於作者
　總監：施教授純協博士（執行長）﹔輔導：陳天惠　副理（寶成工業「股」附設訓練暨研發中心）﹔著作群：陳辰榮、張文瑋、郭政育、謝宜純﹔祥宇開創新科技小組：李奕瑋、張崇文。



目錄 top 
物件導向與軟體工程－目錄導覽說明

話說物件
話說軟體工程
物件導向分析
物件導向設計
物件導向程式語言
物件導向程式設計






詳細資料top 

                               語言：中文繁體規格：平裝分級：普級頁數：243















其它程式設計相關書籍
延伸閱讀推薦
延伸推薦









延伸推薦top 





MAXIMUM PC Spc...

特價 532元
立即購買 




PC DIY! 7月2017...

特價 160元
立即購買 




PC HOME 電腦家庭 7...

特價 171元
立即購買 




PC DIY! 6月2017...

特價 160元
立即購買 




數位狂潮DIGITREND ...

特價 85元
立即購買 




500日圓學會Powerpo...

特價 200元





數位超整理術-照片篇...

特價 295元





這種程度也沒問題!Excel...

特價 359元





商務Excel實踐術 修訂版...

特價 340元





超厲害派遣社員傳授的EXCE...

特價 204元





Android 2.X應用開...

特價 352元
立即購買 











共0篇好評top 
寫書評去 >










商品標籤 (什麼是標籤？)

辦公軟體



我的標籤新增









團體專屬服務top

團體專屬服務














訂購須知top 
防治詐騙，提醒您!!金石堂及銀行均不會請您操作ATM! 如接獲電話要求您前往ATM提款機，請不要聽從指示，以免受騙上當! 

商品運送說明：
當商品送達金石堂門市或便利商店後，您會收到E-mail及APP出貨/到貨通知，您也可透過【訂單查詢】確認到貨情況。
建議您可下載『金石堂APP』並開啟推撥設定，即可收到相關出貨/到貨通知訊息。
並請您於指定期限內取貨付款，若逾期未取，您取貨的金石堂門市或便利商店將會辦理退貨作業。
產品顏色可能會因網頁呈現與拍攝關係產生色差，圖片僅供參考，商品依實際供貨樣式為準。 

退換貨說明：
依據「消費者保護法」第19條及行政院消費者保護處公告之「通訊交易解除權合理例外情事適用準則」，以下商品購買後，除商品本身有瑕疵外，將不提供7天的猶豫期：

                            1、 易於腐敗、保存期限較短或解約時即將逾期。（如：生鮮食品）
                            2、 依消費者要求所為之客製化給付。（客製化商品）
                            3、 報紙、期刊或雜誌。（含MOOK、外文雜誌）
                            4、 經消費者拆封之影音商品或電腦軟體。
                            5、 非以有形媒介提供之數位內容或一經提供即為完成之線上服務，經消費者事先同意始提供。（如：電子書、電子雜誌、下載版軟體、虛擬商品…等）
                            6、 已拆封之個人衛生用品。（如：內衣褲、刮鬍刀、除毛刀…等）
若非上列種類商品，商品均享有到貨7天的猶豫期（含例假日）。
辦理退換貨時，商品（組合商品恕無法接受單獨退貨）必須是您收到商品時的原始狀態（包含商品本體、配件、贈品、保證書、所有附隨資料文件及原廠內外包裝…等），請勿直接使用原廠包裝寄送，或於原廠包裝上黏貼紙張或書寫文字。退回商品若無法回復原狀，將請您負擔回復原狀所需費用，嚴重時將影響您的退貨權益。










中文書籍分類

文學財經企管生活風格飲食料理心理勵志醫療保健旅遊宗教命理教育/親子教養童書羅曼史輕小說漫畫語言／字辭典藝術設計電腦資訊
程式設計
C／C#／JAVA
VB
其它程式設計


網頁設計
繪圖／影音／多媒體
辦公軟體／應用軟體
作業系統
資料庫
3C數位生活
APPLE專區
認證考試
網路／安全／概論
其他電腦資訊

自然科普人文歷史社會哲思考試書／政府出版品參考書全部的分類 >>




相關商品


雜誌



PC DIY! 7月2017第245期
數位狂潮DIGITREND 2017第44期
PC HOME 電腦家庭 7月2017第258期
MAXIMUM PC Spcl: BUILD IT:The Perfect PC Vol.2 2017
PC DIY! 6月2017第244期









外嵌連結
物件導向與軟體工程



在金石堂門市找此書
                         選擇縣市：

請選擇
基隆市
臺北市
新北市
桃園市
新竹市
新竹縣
宜蘭縣
苗慄市
苗慄縣
南投縣
臺中市
雲林縣
彰化縣
嘉義市
臺南市
高雄市
屏東縣

查詢












↑回上方

金石堂網路書店

首頁
關於金石堂網路書店
人才招募
客服中心
異業合作
出版情報
手機版
關於金石堂書店
金石堂書店全台門市



客服專線：02-2364-9989
傳真：02-2364-4672
客服時間：週一至週五 9：00∼12：30 及 13：30∼18：00（例假日除外）
地址：100 台灣臺北市中正區汀州路三段 160 巷 3 號 2 樓
Copyright©2016, Digital Kingstone Co., Ltd. 金石網絡股份有限公司






瀏覽本站建議使用：Internet Explorer 8.0 以上或 FireFox、Google Chrome、Safari 等瀏覽器。
本網站已依台灣網站內容分級規定處理且符合電子商務、安全交易















金石堂APP出/到貨提醒不漏接，讓您便利隨行
















.13








天瓏網路書店-現代軟體工程：物件導向軟體發展策略



































天瓏網路書店
全台最齊全
中英文電腦書專賣店







天瓏資訊圖書粉絲專頁




搜尋


資料科學
簡體書
Packt
微服務
工程師必讀經典
英文書新到貨
Python
Tensorflow
無瑕程式碼








        現代軟體工程：物件導向軟體發展策略
        


        郭忠義、薛念林、馬尚彬、黃為德
        
      




 


出版商:
博碩


出版日期:
2015-03-12


定價:
$450


售價:

7.8 折
          $351



語言:
繁體中文


頁數:
352


ISBN:
9862019972

ISBN-13:
9789862019979





      立即出貨
        (庫存 < 10)













買這商品的人也買了...







 
$550
              售價: $468
          
笑談軟體工程：敏捷開發法的逆襲－導入 Scrum，讓你的軟體開發人生從黑白變彩色！





 
$650
              售價: $507
          
Continuous Delivery 中文版：利用自動化的建置、測試與部署完美創造出可信賴的軟體發佈(Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation)





 
$580
              售價: $493
          
笑談軟體工程：例外處理設計的逆襲





 
$580
              售價: $452
          
無瑕的程式碼－敏捷軟體開發技巧守則 (Clean Code: A Handbook of Agile Software Craftsmanship)





 
$460
              售價: $363
          
軟體工程理論與實務應用(第三版)





 
$800
              貴賓價: $760
          
軟體工程－軟體開發技術與軟體專案管理 (Sommerville: Software Engineering, 9/e)





 
$550
              售價: $468
          
精實開發與看板方法





 
$380
              售價: $300
          
SCRUM : 用一半的時間 做兩倍的事 (SCRUM: The Art of Doing Twice the Work in Half the Time)





 
$450
              售價: $351
          
物件導向程式設計的精髓－使用 UML 工具和 Java 語言





 
$980
              貴賓價: $882
          
溫伯格的軟體管理學─擁抱變革 (第4捲) (Quality Software Management, Volume 4: Anticipating Change)





 
$490
              售價: $417
          
Laravel 5 實務專題範例教學





 
$360
              售價: $281
          
無瑕的程式碼 番外篇－專業程式設計師的生存之道 (The Clean Coder: A Code of Conduct for Professional Programmers)





 
$240
              貴賓價: $216
          
APP之繼承：以APP開發創業的故事





 
$480
              售價: $379
          
UX 從新手開始｜使用者體驗的 100堂必修課 (UX for Beginners: A Crash Course in 100 Short Lessons)





 
$680
              售價: $537
          
成為卓越程式設計師的 38 項必修法則 (Becoming a Better Programmer: A Handbook for People Who Care About Code)





 
$940
              售價: $700
          
無瑕的程式碼－敏捷軟體開發技巧守則 + 番外篇－專業程式設計師的生存之道 (雙書合購)





 
$420
              售價: $328
          
Specification by Example 中文版：團隊如何交付正確的軟體 (Specification by Example: How Successful Teams Deliver the Right Software)





 
$620
              售價: $484
          
職業駭客的告白 : 軟體反組譯、木馬病毒與入侵翻牆竊密





 
$480
              售價: $374
          
設計模式的解析與活用 (Design Patterns Explained: A New Perspective on Object-Oriented Design, 2/e)





 
$580
              貴賓價: $441
          
寫給PM、RD與設計師看的設計需求分析─使用者想要的應用程式都是這樣打造出來的




產品描述

 
<內容簡介>
降低發展軟體系統的工作量、減少發展軟體系統所需的時間是現今軟體發展流程的主要趨勢。本書將說明物件導向軟體工程的特徵、並提供物件導向當中，簡易實用的重要特有功能與技術，善用這些技術將能更有效率地發展軟體系統。
光靠一種方法或流程就想打遍天下，在軟體發展中是不可行的，所謂「one size fits all」並不適用於軟體發展。因此，本書著重於介紹軟體發展流程的框架（framework），開發者可以將此框架「客製化」以適合本身的需求。讀者在學習本書之後，將有能力應用物件導向技術從事軟體發展工作。
本書有別於傳統的軟體工程書籍，引入現代的先進軟體工程技術，並具有下列特色：
◎全面理解基本軟體工程與物件導向的觀念。◎提供「案例研究」（case study）說明物件導向軟體發展流程。◎介紹系統化軟體測試技術與方法，導引出各種敏捷軟體發展方法，如Scrum方法。◎根據軟體設計原理與發展樣式，協助發展者發展可保養的軟體系統，提高設計品質。◎以敏捷觀念介紹一些有用的建模原理與應用，例如責任驅動設計、模型驅動架構。◎專章介紹軟體度量預測與使用CRC卡模型，兼顧傳統與實用性。
<章節目錄>
第1章 軟體工程概說（Introduction to Software Engineering）第2章 物件技術辭彙（Vocabulary of Object Technology）第3章 物件導向符號（Object-Oriented Notations）第4章 統合軟體發展流程（Unified Software Development Process）第5章 軟體設計原理（Software Design Principles）第6章 軟體發展樣式（Patterns for Software Development）第7章 物件導向軟體測試（Object-Oriented Testing）第8章 基本敏捷建模（Basic Agile Modeling）第9章 敏捷發展方法（Agile Methods）第10章 責任驅動設計（Responsibility-Driven Design, RDD）第11章 模型驅動架構」（ Model Driven Architecture, MDA）附錄A 軟體度量（Software Metrics）概念附錄B CRC 卡（CRC cards）
<作者簡介>
郭忠義臺北科技大學資訊工程系副教授，多年來開授物件導向程式語言，軟體工程等課程，兼任臺北科技大學計算機與網路中心校務資訊組組長，帶領開發校務資訊系統。曾任教於教育訓練中心，擔任銀行業、電信業、零售業、遊戲產業、IC 設計業、微控制產業等軟體工程師訓練與顧問工作。目前的興趣是開發智慧型軟體系統。
薛念林逢甲大學資訊工程系副教授，於大學教授物件導向軟體工程、軟體品質與軟體測試、物件導向設計等課程，目前兼任逢甲大學資訊處系統發展組組長，協助校園資訊化系統之建置。目前的興趣在於軟體設計方法及軟體測試方法。
馬尚彬臺灣海洋大學資訊工程系副教授，於大學教授物件導向程式語言、Web 程式設計、軟體工程等課程，研究領域包括服務導向架構與行動運算。目前兼任臺灣海洋大學圖書與資訊處教學支援組組長，帶領開發校園行動軟體系統。
黃為德於1972年獲德國慕尼黑工科大學（Technische Universität München）自然科學博士（Dr.rer.nat.），現任國立中央大學資訊工程學系榮譽教授，多年來開授物件導向軟體工程及軟體度量課程，目前的興趣在於如何應用「模型驅動架構」發展軟體系統。








中文書籍分類

最新新書
2016 年度暢銷排行
暢銷排行 (2017/06)
暢銷排行 (2017/05)
暢銷排行 (2017/04)



活動主題列表

資料科學
CRC好書上架
簡體中文書最新到貨
PACKT 最新到貨
Effective 系列書
微服務系列書
Ruddy老師的敏捷教室
程式設計必讀經典系列
Springer好書上架
英文書最新到貨
資料視覺化系列書
Python 系列書籍
深度學習系列書籍
無瑕的程式碼 超值合購
Maker小天地



特價書籍

Bootstrap系列76折起
松崗暢銷書展5折起













       物件導向軟體工程 | FCU 逢甲大學磨課師 - 中華開放教育平臺
      
























跳到主要內容





幫助






        關閉
      



FCU 逢甲大學磨課師 - 中華開放教育平臺小幫手
      


對於FCU 逢甲大學磨課師 - 中華開放教育平臺有一般問題想問？您可以在FCU 逢甲大學磨課師 - 中華開放教育平臺的常見問題找到有用的解答
      
有特別的問題想要詢問？您可以直接聯絡FCU 逢甲大學磨課師 - 中華開放教育平臺的服務團隊：


回報問題
提供建議
提問

請註意：在FCU 逢甲大學磨課師 - 中華開放教育平臺上的客服團隊是說中文的。雖然我們竭盡所能解決來自任何語言的詢問，但我們的回應將是中文。





        關閉
      




名稱*

電子郵件*

簡要描述您的問題*

告訴我們細節*
附上錯誤消息以及導致錯誤的步驟等












        關閉
      


謝謝您！



    感謝您的疑問或者回饋。我們通常在一個工作日 (週一到週五， 13:00 UTC 到 21:00 UTC) 內答覆疑問。請您先瀏覽我們  FAQs  ，在那裡大部分問題已經得到瞭解答。
    











            物件導向軟體工程
            FCU



註冊功能已經關閉















關於本課程
設計樣式（design pattern）是物件導向設計技巧的精華，透過設計樣式的學習，可以讓您更瞭解物件設計的原理，進而瞭解他的應用。本課程延續「軟體設計」，介紹 Gamma 等人所提出的若干個設計樣式，包含 Strategy, Observer, Factory Method, adaptor 等。設計樣式將分成 Part I, Part II 兩次來講授，希望同學們能夠按部就班的學習。
    課程修畢成績 70 分者，將可獲得本平臺與軟體工程聯盟聯合頒發的通過證書。
        

一般對設計樣式有興趣的人應該可以在五週內自習完成此課程。因為配合人才培育計畫的關係，課程除了線上觀看以外，屆時還會有「協同教學」與大家互動，也因次在課程設計上週數較長，以方便各校觀看學習。
  
      
    修課完畢後可取得證書如下： 
 先修課程：本門課較為深入，如果您對物件導向技術沒有接觸，建議您先本聯盟所開的課：軟體設計。
  


授課及編撰教師




薛念林博士
逢甲大學資訊工程系副教授，薛博士的專長為軟體工程、軟體設計、軟體測試、物件導向設計。薛博士協助此課程之規劃，設計與錄影。





馬尚彬博士
國立海洋大學資訊工程副教授，主要專長為軟體工程、服務導向運算與行動運算。馬博士為此課程的編撰及授課教師。





李信傑博士
國立成功大學資訊工程系助理教授，李博士的專長為軟體工程、程式設計、服務導向架構、軟體代理人。李博士為此課程之編撰與授課教師。








與朋友和家人分享！

利用推特轉發您已註冊此課程的訊息。


發表一則Facebook訊息來表示您已經註冊這門課程


Email 給某人告知您已註冊此課程。




課程編號2017S001
課程開始2017 九月 01


課程結束

                        2018 一月 31
                

預期投入2 hours / 每週





















﻿

軟體發展實驗室-物件導向軟體工程






















    FAIL (the browser should render some flash content, not this).
        



  







物件導向軟體工程(Object-Oriented Software Engineering)


課程公告





01/31總成績公佈	 
 



　　	1. 對各項成績有疑問者請儘速提出
　　	2. HW05因題目說明不夠明確，
　　	   改採繳交作業良好者酌與總成績加分，
　　	   未繳交或繳交但作業答案欠佳者則不予加減分  	
　　	   總成績:　downloads

 





01/22期末考成績公佈	 
 



期末考成績

 





01/21	報告投影片			      
 



		2013/01/10
	　組別一-A framework for examing topical locality in object-oriented software
	　　1.Paper　
     	2.PPT
　	  組別二-A two-phase Execution Engine of Reduce Tasks In Hadoop MapReduce
	　　1.Paper　
     	2.PPT
		2013/01/10
　	  組別一-Design pattern for user interface for mobile applications
	　　1.Paper　
     	2.PPT
	　組別二-Towards measuring object-oriented class stability 
	　　1.Paper　
     	2.PPT
	　組別三-A Reliability Model for Object-Oriented Software
	　　1.Paper　
     	2.PPT
	　組別四-Mining Object-Oriented Design Models for Detecting Identical Design Structures
	　　1.Paper　
     	2.PPT
	　組別五-Data Mining for Secure Software Engineering-Source Code Management Tool Case Study
	　　1.Paper
     	2.PPT
	　組別六-MapReduce_Simplified Data Processing on Large Clusters
	　　1.Paper　
     	2.PPT
	　組別七-Parallel Software Development with Intel Threading Analysis Tools
	　　1.Paper　
     	2.PPT
	　組別八-Towards a benchmark for evaluating design pattern miner tools
	　　1.Paper　
     	2.PPT
	　組別九-Exploiting Parallelism in Multi-View Systems using UML Activity Diagrams and OpenMP
	　　1.Paper
     	2.PPT
		2013/01/10
	　組別一-Object oriented framework for CUDA based image processing
	　　1.Paper　
     	2.PPT
	　組別二-
	　　1..Paper　
     	2.PPT

 





01/17		 
 


緊急公告:
　		Paper還未報告的同學請註意，
　		因為教授明天要出差，
	　	所以，明天下午1點10分請自行到教授辦公室報告!
	　	另外，明天下午2點10分準時考試!
	　	祝大家期末考順利，謝謝。

 





01/15		 
 


最後作業公告:
　		請各位同學email 給TA約時間Demo 
　		亦或是本周四早上10點-12點 
	　	謝謝
	　	PS.論文報告的投影片製作完成也麻煩寄到TA信箱，謝謝。

 





01/03	    
 


OOSE論文報告公告3:
	　由於老師課程調整，報告日期如下:
	　1/10-三組、1/17-九組、1/18-兩組，
	　連結:[報告日期與順序]
	　再次麻煩每組上網填寫要報告的日期，決定題目後一定也要再次填寫報告的題目，
	　投影片製作完成也麻煩寄到TA信箱。
	　另外由於1/24(四)補課某些同學不刻參與，故將課程提早到1/18(五)14:00-17:00
	　若有任何問題或是此時段不方便，請寄E-mail到TA信箱，
	　ＴA資訊: 林侑勢_fxlin316@gmail.com
	　謝謝。

 





01/03			      
 


OOSE論文報告公告2:
	　由於老師課程調整，新表格最慢會在今天晚上12點重製並發布，
	　再次麻煩每組上網填寫要報告的日期，謝謝。
		      
 





patterns			      
 


	　
　1. Abstraction-Occurrence-download
　　2. General Hierarchy
　　3. Player-Role-download
　　4. Singleton
　　5. Observer
　　6. Delegation-download
　　7. Adapterdownload
　　8. Facadedownload
　　9. Immutable, Read-Only Interface-download
　　10. Proxy-download
　　11. Factory-download 
　　12. The Strategy Pattern-download
 　　13. The Template pattern-download 
 





12/24			      
 


OOSE論文報告公告:
	　請每組上網先填寫要報告的日期，如果已經選好題目也要記得打上去!
	　連結:[報告日期與順序]
	　另外，決定題目後，一定要再次填寫報告的題目，以免出現重複主題的情況發生。
	　謝謝。

 





12/22			      
 


HW04公告2:
　		1.針對本次作業沒有分組的同學(如下)自動選定為同一組
　		P78011044張若怡，P76011242許伯誠，P48981162葉碩儒
　		請至[patterns]填寫你們選定的 Design Pattern
　		不可與其他組重複，可找課外
                  
	　	2.請各組同學把選定的 Design Pattern 實作完成後
	　	寄給TA匯集以放置本頁課程網站分享給班上同學
	　	並以利進行下一次的作業，謝謝
      
	　	3.HW02和HW03尚未demo的同學，請趕快來demo(自行攜帶筆電)
	　	PS:
	　	TA時間為每周四 AM 10點-12點
	　	若需要其他時間請來信告知並預約
	　	ＴA資訊: 林侑勢_fxlin316@gmail.com
	　	地點: 雲平大樓東棟5F-510

 





12/03			      
 


HW04公告:
		　　　這次作業老師指定的 Design Patterns 共有 11個(如下)
      　  而修課人數共有 33人，請以 3人一組為單位，選擇其中一個為實作案例
	　	目前分組狀況，可檢視"OOSE_groups.xlsx"，未滿 3人組別者，請湊成 3人一組
	　	並至
		patterns 填寫
	　	填寫各組所要實作的 Design Patterns，不得重複選取
                  
	　	1. Abstraction-Occurrence
	　	2. General Hierarchy
	　	3. Player-Role
　		4. Singleton
	　	5. Observer
	　	6. Delegation
	　	7. Adapter
　		8. Facade
	　	9. Immutable, Read-Only Interface
　		10. Proxy
	　	11. Factory
	　	PS:
	　	TA時間為每周四 AM 10點-12點
	　	若需要其他時間請來信告知並預約
	　	TA資訊: 林侑勢_fxlin316@gmail.com
	　	地點: 雲平大樓東棟5F-510
	　	HW02和HW03尚未demo的同學，請趕快來demo(自行攜帶筆電)

 





課程大綱			      
 


Object-Oriented Software Engineering

 





groups(new) 
 


OOSE_groups

 





09/27			      
 


Chapter 1

 





10/04			      
 


Chapter 2

 





10/11			      
 


Chapter 3

Chapter 4

 





11/01			      
 


Chapter 5

 





11/29			      
 


Chapter 6

 





12/29			      
 



		　各位同學大家好，專題展1/3要事前佈置需要用到4201教室
		　所以當天課程教室換至"工科系館 41111教室"，
		　麻煩大家通知大家，謝謝。

 





01/03			      
 


Chapter 7

Chapter 8

Chapter 9

 



 







Send mail to CASD with questions or comments.

Copyright © 2012 CASD			

			

電話:06-2757575 #62520

			  or 62530 系內分機	50		













系所介紹 - 國立中央大學資訊工程學系





















系所簡介


成員簡介


研究領域


實驗室簡介


研究領域
依據教師專長領域規劃六大研究學群，研究學群資深教授引領新進教授進行相關領域或跨領域之研究計畫。由教師的學術背景可一窺本系教學多元發展之趨向，期望在各領域研究發展，均能與國內辦學優良之各校並駕齊驅。六大研究學群之研究方向如下：

軟體工程研究學群


快速軟體雛形法
快捷方法與軟體成熟度模型
概念模型之軟體與軟體工程環境
物件導向方法與服務導向軟體工程

資料工程研究學群


資訊分析技術及應用
數位學習技術與研究
資料探勘和倉儲技術的構建及應用
資訊庫系統技術及生醫資訊處理技術

網路工程研究學群


先進網路通訊技術的研發
新世代網路應用的開拓
密碼學理論的構建及應用
全方位資訊安全技術研發及構建

多媒體工程研究學群


視訊監控及汽車安全視覺研究
虛擬實境及人機互動
影像處理及視訊編碼技術
醫學影像處理及多媒體資料庫

系統工程研究學群


復健科技
機器人應用研究
人機介面及互動技術
嵌入式系統及軟硬體整合設計

計算理論與應用研究學群


演算法
圖論與最佳化
網格計算及雲端計算
人工智慧及計算型智慧








焦點新聞

                        更多                    







賀！周立德教授指導博士生曾繁勛同學獲中華民國資訊學會「博士論文佳作指導獎」
![博士論文佳作指導獎][1]


  [1]: /file/819423af72cbeab083edfabd10b7f7c0





賀！鄭旭詠副教授獲106年青年獎章
中央大學資訊工程系副教授鄭旭詠研究成果豐碩，曾獲多項論文及研究獎項，2015年與2016年中央大學研究傑出獎、2016年中華民國系統學會學術傑出青年
獎、2016中國電機工程學會優秀青年電機工程師獎及2016與2017年科技部優秀年輕學者計畫，致力於預測太陽能輻射量跨領域整合創新研究與整合資通訊技術用
於智慧型運輸系統，為未來產生新的價值為經濟帶來嶄新的成長動能。

相關新聞連結
[http://www.epochtimes.com/b5/17/3/28/n8975083.htm][1]


  [1]: http://www.epochtimes.com/b5/17/3/28/n8975083.htm





賀！慄永徽助理教授榮獲2017日內瓦國際發明展金牌以及特別獎
慄永徽助理教授以「智慧眼鏡上的智能型虹膜辨識系統」，榮獲2017日內瓦國際發明展金牌以及特別獎兩項殊榮，全系師生與有榮焉。

![2017日內瓦國際發明展][1]


  [1]: /file/0c00e8ac102b2b6bb21531a99cda3013







系友會系學會教室租借系統電子報 

        Copyright © 2017 Department of Computer Science & Information Engineering, National Central University.
版權宣告 | 後台管理 | 聯絡我們 | 網站地圖 | 03-422-7151 分機：35200, 35250-2
         | 03-422-2681
         | ncu4500@ncu.edu.tw
         | 






×關閉
選擇語言 Choose language




























物件導向程式設計 - 維基百科，自由的百科全書






























 







物件導向程式設計

維基百科，自由的百科全書


					前往：					導覽，					搜尋












中國大陸
面向對象程序設計


臺灣
物件導向程式設計


港澳
物件導向程式設計


物件導向程式設計（英語：Object-oriented programming，縮寫：OOP）是種具有物件概念的程式編程典範，同時也是一種程式開發的抽象方針。它可能包含資料、屬性、程式碼與方法。物件則指的是類別的例項。它將物件作為程式的基本單元，將程式和資料封裝其中，以提高軟體的重用性、靈活性和擴充功能性，物件裡的程式可以存取及經常修改物件相關連的資料。在物件導向程式編程裡，電腦程式會被設計成彼此相關的物件[1][2]。
物件導向程式設計可以看作一種在程式中包含各種獨立而又互相呼叫的物件的思想，這與傳統的思想剛好相反：傳統的程式設計主張將程式看作一系列函式的集合，或者直接就是一系列對電腦下達的指令。物件導向程式設計中的每一個物件都應該能夠接受資料、處理資料並將資料傳達給其它物件，因此它們都可以被看作一個小型的「機器」，即物件。目前已經被證實的是，物件導向程式設計推廣了程式的靈活性和可維護性，並且在大型專案設計中廣為應用。此外，支持者聲稱物件導向程式設計要比以往的做法更加便於學習，因為它能夠讓人們更簡單地設計並維護程式，使得程式更加便於分析、設計、理解。反對者在某些領域對此予以否認。
當我們提到物件導向的時候，它不僅指一種程式設計方法。它更多意義上是一種程式開發方式。在這一方面，我們必須瞭解更多關於物件導向系統分析和物件導向設計（Object Oriented Design，簡稱OOD）方面的知識。許多流行的程式語言是物件導向的,它們的風格就是會透由物件來創出實例。
重要的物件導向程式語言包含Common Lisp、Python、C++、Objective-C、Smalltalk、Delphi、Java、Swift、C#、Perl、Ruby 與 PHP等。



目錄


1 特徵

1.1 分享非物件導向程式前身語言
1.2 類別與物件
1.3 動態配置與訊息傳遞機制
1.4 封裝性
1.5 繼承
1.6 多型
1.7 抽象性


2 歷史
3 物件導向編程語言

3.1 腳本中的OOP


4 參見
5 參考文獻
6 延伸閱讀
7 外部連結



特徵[編輯]
物件導向程式編程的定義是使用「物件」來做設計，但並非所有的程式語言都直接支援「物件導向程式編程」相關技術與結構。對於OOP的準確定義及其本意存在著不少爭論。通常，OOP被理解為一種將程式分解為封裝資料及相關操作的模組而進行的編程方式。有別於其它編程方式，OOP中的與某資料類別型相關的一系列操作都被有機地封裝到該資料類別型當中，而非散放於其外，因而OOP中的資料類別型不僅有著狀態，還有著相關的行為。
OOP理論，及與之同名的OOP實踐相結合創造出了新的一個編程架構；OOP思想被廣泛認為是非常有用的，以致一套新的編程典範被創造了出來。（其它的編程典範例如函數語言程式設計或程序式編程專註於程式執行的過程，而邏輯編程專註於引發程式代碼執行的斷言）。對面向模擬系統的語言（如：SIMULA 67）的研究及對高可靠性系統架構（如：高效能作業系統和CPU的架構）的研究最終導致了OOP的誕生。其中由Deborah J. Armstrong進行的長達40年之久的電腦著作調查中，顯示出了一系列物件導向程式設計的基本理論。物件導向程式特徵被條列如下[3][4][5][6]
分享非物件導向程式前身語言[編輯]
物件導向程式設計通常共享高階編程語言的低階功能。可用於建構一個程式的基本工具包括：

變數 能儲存一些內建型態的資訊如整數與字元，也有些是資料結構像是字串、串列與雜湊表等包含內建或複合的變數如指標。
程式：也稱為函式、方法或常式，是指輸入資料產生輸出結果，現代語言還包含結構化編程結構如程式迴圈與條件。

類別與物件[編輯]
支援物件導向編程語言通常利用繼承其他類別達到代碼重用和可擴展性的特性。而類別有兩個主要的概念：

類別（Class）：定義了一件事物的抽象特點。類別的定義包含了資料的形式以及對資料的操作。
物件：是類別的實例。

其中類別別（Class）定義了一件事物的抽象特點。類別的定義包含了資料的形式以及對資料的操作。舉例來說，「狗」這個類別會包含狗的一切基礎特徵，即所有「狗」都共有的特徵或行為，例如它的孕育、毛皮顏色和吠叫的能力。類別可以為程式提供模版和結構。一個類別的方法和屬性被稱為「成員」。 我們來看一段虛擬碼：

類別 狗
開始
    公有成員:
        吠叫():
    私有成員:
        毛皮顏色:
        孕育:
結束


在這串代碼中，我們聲明瞭一個類別，這個類別具有一些狗的基本特徵。關於公有成員和私有成員，請參見下麵的繼承性一節。
物件（Object）是類別的例項。物件有時會對應到現實世界中的事物，舉例來說，一個圖形程式可能有圓形、矩形與畫面等物件，一個線上購物系統可能有購物車、顧客與產品等類別。[7]。有時物件會表示更抽象的實體，比如一個被開啟的檔案或是一個提供美國慣用量測轉換的服務。每個物件就是一個特定類別的實例（例如，名稱是「瑪麗」的物件可能是類別雇員的一個實例）。程式在物件導向編程當中被視為方法，變數被視為成員或屬性。例如，「狗」這個類別列舉狗的特點，從而使這個類別定義了世界上所有的狗。而萊絲這個物件則是一條具體的狗，它的屬性也是具體的。狗有皮毛顏色，而萊絲的皮毛顏色是棕白色的。因此，萊絲就是狗這個類別的一個例項。一個具體物件屬性的值被稱作它的「狀態」。（系統給物件分配記憶體空間，而不會給類別分配記憶體空間。這很好理解，類別是抽象的系統不可能給抽象的東西分配空間，而物件則是具體的。）
假設我們已經在上面定義了狗這個類別，我們就可以用這個類別來定義物件：

定義萊絲是狗
萊絲.毛皮顏色:棕白色
萊絲.吠叫()

我們無法讓狗這個類別去吠叫，但是我們可以讓物件「萊絲」去吠叫，正如狗可以吠叫，但沒有具體的狗就無法吠叫。
類別和物件就好比是「實型」和「1.23」，「實型」是一種資料的類別型，而「1.23」是一個真正的「實數」（即物件）。所有的「實數」都具有「實型」所描訴的特徵，如「實數的大小」，系統則分配記憶體給「實數」儲存具體的數值。
動態配置與訊息傳遞機制[編輯]
定義上動態配置是指方法會隨著實例動態的改變。而訊息傳遞機制（Message Passing）是指一個物件通過接受訊息、處理訊息、傳出訊息或使用其他類別的方法來實作一定功能。如：萊絲可以通過吠叫引起人的註意，從而導致一系列的事發生。
封裝性[編輯]
具備封裝性（Encapsulation）的物件導向程式設計隱藏了某一方法的具體執行步驟，取而代之的是通過訊息傳遞機制傳送訊息給它。封裝是通過限制只有特定類別的物件可以存取這一特定類別的成員，而它們通常利用介面實作訊息的傳入傳出。舉個例子，介面能確保幼犬這一特徵只能被賦予狗這一類別。通常來說，成員會依它們的存取權限被分為3種：公有成員、私有成員以及保護成員。有些語言更進一步：Java可以限制同一包內不同類別的存取；C#和VB.NET保留了為類別的成員聚集準備的關鍵字：internal（C#）和Friend（VB.NET）；Eiffel語言則可以讓使用者指定哪個類別可以存取所有成員。
具備封裝性（Encapsulation）的物件導向程式設計隱藏了某一方法的具體執行步驟，取而代之的是通過訊息傳遞機制傳送訊息給它。因此，舉例來說，「狗」這個類別有「吠叫()」的方法，這一方法定義了狗具體該通過什麼方法吠叫。但是，萊絲的朋友並不知道它到底是如何吠叫的。
從例項來看：

/* 一個程序導向的程式會這樣寫： */
定義萊絲
萊絲.設定音調(5)
萊絲.吸氣()
萊絲.吐氣()

/* 而當狗的吠叫被封裝到類別中，任何人都可以簡單地使用： */
定義萊絲是狗
萊絲.吠叫()

繼承[編輯]
繼承性（Inheritance）是指，在某種情況下，一個類別會有「子類別」。子類別比原本的類別（稱為父類別）要更加具體化。例如，「狗」這個類別可能會有它的子類別「牧羊犬」和「吉娃娃犬」。在這種情況下，「萊絲」可能就是牧羊犬的一個例項。子類別會繼承父類別的屬性和行為，並且也可包含它們自己的。我們假設「狗」這個類別有一個方法（行為）叫做「吠叫()」和一個屬性叫做「毛皮顏色」。它的子類別（前例中的牧羊犬和吉娃娃犬）會繼承這些成員。這意味著程式設計師只需要將相同的代碼寫一次。
在虛擬碼中我們可以這樣寫：

類別牧羊犬:繼承狗

定義萊絲是牧羊犬
萊絲.吠叫()    /* 註意這裡呼叫的是狗這個類別的吠叫方法。*/

回到前面的例子，「牧羊犬」這個類別可以繼承「毛皮顏色」這個屬性，並指定其為棕白色。而「吉娃娃犬」則可以繼承「吠叫()」這個方法，並指定它的音調高於平常。子類別也可以加入新的成員，例如，「吉娃娃犬」這個類別可以加入一個方法叫做「顫抖()」。設若用「牧羊犬」這個類別定義了一個例項「萊絲」，那麼萊絲就不會顫抖，因為這個方法是屬於吉娃娃犬的，而非牧羊犬。事實上，我們可以把繼承理解為「是」或「屬於」。萊絲「是」牧羊犬，牧羊犬「屬於」狗類別。因此，萊絲既得到了牧羊犬的屬性，又繼承了狗的屬性。 我們來看虛擬碼：

類別吉娃娃犬:繼承狗
開始
   公有成員:
      顫抖()
結束
類別牧羊犬:繼承狗

定義萊絲是牧羊犬
萊絲.顫抖()    /* 錯誤：顫抖是吉娃娃犬的成員方法。 */

當一個類別從多個父類別繼承時，我們稱之為「多重繼承」。如一隻狗既是吉娃娃犬又是牧羊犬（雖然事實上並不合邏輯）。多重繼承並不總是被支援的，因為它很難理解，又很難被好好使用。
多型[編輯]
多型（Polymorphism）是指由繼承而產生的相關的不同的類別，其物件對同一訊息會做出不同的回應[8]。例如，狗和雞都有「叫()」這一方法，但是呼叫狗的「叫()」，狗會吠叫；呼叫雞的「叫()」，雞則會啼叫。 我們將它體現在虛擬碼上：

類別狗
開始
   公有成員:
       叫()
       開始
          吠叫()
       結束
結束

類別雞
開始
   公有成員:
       叫()
       開始
          啼叫()
       結束
結束

定義萊絲是狗
定義魯斯特是雞
萊絲.叫()
魯斯特.叫()

這樣，雖然同樣是做出叫這一種行為，但萊絲和魯斯特具體做出的表現方式將大不相同。多型性的概念可以用在運算子過載上，本文不再贅述。
抽象性[編輯]
抽象（Abstraction）是簡化複雜的現實問題的途徑，它可以為具體問題找到最恰當的類別定義，並且可以在最恰當的繼承級別解釋問題。舉例說明，萊絲在大多數時候都被當作一條狗，但是如果想要讓它做牧羊犬做的事，你完全可以呼叫牧羊犬的方法。如果狗這個類別還有動物的父類別，那麼你完全可以視萊絲為一個動物。
歷史[編輯]
物件導向程式設計的雛形，早在1960年的Simula語言中即可發現，當時的程式設計領域正面臨著一種危機：在軟硬體環境逐漸複雜的情況下，軟體如何得到良好的維護？物件導向程式設計在某種程度上通過強調可重複性解決了這一問題。20世紀70年代的Smalltalk語言在物件導向方面堪稱經典——以至於30年後的今天依然將這一語言視為物件導向語言的基礎。
電腦科學中物件和例項概念的最早萌芽可以追溯到麻省理工學院的PDP-1系統。這一系統大概是最早的基於容量架構（capability based architecture）的實際系統。另外1963年Ivan Sutherland的Sketchpad應用中也蘊含了同樣的思想。物件作為編程實體最早是於1960年代由Simula 67語言引入思維。Simula這一語言是奧利-約翰·達爾和克利斯登·奈加特在挪威奧斯陸電腦中心為模擬環境而設計的。（據說，他們是為了模擬船隻而設計的這種語言，並且對不同船隻間屬性的相互影響感興趣。他們將不同的船隻歸納為不同的類別，而每一個物件，基於它的類別，可以定義它自己的屬性和行為。）這種辦法是分析式程式的最早概念體現。在分析式程式中，我們將真實世界的物件對映到抽象的物件，這叫做「模擬」。Simula不僅引入了「類別」的概念，還應用了例項這一思想——這可能是這些概念的最早應用。
20世紀70年代全錄PARC研究所發明的Smalltalk語言將物件導向程式設計的概念定義為，在基礎運算中，對物件和訊息的廣泛應用。Smalltalk的建立者深受Simula 67的主要思想影響，但Smalltalk中的物件是完全動態的——它們可以被建立、修改並銷毀，這與Simula中的靜態物件有所區別。此外，Smalltalk還引入了繼承性的思想，它因此一舉超越了不可建立例項的程式設計模型和不具備繼承性的Simula。此外，Simula 67的思想亦被應用在許多不同的語言，如Lisp、Pascal。
物件導向程式設計在80年代成為了一種主導思想，這主要應歸功於C++——C語言的擴充版。在圖形化使用者介面（GUI）日漸崛起的情況下，物件導向程式設計很好地適應了潮流。GUI和物件導向程式設計的緊密關聯在Mac OS X中可見一斑。Mac OS X是由Objective-C語言寫成的，這一語言是一個仿Smalltalk的C語言擴充版。物件導向程式設計的思想也使事件處理式的程式設計更加廣泛被應用（雖然這一概念並非僅存在於物件導向程式設計）。一種說法是，GUI的引入極大地推動了物件導向程式設計的發展。
蘇黎世聯邦理工學院的尼克勞斯·維爾特和他的同事們對抽象資料和模組化程式設計進行了研究。Modula-2將這些都包括了進去，而Oberon則包括了一種特殊的物件導向方法——不同於Smalltalk與C++。
物件導向的特性也被加入了當時較為流行的語言：Ada、BASIC、Lisp、Fortran、Pascal以及種種。由於這些語言最初並沒有物件導向的設計，故而這種糅合常常會導致相容性和維護性的問題。與之相反的是，「純正的」物件導向語言卻缺乏一些程式設計師們賴以生存的特性。在這一大環境下，開發新的語言成為了當務之急。作為先行者，Eiffel成功地解決了這些問題，並成為了當時較受歡迎的語言。
在過去的幾年中，Java語言成為了廣為應用的語言，除了它與C和C++語法上的近似性。Java的可移植性是它的成功中不可磨滅的一步，因為這一特性，已吸引了龐大的程式設計師群的投入。
在最近的電腦語言發展中，一些既支援物件導向程式設計，又支援程序導向程式設計的語言悄然浮出水面。它們中的佼佼者有Python、Ruby等等。
正如程序導向程式設計使得結構化程式設計的技術得以提升，現代的物件導向程式設計方法使得對設計模式的用途、契約式設計和建模語言（如UML）技術也得到了一定提升。
物件導向編程語言[編輯]
支援部分或絕大部分物件導向特性的語言即可稱為基於物件的或物件導向的語言。Simula (1967)被視為第一個具有物件導向特性的語言。早期，完全物件導向的語言主要包括Smalltalk等語言，目前較為流行的語言中有Java、C#、Eiffel等。隨著軟體工業的發展，比較早的程序導向的語言在近些年的發展中也紛紛吸收了許多物件導向的概念，比如C→C++，C→Objective-C，BASIC→Visual Basic→Visual Basic .NET，Pascal→Object Pascal，Ada→Ada95。「純粹」的物件導向語言, 因為所有的東西都是由物件所組成，例如: Eiffel, Emerald,[9] JADE, Obix, Ruby, Scala, Smalltalk, Self.
腳本中的OOP[編輯]
近年來，物件導向的程式設計越來越流行於手稿語言中。Python和Ruby是建立在OOP原理的指令碼語言，Perl和PHP亦分別在Perl 5和PHP 4時加入物件導向特性。
參見[編輯]

一次且僅一次（once and only once，OAOO）
Distributed Component Object Model
UML

參考文獻[編輯]


^ Kindler, E.; Krivy, I. Object-Oriented Simulation of systems with sophisticated control. International Journal of General Systems: 313–343. 2011. 
^ Lewis, John; Loftus, William. Java Software Solutions Foundations of Programming Design 6th ed. Pearson Education Inc. 2008. ISBN 0-321-53205-8. , section 1.6 "Object-Oriented Programming"
^ Deborah J. Armstrong. The Quarks of Object-Oriented Development. A survey of nearly 40 years of computing literature which identified a number of fundamental concepts found in the large majority of definitions of OOP, in descending order of popularity: Inheritance, Object, Class, Encapsulation, Method, Message Passing, Polymorphism, and Abstraction.
^ John C. Mitchell, Concepts in programming languages, Cambridge University Press, 2003, ISBN 0-521-78098-5, p.278. Lists: Dynamic dispatch, abstraction, subtype polymorphism, and inheritance.
^ Michael Lee Scott, Programming language pragmatics, Edition 2, Morgan Kaufmann, 2006, ISBN 0-12-633951-1, p. 470. Lists encapsulation, inheritance, and dynamic dispatch.
^ Pierce, Benjamin. Types and Programming Languages. MIT Press. 2002. ISBN 0-262-16209-1. , section 18.1 "What is Object-Oriented Programming?" Lists: Dynamic dispatch, encapsulation or multi-methods (multiple dispatch), subtype polymorphism, inheritance or delegation, open recursion ("this"/"self")
^ Booch, Grady. Software Engineering with Ada. Addison Wesley. 1986: 220. ISBN 978-0805306088. Perhaps the greatest strength of an object-oriented approach to development is that it offers a mechanism that captures a model of the real world. 
^ 譚浩強：《C++物件導向程式設計》，清華大學出版社，2006年1月第一版。ISBN 978-7-302-12315-6
^ The Emerald Programming Language. 2011-02-26. 


延伸閱讀[編輯]

Abadi, Martin; Luca Cardelli. A Theory of Objects. Springer Verlag. 1998. ISBN 0-387-94775-2. 
Abelson, Harold; Gerald Jay Sussman. Structure and Interpretation of Computer Programs. MIT Press. 1997. ISBN 0-262-01153-0. 
Armstrong, Deborah J. The Quarks of Object-Oriented Development. Communications of the ACM. February 2006, 49 (2): 123–128 [8 August 2006]. ISSN 0001-0782. doi:10.1145/1113034.1113040. 
Booch, Grady. Object-Oriented Analysis and Design with Applications. Addison-Wesley. 1997. ISBN 0-8053-5340-2. 
Eeles, Peter; Oliver Sims. Building Business Objects. John Wiley & Sons. 1998. ISBN 0-471-19176-0. 
Gamma, Erich; Richard Helm, Ralph Johnson, John Vlissides. Design Patterns: Elements of Reusable Object Oriented Software. Addison-Wesley. 1995. ISBN 0-201-63361-2.  引文使用過時參數coauthors (幫助)
Harmon, Paul; William Morrissey. The Object Technology Casebook - Lessons from Award-Winning Business Applications. John Wiley & Sons. 1996. ISBN 0-471-14717-6. 
Jacobson, Ivar. Object-Oriented Software Engineering: A Use Case-Driven Approach. Addison-Wesley. 1992. ISBN 0-201-54435-0. 
Kay, Alan. The Early History of Smalltalk. 
Meyer, Bertrand. Object-Oriented Software Construction. Prentice Hall. 1997. ISBN 0-13-629155-4. 
Pecinovsky, Rudolf. OOP - Learn Object Oriented Thinking & Programming. Bruckner Publishing. 2013. ISBN 978-80-904661-8-0. 
Rumbaugh, James; Michael Blaha; William Premerlani; Frederick Eddy; William Lorensen. Object-Oriented Modeling and Design. Prentice Hall. 1991. ISBN 0-13-629841-9. 
Schach, Stephen. Object-Oriented and Classical Software Engineering, Seventh Edition. McGraw-Hill. 2006. ISBN 0-07-319126-4. 
Schreiner, Axel-Tobias. Object oriented programming with ANSI-C. Hanser. 1993. ISBN 3-446-17426-5. hdl:1850/8544.  參數|id=值左起第40位存在刪除符 (幫助)
Taylor, David A. Object-Oriented Information Systems - Planning and Implementation. John Wiley & Sons. 1992. ISBN 0-471-54364-0. 
Weisfeld, Matt. The Object-Oriented Thought Process, Third Edition. Addison-Wesley. 2009. ISBN 0-672-33016-4. 
West, David. Object Thinking (Developer Reference). Microsoft Press. 2004. ISBN 0735619654. 

外部連結[編輯]



維基語錄上的相關摘錄：Object-orientation





維基學院中的Topic:Object-Oriented Programming相關學習資源：

物件導向程式設計






您可以在維基教科書中尋找此百科條目的相關電子教程：
Object Oriented Programming



開放式目錄計劃中和Object-oriented programming相關的內容
Introduction to Object Oriented Programming Concepts (OOP) and More by L.W.C. Nirosh
Discussion about the flaws of OOD
OOP Concepts (Java Tutorials)









閱
論
編


電腦科學






數學基礎

數理邏輯 · 集合論 · 數論 · 圖論 · 類別型論 · 範疇論 · 數值分析 · 資訊理論






計算理論

自動機 · 可計算性理論 · 計算複雜性理論 · 量子計算 · 數值計算方法






演算法和資料結構

演算法分析 · 演算法設計 · 計算幾何






程式語言和編譯器

語法分析器 · 直譯器 · 編程典範（程序化編程 · 物件導向程式編程 · 函數語言程式設計 · 邏輯編程等）






並行、並列和分散式系統

多處理器 · 網格計算 · 並行控制






軟體工程

需求分析 · 軟體設計 · 程式設計 · 形式化方法 · 軟體測試 · 軟體開發過程






系統架構

電腦系統架構 · 微處理器體系結構 · 作業系統






電信與網路

路由 · 網路拓撲 · 密碼學






資料庫

資料庫管理系統 · 關聯式資料庫 · 結構化查詢語言 · NoSQL · 事務處理 · 資料庫索引 · 資料探勘






人工智慧

自動推理 · 計算語言學 · 電腦視覺 · 進化計算 · 專家系統 · 機器學習 · 自然語言處理 · 機器人學






電腦圖形學

視覺化 · 電腦動畫 · 圖像處理






人機互動

電腦輔助功能 · 使用者介面 · 可穿戴電腦 · 普適計算 · 虛擬現實 · 聊天機器人






科學計算

人工生命 · 生物資訊學 · 認知科學 · 計算化學 · 計算神經科學 · 計算物理學 · 數值演算法 · 符號計算







註：電腦科學領域也可根據ACM-2012分類別系統進行分類別。











權威控制



LCCN: sh87007503
GND: 4233947-9
BNF: cb12115131k（資料）
NDL: 00937980
BNE: XX537453












 
						取自 "https://zh.wikipedia.org/w/index.php?title=面向對象程序設計&oldid=43533641"					
2 個分類：編程典範物件導向的程序設計隱藏分類：使用ISBN魔術連結的頁面含有英語的條目含有過時參數的引用的頁面引文格式1錯誤：不可見字符包含規範控制信息的維基百科條目 



導覽選單


個人工具

沒有登入對話貢獻建立帳號登入 



命名空間

條目
討論




台灣正體



不轉換
簡體
繁體
大陸簡體
香港繁體
澳門繁體
馬新簡體
台灣正體






查看

閱讀
編輯
檢視歷史



更多







搜尋



 







導航


首頁分類索引特色內容新聞動態近期變更隨機條目 



說明


說明維基社群方針與指引互助客棧知識問答字詞轉換IRC即時聊天聯絡我們關於維基百科資助維基百科 



其他專案


維基共享資源 



列印/匯出


下載成 PDF 



工具


連結至此的頁面相關變更上傳檔案特殊頁面可列印版靜態連結頁面資訊維基數據 項目引用此頁面 



其他語言


AfrikaansالعربيةAzərbaycancaБеларускаяБеларуская (тарашкевіца)‎БългарскиবাংলাBosanskiCatalàČeštinaDanskDeutschΕλληνικάEnglishEsperantoEspañolEestiEuskaraفارسیSuomiFrançaisGalegoעבריתहिन्दीHrvatskiMagyarՀայերենBahasa IndonesiaIlokanoIdoÍslenskaItaliano日本語ქართულიҚазақша한국어КыргызчаLatinaLietuviųLatviešuМакедонскиമലയാളംМонголBahasa Melayuမြန်မာဘာသာNorsk nynorskNorsk bokmålPolskiPortuguêsRomânăРусскийРусиньскыйSicilianuScotsSrpskohrvatski / српскохрватскиSimple EnglishSlovenčinaShqipСрпски / srpskiSvenskaதமிழ்ไทยTürkçeУкраїнськаاردوTiếng Việt吳語粵語 
編輯連結 





 本頁面最後修訂於2017年3月8日 (週三) 22:43。
本站的全部文字在創用CC 姓名標示-相同方式分享 3.0 協議之條款下提供，附加條款亦可能應用（請參閱使用條款）。
Wikipedia®和維基百科標誌是維基媒體基金會的註冊商標；維基™是維基媒體基金會的商標。
維基媒體基金會是在美國佛羅里達州登記的501(c)(3)免稅、非營利、慈善機構。


隱私政策
關於維基百科
免責聲明
開發人員
Cookie 聲明
手機版檢視



 

 






